package net.ajaskey.common;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class CommonTests1 {

  public static boolean debug = false;

  @Test
  public void test501() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test501");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    java.util.Date date7 = dateTime3.getTime();
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(date7);
    net.ajaskey.common.DateTime dateTime10 = dateTime8.parse("");
    net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(100L);
    double double17 = dateTime14.getDeltaYears(dateTime16);
    java.text.SimpleDateFormat simpleDateFormat19 = null;
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat19);
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double23 = dateTime20.getDeltaYears(dateTime22);
    boolean boolean24 = dateTime20.isWeekday();
    boolean boolean25 = dateTime14.sameDate(dateTime20);
    net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(0L);
    boolean boolean28 = dateTime20.isGreaterThanOrEqual(dateTime27);
    net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime(100L);
    dateTime30.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str35 = dateTime30.getMonth();
    java.text.SimpleDateFormat simpleDateFormat37 = null;
    net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat37);
    net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double41 = dateTime38.getDeltaYears(dateTime40);
    boolean boolean42 = dateTime30.isLessThan(dateTime38);
    net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime(100L);
    double double49 = dateTime46.getDeltaYears(dateTime48);
    net.ajaskey.common.DateTime dateTime50 = null;
    long long51 = dateTime46.getDeltaDays(dateTime50);
    boolean boolean52 = dateTime38.isLessThanOrEqual(dateTime46);
    java.lang.String str53 = dateTime38.format();
    boolean boolean54 = dateTime20.isGreaterThan(dateTime38);
    boolean boolean55 = net.ajaskey.common.Utils.sameMonth(dateTime8, dateTime38);
    net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime(100L);
    dateTime57.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str62 = dateTime57.getMonth();
    java.lang.String str63 = dateTime57.format();
    int int64 = dateTime57.getYear();
    int int65 = dateTime8.getYears(dateTime57);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertNotNull(date7);
// flaky:         org.junit.Assert.assertEquals(date7.toString(), "Thu Apr 10 14:03:27 MST 2");
    org.junit.Assert.assertNull(dateTime10);
    org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-1972.041095890411d) + "'", double17 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    org.junit.Assert.assertEquals("'" + str35 + "' != '" + "January" + "'", str35, "January");
    org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-1972.041095890411d) + "'", double49 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
    org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    org.junit.Assert.assertEquals("'" + str53 + "' != '" + "BAD-DATE-FORMAT" + "'", str53, "BAD-DATE-FORMAT");
    org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    org.junit.Assert.assertEquals("'" + str62 + "' != '" + "January" + "'", str62, "January");
    org.junit.Assert.assertEquals("'" + str63 + "' != '" + "BAD-DATE-FORMAT" + "'", str63, "BAD-DATE-FORMAT");
    org.junit.Assert.assertTrue("'" + int64 + "' != '" + 100 + "'", int64 == 100);
    org.junit.Assert.assertTrue("'" + int65 + "' != '" + 97 + "'", int65 == 97);
  }

  @Test
  public void test502() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test502");
    java.text.SimpleDateFormat simpleDateFormat1 = null;
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
    net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double5 = dateTime2.getDeltaYears(dateTime4);
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean10 = dateTime4.isEqual(dateTime9);
    java.text.SimpleDateFormat simpleDateFormat12 = null;
    java.text.SimpleDateFormat simpleDateFormat13 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat12, simpleDateFormat13);
    net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime(100L);
    double double21 = dateTime18.getDeltaYears(dateTime20);
    boolean boolean22 = dateTime20.isWeekday();
    java.util.Date date23 = dateTime20.getTime();
    java.lang.String str24 = dateTime20.toString();
    net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(100L);
    int int27 = dateTime26.getMs();
    net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime(100L);
    double double34 = dateTime31.getDeltaYears(dateTime33);
    java.text.SimpleDateFormat simpleDateFormat35 = dateTime31.getSdf();
    boolean boolean36 = dateTime26.isLessThanOrEqual(dateTime31);
    boolean boolean37 = dateTime20.isLessThan(dateTime31);
    java.lang.String str38 = dateTime20.toString();
    long long39 = dateTime14.getDeltaMilliSeconds(dateTime20);
    net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(100L);
    double double46 = dateTime43.getDeltaYears(dateTime45);
    boolean boolean47 = dateTime45.isWeekday();
    java.util.Date date48 = dateTime45.getTime();
    int int49 = dateTime45.getMinute();
    boolean boolean50 = dateTime14.sameDate(dateTime45);
    int int51 = dateTime4.getYears(dateTime45);
    int int52 = dateTime45.getHour();
    java.lang.String str54 = dateTime45.format("Thu 10-Apr-0002 14:03:18");
    org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertNotNull(simpleDateFormat13);
    org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-1972.041095890411d) + "'", double21 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    org.junit.Assert.assertNotNull(date23);
    org.junit.Assert.assertEquals(date23.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str24 + "' != '" + "31-Dec-1969" + "'", str24, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
    org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-1972.041095890411d) + "'", double34 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat35);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    org.junit.Assert.assertEquals("'" + str38 + "' != '" + "31-Dec-1969" + "'", str38, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
    org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-1972.041095890411d) + "'", double46 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    org.junit.Assert.assertNotNull(date48);
    org.junit.Assert.assertEquals(date48.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
    org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
    org.junit.Assert.assertTrue("'" + int52 + "' != '" + 5 + "'", int52 == 5);
    org.junit.Assert.assertEquals("'" + str54 + "' != '" + "BAD-DATE-FORMAT" + "'", str54, "BAD-DATE-FORMAT");
  }

  @Test
  public void test503() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test503");
    net.ajaskey.common.Utils.makeDir("Thu 10-Apr-0002 14:03:12");
  }

  @Test
  public void test504() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test504");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    dateTime1.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str6 = dateTime1.getMonth();
    int int7 = dateTime1.getMs();
    java.lang.String str9 = dateTime1.format("                                                                                               52.00");
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
    dateTime11.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str16 = dateTime11.getMonth();
    long long17 = dateTime1.getDeltaDays(dateTime11);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(100L);
    dateTime19.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str24 = dateTime19.getMonth();
    java.text.SimpleDateFormat simpleDateFormat26 = null;
    net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat26);
    net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double30 = dateTime27.getDeltaYears(dateTime29);
    boolean boolean31 = dateTime19.isLessThan(dateTime27);
    net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(100L);
    double double38 = dateTime35.getDeltaYears(dateTime37);
    net.ajaskey.common.DateTime dateTime39 = null;
    long long40 = dateTime35.getDeltaDays(dateTime39);
    boolean boolean41 = dateTime27.isLessThanOrEqual(dateTime35);
    boolean boolean42 = dateTime1.isGreaterThanOrEqual(dateTime35);
    java.lang.String str44 = dateTime1.format("     100");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "January" + "'", str6, "January");
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
    org.junit.Assert.assertEquals(
        "'" + str9 + "' != '" + "                                                                                               52.00" + "'", str9,
        "                                                                                               52.00");
    org.junit.Assert.assertEquals("'" + str16 + "' != '" + "January" + "'", str16, "January");
    org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
    org.junit.Assert.assertEquals("'" + str24 + "' != '" + "January" + "'", str24, "January");
    org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1972.041095890411d) + "'", double38 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    org.junit.Assert.assertEquals("'" + str44 + "' != '" + "     100" + "'", str44, "     100");
  }

  @Test
  public void test505() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test505");
    java.text.SimpleDateFormat simpleDateFormat1 = null;
    java.text.SimpleDateFormat simpleDateFormat2 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat1, simpleDateFormat2);
    int int4 = dateTime3.getDayOfMonth();
    java.text.SimpleDateFormat simpleDateFormat9 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat11 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat12 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("", simpleDateFormat11, simpleDateFormat12);
    net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat9,
        simpleDateFormat12);
    net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat9);
    java.text.SimpleDateFormat simpleDateFormat19 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat21 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat22 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime("", simpleDateFormat21, simpleDateFormat22);
    net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat19,
        simpleDateFormat22);
    java.text.SimpleDateFormat simpleDateFormat25 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime("", simpleDateFormat22, simpleDateFormat25);
    net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat25);
    net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat9, simpleDateFormat25);
    java.text.SimpleDateFormat simpleDateFormat33 = null;
    java.text.SimpleDateFormat simpleDateFormat34 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat33, simpleDateFormat34);
    net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat34);
    net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat34);
    net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat34);
    net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime("", simpleDateFormat25, simpleDateFormat34);
    boolean boolean40 = dateTime3.isGreaterThan(dateTime39);
    java.lang.String str42 = dateTime3.format("Thu 10-Apr-0002 14:03:13");
    org.junit.Assert.assertNotNull(simpleDateFormat2);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    org.junit.Assert.assertNotNull(simpleDateFormat9);
    org.junit.Assert.assertNotNull(simpleDateFormat11);
    org.junit.Assert.assertNotNull(simpleDateFormat12);
    org.junit.Assert.assertNotNull(simpleDateFormat19);
    org.junit.Assert.assertNotNull(simpleDateFormat21);
    org.junit.Assert.assertNotNull(simpleDateFormat22);
    org.junit.Assert.assertNotNull(simpleDateFormat25);
    org.junit.Assert.assertNotNull(simpleDateFormat34);
    org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    org.junit.Assert.assertEquals("'" + str42 + "' != '" + "BAD-DATE-FORMAT" + "'", str42, "BAD-DATE-FORMAT");
  }

  @Test
  public void test506() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test506");
    net.ajaskey.common.TextUtils.printline("December");
  }

  @Test
  public void test507() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test507");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    boolean boolean7 = dateTime5.isWeekday();
    java.util.Date date8 = dateTime5.getTime();
    java.lang.String str9 = dateTime5.toString();
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(3, (int) '4', (int) (byte) 0);
    boolean boolean14 = dateTime5.isGreaterThan(dateTime13);
    java.text.SimpleDateFormat simpleDateFormat16 = null;
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double20 = dateTime17.getDeltaYears(dateTime19);
    net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean25 = dateTime19.isEqual(dateTime24);
    java.util.Calendar calendar26 = dateTime19.getCal();
    net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(calendar26);
    net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(calendar26);
    boolean boolean29 = dateTime5.isLessThan(dateTime28);
    java.text.SimpleDateFormat simpleDateFormat31 = null;
    net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat31);
    net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double35 = dateTime32.getDeltaYears(dateTime34);
    boolean boolean36 = dateTime32.isWeekday();
    java.lang.String str37 = dateTime32.getDay();
    java.util.Calendar calendar38 = dateTime32.getCal();
    boolean boolean39 = dateTime5.isLessThan(dateTime32);
    net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime(dateTime32);
    java.lang.String str41 = dateTime40.getDay();
    java.lang.String str42 = dateTime40.getDay();
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertNotNull(date8);
    org.junit.Assert.assertEquals(date8.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "31-Dec-1969" + "'", str9, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertNotNull(calendar26);
    org.junit.Assert.assertEquals(calendar26.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    org.junit.Assert.assertEquals("'" + str37 + "' != '" + "UNKNOWN" + "'", str37, "UNKNOWN");
    org.junit.Assert.assertNull(calendar38);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Thursday" + "'", str41, "Thursday");
    org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Thursday" + "'", str42, "Thursday");
  }

  @Test
  public void test508() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test508");
    java.text.SimpleDateFormat simpleDateFormat2 = null;
    java.text.SimpleDateFormat simpleDateFormat3 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat2, simpleDateFormat3);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat3);
    java.text.SimpleDateFormat simpleDateFormat7 = null;
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat7);
    net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double11 = dateTime8.getDeltaYears(dateTime10);
    boolean boolean12 = dateTime8.isWeekday();
    net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(100L);
    int int15 = dateTime14.getMs();
    java.lang.String str16 = dateTime14.toString();
    int int17 = dateTime14.getMs();
    java.util.Calendar calendar18 = dateTime14.getCal();
    dateTime8.set(calendar18);
    dateTime5.set(calendar18);
    boolean boolean21 = dateTime5.isNull();
    org.junit.Assert.assertNotNull(simpleDateFormat3);
    org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
    org.junit.Assert.assertEquals("'" + str16 + "' != '" + "31-Dec-1969" + "'", str16, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
    org.junit.Assert.assertNotNull(calendar18);
    org.junit.Assert.assertEquals(calendar18.toString(),
        "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
  }

  @Test
  public void test510() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test510");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    boolean boolean7 = dateTime5.isWeekday();
    java.util.Date date8 = dateTime5.getTime();
    dateTime5.set((int) ' ', (int) (short) 0, 31);
    boolean boolean13 = dateTime5.isWeekday();
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertNotNull(date8);
    org.junit.Assert.assertEquals(date8.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
  }

  @Test
  public void test511() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test511");
    java.lang.String[] strArray3 = new java.lang.String[] {
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969" };
    java.util.List<java.io.File> fileList4 = net.ajaskey.common.Utils.getDirTree("hi!", strArray3);
    java.util.List<java.io.File> fileList5 = net.ajaskey.common.Utils.getDirTree("Thu 10-Apr-0002 14:03:16", strArray3);
    org.junit.Assert.assertNotNull(strArray3);
    org.junit.Assert.assertNull(fileList4);
    org.junit.Assert.assertNull(fileList5);
  }

  @Test
  public void test512() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test512");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) 2020);
  }

  @Test
  public void test513() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test513");
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("31-Dec-1969", "Thu 10-Apr-0002 14:03:14");
    dateTime2.set(100, 1967, 1869);
  }

  @Test
  public void test514() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test514");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    boolean boolean7 = dateTime5.isWeekday();
    net.ajaskey.common.DateTime dateTime10 = dateTime5.parse("31-Dec-1969", "January");
    net.ajaskey.common.DateTime dateTime11 = net.ajaskey.common.DateTime.copy(dateTime5);
    dateTime11.set((int) ' ', 1970, (int) (short) -1);
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int18 = dateTime17.getHour();
    int int19 = dateTime17.getDayOfMonth();
    int int20 = dateTime17.getYear();
    java.util.Calendar calendar21 = dateTime17.getCal();
    int int22 = dateTime17.getYear();
    java.util.Date date23 = dateTime17.getTime();
    dateTime11.set(date23);
    java.lang.Class<?> wildcardClass25 = dateTime11.getClass();
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertNull(dateTime10);
    org.junit.Assert.assertNotNull(dateTime11);
    org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
    org.junit.Assert.assertTrue("'" + int19 + "' != '" + 31 + "'", int19 == 31);
    org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1969 + "'", int20 == 1969);
    org.junit.Assert.assertNotNull(calendar21);
    org.junit.Assert.assertEquals(calendar21.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1969 + "'", int22 == 1969);
    org.junit.Assert.assertNotNull(date23);
    org.junit.Assert.assertEquals(date23.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertNotNull(wildcardClass25);
  }

  @Test
  public void test515() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test515");
    java.text.SimpleDateFormat simpleDateFormat1 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat3 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime("", simpleDateFormat3, simpleDateFormat4);
    net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat1, simpleDateFormat4);
    boolean boolean7 = dateTime6.isNull();
    net.ajaskey.common.DateTime dateTime8 = null;
    boolean boolean9 = dateTime6.isLessThanOrEqual(dateTime8);
    org.junit.Assert.assertNotNull(simpleDateFormat1);
    org.junit.Assert.assertNotNull(simpleDateFormat3);
    org.junit.Assert.assertNotNull(simpleDateFormat4);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
  }

  @Test
  public void test516() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test516");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    boolean boolean7 = dateTime5.isWeekday();
    java.util.Date date8 = dateTime5.getTime();
    java.lang.String str9 = dateTime5.toString();
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(3, (int) '4', (int) (byte) 0);
    boolean boolean14 = dateTime5.isGreaterThan(dateTime13);
    java.text.SimpleDateFormat simpleDateFormat16 = null;
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double20 = dateTime17.getDeltaYears(dateTime19);
    net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean25 = dateTime19.isEqual(dateTime24);
    java.util.Calendar calendar26 = dateTime19.getCal();
    net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(calendar26);
    net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(calendar26);
    boolean boolean29 = dateTime5.isLessThan(dateTime28);
    java.text.SimpleDateFormat simpleDateFormat31 = null;
    net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat31);
    net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double35 = dateTime32.getDeltaYears(dateTime34);
    boolean boolean36 = dateTime32.isWeekday();
    java.lang.String str37 = dateTime32.getDay();
    java.util.Calendar calendar38 = dateTime32.getCal();
    boolean boolean39 = dateTime5.isLessThan(dateTime32);
    net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime(dateTime32);
    java.lang.String str41 = dateTime40.getDay();
    int int42 = dateTime40.getYear();
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertNotNull(date8);
    org.junit.Assert.assertEquals(date8.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "31-Dec-1969" + "'", str9, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertNotNull(calendar26);
    org.junit.Assert.assertEquals(calendar26.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    org.junit.Assert.assertEquals("'" + str37 + "' != '" + "UNKNOWN" + "'", str37, "UNKNOWN");
    org.junit.Assert.assertNull(calendar38);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Thursday" + "'", str41, "Thursday");
    org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2020 + "'", int42 == 2020);
  }

  @Test
  public void test517() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test517");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(62190298597911L);
    java.text.SimpleDateFormat simpleDateFormat2 = dateTime1.getSdf();
    org.junit.Assert.assertNull(simpleDateFormat2);
  }

  @Test
  public void test518() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test518");
    java.lang.String str1 = net.ajaskey.common.Utils.getFromUrl(
        "JanuaryJanuaryJanuary                                                                                               52.00Januaryhi!January");
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
  }

  @Test
  public void test519() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test519");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    java.text.SimpleDateFormat simpleDateFormat7 = dateTime3.getSdf();
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(100L);
    double double14 = dateTime11.getDeltaYears(dateTime13);
    boolean boolean15 = dateTime13.isWeekday();
    net.ajaskey.common.DateTime dateTime18 = dateTime13.parse("31-Dec-1969", "January");
    net.ajaskey.common.DateTime dateTime19 = net.ajaskey.common.DateTime.copy(dateTime13);
    boolean boolean20 = dateTime3.sameDate(dateTime19);
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(100L);
    dateTime22.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str27 = dateTime22.getMonth();
    int int28 = dateTime22.getMs();
    net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime(100L);
    double double35 = dateTime32.getDeltaYears(dateTime34);
    java.text.SimpleDateFormat simpleDateFormat36 = dateTime32.getSdf();
    net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime(100L);
    double double43 = dateTime40.getDeltaYears(dateTime42);
    boolean boolean44 = dateTime42.isWeekday();
    net.ajaskey.common.DateTime dateTime47 = dateTime42.parse("31-Dec-1969", "January");
    net.ajaskey.common.DateTime dateTime48 = net.ajaskey.common.DateTime.copy(dateTime42);
    boolean boolean49 = dateTime32.sameDate(dateTime48);
    net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime(100L);
    double double56 = dateTime53.getDeltaYears(dateTime55);
    boolean boolean57 = dateTime48.isGreaterThan(dateTime53);
    int int58 = dateTime53.getDayOfWeek();
    boolean boolean59 = dateTime22.isGreaterThan(dateTime53);
    long long60 = dateTime19.getDeltaMilliSeconds(dateTime53);
    int int61 = dateTime19.getDayOfWeek();
    int int62 = dateTime19.getHour();
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat7);
    org.junit.Assert.assertTrue("'" + double14 + "' != '" + (-1972.041095890411d) + "'", double14 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    org.junit.Assert.assertNull(dateTime18);
    org.junit.Assert.assertNotNull(dateTime19);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "January" + "'", str27, "January");
    org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
    org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-1972.041095890411d) + "'", double35 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat36);
    org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-1972.041095890411d) + "'", double43 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    org.junit.Assert.assertNull(dateTime47);
    org.junit.Assert.assertNotNull(dateTime48);
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-1972.041095890411d) + "'", double56 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    org.junit.Assert.assertTrue("'" + int58 + "' != '" + 5 + "'", int58 == 5);
    org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
// flaky:         org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-62190298592269L) + "'", long60 == (-62190298592269L));
    org.junit.Assert.assertTrue("'" + int61 + "' != '" + 4 + "'", int61 == 4);
    org.junit.Assert.assertTrue("'" + int62 + "' != '" + 5 + "'", int62 == 5);
  }

  @Test
  public void test520() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test520");
    java.text.SimpleDateFormat simpleDateFormat1 = null;
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
    net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double5 = dateTime2.getDeltaYears(dateTime4);
    boolean boolean6 = dateTime2.isWeekday();
    boolean boolean7 = dateTime2.isWeekday();
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(100L);
    double double14 = dateTime11.getDeltaYears(dateTime13);
    java.util.Date date15 = dateTime11.getTime();
    net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(date15);
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(date15);
    net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(date15);
    dateTime2.set(date15);
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime(dateTime2);
    org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertTrue("'" + double14 + "' != '" + (-1972.041095890411d) + "'", double14 == (-1972.041095890411d));
    org.junit.Assert.assertNotNull(date15);
// flaky:         org.junit.Assert.assertEquals(date15.toString(), "Thu Apr 10 14:03:27 MST 2");
  }

  @Test
  public void test521() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test521");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    int int2 = dateTime1.getMs();
    java.text.SimpleDateFormat simpleDateFormat3 = net.ajaskey.common.Utils.sdf;
    dateTime1.setSdf(simpleDateFormat3);
    int int5 = dateTime1.getDayOfWeek();
    net.ajaskey.common.DateTime dateTime6 = net.ajaskey.common.DateTime.copy(dateTime1);
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
    int int9 = dateTime8.getMs();
    java.text.SimpleDateFormat simpleDateFormat10 = net.ajaskey.common.Utils.sdf;
    dateTime8.setSdf(simpleDateFormat10);
    java.lang.String str12 = dateTime8.toFullString();
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(dateTime8);
    int int14 = dateTime8.getHour();
    boolean boolean15 = dateTime6.isGreaterThan(dateTime8);
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(100L);
    int int18 = dateTime17.getMs();
    java.lang.String str19 = dateTime17.toString();
    net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int22 = dateTime21.getHour();
    int int23 = dateTime21.getDayOfMonth();
    dateTime17.set(dateTime21);
    int int25 = dateTime21.getMs();
    java.lang.String str26 = dateTime21.toFullString();
    boolean boolean27 = dateTime8.isGreaterThanOrEqual(dateTime21);
    net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(100L);
    dateTime29.set((int) (byte) 100, (-1), (int) '#');
    int int34 = dateTime29.getHour();
    boolean boolean35 = dateTime8.isGreaterThanOrEqual(dateTime29);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat3);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 4 + "'", int5 == 4);
    org.junit.Assert.assertNotNull(dateTime6);
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat10);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str12, "Wed 31-Dec-1969 17:00:00");
    org.junit.Assert.assertTrue("'" + int14 + "' != '" + 5 + "'", int14 == 5);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
    org.junit.Assert.assertEquals("'" + str19 + "' != '" + "31-Dec-1969" + "'", str19, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int22 + "' != '" + 5 + "'", int22 == 5);
    org.junit.Assert.assertTrue("'" + int23 + "' != '" + 31 + "'", int23 == 31);
    org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
    org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str26, "Wed 31-Dec-1969 17:00:00");
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    org.junit.Assert.assertTrue("'" + int34 + "' != '" + 5 + "'", int34 == 5);
    org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
  }

  @Test
  public void test522() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test522");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    boolean boolean7 = dateTime5.isWeekday();
    java.util.Date date8 = dateTime5.getTime();
    int int9 = dateTime5.getMinute();
    java.text.SimpleDateFormat simpleDateFormat11 = null;
    net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat11);
    net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double15 = dateTime12.getDeltaYears(dateTime14);
    net.ajaskey.common.DateTime dateTime16 = net.ajaskey.common.DateTime.copy(dateTime12);
    boolean boolean17 = net.ajaskey.common.Utils.sameDate(dateTime5, dateTime12);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(100L);
    int int20 = dateTime19.getMs();
    java.text.SimpleDateFormat simpleDateFormat21 = net.ajaskey.common.Utils.sdf;
    dateTime19.setSdf(simpleDateFormat21);
    int int23 = dateTime19.getDayOfWeek();
    net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(100L);
    double double30 = dateTime27.getDeltaYears(dateTime29);
    java.util.Calendar calendar31 = dateTime27.getCal();
    dateTime19.set(calendar31);
    java.text.SimpleDateFormat simpleDateFormat34 = null;
    net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat34);
    net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double38 = dateTime35.getDeltaYears(dateTime37);
    net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean43 = dateTime37.isEqual(dateTime42);
    java.util.Calendar calendar44 = dateTime37.getCal();
    net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(calendar44);
    dateTime19.set(calendar44);
    java.text.SimpleDateFormat simpleDateFormat49 = null;
    java.text.SimpleDateFormat simpleDateFormat50 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat49, simpleDateFormat50);
    net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat50);
    dateTime19.setSdf(simpleDateFormat50);
    long long54 = dateTime12.getDeltaMilliSeconds(dateTime19);
    net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime(100L);
    double double61 = dateTime58.getDeltaYears(dateTime60);
    boolean boolean62 = dateTime60.isWeekday();
    net.ajaskey.common.DateTime dateTime65 = dateTime60.parse("31-Dec-1969", "January");
    boolean boolean66 = net.ajaskey.common.Utils.sameDate(dateTime12, dateTime65);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertNotNull(date8);
    org.junit.Assert.assertEquals(date8.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
    org.junit.Assert.assertNull(dateTime16);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat21);
    org.junit.Assert.assertTrue("'" + int23 + "' != '" + 4 + "'", int23 == 4);
    org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-1972.041095890411d) + "'", double30 == (-1972.041095890411d));
    org.junit.Assert.assertNotNull(calendar31);
// flaky:         org.junit.Assert.assertEquals(calendar31.toString(), "java.util.GregorianCalendar[time=-62190298592118,areFieldsSet=true,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=3,SECOND=27,MILLISECOND=882,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    org.junit.Assert.assertNotNull(calendar44);
    org.junit.Assert.assertEquals(calendar44.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertNotNull(simpleDateFormat50);
    org.junit.Assert.assertTrue("'" + long54 + "' != '" + 0L + "'", long54 == 0L);
    org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-1972.041095890411d) + "'", double61 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    org.junit.Assert.assertNull(dateTime65);
    org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
  }

  @Test
  public void test523() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test523");
    java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readGzipFile("8", true);
    org.junit.Assert.assertNull(strList2);
  }

  @Test
  public void test524() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test524");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(100L);
    int int4 = dateTime3.getMs();
    java.text.SimpleDateFormat simpleDateFormat5 = net.ajaskey.common.Utils.sdf;
    dateTime3.setSdf(simpleDateFormat5);
    java.text.SimpleDateFormat simpleDateFormat9 = null;
    java.text.SimpleDateFormat simpleDateFormat10 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat9, simpleDateFormat10);
    net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat10);
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("         52", simpleDateFormat5, simpleDateFormat10);
    net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(100L);
    int int16 = dateTime15.getMs();
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(100L);
    double double23 = dateTime20.getDeltaYears(dateTime22);
    java.text.SimpleDateFormat simpleDateFormat24 = dateTime20.getSdf();
    boolean boolean25 = dateTime15.isLessThanOrEqual(dateTime20);
    dateTime20.setFirstWorkDay();
    java.lang.String str27 = dateTime20.toFullString();
    net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime(100L);
    double double34 = dateTime31.getDeltaYears(dateTime33);
    java.text.SimpleDateFormat simpleDateFormat36 = null;
    net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat36);
    net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double40 = dateTime37.getDeltaYears(dateTime39);
    boolean boolean41 = dateTime37.isWeekday();
    boolean boolean42 = dateTime31.sameDate(dateTime37);
    net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime(0L);
    boolean boolean45 = dateTime37.isGreaterThanOrEqual(dateTime44);
    net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime(100L);
    dateTime47.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str52 = dateTime47.getMonth();
    java.text.SimpleDateFormat simpleDateFormat54 = null;
    net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat54);
    net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double58 = dateTime55.getDeltaYears(dateTime57);
    boolean boolean59 = dateTime47.isLessThan(dateTime55);
    net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime(100L);
    double double66 = dateTime63.getDeltaYears(dateTime65);
    net.ajaskey.common.DateTime dateTime67 = null;
    long long68 = dateTime63.getDeltaDays(dateTime67);
    boolean boolean69 = dateTime55.isLessThanOrEqual(dateTime63);
    java.lang.String str70 = dateTime55.format();
    boolean boolean71 = dateTime37.isGreaterThan(dateTime55);
    boolean boolean72 = net.ajaskey.common.Utils.sameMonth(dateTime20, dateTime37);
    java.text.SimpleDateFormat simpleDateFormat76 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat78 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat79 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime80 = new net.ajaskey.common.DateTime("", simpleDateFormat78, simpleDateFormat79);
    net.ajaskey.common.DateTime dateTime81 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat76,
        simpleDateFormat79);
    net.ajaskey.common.DateTime dateTime82 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat76);
    net.ajaskey.common.DateTime dateTime83 = new net.ajaskey.common.DateTime("December", simpleDateFormat76);
    dateTime37.setSdf(simpleDateFormat76);
    net.ajaskey.common.DateTime dateTime85 = new net.ajaskey.common.DateTime("                           -719,795", simpleDateFormat5,
        simpleDateFormat76);
    java.util.Date date86 = dateTime85.getTime();
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat5);
    org.junit.Assert.assertNotNull(simpleDateFormat10);
    org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
    org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-1972.041095890411d) + "'", double23 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat24);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Thu 10-Apr-0002 14:03:27" + "'", str27, "Thu 10-Apr-0002 14:03:27");
    org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-1972.041095890411d) + "'", double34 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    org.junit.Assert.assertEquals("'" + str52 + "' != '" + "January" + "'", str52, "January");
    org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-1972.041095890411d) + "'", double66 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + long68 + "' != '" + 0L + "'", long68 == 0L);
    org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    org.junit.Assert.assertEquals("'" + str70 + "' != '" + "BAD-DATE-FORMAT" + "'", str70, "BAD-DATE-FORMAT");
    org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    org.junit.Assert.assertNotNull(simpleDateFormat76);
    org.junit.Assert.assertNotNull(simpleDateFormat78);
    org.junit.Assert.assertNotNull(simpleDateFormat79);
    org.junit.Assert.assertNull(date86);
  }

  @Test
  public void test525() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test525");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    java.util.Date date7 = dateTime3.getTime();
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(date7);
    net.ajaskey.common.DateTime dateTime10 = dateTime8.parse("");
    java.lang.String str11 = dateTime8.format();
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime((long) 2);
    java.text.SimpleDateFormat simpleDateFormat14 = dateTime13.getSdf();
    net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    java.text.SimpleDateFormat simpleDateFormat20 = null;
    net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat20);
    net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double24 = dateTime21.getDeltaYears(dateTime23);
    boolean boolean25 = dateTime18.isLessThan(dateTime23);
    int int26 = dateTime18.getHour();
    long long27 = dateTime13.getDeltaDays(dateTime18);
    java.lang.String str28 = dateTime13.toString();
    int int29 = dateTime13.getYear();
    int int30 = dateTime13.getYear();
    int int31 = dateTime13.getMs();
    net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(100L);
    double double38 = dateTime35.getDeltaYears(dateTime37);
    java.text.SimpleDateFormat simpleDateFormat40 = null;
    net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat40);
    net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double44 = dateTime41.getDeltaYears(dateTime43);
    boolean boolean45 = dateTime41.isWeekday();
    boolean boolean46 = dateTime35.sameDate(dateTime41);
    java.text.SimpleDateFormat simpleDateFormat48 = null;
    net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat48);
    net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double52 = dateTime49.getDeltaYears(dateTime51);
    net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean57 = dateTime51.isEqual(dateTime56);
    dateTime35.set(dateTime56);
    net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double61 = dateTime56.getDeltaYears(dateTime60);
    int int62 = dateTime60.getDayOfWeek();
    boolean boolean63 = dateTime13.isEqual(dateTime60);
    net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime(100L);
    double double70 = dateTime67.getDeltaYears(dateTime69);
    java.text.SimpleDateFormat simpleDateFormat72 = null;
    net.ajaskey.common.DateTime dateTime73 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat72);
    net.ajaskey.common.DateTime dateTime75 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double76 = dateTime73.getDeltaYears(dateTime75);
    boolean boolean77 = dateTime73.isWeekday();
    boolean boolean78 = dateTime67.sameDate(dateTime73);
    java.text.SimpleDateFormat simpleDateFormat80 = null;
    net.ajaskey.common.DateTime dateTime81 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat80);
    net.ajaskey.common.DateTime dateTime83 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double84 = dateTime81.getDeltaYears(dateTime83);
    net.ajaskey.common.DateTime dateTime88 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean89 = dateTime83.isEqual(dateTime88);
    dateTime67.set(dateTime88);
    net.ajaskey.common.DateTime dateTime92 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int93 = dateTime92.getDayOfWeek();
    double double94 = dateTime88.getDeltaYears(dateTime92);
    java.text.SimpleDateFormat simpleDateFormat95 = dateTime88.getSdf();
    boolean boolean96 = dateTime60.isLessThan(dateTime88);
    int int97 = dateTime88.getHour();
    int int98 = dateTime8.getYears(dateTime88);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertNotNull(date7);
// flaky:         org.junit.Assert.assertEquals(date7.toString(), "Thu Apr 10 14:03:27 MST 2");
    org.junit.Assert.assertNull(dateTime10);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "BAD-DATE-FORMAT" + "'", str11, "BAD-DATE-FORMAT");
    org.junit.Assert.assertNull(simpleDateFormat14);
    org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
    org.junit.Assert.assertTrue("'" + long27 + "' != '" + 719795L + "'", long27 == 719795L);
    org.junit.Assert.assertEquals("'" + str28 + "' != '" + "31-Dec-1969" + "'", str28, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1969 + "'", int29 == 1969);
    org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1969 + "'", int30 == 1969);
    org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
    org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1972.041095890411d) + "'", double38 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-1972.041095890411d) + "'", double61 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + int62 + "' != '" + 4 + "'", int62 == 4);
    org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-1972.041095890411d) + "'", double70 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    org.junit.Assert.assertTrue("'" + int93 + "' != '" + 4 + "'", int93 == 4);
    org.junit.Assert.assertTrue("'" + double94 + "' != '" + (-1972.041095890411d) + "'", double94 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat95);
    org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    org.junit.Assert.assertTrue("'" + int97 + "' != '" + 2 + "'", int97 == 2);
    org.junit.Assert.assertTrue("'" + int98 + "' != '" + 0 + "'", int98 == 0);
  }

  @Test
  public void test526() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test526");
    java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readGzipFile("Thu 10-Apr-0002 14:03:13", false);
    org.junit.Assert.assertNull(strList2);
  }

  @Test
  public void test527() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test527");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int2 = dateTime1.getHour();
    int int3 = dateTime1.getDayOfMonth();
    java.text.SimpleDateFormat simpleDateFormat4 = dateTime1.getSdf();
    java.text.SimpleDateFormat simpleDateFormat7 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat9 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat10 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime("", simpleDateFormat9, simpleDateFormat10);
    net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat7,
        simpleDateFormat10);
    java.text.SimpleDateFormat simpleDateFormat13 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime("", simpleDateFormat10, simpleDateFormat13);
    java.text.SimpleDateFormat simpleDateFormat16 = null;
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double20 = dateTime17.getDeltaYears(dateTime19);
    net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean25 = dateTime19.isEqual(dateTime24);
    java.text.SimpleDateFormat simpleDateFormat27 = null;
    java.text.SimpleDateFormat simpleDateFormat28 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat27, simpleDateFormat28);
    net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime(100L);
    double double36 = dateTime33.getDeltaYears(dateTime35);
    boolean boolean37 = dateTime35.isWeekday();
    java.util.Date date38 = dateTime35.getTime();
    java.lang.String str39 = dateTime35.toString();
    net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime(100L);
    int int42 = dateTime41.getMs();
    net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime(100L);
    double double49 = dateTime46.getDeltaYears(dateTime48);
    java.text.SimpleDateFormat simpleDateFormat50 = dateTime46.getSdf();
    boolean boolean51 = dateTime41.isLessThanOrEqual(dateTime46);
    boolean boolean52 = dateTime35.isLessThan(dateTime46);
    java.lang.String str53 = dateTime35.toString();
    long long54 = dateTime29.getDeltaMilliSeconds(dateTime35);
    net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime(100L);
    double double61 = dateTime58.getDeltaYears(dateTime60);
    boolean boolean62 = dateTime60.isWeekday();
    java.util.Date date63 = dateTime60.getTime();
    int int64 = dateTime60.getMinute();
    boolean boolean65 = dateTime29.sameDate(dateTime60);
    int int66 = dateTime19.getYears(dateTime60);
    java.util.Date date67 = dateTime60.getTime();
    dateTime14.set(date67);
    dateTime1.set(date67);
    net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime(date67);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 5 + "'", int2 == 5);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 31 + "'", int3 == 31);
    org.junit.Assert.assertNull(simpleDateFormat4);
    org.junit.Assert.assertNotNull(simpleDateFormat7);
    org.junit.Assert.assertNotNull(simpleDateFormat9);
    org.junit.Assert.assertNotNull(simpleDateFormat10);
    org.junit.Assert.assertNotNull(simpleDateFormat13);
    org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertNotNull(simpleDateFormat28);
    org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-1972.041095890411d) + "'", double36 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    org.junit.Assert.assertNotNull(date38);
    org.junit.Assert.assertEquals(date38.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str39 + "' != '" + "31-Dec-1969" + "'", str39, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
    org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-1972.041095890411d) + "'", double49 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat50);
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    org.junit.Assert.assertEquals("'" + str53 + "' != '" + "31-Dec-1969" + "'", str53, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + long54 + "' != '" + 0L + "'", long54 == 0L);
    org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-1972.041095890411d) + "'", double61 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    org.junit.Assert.assertNotNull(date63);
    org.junit.Assert.assertEquals(date63.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
    org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
    org.junit.Assert.assertNotNull(date67);
    org.junit.Assert.assertEquals(date67.toString(), "Wed Dec 31 17:00:00 MST 1969");
  }

  @Test
  public void test528() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test528");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(0L);
    java.util.Date date2 = dateTime1.getTime();
    org.junit.Assert.assertNotNull(date2);
    org.junit.Assert.assertEquals(date2.toString(), "Wed Dec 31 17:00:00 MST 1969");
  }

  @Test
  public void test529() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test529");
    net.ajaskey.common.Utils.sleep((int) (byte) 0);
  }

  @Test
  public void test530() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test530");
    net.ajaskey.common.Utils.TAB = "Thu 10-Apr-0002 14:03:17";
  }

  @Test
  public void test531() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test531");
    net.ajaskey.common.TextUtils.printline("Thu 10-Apr-0002 14:03:26");
  }

  @Test
  public void test532() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test532");
    java.util.Map<java.lang.String, java.lang.Integer> strMap0 = null;
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str2 = net.ajaskey.common.Utils.findName(strMap0, (java.lang.Integer) 27);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
    }
    catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
  }

  @Test
  public void test533() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test533");
    java.text.SimpleDateFormat simpleDateFormat1 = null;
    java.text.SimpleDateFormat simpleDateFormat2 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat1, simpleDateFormat2);
    net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(100L);
    double double10 = dateTime7.getDeltaYears(dateTime9);
    boolean boolean11 = dateTime9.isWeekday();
    java.util.Date date12 = dateTime9.getTime();
    java.lang.String str13 = dateTime9.toString();
    net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(100L);
    int int16 = dateTime15.getMs();
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(100L);
    double double23 = dateTime20.getDeltaYears(dateTime22);
    java.text.SimpleDateFormat simpleDateFormat24 = dateTime20.getSdf();
    boolean boolean25 = dateTime15.isLessThanOrEqual(dateTime20);
    boolean boolean26 = dateTime9.isLessThan(dateTime20);
    java.lang.String str27 = dateTime9.toString();
    long long28 = dateTime3.getDeltaMilliSeconds(dateTime9);
    java.lang.String str29 = dateTime3.getMonth();
    org.junit.Assert.assertNotNull(simpleDateFormat2);
    org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1972.041095890411d) + "'", double10 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    org.junit.Assert.assertNotNull(date12);
    org.junit.Assert.assertEquals(date12.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "31-Dec-1969" + "'", str13, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
    org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-1972.041095890411d) + "'", double23 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat24);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "31-Dec-1969" + "'", str27, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
    org.junit.Assert.assertEquals("'" + str29 + "' != '" + "UNKNOWN" + "'", str29, "UNKNOWN");
  }

  @Test
  public void test534() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test534");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(1, 7, 7);
    net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(100L);
    double double10 = dateTime7.getDeltaYears(dateTime9);
    boolean boolean11 = net.ajaskey.common.Utils.sameMonth(dateTime3, dateTime9);
    java.text.SimpleDateFormat simpleDateFormat12 = dateTime9.getSdf();
    org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1972.041095890411d) + "'", double10 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNull(simpleDateFormat12);
  }

  @Test
  public void test535() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test535");
    java.util.Date date0 = null;
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(date0);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime(100L);
    double double8 = dateTime5.getDeltaYears(dateTime7);
    java.text.SimpleDateFormat simpleDateFormat9 = dateTime5.getSdf();
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(100L);
    double double16 = dateTime13.getDeltaYears(dateTime15);
    boolean boolean17 = dateTime15.isWeekday();
    net.ajaskey.common.DateTime dateTime20 = dateTime15.parse("31-Dec-1969", "January");
    net.ajaskey.common.DateTime dateTime21 = net.ajaskey.common.DateTime.copy(dateTime15);
    boolean boolean22 = dateTime5.sameDate(dateTime21);
    net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime(100L);
    dateTime24.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str29 = dateTime24.getMonth();
    int int30 = dateTime24.getMs();
    net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime(100L);
    double double37 = dateTime34.getDeltaYears(dateTime36);
    java.text.SimpleDateFormat simpleDateFormat38 = dateTime34.getSdf();
    net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime(100L);
    double double45 = dateTime42.getDeltaYears(dateTime44);
    boolean boolean46 = dateTime44.isWeekday();
    net.ajaskey.common.DateTime dateTime49 = dateTime44.parse("31-Dec-1969", "January");
    net.ajaskey.common.DateTime dateTime50 = net.ajaskey.common.DateTime.copy(dateTime44);
    boolean boolean51 = dateTime34.sameDate(dateTime50);
    net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime(100L);
    double double58 = dateTime55.getDeltaYears(dateTime57);
    boolean boolean59 = dateTime50.isGreaterThan(dateTime55);
    int int60 = dateTime55.getDayOfWeek();
    boolean boolean61 = dateTime24.isGreaterThan(dateTime55);
    long long62 = dateTime21.getDeltaMilliSeconds(dateTime55);
    net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime(1, 7, 7);
    boolean boolean67 = dateTime55.sameDate(dateTime66);
    boolean boolean68 = dateTime1.isLessThanOrEqual(dateTime55);
    net.ajaskey.common.DateTime dateTime69 = null;
    boolean boolean70 = dateTime1.isGreaterThan(dateTime69);
    org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-1972.041095890411d) + "'", double8 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat9);
    org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-1972.041095890411d) + "'", double16 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    org.junit.Assert.assertNull(dateTime20);
    org.junit.Assert.assertNotNull(dateTime21);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    org.junit.Assert.assertEquals("'" + str29 + "' != '" + "January" + "'", str29, "January");
    org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
    org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-1972.041095890411d) + "'", double37 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat38);
    org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-1972.041095890411d) + "'", double45 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    org.junit.Assert.assertNull(dateTime49);
    org.junit.Assert.assertNotNull(dateTime50);
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-1972.041095890411d) + "'", double58 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    org.junit.Assert.assertTrue("'" + int60 + "' != '" + 5 + "'", int60 == 5);
    org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
// flaky:         org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-62190298591918L) + "'", long62 == (-62190298591918L));
    org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
  }

  @Test
  public void test536() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test536");
    java.lang.String str2 = net.ajaskey.common.Utils.fmt((double) (-61778343404661L), (int) (short) -1);
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Invalid fmt" + "'", str2, "Invalid fmt");
  }

  @Test
  public void test537() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test537");
    java.text.SimpleDateFormat simpleDateFormat6 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat8 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat9 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("", simpleDateFormat8, simpleDateFormat9);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat6, simpleDateFormat9);
    java.text.SimpleDateFormat simpleDateFormat13 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat14 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime("", simpleDateFormat13, simpleDateFormat14);
    net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("", simpleDateFormat9, simpleDateFormat14);
    java.text.SimpleDateFormat simpleDateFormat19 = null;
    java.text.SimpleDateFormat simpleDateFormat20 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat19, simpleDateFormat20);
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat20);
    net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime("Fri 31-Dec-0001 17:00:00", simpleDateFormat9, simpleDateFormat20);
    net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("      0.00", simpleDateFormat9);
    net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("365.00", simpleDateFormat9);
    net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 14:03:18", simpleDateFormat9);
    org.junit.Assert.assertNotNull(simpleDateFormat6);
    org.junit.Assert.assertNotNull(simpleDateFormat8);
    org.junit.Assert.assertNotNull(simpleDateFormat9);
    org.junit.Assert.assertNotNull(simpleDateFormat13);
    org.junit.Assert.assertNotNull(simpleDateFormat14);
    org.junit.Assert.assertNotNull(simpleDateFormat20);
  }

  @Test
  public void test538() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test538");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    boolean boolean7 = dateTime5.isWeekday();
    int int8 = dateTime5.getMinute();
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
  }

  @Test
  public void test539() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test539");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(100, (int) '#', 8);
  }

  @Test
  public void test540() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test540");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    boolean boolean7 = dateTime5.isWeekday();
    net.ajaskey.common.DateTime dateTime10 = dateTime5.parse("31-Dec-1969", "January");
    java.util.Calendar calendar11 = dateTime5.getCal();
    net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(100L);
    double double18 = dateTime15.getDeltaYears(dateTime17);
    boolean boolean19 = dateTime17.isWeekday();
    net.ajaskey.common.DateTime dateTime22 = dateTime17.parse("31-Dec-1969", "January");
    net.ajaskey.common.DateTime dateTime23 = net.ajaskey.common.DateTime.copy(dateTime17);
    dateTime5.set(dateTime23);
    net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime(dateTime5);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertNull(dateTime10);
    org.junit.Assert.assertNotNull(calendar11);
    org.junit.Assert.assertEquals(calendar11.toString(),
        "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1972.041095890411d) + "'", double18 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    org.junit.Assert.assertNull(dateTime22);
    org.junit.Assert.assertNotNull(dateTime23);
  }

  @Test
  public void test541() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test541");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    dateTime1.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str6 = dateTime1.getMonth();
    java.text.SimpleDateFormat simpleDateFormat8 = null;
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double12 = dateTime9.getDeltaYears(dateTime11);
    boolean boolean13 = dateTime1.isLessThan(dateTime9);
    net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(10L);
    int int16 = dateTime15.getSecond();
    long long17 = dateTime9.getDeltaMilliSeconds(dateTime15);
    java.util.Calendar calendar18 = dateTime9.getCal();
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "January" + "'", str6, "January");
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
    org.junit.Assert.assertNull(calendar18);
  }

  @Test
  public void test542() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test542");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    int int2 = dateTime1.getMs();
    net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
    double double9 = dateTime6.getDeltaYears(dateTime8);
    java.text.SimpleDateFormat simpleDateFormat10 = dateTime6.getSdf();
    boolean boolean11 = dateTime1.isLessThanOrEqual(dateTime6);
    java.lang.String str12 = dateTime1.format();
    int int13 = dateTime1.getHour();
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "BAD-DATE-FORMAT" + "'", str12, "BAD-DATE-FORMAT");
    org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
  }

  @Test
  public void test543() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test543");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    boolean boolean7 = dateTime5.isWeekday();
    java.util.Date date8 = dateTime5.getTime();
    java.lang.String str9 = dateTime5.toString();
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
    int int12 = dateTime11.getMs();
    net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(100L);
    double double19 = dateTime16.getDeltaYears(dateTime18);
    java.text.SimpleDateFormat simpleDateFormat20 = dateTime16.getSdf();
    boolean boolean21 = dateTime11.isLessThanOrEqual(dateTime16);
    boolean boolean22 = dateTime5.isLessThan(dateTime16);
    int int23 = dateTime5.getDayOfWeek();
    int int24 = dateTime5.getDayOfMonth();
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertNotNull(date8);
    org.junit.Assert.assertEquals(date8.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "31-Dec-1969" + "'", str9, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
    org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-1972.041095890411d) + "'", double19 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat20);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    org.junit.Assert.assertTrue("'" + int23 + "' != '" + 4 + "'", int23 == 4);
    org.junit.Assert.assertTrue("'" + int24 + "' != '" + 31 + "'", int24 == 31);
  }

  @Test
  public void test544() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test544");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(0L);
    int int2 = dateTime1.getMs();
    java.text.SimpleDateFormat simpleDateFormat5 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat7 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat8 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("", simpleDateFormat7, simpleDateFormat8);
    net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat5, simpleDateFormat8);
    java.text.SimpleDateFormat simpleDateFormat11 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime("", simpleDateFormat8, simpleDateFormat11);
    java.text.SimpleDateFormat simpleDateFormat14 = null;
    net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat14);
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double18 = dateTime15.getDeltaYears(dateTime17);
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean23 = dateTime17.isEqual(dateTime22);
    java.text.SimpleDateFormat simpleDateFormat25 = null;
    java.text.SimpleDateFormat simpleDateFormat26 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat25, simpleDateFormat26);
    net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime(100L);
    double double34 = dateTime31.getDeltaYears(dateTime33);
    boolean boolean35 = dateTime33.isWeekday();
    java.util.Date date36 = dateTime33.getTime();
    java.lang.String str37 = dateTime33.toString();
    net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime(100L);
    int int40 = dateTime39.getMs();
    net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime(100L);
    double double47 = dateTime44.getDeltaYears(dateTime46);
    java.text.SimpleDateFormat simpleDateFormat48 = dateTime44.getSdf();
    boolean boolean49 = dateTime39.isLessThanOrEqual(dateTime44);
    boolean boolean50 = dateTime33.isLessThan(dateTime44);
    java.lang.String str51 = dateTime33.toString();
    long long52 = dateTime27.getDeltaMilliSeconds(dateTime33);
    net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime(100L);
    double double59 = dateTime56.getDeltaYears(dateTime58);
    boolean boolean60 = dateTime58.isWeekday();
    java.util.Date date61 = dateTime58.getTime();
    int int62 = dateTime58.getMinute();
    boolean boolean63 = dateTime27.sameDate(dateTime58);
    int int64 = dateTime17.getYears(dateTime58);
    java.util.Date date65 = dateTime58.getTime();
    dateTime12.set(date65);
    dateTime1.set(date65);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    org.junit.Assert.assertNotNull(simpleDateFormat5);
    org.junit.Assert.assertNotNull(simpleDateFormat7);
    org.junit.Assert.assertNotNull(simpleDateFormat8);
    org.junit.Assert.assertNotNull(simpleDateFormat11);
    org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    org.junit.Assert.assertNotNull(simpleDateFormat26);
    org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-1972.041095890411d) + "'", double34 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    org.junit.Assert.assertNotNull(date36);
    org.junit.Assert.assertEquals(date36.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str37 + "' != '" + "31-Dec-1969" + "'", str37, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
    org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-1972.041095890411d) + "'", double47 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat48);
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    org.junit.Assert.assertEquals("'" + str51 + "' != '" + "31-Dec-1969" + "'", str51, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
    org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-1972.041095890411d) + "'", double59 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    org.junit.Assert.assertNotNull(date61);
    org.junit.Assert.assertEquals(date61.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
    org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
    org.junit.Assert.assertNotNull(date65);
    org.junit.Assert.assertEquals(date65.toString(), "Wed Dec 31 17:00:00 MST 1969");
  }

  @Test
  public void test545() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test545");
    java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat6 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat7 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime("", simpleDateFormat6, simpleDateFormat7);
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat4, simpleDateFormat7);
    net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat4);
    java.text.SimpleDateFormat simpleDateFormat14 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat16 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat17 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime("", simpleDateFormat16, simpleDateFormat17);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat14,
        simpleDateFormat17);
    java.text.SimpleDateFormat simpleDateFormat20 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("", simpleDateFormat17, simpleDateFormat20);
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat20);
    net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat4, simpleDateFormat20);
    java.text.SimpleDateFormat simpleDateFormat28 = null;
    java.text.SimpleDateFormat simpleDateFormat29 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat28, simpleDateFormat29);
    net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat29);
    net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat29);
    net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat29);
    net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime("", simpleDateFormat20, simpleDateFormat29);
    int int35 = dateTime34.getMs();
    org.junit.Assert.assertNotNull(simpleDateFormat4);
    org.junit.Assert.assertNotNull(simpleDateFormat6);
    org.junit.Assert.assertNotNull(simpleDateFormat7);
    org.junit.Assert.assertNotNull(simpleDateFormat14);
    org.junit.Assert.assertNotNull(simpleDateFormat16);
    org.junit.Assert.assertNotNull(simpleDateFormat17);
    org.junit.Assert.assertNotNull(simpleDateFormat20);
    org.junit.Assert.assertNotNull(simpleDateFormat29);
    org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
  }

  @Test
  public void test546() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test546");
    java.util.zip.ZipOutputStream zipOutputStream1 = null;
    // The following exception was thrown during execution in test generation
    try {
      net.ajaskey.common.Utils.writeToZipFile("97", zipOutputStream1);
      org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: 97 (The system cannot find the file specified)");
    }
    catch (java.io.FileNotFoundException e) {
      // Expected exception.
    }
  }

  @Test
  public void test547() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test547");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    boolean boolean7 = dateTime5.isWeekday();
    java.util.Date date8 = dateTime5.getTime();
    int int9 = dateTime5.getMinute();
    java.text.SimpleDateFormat simpleDateFormat11 = null;
    net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat11);
    net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double15 = dateTime12.getDeltaYears(dateTime14);
    net.ajaskey.common.DateTime dateTime16 = net.ajaskey.common.DateTime.copy(dateTime12);
    boolean boolean17 = net.ajaskey.common.Utils.sameDate(dateTime5, dateTime12);
    java.text.SimpleDateFormat simpleDateFormat20 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat22 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat23 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("", simpleDateFormat22, simpleDateFormat23);
    net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat20,
        simpleDateFormat23);
    java.text.SimpleDateFormat simpleDateFormat27 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat28 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime("", simpleDateFormat27, simpleDateFormat28);
    net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime("", simpleDateFormat23, simpleDateFormat28);
    dateTime5.setSdf(simpleDateFormat23);
    java.text.SimpleDateFormat simpleDateFormat35 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat37 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat38 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime("", simpleDateFormat37, simpleDateFormat38);
    net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat35,
        simpleDateFormat38);
    java.text.SimpleDateFormat simpleDateFormat42 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat43 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime("", simpleDateFormat42, simpleDateFormat43);
    net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime("", simpleDateFormat38, simpleDateFormat43);
    java.text.SimpleDateFormat simpleDateFormat48 = null;
    java.text.SimpleDateFormat simpleDateFormat49 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat48, simpleDateFormat49);
    net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat49);
    net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime("Fri 31-Dec-0001 17:00:00", simpleDateFormat38, simpleDateFormat49);
    net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int55 = dateTime54.getHour();
    int int56 = dateTime54.getDayOfMonth();
    int int57 = dateTime54.getYear();
    net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime(dateTime54);
    int int59 = dateTime52.getYears(dateTime58);
    boolean boolean60 = dateTime5.isLessThan(dateTime58);
    java.util.Date date61 = dateTime58.getTime();
    net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime(100L);
    int int64 = dateTime63.getMs();
    net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime(100L);
    double double71 = dateTime68.getDeltaYears(dateTime70);
    java.text.SimpleDateFormat simpleDateFormat72 = dateTime68.getSdf();
    boolean boolean73 = dateTime63.isLessThanOrEqual(dateTime68);
    java.lang.String str74 = dateTime63.format();
    java.lang.String str75 = dateTime63.format();
    boolean boolean76 = dateTime58.sameDate(dateTime63);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertNotNull(date8);
    org.junit.Assert.assertEquals(date8.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
    org.junit.Assert.assertNull(dateTime16);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertNotNull(simpleDateFormat20);
    org.junit.Assert.assertNotNull(simpleDateFormat22);
    org.junit.Assert.assertNotNull(simpleDateFormat23);
    org.junit.Assert.assertNotNull(simpleDateFormat27);
    org.junit.Assert.assertNotNull(simpleDateFormat28);
    org.junit.Assert.assertNotNull(simpleDateFormat35);
    org.junit.Assert.assertNotNull(simpleDateFormat37);
    org.junit.Assert.assertNotNull(simpleDateFormat38);
    org.junit.Assert.assertNotNull(simpleDateFormat42);
    org.junit.Assert.assertNotNull(simpleDateFormat43);
    org.junit.Assert.assertNotNull(simpleDateFormat49);
    org.junit.Assert.assertTrue("'" + int55 + "' != '" + 5 + "'", int55 == 5);
    org.junit.Assert.assertTrue("'" + int56 + "' != '" + 31 + "'", int56 == 31);
    org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1969 + "'", int57 == 1969);
    org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
    org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    org.junit.Assert.assertNotNull(date61);
    org.junit.Assert.assertEquals(date61.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertTrue("'" + int64 + "' != '" + 100 + "'", int64 == 100);
    org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-1972.041095890411d) + "'", double71 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat72);
    org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    org.junit.Assert.assertEquals("'" + str74 + "' != '" + "BAD-DATE-FORMAT" + "'", str74, "BAD-DATE-FORMAT");
    org.junit.Assert.assertEquals("'" + str75 + "' != '" + "BAD-DATE-FORMAT" + "'", str75, "BAD-DATE-FORMAT");
    org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
  }

  @Test
  public void test548() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test548");
    java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils
        .readGzipFile("                                                                                               2,020", true);
    org.junit.Assert.assertNull(strList2);
  }

  @Test
  public void test549() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test549");
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str2 = net.ajaskey.common.Utils.ifmt(100, 0);
      org.junit.Assert.fail("Expected exception of type java.util.FormatFlagsConversionMismatchException; message: Conversion = s, Flags = 0");
    }
    catch (java.util.FormatFlagsConversionMismatchException e) {
      // Expected exception.
    }
  }

  @Test
  public void test550() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test550");
    java.text.SimpleDateFormat simpleDateFormat1 = null;
    java.text.SimpleDateFormat simpleDateFormat2 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat1, simpleDateFormat2);
    net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(100L);
    double double10 = dateTime7.getDeltaYears(dateTime9);
    boolean boolean11 = dateTime9.isWeekday();
    java.util.Date date12 = dateTime9.getTime();
    java.lang.String str13 = dateTime9.toString();
    net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(100L);
    int int16 = dateTime15.getMs();
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(100L);
    double double23 = dateTime20.getDeltaYears(dateTime22);
    java.text.SimpleDateFormat simpleDateFormat24 = dateTime20.getSdf();
    boolean boolean25 = dateTime15.isLessThanOrEqual(dateTime20);
    boolean boolean26 = dateTime9.isLessThan(dateTime20);
    java.lang.String str27 = dateTime9.toString();
    long long28 = dateTime3.getDeltaMilliSeconds(dateTime9);
    net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime(100L);
    double double35 = dateTime32.getDeltaYears(dateTime34);
    boolean boolean36 = dateTime34.isWeekday();
    java.util.Date date37 = dateTime34.getTime();
    int int38 = dateTime34.getMinute();
    boolean boolean39 = dateTime3.sameDate(dateTime34);
    java.util.Calendar calendar40 = dateTime3.getCal();
    net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime(100L);
    dateTime42.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str47 = dateTime42.getMonth();
    int int48 = dateTime42.getMs();
    net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime(100L);
    double double55 = dateTime52.getDeltaYears(dateTime54);
    java.text.SimpleDateFormat simpleDateFormat57 = null;
    net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat57);
    net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double61 = dateTime58.getDeltaYears(dateTime60);
    boolean boolean62 = dateTime58.isWeekday();
    boolean boolean63 = dateTime52.sameDate(dateTime58);
    java.text.SimpleDateFormat simpleDateFormat65 = null;
    net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat65);
    net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double69 = dateTime66.getDeltaYears(dateTime68);
    net.ajaskey.common.DateTime dateTime73 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean74 = dateTime68.isEqual(dateTime73);
    dateTime52.set(dateTime73);
    net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double78 = dateTime73.getDeltaYears(dateTime77);
    double double79 = dateTime42.getDeltaYears(dateTime77);
    boolean boolean80 = dateTime3.isGreaterThanOrEqual(dateTime77);
    org.junit.Assert.assertNotNull(simpleDateFormat2);
    org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1972.041095890411d) + "'", double10 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    org.junit.Assert.assertNotNull(date12);
    org.junit.Assert.assertEquals(date12.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "31-Dec-1969" + "'", str13, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
    org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-1972.041095890411d) + "'", double23 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat24);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "31-Dec-1969" + "'", str27, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
    org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-1972.041095890411d) + "'", double35 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    org.junit.Assert.assertNotNull(date37);
    org.junit.Assert.assertEquals(date37.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    org.junit.Assert.assertNull(calendar40);
    org.junit.Assert.assertEquals("'" + str47 + "' != '" + "January" + "'", str47, "January");
    org.junit.Assert.assertTrue("'" + int48 + "' != '" + 100 + "'", int48 == 100);
    org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-1972.041095890411d) + "'", double55 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-1972.041095890411d) + "'", double78 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double79 + "' != '" + (-1871.2328767123288d) + "'", double79 == (-1871.2328767123288d));
    org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
  }

  @Test
  public void test551() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test551");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    boolean boolean7 = dateTime5.isWeekday();
    java.util.Date date8 = dateTime5.getTime();
    java.lang.String str9 = dateTime5.toString();
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(3, (int) '4', (int) (byte) 0);
    boolean boolean14 = dateTime5.isGreaterThan(dateTime13);
    java.text.SimpleDateFormat simpleDateFormat16 = null;
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double20 = dateTime17.getDeltaYears(dateTime19);
    net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean25 = dateTime19.isEqual(dateTime24);
    java.util.Calendar calendar26 = dateTime19.getCal();
    net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(calendar26);
    net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(calendar26);
    boolean boolean29 = dateTime5.isLessThan(dateTime28);
    java.text.SimpleDateFormat simpleDateFormat31 = null;
    net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat31);
    net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double35 = dateTime32.getDeltaYears(dateTime34);
    boolean boolean36 = dateTime32.isWeekday();
    java.lang.String str37 = dateTime32.getDay();
    java.util.Calendar calendar38 = dateTime32.getCal();
    boolean boolean39 = dateTime5.isLessThan(dateTime32);
    net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime(dateTime32);
    boolean boolean41 = dateTime32.isNull();
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertNotNull(date8);
    org.junit.Assert.assertEquals(date8.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "31-Dec-1969" + "'", str9, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertNotNull(calendar26);
    org.junit.Assert.assertEquals(calendar26.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    org.junit.Assert.assertEquals("'" + str37 + "' != '" + "UNKNOWN" + "'", str37, "UNKNOWN");
    org.junit.Assert.assertNull(calendar38);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
  }

  @Test
  public void test552() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test552");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    java.text.SimpleDateFormat simpleDateFormat7 = dateTime3.getSdf();
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(100L);
    double double14 = dateTime11.getDeltaYears(dateTime13);
    boolean boolean15 = dateTime13.isWeekday();
    net.ajaskey.common.DateTime dateTime18 = dateTime13.parse("31-Dec-1969", "January");
    net.ajaskey.common.DateTime dateTime19 = net.ajaskey.common.DateTime.copy(dateTime13);
    boolean boolean20 = dateTime3.sameDate(dateTime19);
    net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(100L);
    double double27 = dateTime24.getDeltaYears(dateTime26);
    boolean boolean28 = dateTime19.isGreaterThan(dateTime24);
    java.text.SimpleDateFormat simpleDateFormat32 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat34 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat35 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime("", simpleDateFormat34, simpleDateFormat35);
    net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat32,
        simpleDateFormat35);
    java.text.SimpleDateFormat simpleDateFormat39 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat40 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime("", simpleDateFormat39, simpleDateFormat40);
    net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime("", simpleDateFormat35, simpleDateFormat40);
    java.text.SimpleDateFormat simpleDateFormat45 = null;
    java.text.SimpleDateFormat simpleDateFormat46 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat45, simpleDateFormat46);
    net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat46);
    net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime("Fri 31-Dec-0001 17:00:00", simpleDateFormat35, simpleDateFormat46);
    net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int52 = dateTime51.getHour();
    int int53 = dateTime51.getDayOfMonth();
    int int54 = dateTime51.getYear();
    net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime(dateTime51);
    int int56 = dateTime49.getYears(dateTime55);
    java.text.SimpleDateFormat simpleDateFormat61 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat63 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat64 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime("", simpleDateFormat63, simpleDateFormat64);
    net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat61,
        simpleDateFormat64);
    java.text.SimpleDateFormat simpleDateFormat67 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime("", simpleDateFormat64, simpleDateFormat67);
    net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat67);
    net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime(
        "                                                                                                                                                                                                                                                                                                                                                                        35.00",
        simpleDateFormat67);
    dateTime49.setSdf(simpleDateFormat67);
    dateTime24.setSdf(simpleDateFormat67);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat7);
    org.junit.Assert.assertTrue("'" + double14 + "' != '" + (-1972.041095890411d) + "'", double14 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    org.junit.Assert.assertNull(dateTime18);
    org.junit.Assert.assertNotNull(dateTime19);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-1972.041095890411d) + "'", double27 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    org.junit.Assert.assertNotNull(simpleDateFormat32);
    org.junit.Assert.assertNotNull(simpleDateFormat34);
    org.junit.Assert.assertNotNull(simpleDateFormat35);
    org.junit.Assert.assertNotNull(simpleDateFormat39);
    org.junit.Assert.assertNotNull(simpleDateFormat40);
    org.junit.Assert.assertNotNull(simpleDateFormat46);
    org.junit.Assert.assertTrue("'" + int52 + "' != '" + 5 + "'", int52 == 5);
    org.junit.Assert.assertTrue("'" + int53 + "' != '" + 31 + "'", int53 == 31);
    org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1969 + "'", int54 == 1969);
    org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
    org.junit.Assert.assertNotNull(simpleDateFormat61);
    org.junit.Assert.assertNotNull(simpleDateFormat63);
    org.junit.Assert.assertNotNull(simpleDateFormat64);
    org.junit.Assert.assertNotNull(simpleDateFormat67);
  }

  @Test
  public void test553() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test553");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    java.text.SimpleDateFormat simpleDateFormat5 = null;
    net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat5);
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double9 = dateTime6.getDeltaYears(dateTime8);
    boolean boolean10 = dateTime3.isLessThan(dateTime8);
    int int11 = dateTime3.getHour();
    net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(100L);
    double double18 = dateTime15.getDeltaYears(dateTime17);
    java.text.SimpleDateFormat simpleDateFormat20 = null;
    net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat20);
    net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double24 = dateTime21.getDeltaYears(dateTime23);
    boolean boolean25 = dateTime21.isWeekday();
    boolean boolean26 = dateTime15.sameDate(dateTime21);
    java.text.SimpleDateFormat simpleDateFormat28 = null;
    net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat28);
    net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double32 = dateTime29.getDeltaYears(dateTime31);
    net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean37 = dateTime31.isEqual(dateTime36);
    dateTime15.set(dateTime36);
    boolean boolean39 = net.ajaskey.common.Utils.sameDate(dateTime3, dateTime36);
    java.lang.String str40 = dateTime3.format();
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
    org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1972.041095890411d) + "'", double18 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    org.junit.Assert.assertEquals("'" + str40 + "' != '" + "BAD-DATE-FORMAT" + "'", str40, "BAD-DATE-FORMAT");
  }

  @Test
  public void test554() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test554");
    java.text.SimpleDateFormat simpleDateFormat1 = null;
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
    net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double5 = dateTime2.getDeltaYears(dateTime4);
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean10 = dateTime4.isEqual(dateTime9);
    java.text.SimpleDateFormat simpleDateFormat12 = null;
    java.text.SimpleDateFormat simpleDateFormat13 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat12, simpleDateFormat13);
    net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime(100L);
    double double21 = dateTime18.getDeltaYears(dateTime20);
    boolean boolean22 = dateTime20.isWeekday();
    java.util.Date date23 = dateTime20.getTime();
    java.lang.String str24 = dateTime20.toString();
    net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(100L);
    int int27 = dateTime26.getMs();
    net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime(100L);
    double double34 = dateTime31.getDeltaYears(dateTime33);
    java.text.SimpleDateFormat simpleDateFormat35 = dateTime31.getSdf();
    boolean boolean36 = dateTime26.isLessThanOrEqual(dateTime31);
    boolean boolean37 = dateTime20.isLessThan(dateTime31);
    java.lang.String str38 = dateTime20.toString();
    long long39 = dateTime14.getDeltaMilliSeconds(dateTime20);
    net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(100L);
    double double46 = dateTime43.getDeltaYears(dateTime45);
    boolean boolean47 = dateTime45.isWeekday();
    java.util.Date date48 = dateTime45.getTime();
    int int49 = dateTime45.getMinute();
    boolean boolean50 = dateTime14.sameDate(dateTime45);
    int int51 = dateTime4.getYears(dateTime45);
    int int52 = dateTime45.getDayOfWeek();
    java.lang.String str53 = dateTime45.toString();
    net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime(100L);
    int int57 = dateTime56.getMs();
    java.lang.String str58 = dateTime56.toString();
    net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int61 = dateTime60.getHour();
    int int62 = dateTime60.getDayOfMonth();
    dateTime56.set(dateTime60);
    java.text.SimpleDateFormat simpleDateFormat66 = null;
    java.text.SimpleDateFormat simpleDateFormat67 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat66, simpleDateFormat67);
    net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat67);
    dateTime60.setSdf(simpleDateFormat67);
    java.text.SimpleDateFormat simpleDateFormat74 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat76 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat77 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime78 = new net.ajaskey.common.DateTime("", simpleDateFormat76, simpleDateFormat77);
    net.ajaskey.common.DateTime dateTime79 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat74,
        simpleDateFormat77);
    net.ajaskey.common.DateTime dateTime80 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat74);
    java.text.SimpleDateFormat simpleDateFormat84 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat86 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat87 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime88 = new net.ajaskey.common.DateTime("", simpleDateFormat86, simpleDateFormat87);
    net.ajaskey.common.DateTime dateTime89 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat84,
        simpleDateFormat87);
    java.text.SimpleDateFormat simpleDateFormat90 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime91 = new net.ajaskey.common.DateTime("", simpleDateFormat87, simpleDateFormat90);
    net.ajaskey.common.DateTime dateTime92 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat90);
    net.ajaskey.common.DateTime dateTime93 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat74, simpleDateFormat90);
    net.ajaskey.common.DateTime dateTime94 = new net.ajaskey.common.DateTime("8", simpleDateFormat67, simpleDateFormat90);
    dateTime45.setSdf(simpleDateFormat90);
    org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertNotNull(simpleDateFormat13);
    org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-1972.041095890411d) + "'", double21 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    org.junit.Assert.assertNotNull(date23);
    org.junit.Assert.assertEquals(date23.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str24 + "' != '" + "31-Dec-1969" + "'", str24, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
    org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-1972.041095890411d) + "'", double34 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat35);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    org.junit.Assert.assertEquals("'" + str38 + "' != '" + "31-Dec-1969" + "'", str38, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
    org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-1972.041095890411d) + "'", double46 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    org.junit.Assert.assertNotNull(date48);
    org.junit.Assert.assertEquals(date48.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
    org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
    org.junit.Assert.assertTrue("'" + int52 + "' != '" + 4 + "'", int52 == 4);
    org.junit.Assert.assertEquals("'" + str53 + "' != '" + "31-Dec-1969" + "'", str53, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
    org.junit.Assert.assertEquals("'" + str58 + "' != '" + "31-Dec-1969" + "'", str58, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int61 + "' != '" + 5 + "'", int61 == 5);
    org.junit.Assert.assertTrue("'" + int62 + "' != '" + 31 + "'", int62 == 31);
    org.junit.Assert.assertNotNull(simpleDateFormat67);
    org.junit.Assert.assertNotNull(simpleDateFormat74);
    org.junit.Assert.assertNotNull(simpleDateFormat76);
    org.junit.Assert.assertNotNull(simpleDateFormat77);
    org.junit.Assert.assertNotNull(simpleDateFormat84);
    org.junit.Assert.assertNotNull(simpleDateFormat86);
    org.junit.Assert.assertNotNull(simpleDateFormat87);
    org.junit.Assert.assertNotNull(simpleDateFormat90);
  }

  @Test
  public void test555() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test555");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) 2);
    java.text.SimpleDateFormat simpleDateFormat2 = dateTime1.getSdf();
    java.lang.String str3 = dateTime1.toString();
    org.junit.Assert.assertNull(simpleDateFormat2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "31-Dec-1969" + "'", str3, "31-Dec-1969");
  }

  @Test
  public void test556() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test556");
    java.lang.String str2 = net.ajaskey.common.Utils.lfmt((-62190298597820L), 25);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "      -62,190,298,597,820" + "'", str2, "      -62,190,298,597,820");
  }

  @Test
  public void test557() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test557");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(5, (int) (byte) 100, 0);
  }

  @Test
  public void test558() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test558");
    java.text.SimpleDateFormat simpleDateFormat4 = null;
    java.text.SimpleDateFormat simpleDateFormat5 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat4, simpleDateFormat5);
    net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat5);
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat5);
    java.text.SimpleDateFormat simpleDateFormat11 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat13 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat14 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime("", simpleDateFormat13, simpleDateFormat14);
    net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat11,
        simpleDateFormat14);
    java.text.SimpleDateFormat simpleDateFormat17 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime("", simpleDateFormat14, simpleDateFormat17);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 14:03:13", simpleDateFormat5, simpleDateFormat14);
    org.junit.Assert.assertNotNull(simpleDateFormat5);
    org.junit.Assert.assertNotNull(simpleDateFormat11);
    org.junit.Assert.assertNotNull(simpleDateFormat13);
    org.junit.Assert.assertNotNull(simpleDateFormat14);
    org.junit.Assert.assertNotNull(simpleDateFormat17);
  }

  @Test
  public void test559() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test559");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    java.text.SimpleDateFormat simpleDateFormat7 = dateTime3.getSdf();
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(100L);
    double double14 = dateTime11.getDeltaYears(dateTime13);
    boolean boolean15 = dateTime13.isWeekday();
    net.ajaskey.common.DateTime dateTime18 = dateTime13.parse("31-Dec-1969", "January");
    net.ajaskey.common.DateTime dateTime19 = net.ajaskey.common.DateTime.copy(dateTime13);
    boolean boolean20 = dateTime3.sameDate(dateTime19);
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int23 = dateTime22.getDayOfWeek();
    int int24 = dateTime19.getYears(dateTime22);
    net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(100L);
    int int27 = dateTime26.getMs();
    java.lang.String str28 = dateTime26.toString();
    net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime(100L);
    double double35 = dateTime32.getDeltaYears(dateTime34);
    java.text.SimpleDateFormat simpleDateFormat37 = null;
    net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat37);
    net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double41 = dateTime38.getDeltaYears(dateTime40);
    boolean boolean42 = dateTime38.isWeekday();
    boolean boolean43 = dateTime32.sameDate(dateTime38);
    java.text.SimpleDateFormat simpleDateFormat45 = null;
    net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat45);
    net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double49 = dateTime46.getDeltaYears(dateTime48);
    net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean54 = dateTime48.isEqual(dateTime53);
    dateTime32.set(dateTime53);
    boolean boolean56 = net.ajaskey.common.Utils.sameDate(dateTime26, dateTime32);
    long long57 = dateTime19.getDeltaMilliSeconds(dateTime32);
    net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime(100L);
    int int60 = dateTime59.getMs();
    java.lang.String str61 = dateTime59.toString();
    int int62 = dateTime59.getMs();
    java.util.Calendar calendar63 = dateTime59.getCal();
    net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime(100L);
    double double70 = dateTime67.getDeltaYears(dateTime69);
    boolean boolean71 = dateTime69.isWeekday();
    net.ajaskey.common.DateTime dateTime74 = dateTime69.parse("31-Dec-1969", "January");
    net.ajaskey.common.DateTime dateTime75 = net.ajaskey.common.DateTime.copy(dateTime69);
    net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime(100L);
    dateTime77.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str82 = dateTime77.getMonth();
    int int83 = dateTime77.getMs();
    java.lang.String str85 = dateTime77
        .format("                                                                                               52.00");
    net.ajaskey.common.DateTime dateTime87 = new net.ajaskey.common.DateTime(100L);
    dateTime87.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str92 = dateTime87.getMonth();
    long long93 = dateTime77.getDeltaDays(dateTime87);
    boolean boolean94 = dateTime75.isGreaterThan(dateTime87);
    int int95 = dateTime59.getYears(dateTime87);
    net.ajaskey.common.DateTime dateTime96 = null;
    boolean boolean97 = dateTime87.isEqual(dateTime96);
    dateTime19.set(dateTime96);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat7);
    org.junit.Assert.assertTrue("'" + double14 + "' != '" + (-1972.041095890411d) + "'", double14 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    org.junit.Assert.assertNull(dateTime18);
    org.junit.Assert.assertNotNull(dateTime19);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertTrue("'" + int23 + "' != '" + 4 + "'", int23 == 4);
    org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
    org.junit.Assert.assertEquals("'" + str28 + "' != '" + "31-Dec-1969" + "'", str28, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-1972.041095890411d) + "'", double35 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-62190298591167L) + "'", long57 == (-62190298591167L));
    org.junit.Assert.assertTrue("'" + int60 + "' != '" + 100 + "'", int60 == 100);
    org.junit.Assert.assertEquals("'" + str61 + "' != '" + "31-Dec-1969" + "'", str61, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
    org.junit.Assert.assertNotNull(calendar63);
    org.junit.Assert.assertEquals(calendar63.toString(),
        "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-1972.041095890411d) + "'", double70 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    org.junit.Assert.assertNull(dateTime74);
    org.junit.Assert.assertNotNull(dateTime75);
    org.junit.Assert.assertEquals("'" + str82 + "' != '" + "January" + "'", str82, "January");
    org.junit.Assert.assertTrue("'" + int83 + "' != '" + 100 + "'", int83 == 100);
    org.junit.Assert.assertEquals(
        "'" + str85 + "' != '" + "                                                                                               52.00" + "'", str85,
        "                                                                                               52.00");
    org.junit.Assert.assertEquals("'" + str92 + "' != '" + "January" + "'", str92, "January");
    org.junit.Assert.assertTrue("'" + long93 + "' != '" + 0L + "'", long93 == 0L);
    org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1870) + "'", int95 == (-1870));
    org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
  }

  @Test
  public void test560() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test560");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) 2);
    java.text.SimpleDateFormat simpleDateFormat2 = dateTime1.getSdf();
    net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    java.text.SimpleDateFormat simpleDateFormat8 = null;
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double12 = dateTime9.getDeltaYears(dateTime11);
    boolean boolean13 = dateTime6.isLessThan(dateTime11);
    int int14 = dateTime6.getHour();
    long long15 = dateTime1.getDeltaDays(dateTime6);
    java.lang.String str16 = dateTime1.toString();
    dateTime1.add(1969, 9);
    java.lang.String str20 = dateTime1.getMonth();
    org.junit.Assert.assertNull(simpleDateFormat2);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
    org.junit.Assert.assertTrue("'" + long15 + "' != '" + 719795L + "'", long15 == 719795L);
    org.junit.Assert.assertEquals("'" + str16 + "' != '" + "31-Dec-1969" + "'", str16, "31-Dec-1969");
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "December" + "'", str20, "December");
  }

  @Test
  public void test561() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test561");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(1869, 2, 0);
  }

  @Test
  public void test562() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test562");
    java.text.SimpleDateFormat simpleDateFormat1 = null;
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
    int int3 = dateTime2.getDayOfWeek();
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
  }

  @Test
  public void test563() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test563");
    java.text.SimpleDateFormat simpleDateFormat2 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime("January", simpleDateFormat2);
    net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime("10-Apr-0002", simpleDateFormat2);
    org.junit.Assert.assertNotNull(simpleDateFormat2);
  }

  @Test
  public void test564() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test564");
    java.lang.String str2 = net.ajaskey.common.Utils.ifmt((-1870), 11);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "     -1,870" + "'", str2, "     -1,870");
  }

  @Test
  public void test565() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test565");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(62190298604629L);
    net.ajaskey.common.DateTime dateTime3 = dateTime1.parse(" 97.00");
    // The following exception was thrown during execution in test generation
    try {
      boolean boolean4 = dateTime3.isWeekday();
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
    }
    catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    org.junit.Assert.assertNull(dateTime3);
  }

  @Test
  public void test566() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test566");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(62190298604629L);
    net.ajaskey.common.DateTime dateTime3 = dateTime1.parse(" 97.00");
    net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime(9, (int) (short) 10, (int) 'a');
    int int8 = dateTime7.getDayOfWeek();
    // The following exception was thrown during execution in test generation
    try {
      boolean boolean9 = dateTime3.sameDate(dateTime7);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
    }
    catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    org.junit.Assert.assertNull(dateTime3);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 4 + "'", int8 == 4);
  }

  @Test
  public void test567() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test567");
    net.ajaskey.common.Utils.makeDir("          1.00");
  }

  @Test
  public void test568() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test568");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) 2);
    java.text.SimpleDateFormat simpleDateFormat2 = dateTime1.getSdf();
    net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    java.text.SimpleDateFormat simpleDateFormat8 = null;
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double12 = dateTime9.getDeltaYears(dateTime11);
    boolean boolean13 = dateTime6.isLessThan(dateTime11);
    int int14 = dateTime6.getHour();
    long long15 = dateTime1.getDeltaDays(dateTime6);
    java.lang.String str16 = dateTime1.toString();
    int int17 = dateTime1.getYear();
    int int18 = dateTime1.getYear();
    int int19 = dateTime1.getMs();
    net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime(100L);
    double double26 = dateTime23.getDeltaYears(dateTime25);
    java.text.SimpleDateFormat simpleDateFormat28 = null;
    net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat28);
    net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double32 = dateTime29.getDeltaYears(dateTime31);
    boolean boolean33 = dateTime29.isWeekday();
    boolean boolean34 = dateTime23.sameDate(dateTime29);
    java.text.SimpleDateFormat simpleDateFormat36 = null;
    net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat36);
    net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double40 = dateTime37.getDeltaYears(dateTime39);
    net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean45 = dateTime39.isEqual(dateTime44);
    dateTime23.set(dateTime44);
    net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double49 = dateTime44.getDeltaYears(dateTime48);
    int int50 = dateTime48.getDayOfWeek();
    boolean boolean51 = dateTime1.isEqual(dateTime48);
    java.text.SimpleDateFormat simpleDateFormat53 = null;
    net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat53);
    net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double57 = dateTime54.getDeltaYears(dateTime56);
    boolean boolean58 = dateTime54.isWeekday();
    java.lang.String str59 = dateTime54.getDay();
    net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime(100L);
    double double66 = dateTime63.getDeltaYears(dateTime65);
    java.text.SimpleDateFormat simpleDateFormat67 = dateTime63.getSdf();
    net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime73 = new net.ajaskey.common.DateTime(100L);
    double double74 = dateTime71.getDeltaYears(dateTime73);
    boolean boolean75 = dateTime73.isWeekday();
    net.ajaskey.common.DateTime dateTime78 = dateTime73.parse("31-Dec-1969", "January");
    net.ajaskey.common.DateTime dateTime79 = net.ajaskey.common.DateTime.copy(dateTime73);
    boolean boolean80 = dateTime63.sameDate(dateTime79);
    boolean boolean81 = dateTime54.isEqual(dateTime63);
    boolean boolean82 = dateTime48.sameDate(dateTime63);
    net.ajaskey.common.DateTime dateTime84 = dateTime63.parse("                              97");
    org.junit.Assert.assertNull(simpleDateFormat2);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
    org.junit.Assert.assertTrue("'" + long15 + "' != '" + 719795L + "'", long15 == 719795L);
    org.junit.Assert.assertEquals("'" + str16 + "' != '" + "31-Dec-1969" + "'", str16, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1969 + "'", int17 == 1969);
    org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1969 + "'", int18 == 1969);
    org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
    org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-1972.041095890411d) + "'", double26 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-1972.041095890411d) + "'", double49 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + int50 + "' != '" + 4 + "'", int50 == 4);
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    org.junit.Assert.assertEquals("'" + str59 + "' != '" + "UNKNOWN" + "'", str59, "UNKNOWN");
    org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-1972.041095890411d) + "'", double66 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat67);
    org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-1972.041095890411d) + "'", double74 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    org.junit.Assert.assertNull(dateTime78);
    org.junit.Assert.assertNotNull(dateTime79);
    org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    org.junit.Assert.assertNull(dateTime84);
  }

  @Test
  public void test569() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test569");
    java.lang.String str1 = net.ajaskey.common.Utils.getFromUrl("Thu 10-Apr-0002 14:03:25");
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
  }

  @Test
  public void test570() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test570");
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 14:03:23", "Invalid Time");
  }

  @Test
  public void test571() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test571");
    java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readTextFile("Fri 31-Dec-0001 17:00:00", false);
    net.ajaskey.common.TextUtils.print(strList2);
    net.ajaskey.common.TextUtils.print(strList2);
    org.junit.Assert.assertNotNull(strList2);
  }

  @Test
  public void test572() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test572");
    net.ajaskey.common.DateTime dateTime0 = new net.ajaskey.common.DateTime();
    java.text.SimpleDateFormat simpleDateFormat4 = null;
    java.text.SimpleDateFormat simpleDateFormat5 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat4, simpleDateFormat5);
    net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat5);
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(0L);
    int int10 = dateTime9.getMs();
    java.text.SimpleDateFormat simpleDateFormat12 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat14 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat15 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("", simpleDateFormat14, simpleDateFormat15);
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat12,
        simpleDateFormat15);
    dateTime9.setSdf(simpleDateFormat15);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime("UNKNOWN", simpleDateFormat5, simpleDateFormat15);
    net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int22 = dateTime21.getHour();
    int int23 = dateTime21.getDayOfMonth();
    int int24 = dateTime21.getYear();
    java.util.Calendar calendar25 = dateTime21.getCal();
    dateTime19.set(calendar25);
    dateTime0.set(calendar25);
    net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(calendar25);
    net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime(100L);
    double double35 = dateTime32.getDeltaYears(dateTime34);
    java.text.SimpleDateFormat simpleDateFormat36 = dateTime32.getSdf();
    net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime(100L);
    double double43 = dateTime40.getDeltaYears(dateTime42);
    boolean boolean44 = dateTime42.isWeekday();
    net.ajaskey.common.DateTime dateTime47 = dateTime42.parse("31-Dec-1969", "January");
    net.ajaskey.common.DateTime dateTime48 = net.ajaskey.common.DateTime.copy(dateTime42);
    boolean boolean49 = dateTime32.sameDate(dateTime48);
    net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int52 = dateTime51.getDayOfWeek();
    int int53 = dateTime48.getYears(dateTime51);
    net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime(100L);
    int int56 = dateTime55.getMs();
    java.lang.String str57 = dateTime55.toString();
    net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime(100L);
    double double64 = dateTime61.getDeltaYears(dateTime63);
    java.text.SimpleDateFormat simpleDateFormat66 = null;
    net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat66);
    net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double70 = dateTime67.getDeltaYears(dateTime69);
    boolean boolean71 = dateTime67.isWeekday();
    boolean boolean72 = dateTime61.sameDate(dateTime67);
    java.text.SimpleDateFormat simpleDateFormat74 = null;
    net.ajaskey.common.DateTime dateTime75 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat74);
    net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double78 = dateTime75.getDeltaYears(dateTime77);
    net.ajaskey.common.DateTime dateTime82 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean83 = dateTime77.isEqual(dateTime82);
    dateTime61.set(dateTime82);
    boolean boolean85 = net.ajaskey.common.Utils.sameDate(dateTime55, dateTime61);
    long long86 = dateTime48.getDeltaMilliSeconds(dateTime61);
    boolean boolean87 = net.ajaskey.common.Utils.sameMonth(dateTime28, dateTime61);
    org.junit.Assert.assertNotNull(simpleDateFormat5);
    org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    org.junit.Assert.assertNotNull(simpleDateFormat12);
    org.junit.Assert.assertNotNull(simpleDateFormat14);
    org.junit.Assert.assertNotNull(simpleDateFormat15);
    org.junit.Assert.assertTrue("'" + int22 + "' != '" + 5 + "'", int22 == 5);
    org.junit.Assert.assertTrue("'" + int23 + "' != '" + 31 + "'", int23 == 31);
    org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1969 + "'", int24 == 1969);
    org.junit.Assert.assertNotNull(calendar25);
    org.junit.Assert.assertEquals(calendar25.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-1972.041095890411d) + "'", double35 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat36);
    org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-1972.041095890411d) + "'", double43 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    org.junit.Assert.assertNull(dateTime47);
    org.junit.Assert.assertNotNull(dateTime48);
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    org.junit.Assert.assertTrue("'" + int52 + "' != '" + 4 + "'", int52 == 4);
    org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
    org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
    org.junit.Assert.assertEquals("'" + str57 + "' != '" + "31-Dec-1969" + "'", str57, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-1972.041095890411d) + "'", double64 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long86 + "' != '" + (-62190298590935L) + "'", long86 == (-62190298590935L));
    org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
  }

  @Test
  public void test573() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test573");
    java.lang.String str2 = net.ajaskey.common.Utils.ifmt((int) 'a', 97);
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "                                                                                               97" + "'", str2,
        "                                                                                               97");
  }

  @Test
  public void test574() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test574");
    java.text.SimpleDateFormat simpleDateFormat3 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat5 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat6 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("", simpleDateFormat5, simpleDateFormat6);
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat3, simpleDateFormat6);
    java.text.SimpleDateFormat simpleDateFormat10 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat11 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime("", simpleDateFormat10, simpleDateFormat11);
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("", simpleDateFormat6, simpleDateFormat11);
    java.text.SimpleDateFormat simpleDateFormat16 = null;
    java.text.SimpleDateFormat simpleDateFormat17 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat16, simpleDateFormat17);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat17);
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("Fri 31-Dec-0001 17:00:00", simpleDateFormat6, simpleDateFormat17);
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int23 = dateTime22.getHour();
    int int24 = dateTime22.getDayOfMonth();
    int int25 = dateTime22.getYear();
    net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(dateTime22);
    int int27 = dateTime20.getYears(dateTime26);
    int int28 = dateTime20.getDayOfMonth();
    net.ajaskey.common.DateTime dateTime31 = dateTime20.parse("February",
        "                                                                                                  10");
    org.junit.Assert.assertNotNull(simpleDateFormat3);
    org.junit.Assert.assertNotNull(simpleDateFormat5);
    org.junit.Assert.assertNotNull(simpleDateFormat6);
    org.junit.Assert.assertNotNull(simpleDateFormat10);
    org.junit.Assert.assertNotNull(simpleDateFormat11);
    org.junit.Assert.assertNotNull(simpleDateFormat17);
    org.junit.Assert.assertTrue("'" + int23 + "' != '" + 5 + "'", int23 == 5);
    org.junit.Assert.assertTrue("'" + int24 + "' != '" + 31 + "'", int24 == 31);
    org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1969 + "'", int25 == 1969);
    org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
    org.junit.Assert.assertNull(dateTime31);
  }

  @Test
  public void test575() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test575");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    boolean boolean7 = dateTime5.isWeekday();
    boolean boolean8 = dateTime5.isWeekday();
    net.ajaskey.common.DateTime dateTime10 = dateTime5.parse("Wednesday");
    net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(100L);
    double double17 = dateTime14.getDeltaYears(dateTime16);
    java.text.SimpleDateFormat simpleDateFormat19 = null;
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat19);
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double23 = dateTime20.getDeltaYears(dateTime22);
    boolean boolean24 = dateTime20.isWeekday();
    boolean boolean25 = dateTime14.sameDate(dateTime20);
    java.text.SimpleDateFormat simpleDateFormat27 = null;
    net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat27);
    net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double31 = dateTime28.getDeltaYears(dateTime30);
    net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean36 = dateTime30.isEqual(dateTime35);
    dateTime14.set(dateTime35);
    java.text.SimpleDateFormat simpleDateFormat39 = null;
    net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat39);
    net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double43 = dateTime40.getDeltaYears(dateTime42);
    net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean48 = dateTime42.isEqual(dateTime47);
    java.util.Calendar calendar49 = dateTime42.getCal();
    java.lang.String str50 = dateTime42.toFullString();
    int int51 = dateTime42.getHour();
    boolean boolean52 = net.ajaskey.common.Utils.sameDate(dateTime14, dateTime42);
    boolean boolean53 = net.ajaskey.common.Utils.sameMonth(dateTime10, dateTime14);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    org.junit.Assert.assertNull(dateTime10);
    org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-1972.041095890411d) + "'", double17 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    org.junit.Assert.assertNotNull(calendar49);
    org.junit.Assert.assertEquals(calendar49.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str50, "Wed 31-Dec-1969 17:00:00");
    org.junit.Assert.assertTrue("'" + int51 + "' != '" + 5 + "'", int51 == 5);
    org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
  }

  @Test
  public void test576() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test576");
    java.util.zip.ZipOutputStream zipOutputStream1 = null;
    // The following exception was thrown during execution in test generation
    try {
      net.ajaskey.common.Utils.writeToZipFile("                                                                                                  10",
          zipOutputStream1);
      org.junit.Assert.fail(
          "Expected exception of type java.io.FileNotFoundException; message:                                                                                                   10 (The system cannot find the file specified)");
    }
    catch (java.io.FileNotFoundException e) {
      // Expected exception.
    }
  }

  @Test
  public void test577() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test577");
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("31-Dec-1969",
        "January         52         52                                                                                               52.00         52hi!         52");
  }

  @Test
  public void test578() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test578");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    boolean boolean7 = dateTime5.isWeekday();
    net.ajaskey.common.DateTime dateTime10 = dateTime5.parse("31-Dec-1969", "January");
    net.ajaskey.common.DateTime dateTime11 = net.ajaskey.common.DateTime.copy(dateTime5);
    java.lang.String str12 = dateTime5.format();
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertNull(dateTime10);
    org.junit.Assert.assertNotNull(dateTime11);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "BAD-DATE-FORMAT" + "'", str12, "BAD-DATE-FORMAT");
  }

  @Test
  public void test579() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test579");
    net.ajaskey.common.DateTime dateTime0 = new net.ajaskey.common.DateTime();
    java.text.SimpleDateFormat simpleDateFormat2 = null;
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat2);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    int int7 = dateTime5.getDayOfYear();
    boolean boolean8 = dateTime0.isLessThan(dateTime5);
    java.lang.String str9 = dateTime0.format();
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 365 + "'", int7 == 365);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "BAD-DATE-FORMAT" + "'", str9, "BAD-DATE-FORMAT");
  }

  @Test
  public void test580() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test580");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    java.text.SimpleDateFormat simpleDateFormat7 = dateTime3.getSdf();
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(dateTime3);
    net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(1, 7, 7);
    net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(100L);
    double double19 = dateTime16.getDeltaYears(dateTime18);
    boolean boolean20 = net.ajaskey.common.Utils.sameMonth(dateTime12, dateTime18);
    boolean boolean21 = dateTime8.isGreaterThan(dateTime18);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat7);
    org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-1972.041095890411d) + "'", double19 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
  }

  @Test
  public void test581() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test581");
    java.lang.String str1 = net.ajaskey.common.Utils.getFromUrl("Thu 10-Apr-0002 14:03:11");
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
  }

  @Test
  public void test582() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test582");
    net.ajaskey.common.TextUtils.printline(
        "                                                                                                                                                                                                                                                                                                                                                                           13");
  }

  @Test
  public void test583() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test583");
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str2 = net.ajaskey.common.Utils.lfmt((long) 'a', 0);
      org.junit.Assert.fail("Expected exception of type java.util.FormatFlagsConversionMismatchException; message: Conversion = s, Flags = 0");
    }
    catch (java.util.FormatFlagsConversionMismatchException e) {
      // Expected exception.
    }
  }

  @Test
  public void test584() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test584");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    int int2 = dateTime1.getMs();
    java.text.SimpleDateFormat simpleDateFormat3 = net.ajaskey.common.Utils.sdf;
    dateTime1.setSdf(simpleDateFormat3);
    int int5 = dateTime1.getDayOfWeek();
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
    double double12 = dateTime9.getDeltaYears(dateTime11);
    java.util.Calendar calendar13 = dateTime9.getCal();
    dateTime1.set(calendar13);
    java.text.SimpleDateFormat simpleDateFormat16 = null;
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double20 = dateTime17.getDeltaYears(dateTime19);
    net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean25 = dateTime19.isEqual(dateTime24);
    java.util.Calendar calendar26 = dateTime19.getCal();
    net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(calendar26);
    dateTime1.set(calendar26);
    java.util.Calendar calendar29 = dateTime1.getCal();
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat3);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 4 + "'", int5 == 4);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1972.041095890411d) + "'", double12 == (-1972.041095890411d));
    org.junit.Assert.assertNotNull(calendar13);
// flaky:         org.junit.Assert.assertEquals(calendar13.toString(), "java.util.GregorianCalendar[time=-62190298590523,areFieldsSet=true,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=3,SECOND=29,MILLISECOND=477,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertNotNull(calendar26);
    org.junit.Assert.assertEquals(calendar26.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertNotNull(calendar29);
    org.junit.Assert.assertEquals(calendar29.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
  }

  @Test
  public void test585() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test585");
    java.lang.String str2 = net.ajaskey.common.Utils.lfmt(2L, (int) (short) -1);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "2" + "'", str2, "2");
  }

  @Test
  public void test587() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test587");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) 25);
  }

  @Test
  public void test588() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test588");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    int int2 = dateTime1.getMs();
    java.lang.String str3 = dateTime1.toString();
    int int4 = dateTime1.getMs();
    java.util.Calendar calendar5 = dateTime1.getCal();
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
    double double12 = dateTime9.getDeltaYears(dateTime11);
    boolean boolean13 = dateTime11.isWeekday();
    net.ajaskey.common.DateTime dateTime16 = dateTime11.parse("31-Dec-1969", "January");
    net.ajaskey.common.DateTime dateTime17 = net.ajaskey.common.DateTime.copy(dateTime11);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(100L);
    dateTime19.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str24 = dateTime19.getMonth();
    int int25 = dateTime19.getMs();
    java.lang.String str27 = dateTime19
        .format("                                                                                               52.00");
    net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(100L);
    dateTime29.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str34 = dateTime29.getMonth();
    long long35 = dateTime19.getDeltaDays(dateTime29);
    boolean boolean36 = dateTime17.isGreaterThan(dateTime29);
    int int37 = dateTime1.getYears(dateTime29);
    net.ajaskey.common.DateTime dateTime38 = null;
    boolean boolean39 = dateTime29.isEqual(dateTime38);
    java.text.SimpleDateFormat simpleDateFormat40 = dateTime29.getSdf();
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "31-Dec-1969" + "'", str3, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
    org.junit.Assert.assertNotNull(calendar5);
    org.junit.Assert.assertEquals(calendar5.toString(),
        "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1972.041095890411d) + "'", double12 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNull(dateTime16);
    org.junit.Assert.assertNotNull(dateTime17);
    org.junit.Assert.assertEquals("'" + str24 + "' != '" + "January" + "'", str24, "January");
    org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
    org.junit.Assert.assertEquals(
        "'" + str27 + "' != '" + "                                                                                               52.00" + "'", str27,
        "                                                                                               52.00");
    org.junit.Assert.assertEquals("'" + str34 + "' != '" + "January" + "'", str34, "January");
    org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1870) + "'", int37 == (-1870));
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    org.junit.Assert.assertNull(simpleDateFormat40);
  }

  @Test
  public void test589() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test589");
    java.lang.String str1 = net.ajaskey.common.Utils.getFromUrl("Wed 31-Dec-1969 17:00:00");
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
  }

  @Test
  public void test590() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test590");
    java.util.zip.ZipOutputStream zipOutputStream1 = null;
    // The following exception was thrown during execution in test generation
    try {
      net.ajaskey.common.Utils.writeToZipFile(
          "JanuaryJanuaryJanuary                                                                                               52.00Januaryhi!January",
          zipOutputStream1);
      org.junit.Assert.fail(
          "Expected exception of type java.io.FileNotFoundException; message: JanuaryJanuaryJanuary                                                                                               52.00Januaryhi!January (The system cannot find the file specified)");
    }
    catch (java.io.FileNotFoundException e) {
      // Expected exception.
    }
  }

  @Test
  public void test591() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test591");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    boolean boolean7 = dateTime5.isWeekday();
    java.util.Date date8 = dateTime5.getTime();
    int int9 = dateTime5.getMinute();
    int int10 = dateTime5.getDayOfMonth();
    net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(100L);
    int int13 = dateTime12.getMs();
    java.text.SimpleDateFormat simpleDateFormat14 = net.ajaskey.common.Utils.sdf;
    dateTime12.setSdf(simpleDateFormat14);
    int int16 = dateTime12.getDayOfWeek();
    net.ajaskey.common.DateTime dateTime18 = dateTime12
        .parse("                                                                                                   7");
    boolean boolean19 = dateTime5.isLessThan(dateTime12);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertNotNull(date8);
    org.junit.Assert.assertEquals(date8.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    org.junit.Assert.assertTrue("'" + int10 + "' != '" + 31 + "'", int10 == 31);
    org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat14);
    org.junit.Assert.assertTrue("'" + int16 + "' != '" + 4 + "'", int16 == 4);
    org.junit.Assert.assertNull(dateTime18);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
  }

  @Test
  public void test592() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test592");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    boolean boolean7 = dateTime5.isWeekday();
    java.util.Date date8 = dateTime5.getTime();
    java.lang.String str9 = dateTime5.toString();
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(3, (int) '4', (int) (byte) 0);
    boolean boolean14 = dateTime5.isGreaterThan(dateTime13);
    java.text.SimpleDateFormat simpleDateFormat16 = null;
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double20 = dateTime17.getDeltaYears(dateTime19);
    net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean25 = dateTime19.isEqual(dateTime24);
    java.util.Calendar calendar26 = dateTime19.getCal();
    net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(calendar26);
    net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(calendar26);
    boolean boolean29 = dateTime5.isLessThan(dateTime28);
    java.text.SimpleDateFormat simpleDateFormat31 = null;
    net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat31);
    net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double35 = dateTime32.getDeltaYears(dateTime34);
    boolean boolean36 = dateTime32.isWeekday();
    java.lang.String str37 = dateTime32.getDay();
    java.util.Calendar calendar38 = dateTime32.getCal();
    boolean boolean39 = dateTime5.isLessThan(dateTime32);
    net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime(dateTime32);
    java.text.SimpleDateFormat simpleDateFormat43 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat45 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat46 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime("", simpleDateFormat45, simpleDateFormat46);
    net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat43,
        simpleDateFormat46);
    net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat43);
    dateTime40.setSdf(simpleDateFormat43);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertNotNull(date8);
    org.junit.Assert.assertEquals(date8.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "31-Dec-1969" + "'", str9, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertNotNull(calendar26);
    org.junit.Assert.assertEquals(calendar26.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    org.junit.Assert.assertEquals("'" + str37 + "' != '" + "UNKNOWN" + "'", str37, "UNKNOWN");
    org.junit.Assert.assertNull(calendar38);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    org.junit.Assert.assertNotNull(simpleDateFormat43);
    org.junit.Assert.assertNotNull(simpleDateFormat45);
    org.junit.Assert.assertNotNull(simpleDateFormat46);
  }

  @Test
  public void test593() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test593");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    int int2 = dateTime1.getMs();
    java.lang.String str3 = dateTime1.toString();
    net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime(dateTime1);
    java.text.SimpleDateFormat simpleDateFormat5 = dateTime1.getSdf();
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "31-Dec-1969" + "'", str3, "31-Dec-1969");
    org.junit.Assert.assertNotNull(simpleDateFormat5);
  }

  @Test
  public void test594() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test594");
    java.text.SimpleDateFormat simpleDateFormat3 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat5 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat6 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("", simpleDateFormat5, simpleDateFormat6);
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat3, simpleDateFormat6);
    java.text.SimpleDateFormat simpleDateFormat10 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat11 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime("", simpleDateFormat10, simpleDateFormat11);
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("", simpleDateFormat6, simpleDateFormat11);
    java.text.SimpleDateFormat simpleDateFormat16 = null;
    java.text.SimpleDateFormat simpleDateFormat17 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat16, simpleDateFormat17);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat17);
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("Fri 31-Dec-0001 17:00:00", simpleDateFormat6, simpleDateFormat17);
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int23 = dateTime22.getHour();
    int int24 = dateTime22.getDayOfMonth();
    int int25 = dateTime22.getYear();
    net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(dateTime22);
    int int27 = dateTime20.getYears(dateTime26);
    net.ajaskey.common.DateTime dateTime28 = net.ajaskey.common.DateTime.copy(dateTime20);
    org.junit.Assert.assertNotNull(simpleDateFormat3);
    org.junit.Assert.assertNotNull(simpleDateFormat5);
    org.junit.Assert.assertNotNull(simpleDateFormat6);
    org.junit.Assert.assertNotNull(simpleDateFormat10);
    org.junit.Assert.assertNotNull(simpleDateFormat11);
    org.junit.Assert.assertNotNull(simpleDateFormat17);
    org.junit.Assert.assertTrue("'" + int23 + "' != '" + 5 + "'", int23 == 5);
    org.junit.Assert.assertTrue("'" + int24 + "' != '" + 31 + "'", int24 == 31);
    org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1969 + "'", int25 == 1969);
    org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    org.junit.Assert.assertNull(dateTime28);
  }

  @Test
  public void test595() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test595");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    boolean boolean7 = dateTime5.isWeekday();
    java.util.Date date8 = dateTime5.getTime();
    java.lang.String str9 = dateTime5.toString();
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(3, (int) '4', (int) (byte) 0);
    boolean boolean14 = dateTime5.isGreaterThan(dateTime13);
    net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int17 = dateTime16.getHour();
    int int18 = dateTime16.getDayOfMonth();
    int int19 = dateTime16.getYear();
    java.util.Calendar calendar20 = dateTime16.getCal();
    int int21 = dateTime16.getYear();
    java.util.Date date22 = dateTime16.getTime();
    java.text.SimpleDateFormat simpleDateFormat24 = null;
    net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat24);
    net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double28 = dateTime25.getDeltaYears(dateTime27);
    net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean33 = dateTime27.isEqual(dateTime32);
    java.text.SimpleDateFormat simpleDateFormat35 = null;
    java.text.SimpleDateFormat simpleDateFormat36 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat35, simpleDateFormat36);
    net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime(100L);
    double double44 = dateTime41.getDeltaYears(dateTime43);
    boolean boolean45 = dateTime43.isWeekday();
    java.util.Date date46 = dateTime43.getTime();
    java.lang.String str47 = dateTime43.toString();
    net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime(100L);
    int int50 = dateTime49.getMs();
    net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime(100L);
    double double57 = dateTime54.getDeltaYears(dateTime56);
    java.text.SimpleDateFormat simpleDateFormat58 = dateTime54.getSdf();
    boolean boolean59 = dateTime49.isLessThanOrEqual(dateTime54);
    boolean boolean60 = dateTime43.isLessThan(dateTime54);
    java.lang.String str61 = dateTime43.toString();
    long long62 = dateTime37.getDeltaMilliSeconds(dateTime43);
    net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime(100L);
    double double69 = dateTime66.getDeltaYears(dateTime68);
    boolean boolean70 = dateTime68.isWeekday();
    java.util.Date date71 = dateTime68.getTime();
    int int72 = dateTime68.getMinute();
    boolean boolean73 = dateTime37.sameDate(dateTime68);
    int int74 = dateTime27.getYears(dateTime68);
    int int75 = dateTime68.getHour();
    net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime(0L);
    int int78 = dateTime77.getMs();
    java.text.SimpleDateFormat simpleDateFormat80 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat82 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat83 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime84 = new net.ajaskey.common.DateTime("", simpleDateFormat82, simpleDateFormat83);
    net.ajaskey.common.DateTime dateTime85 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat80,
        simpleDateFormat83);
    dateTime77.setSdf(simpleDateFormat83);
    dateTime68.setSdf(simpleDateFormat83);
    boolean boolean88 = dateTime16.isLessThan(dateTime68);
    java.text.SimpleDateFormat simpleDateFormat90 = null;
    java.text.SimpleDateFormat simpleDateFormat91 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime92 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat90, simpleDateFormat91);
    int int93 = dateTime92.getDayOfMonth();
    boolean boolean94 = dateTime92.isWeekday();
    java.lang.String str95 = dateTime92.toFullString();
    boolean boolean96 = dateTime16.isLessThanOrEqual(dateTime92);
    double double97 = dateTime5.getDeltaYears(dateTime92);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertNotNull(date8);
    org.junit.Assert.assertEquals(date8.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "31-Dec-1969" + "'", str9, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    org.junit.Assert.assertTrue("'" + int17 + "' != '" + 5 + "'", int17 == 5);
    org.junit.Assert.assertTrue("'" + int18 + "' != '" + 31 + "'", int18 == 31);
    org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1969 + "'", int19 == 1969);
    org.junit.Assert.assertNotNull(calendar20);
    org.junit.Assert.assertEquals(calendar20.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1969 + "'", int21 == 1969);
    org.junit.Assert.assertNotNull(date22);
    org.junit.Assert.assertEquals(date22.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    org.junit.Assert.assertNotNull(simpleDateFormat36);
    org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-1972.041095890411d) + "'", double44 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    org.junit.Assert.assertNotNull(date46);
    org.junit.Assert.assertEquals(date46.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str47 + "' != '" + "31-Dec-1969" + "'", str47, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
    org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-1972.041095890411d) + "'", double57 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat58);
    org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    org.junit.Assert.assertEquals("'" + str61 + "' != '" + "31-Dec-1969" + "'", str61, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + long62 + "' != '" + 0L + "'", long62 == 0L);
    org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-1972.041095890411d) + "'", double69 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
    org.junit.Assert.assertNotNull(date71);
    org.junit.Assert.assertEquals(date71.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
    org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
    org.junit.Assert.assertTrue("'" + int75 + "' != '" + 5 + "'", int75 == 5);
    org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
    org.junit.Assert.assertNotNull(simpleDateFormat80);
    org.junit.Assert.assertNotNull(simpleDateFormat82);
    org.junit.Assert.assertNotNull(simpleDateFormat83);
    org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
    org.junit.Assert.assertNotNull(simpleDateFormat91);
    org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
    org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    org.junit.Assert.assertEquals("'" + str95 + "' != '" + "Invalid Time" + "'", str95, "Invalid Time");
    org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    org.junit.Assert.assertTrue("'" + double97 + "' != '" + 0.0d + "'", double97 == 0.0d);
  }

  @Test
  public void test596() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test596");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    int int2 = dateTime1.getMs();
    net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
    double double9 = dateTime6.getDeltaYears(dateTime8);
    java.text.SimpleDateFormat simpleDateFormat10 = dateTime6.getSdf();
    boolean boolean11 = dateTime1.isLessThanOrEqual(dateTime6);
    net.ajaskey.common.DateTime dateTime12 = null;
    long long13 = dateTime1.getDeltaMilliSeconds(dateTime12);
    net.ajaskey.common.DateTime dateTime16 = dateTime1
        .parse("                                                                                 -62,190,298,606,387", "February");
    // The following exception was thrown during execution in test generation
    try {
      int int17 = dateTime16.getDayOfYear();
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
    }
    catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
    org.junit.Assert.assertNull(dateTime16);
  }

  @Test
  public void test597() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test597");
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime(" 97.00", "Thu 10-Apr-0002 14:03:25");
  }

  @Test
  public void test598() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test598");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(62190298597911L);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    java.lang.String str6 = dateTime5.format();
    boolean boolean7 = net.ajaskey.common.Utils.sameDate(dateTime1, dateTime5);
    int int8 = dateTime1.getHour();
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "BAD-DATE-FORMAT" + "'", str6, "BAD-DATE-FORMAT");
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
  }

  @Test
  public void test599() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test599");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) 2);
    java.text.SimpleDateFormat simpleDateFormat2 = dateTime1.getSdf();
    net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime(100L);
    int int5 = dateTime4.getMs();
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
    double double12 = dateTime9.getDeltaYears(dateTime11);
    java.text.SimpleDateFormat simpleDateFormat13 = dateTime9.getSdf();
    boolean boolean14 = dateTime4.isLessThanOrEqual(dateTime9);
    java.lang.String str15 = dateTime4.getDay();
    java.text.SimpleDateFormat simpleDateFormat19 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat21 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat22 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime("", simpleDateFormat21, simpleDateFormat22);
    net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat19,
        simpleDateFormat22);
    java.text.SimpleDateFormat simpleDateFormat26 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat27 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime("", simpleDateFormat26, simpleDateFormat27);
    net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime("", simpleDateFormat22, simpleDateFormat27);
    java.text.SimpleDateFormat simpleDateFormat32 = null;
    java.text.SimpleDateFormat simpleDateFormat33 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat32, simpleDateFormat33);
    net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat33);
    net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime("Fri 31-Dec-0001 17:00:00", simpleDateFormat22, simpleDateFormat33);
    dateTime4.setSdf(simpleDateFormat33);
    double double38 = dateTime1.getDeltaYears(dateTime4);
    net.ajaskey.common.DateTime dateTime41 = dateTime1.parse("719,795", "Fri 31-Dec-0001 17:00:00");
    boolean boolean42 = dateTime1.isNull();
    org.junit.Assert.assertNull(simpleDateFormat2);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1972.041095890411d) + "'", double12 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat13);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Wednesday" + "'", str15, "Wednesday");
    org.junit.Assert.assertNotNull(simpleDateFormat19);
    org.junit.Assert.assertNotNull(simpleDateFormat21);
    org.junit.Assert.assertNotNull(simpleDateFormat22);
    org.junit.Assert.assertNotNull(simpleDateFormat26);
    org.junit.Assert.assertNotNull(simpleDateFormat27);
    org.junit.Assert.assertNotNull(simpleDateFormat33);
    org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
    org.junit.Assert.assertNull(dateTime41);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
  }

  @Test
  public void test600() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test600");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    java.text.SimpleDateFormat simpleDateFormat8 = null;
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double12 = dateTime9.getDeltaYears(dateTime11);
    dateTime11.set(0, 12, 0);
    boolean boolean17 = net.ajaskey.common.Utils.sameMonth(dateTime3, dateTime11);
    net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime(100L);
    double double24 = dateTime21.getDeltaYears(dateTime23);
    java.text.SimpleDateFormat simpleDateFormat25 = dateTime21.getSdf();
    net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(100L);
    double double32 = dateTime29.getDeltaYears(dateTime31);
    boolean boolean33 = dateTime31.isWeekday();
    net.ajaskey.common.DateTime dateTime36 = dateTime31.parse("31-Dec-1969", "January");
    net.ajaskey.common.DateTime dateTime37 = net.ajaskey.common.DateTime.copy(dateTime31);
    boolean boolean38 = dateTime21.sameDate(dateTime37);
    net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int41 = dateTime40.getDayOfWeek();
    int int42 = dateTime37.getYears(dateTime40);
    long long43 = dateTime3.getDeltaMilliSeconds(dateTime37);
    net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(100L);
    dateTime45.set((int) (byte) 100, (-1), (int) '#');
    java.text.SimpleDateFormat simpleDateFormat50 = dateTime45.getSdf();
    dateTime3.set(dateTime45);
    int int52 = dateTime3.getYear();
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1972.041095890411d) + "'", double24 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat25);
    org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-1972.041095890411d) + "'", double32 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    org.junit.Assert.assertNull(dateTime36);
    org.junit.Assert.assertNotNull(dateTime37);
    org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    org.junit.Assert.assertTrue("'" + int41 + "' != '" + 4 + "'", int41 == 4);
    org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + long43 + "' != '" + 62190298590281L + "'", long43 == 62190298590281L);
    org.junit.Assert.assertNull(simpleDateFormat50);
    org.junit.Assert.assertTrue("'" + int52 + "' != '" + 100 + "'", int52 == 100);
  }

  @Test
  public void test601() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test601");
    java.util.zip.ZipOutputStream zipOutputStream1 = null;
    // The following exception was thrown during execution in test generation
    try {
      net.ajaskey.common.Utils.writeToZipFile(
          "                                                                                                                                                                                                                                                                                                                                                                           13",
          zipOutputStream1);
      org.junit.Assert.fail(
          "Expected exception of type java.io.FileNotFoundException; message:                                                                                                                                                                                                                                                                                                                                                                            13 (The filename, directory name, or volume label syntax is incorrect)");
    }
    catch (java.io.FileNotFoundException e) {
      // Expected exception.
    }
  }

  @Test
  public void test602() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test602");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    boolean boolean7 = dateTime5.isWeekday();
    java.util.Date date8 = dateTime5.getTime();
    java.lang.String str9 = dateTime5.toString();
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(3, (int) '4', (int) (byte) 0);
    boolean boolean14 = dateTime5.isGreaterThan(dateTime13);
    java.text.SimpleDateFormat simpleDateFormat16 = null;
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double20 = dateTime17.getDeltaYears(dateTime19);
    net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean25 = dateTime19.isEqual(dateTime24);
    java.util.Calendar calendar26 = dateTime19.getCal();
    net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(calendar26);
    net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(calendar26);
    boolean boolean29 = dateTime5.isLessThan(dateTime28);
    java.text.SimpleDateFormat simpleDateFormat31 = null;
    net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat31);
    net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double35 = dateTime32.getDeltaYears(dateTime34);
    boolean boolean36 = dateTime32.isWeekday();
    java.lang.String str37 = dateTime32.getDay();
    java.util.Calendar calendar38 = dateTime32.getCal();
    boolean boolean39 = dateTime5.isLessThan(dateTime32);
    boolean boolean40 = dateTime32.isWeekday();
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertNotNull(date8);
    org.junit.Assert.assertEquals(date8.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "31-Dec-1969" + "'", str9, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertNotNull(calendar26);
    org.junit.Assert.assertEquals(calendar26.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    org.junit.Assert.assertEquals("'" + str37 + "' != '" + "UNKNOWN" + "'", str37, "UNKNOWN");
    org.junit.Assert.assertNull(calendar38);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
  }

  @Test
  public void test603() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test603");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    int int2 = dateTime1.getMs();
    java.text.SimpleDateFormat simpleDateFormat3 = net.ajaskey.common.Utils.sdf;
    dateTime1.setSdf(simpleDateFormat3);
    int int5 = dateTime1.getDayOfWeek();
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
    double double12 = dateTime9.getDeltaYears(dateTime11);
    java.util.Calendar calendar13 = dateTime9.getCal();
    dateTime1.set(calendar13);
    java.text.SimpleDateFormat simpleDateFormat16 = null;
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double20 = dateTime17.getDeltaYears(dateTime19);
    net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean25 = dateTime19.isEqual(dateTime24);
    java.util.Calendar calendar26 = dateTime19.getCal();
    net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(calendar26);
    dateTime1.set(calendar26);
    int int29 = dateTime1.getDayOfYear();
    int int30 = dateTime1.getMinute();
    java.text.SimpleDateFormat simpleDateFormat32 = null;
    net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat32);
    net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double36 = dateTime33.getDeltaYears(dateTime35);
    net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean41 = dateTime35.isEqual(dateTime40);
    java.text.SimpleDateFormat simpleDateFormat43 = null;
    java.text.SimpleDateFormat simpleDateFormat44 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat43, simpleDateFormat44);
    net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime(100L);
    double double52 = dateTime49.getDeltaYears(dateTime51);
    boolean boolean53 = dateTime51.isWeekday();
    java.util.Date date54 = dateTime51.getTime();
    java.lang.String str55 = dateTime51.toString();
    net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime(100L);
    int int58 = dateTime57.getMs();
    net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime(100L);
    double double65 = dateTime62.getDeltaYears(dateTime64);
    java.text.SimpleDateFormat simpleDateFormat66 = dateTime62.getSdf();
    boolean boolean67 = dateTime57.isLessThanOrEqual(dateTime62);
    boolean boolean68 = dateTime51.isLessThan(dateTime62);
    java.lang.String str69 = dateTime51.toString();
    long long70 = dateTime45.getDeltaMilliSeconds(dateTime51);
    net.ajaskey.common.DateTime dateTime74 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime76 = new net.ajaskey.common.DateTime(100L);
    double double77 = dateTime74.getDeltaYears(dateTime76);
    boolean boolean78 = dateTime76.isWeekday();
    java.util.Date date79 = dateTime76.getTime();
    int int80 = dateTime76.getMinute();
    boolean boolean81 = dateTime45.sameDate(dateTime76);
    int int82 = dateTime35.getYears(dateTime76);
    int int83 = dateTime76.getDayOfWeek();
    java.lang.String str84 = dateTime76.toString();
    net.ajaskey.common.DateTime dateTime85 = net.ajaskey.common.DateTime.copy(dateTime76);
    long long86 = dateTime1.getDeltaDays(dateTime76);
    java.text.SimpleDateFormat simpleDateFormat87 = dateTime1.getSdf();
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat3);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 4 + "'", int5 == 4);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1972.041095890411d) + "'", double12 == (-1972.041095890411d));
    org.junit.Assert.assertNotNull(calendar13);
// flaky:         org.junit.Assert.assertEquals(calendar13.toString(), "java.util.GregorianCalendar[time=-62190298590133,areFieldsSet=true,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=3,SECOND=29,MILLISECOND=867,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertNotNull(calendar26);
    org.junit.Assert.assertEquals(calendar26.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + int29 + "' != '" + 365 + "'", int29 == 365);
    org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
    org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    org.junit.Assert.assertNotNull(simpleDateFormat44);
    org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-1972.041095890411d) + "'", double52 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    org.junit.Assert.assertNotNull(date54);
    org.junit.Assert.assertEquals(date54.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str55 + "' != '" + "31-Dec-1969" + "'", str55, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
    org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-1972.041095890411d) + "'", double65 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat66);
    org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    org.junit.Assert.assertEquals("'" + str69 + "' != '" + "31-Dec-1969" + "'", str69, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + long70 + "' != '" + 0L + "'", long70 == 0L);
    org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-1972.041095890411d) + "'", double77 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
    org.junit.Assert.assertNotNull(date79);
    org.junit.Assert.assertEquals(date79.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
    org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
    org.junit.Assert.assertTrue("'" + int83 + "' != '" + 4 + "'", int83 == 4);
    org.junit.Assert.assertEquals("'" + str84 + "' != '" + "31-Dec-1969" + "'", str84, "31-Dec-1969");
    org.junit.Assert.assertNotNull(dateTime85);
    org.junit.Assert.assertTrue("'" + long86 + "' != '" + 0L + "'", long86 == 0L);
    org.junit.Assert.assertNotNull(simpleDateFormat87);
  }

  @Test
  public void test604() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test604");
    java.util.List<java.lang.String> strList0 = null;
    net.ajaskey.common.TextUtils.print(strList0);
  }

  @Test
  public void test605() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test605");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    int int2 = dateTime1.getMs();
    net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
    double double9 = dateTime6.getDeltaYears(dateTime8);
    java.text.SimpleDateFormat simpleDateFormat10 = dateTime6.getSdf();
    boolean boolean11 = dateTime1.isLessThanOrEqual(dateTime6);
    java.lang.String str12 = dateTime1.getDay();
    java.text.SimpleDateFormat simpleDateFormat16 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat18 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat19 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("", simpleDateFormat18, simpleDateFormat19);
    net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat16,
        simpleDateFormat19);
    java.text.SimpleDateFormat simpleDateFormat23 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat24 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("", simpleDateFormat23, simpleDateFormat24);
    net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime("", simpleDateFormat19, simpleDateFormat24);
    java.text.SimpleDateFormat simpleDateFormat29 = null;
    java.text.SimpleDateFormat simpleDateFormat30 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat29, simpleDateFormat30);
    net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat30);
    net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime("Fri 31-Dec-0001 17:00:00", simpleDateFormat19, simpleDateFormat30);
    dateTime1.setSdf(simpleDateFormat30);
    java.text.SimpleDateFormat simpleDateFormat39 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat41 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat42 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime("", simpleDateFormat41, simpleDateFormat42);
    net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat39,
        simpleDateFormat42);
    java.text.SimpleDateFormat simpleDateFormat46 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat47 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime("", simpleDateFormat46, simpleDateFormat47);
    net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime("", simpleDateFormat42, simpleDateFormat47);
    java.text.SimpleDateFormat simpleDateFormat52 = null;
    java.text.SimpleDateFormat simpleDateFormat53 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat52, simpleDateFormat53);
    net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat53);
    net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime("Fri 31-Dec-0001 17:00:00", simpleDateFormat42, simpleDateFormat53);
    net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime("      0.00", simpleDateFormat42);
    dateTime1.setSdf(simpleDateFormat42);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Wednesday" + "'", str12, "Wednesday");
    org.junit.Assert.assertNotNull(simpleDateFormat16);
    org.junit.Assert.assertNotNull(simpleDateFormat18);
    org.junit.Assert.assertNotNull(simpleDateFormat19);
    org.junit.Assert.assertNotNull(simpleDateFormat23);
    org.junit.Assert.assertNotNull(simpleDateFormat24);
    org.junit.Assert.assertNotNull(simpleDateFormat30);
    org.junit.Assert.assertNotNull(simpleDateFormat39);
    org.junit.Assert.assertNotNull(simpleDateFormat41);
    org.junit.Assert.assertNotNull(simpleDateFormat42);
    org.junit.Assert.assertNotNull(simpleDateFormat46);
    org.junit.Assert.assertNotNull(simpleDateFormat47);
    org.junit.Assert.assertNotNull(simpleDateFormat53);
  }

  @Test
  public void test606() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test606");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(10, (int) '4', 2);
    java.lang.String str4 = dateTime3.getDay();
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime(100L);
    double double11 = dateTime8.getDeltaYears(dateTime10);
    boolean boolean12 = dateTime10.isWeekday();
    java.util.Date date13 = dateTime10.getTime();
    int int14 = dateTime10.getMinute();
    java.text.SimpleDateFormat simpleDateFormat16 = null;
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double20 = dateTime17.getDeltaYears(dateTime19);
    net.ajaskey.common.DateTime dateTime21 = net.ajaskey.common.DateTime.copy(dateTime17);
    boolean boolean22 = net.ajaskey.common.Utils.sameDate(dateTime10, dateTime17);
    java.text.SimpleDateFormat simpleDateFormat25 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat27 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat28 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime("", simpleDateFormat27, simpleDateFormat28);
    net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat25,
        simpleDateFormat28);
    java.text.SimpleDateFormat simpleDateFormat32 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat33 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime("", simpleDateFormat32, simpleDateFormat33);
    net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("", simpleDateFormat28, simpleDateFormat33);
    dateTime10.setSdf(simpleDateFormat28);
    java.text.SimpleDateFormat simpleDateFormat40 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat42 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat43 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime("", simpleDateFormat42, simpleDateFormat43);
    net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat40,
        simpleDateFormat43);
    java.text.SimpleDateFormat simpleDateFormat47 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat48 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime("", simpleDateFormat47, simpleDateFormat48);
    net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime("", simpleDateFormat43, simpleDateFormat48);
    java.text.SimpleDateFormat simpleDateFormat53 = null;
    java.text.SimpleDateFormat simpleDateFormat54 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat53, simpleDateFormat54);
    net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat54);
    net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime("Fri 31-Dec-0001 17:00:00", simpleDateFormat43, simpleDateFormat54);
    net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int60 = dateTime59.getHour();
    int int61 = dateTime59.getDayOfMonth();
    int int62 = dateTime59.getYear();
    net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime(dateTime59);
    int int64 = dateTime57.getYears(dateTime63);
    boolean boolean65 = dateTime10.isLessThan(dateTime63);
    net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime(100L);
    int int68 = dateTime67.getMs();
    long long69 = dateTime63.getDeltaDays(dateTime67);
    boolean boolean70 = dateTime3.isGreaterThan(dateTime67);
    net.ajaskey.common.DateTime dateTime72 = new net.ajaskey.common.DateTime(100L);
    int int73 = dateTime72.getMs();
    java.text.SimpleDateFormat simpleDateFormat74 = net.ajaskey.common.Utils.sdf;
    dateTime72.setSdf(simpleDateFormat74);
    java.lang.String str76 = dateTime72.toFullString();
    net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime(dateTime72);
    boolean boolean78 = dateTime67.isLessThanOrEqual(dateTime72);
    boolean boolean79 = dateTime72.isWeekday();
    int int80 = dateTime72.getDayOfMonth();
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Wednesday" + "'", str4, "Wednesday");
    org.junit.Assert.assertTrue("'" + double11 + "' != '" + (-1972.041095890411d) + "'", double11 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    org.junit.Assert.assertNotNull(date13);
    org.junit.Assert.assertEquals(date13.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
    org.junit.Assert.assertNull(dateTime21);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    org.junit.Assert.assertNotNull(simpleDateFormat25);
    org.junit.Assert.assertNotNull(simpleDateFormat27);
    org.junit.Assert.assertNotNull(simpleDateFormat28);
    org.junit.Assert.assertNotNull(simpleDateFormat32);
    org.junit.Assert.assertNotNull(simpleDateFormat33);
    org.junit.Assert.assertNotNull(simpleDateFormat40);
    org.junit.Assert.assertNotNull(simpleDateFormat42);
    org.junit.Assert.assertNotNull(simpleDateFormat43);
    org.junit.Assert.assertNotNull(simpleDateFormat47);
    org.junit.Assert.assertNotNull(simpleDateFormat48);
    org.junit.Assert.assertNotNull(simpleDateFormat54);
    org.junit.Assert.assertTrue("'" + int60 + "' != '" + 5 + "'", int60 == 5);
    org.junit.Assert.assertTrue("'" + int61 + "' != '" + 31 + "'", int61 == 31);
    org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1969 + "'", int62 == 1969);
    org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
    org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
    org.junit.Assert.assertTrue("'" + long69 + "' != '" + 0L + "'", long69 == 0L);
    org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    org.junit.Assert.assertTrue("'" + int73 + "' != '" + 100 + "'", int73 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat74);
    org.junit.Assert.assertEquals("'" + str76 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str76, "Wed 31-Dec-1969 17:00:00");
    org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
    org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    org.junit.Assert.assertTrue("'" + int80 + "' != '" + 31 + "'", int80 == 31);
  }

  @Test
  public void test607() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test607");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    boolean boolean7 = dateTime5.isWeekday();
    net.ajaskey.common.DateTime dateTime10 = dateTime5.parse("31-Dec-1969", "January");
    int int11 = dateTime5.getMs();
    int int12 = dateTime5.getYear();
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertNull(dateTime10);
    org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
    org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1969 + "'", int12 == 1969);
  }

  @Test
  public void test608() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test608");
    java.text.SimpleDateFormat simpleDateFormat1 = null;
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
    net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double5 = dateTime2.getDeltaYears(dateTime4);
    boolean boolean6 = dateTime2.isWeekday();
    java.lang.String str7 = dateTime2.getDay();
    java.util.Calendar calendar8 = dateTime2.getCal();
    dateTime2.setFirstWorkDay();
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
    int int12 = dateTime11.getMs();
    net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(100L);
    double double19 = dateTime16.getDeltaYears(dateTime18);
    java.text.SimpleDateFormat simpleDateFormat20 = dateTime16.getSdf();
    boolean boolean21 = dateTime11.isLessThanOrEqual(dateTime16);
    dateTime16.setFirstWorkDay();
    java.lang.String str23 = dateTime16.toFullString();
    net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(100L);
    double double30 = dateTime27.getDeltaYears(dateTime29);
    java.text.SimpleDateFormat simpleDateFormat32 = null;
    net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat32);
    net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double36 = dateTime33.getDeltaYears(dateTime35);
    boolean boolean37 = dateTime33.isWeekday();
    boolean boolean38 = dateTime27.sameDate(dateTime33);
    net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime(0L);
    boolean boolean41 = dateTime33.isGreaterThanOrEqual(dateTime40);
    net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime(100L);
    dateTime43.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str48 = dateTime43.getMonth();
    java.text.SimpleDateFormat simpleDateFormat50 = null;
    net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat50);
    net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double54 = dateTime51.getDeltaYears(dateTime53);
    boolean boolean55 = dateTime43.isLessThan(dateTime51);
    net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime(100L);
    double double62 = dateTime59.getDeltaYears(dateTime61);
    net.ajaskey.common.DateTime dateTime63 = null;
    long long64 = dateTime59.getDeltaDays(dateTime63);
    boolean boolean65 = dateTime51.isLessThanOrEqual(dateTime59);
    java.lang.String str66 = dateTime51.format();
    boolean boolean67 = dateTime33.isGreaterThan(dateTime51);
    boolean boolean68 = net.ajaskey.common.Utils.sameMonth(dateTime16, dateTime33);
    java.text.SimpleDateFormat simpleDateFormat72 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat74 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat75 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime76 = new net.ajaskey.common.DateTime("", simpleDateFormat74, simpleDateFormat75);
    net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat72,
        simpleDateFormat75);
    net.ajaskey.common.DateTime dateTime78 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat72);
    net.ajaskey.common.DateTime dateTime79 = new net.ajaskey.common.DateTime("December", simpleDateFormat72);
    dateTime33.setSdf(simpleDateFormat72);
    boolean boolean81 = dateTime2.isLessThanOrEqual(dateTime33);
    int int82 = dateTime33.getDayOfYear();
    org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UNKNOWN" + "'", str7, "UNKNOWN");
    org.junit.Assert.assertNull(calendar8);
    org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
    org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-1972.041095890411d) + "'", double19 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat20);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Thu 10-Apr-0002 14:03:29" + "'", str23, "Thu 10-Apr-0002 14:03:29");
    org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-1972.041095890411d) + "'", double30 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    org.junit.Assert.assertEquals("'" + str48 + "' != '" + "January" + "'", str48, "January");
    org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-1972.041095890411d) + "'", double62 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + long64 + "' != '" + 0L + "'", long64 == 0L);
    org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    org.junit.Assert.assertEquals("'" + str66 + "' != '" + "BAD-DATE-FORMAT" + "'", str66, "BAD-DATE-FORMAT");
    org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    org.junit.Assert.assertNotNull(simpleDateFormat72);
    org.junit.Assert.assertNotNull(simpleDateFormat74);
    org.junit.Assert.assertNotNull(simpleDateFormat75);
    org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
  }

  @Test
  public void test609() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test609");
    java.lang.String str2 = net.ajaskey.common.Utils.fmt((double) 10L, 0);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Invalid fmt" + "'", str2, "Invalid fmt");
  }

  @Test
  public void test610() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test610");
    java.lang.String str2 = net.ajaskey.common.Utils.fmt((double) (-1L), 25);
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Invalid fmt" + "'", str2, "Invalid fmt");
  }

  @Test
  public void test611() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test611");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    dateTime1.set((int) (byte) 100, (-1), (int) '#');
    java.util.Calendar calendar6 = dateTime1.getCal();
    int int7 = dateTime1.getMinute();
    org.junit.Assert.assertNotNull(calendar6);
    org.junit.Assert.assertEquals(calendar6.toString(),
        "java.util.GregorianCalendar[time=-59011286399900,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=100,MONTH=0,WEEK_OF_YEAR=1,WEEK_OF_MONTH=1,DAY_OF_MONTH=4,DAY_OF_YEAR=4,DAY_OF_WEEK=7,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
  }

  @Test
  public void test612() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test612");
    java.text.SimpleDateFormat simpleDateFormat1 = null;
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
    net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double5 = dateTime2.getDeltaYears(dateTime4);
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean10 = dateTime4.isEqual(dateTime9);
    java.text.SimpleDateFormat simpleDateFormat12 = null;
    java.text.SimpleDateFormat simpleDateFormat13 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat12, simpleDateFormat13);
    net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime(100L);
    double double21 = dateTime18.getDeltaYears(dateTime20);
    boolean boolean22 = dateTime20.isWeekday();
    java.util.Date date23 = dateTime20.getTime();
    java.lang.String str24 = dateTime20.toString();
    net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(100L);
    int int27 = dateTime26.getMs();
    net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime(100L);
    double double34 = dateTime31.getDeltaYears(dateTime33);
    java.text.SimpleDateFormat simpleDateFormat35 = dateTime31.getSdf();
    boolean boolean36 = dateTime26.isLessThanOrEqual(dateTime31);
    boolean boolean37 = dateTime20.isLessThan(dateTime31);
    java.lang.String str38 = dateTime20.toString();
    long long39 = dateTime14.getDeltaMilliSeconds(dateTime20);
    net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(100L);
    double double46 = dateTime43.getDeltaYears(dateTime45);
    boolean boolean47 = dateTime45.isWeekday();
    java.util.Date date48 = dateTime45.getTime();
    int int49 = dateTime45.getMinute();
    boolean boolean50 = dateTime14.sameDate(dateTime45);
    int int51 = dateTime4.getYears(dateTime45);
    int int52 = dateTime45.getDayOfWeek();
    java.lang.String str53 = dateTime45.toString();
    net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime((long) 2);
    java.text.SimpleDateFormat simpleDateFormat56 = dateTime55.getSdf();
    net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    java.text.SimpleDateFormat simpleDateFormat62 = null;
    net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat62);
    net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double66 = dateTime63.getDeltaYears(dateTime65);
    boolean boolean67 = dateTime60.isLessThan(dateTime65);
    int int68 = dateTime60.getHour();
    long long69 = dateTime55.getDeltaDays(dateTime60);
    java.lang.String str70 = dateTime55.toString();
    int int71 = dateTime55.getYear();
    boolean boolean72 = dateTime45.isLessThanOrEqual(dateTime55);
    java.text.SimpleDateFormat simpleDateFormat74 = null;
    net.ajaskey.common.DateTime dateTime75 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat74);
    net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double78 = dateTime75.getDeltaYears(dateTime77);
    net.ajaskey.common.DateTime dateTime82 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean83 = dateTime77.isEqual(dateTime82);
    int int84 = dateTime77.getDayOfWeek();
    java.lang.String str85 = dateTime77.format();
    boolean boolean86 = dateTime55.isGreaterThan(dateTime77);
    java.lang.String str87 = dateTime55.getMonth();
    org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertNotNull(simpleDateFormat13);
    org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-1972.041095890411d) + "'", double21 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    org.junit.Assert.assertNotNull(date23);
    org.junit.Assert.assertEquals(date23.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str24 + "' != '" + "31-Dec-1969" + "'", str24, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
    org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-1972.041095890411d) + "'", double34 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat35);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    org.junit.Assert.assertEquals("'" + str38 + "' != '" + "31-Dec-1969" + "'", str38, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
    org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-1972.041095890411d) + "'", double46 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    org.junit.Assert.assertNotNull(date48);
    org.junit.Assert.assertEquals(date48.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
    org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
    org.junit.Assert.assertTrue("'" + int52 + "' != '" + 4 + "'", int52 == 4);
    org.junit.Assert.assertEquals("'" + str53 + "' != '" + "31-Dec-1969" + "'", str53, "31-Dec-1969");
    org.junit.Assert.assertNull(simpleDateFormat56);
    org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
    org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2 + "'", int68 == 2);
    org.junit.Assert.assertTrue("'" + long69 + "' != '" + 719795L + "'", long69 == 719795L);
    org.junit.Assert.assertEquals("'" + str70 + "' != '" + "31-Dec-1969" + "'", str70, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1969 + "'", int71 == 1969);
    org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    org.junit.Assert.assertTrue("'" + int84 + "' != '" + 4 + "'", int84 == 4);
    org.junit.Assert.assertEquals("'" + str85 + "' != '" + "BAD-DATE-FORMAT" + "'", str85, "BAD-DATE-FORMAT");
    org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    org.junit.Assert.assertEquals("'" + str87 + "' != '" + "December" + "'", str87, "December");
  }

  @Test
  public void test613() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test613");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(100L);
    int int4 = dateTime3.getMs();
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime(100L);
    double double11 = dateTime8.getDeltaYears(dateTime10);
    java.text.SimpleDateFormat simpleDateFormat12 = dateTime8.getSdf();
    boolean boolean13 = dateTime3.isLessThanOrEqual(dateTime8);
    java.lang.String str14 = dateTime3.getDay();
    boolean boolean15 = dateTime1.isEqual(dateTime3);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
    org.junit.Assert.assertTrue("'" + double11 + "' != '" + (-1972.041095890411d) + "'", double11 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat12);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Wednesday" + "'", str14, "Wednesday");
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
  }

  @Test
  public void test614() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test614");
    java.text.SimpleDateFormat simpleDateFormat1 = null;
    java.text.SimpleDateFormat simpleDateFormat2 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat1, simpleDateFormat2);
    java.lang.String str4 = dateTime3.getDay();
    java.lang.String str5 = dateTime3.getMonth();
    boolean boolean6 = dateTime3.isNull();
    net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime();
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(100L);
    dateTime9.set((int) (byte) 100, (-1), (int) '#');
    java.text.SimpleDateFormat simpleDateFormat14 = dateTime9.getSdf();
    boolean boolean15 = dateTime7.isEqual(dateTime9);
    net.ajaskey.common.DateTime dateTime16 = net.ajaskey.common.DateTime.copy(dateTime7);
    java.util.Calendar calendar17 = dateTime7.getCal();
    dateTime3.set(calendar17);
    org.junit.Assert.assertNotNull(simpleDateFormat2);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UNKNOWN" + "'", str4, "UNKNOWN");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UNKNOWN" + "'", str5, "UNKNOWN");
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    org.junit.Assert.assertNull(simpleDateFormat14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertNotNull(dateTime16);
    org.junit.Assert.assertNotNull(calendar17);
// flaky:         org.junit.Assert.assertEquals(calendar17.toString(), "java.util.GregorianCalendar[time=1593115410090,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2020,MONTH=5,WEEK_OF_YEAR=26,WEEK_OF_MONTH=4,DAY_OF_MONTH=25,DAY_OF_YEAR=177,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=3,SECOND=30,MILLISECOND=90,ZONE_OFFSET=-25200000,DST_OFFSET=3600000]");
  }

  @Test
  public void test615() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test615");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(7, (int) (byte) 1, 11);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    int int6 = dateTime5.getMs();
    net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(100L);
    double double13 = dateTime10.getDeltaYears(dateTime12);
    java.text.SimpleDateFormat simpleDateFormat14 = dateTime10.getSdf();
    boolean boolean15 = dateTime5.isLessThanOrEqual(dateTime10);
    java.util.Calendar calendar16 = dateTime5.getCal();
    dateTime3.set(calendar16);
    boolean boolean18 = dateTime3.isWeekday();
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
    org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-1972.041095890411d) + "'", double13 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertNotNull(calendar16);
    org.junit.Assert.assertEquals(calendar16.toString(),
        "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
  }

  @Test
  public void test616() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test616");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((-1968), (int) '#', 11);
  }

  @Test
  public void test617() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test617");
    java.util.zip.ZipOutputStream zipOutputStream1 = null;
    // The following exception was thrown during execution in test generation
    try {
      net.ajaskey.common.Utils.writeToZipFile("        1.00", zipOutputStream1);
      org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:         1.00 (Access is denied)");
    }
    catch (java.io.FileNotFoundException e) {
      // Expected exception.
    }
  }

  @Test
  public void test618() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test618");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime();
    java.text.SimpleDateFormat simpleDateFormat3 = null;
    net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat3);
    net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double7 = dateTime4.getDeltaYears(dateTime6);
    int int8 = dateTime6.getDayOfYear();
    boolean boolean9 = dateTime1.isLessThan(dateTime6);
    java.text.SimpleDateFormat simpleDateFormat13 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat15 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat16 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("", simpleDateFormat15, simpleDateFormat16);
    net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat13,
        simpleDateFormat16);
    java.text.SimpleDateFormat simpleDateFormat20 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat21 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime("", simpleDateFormat20, simpleDateFormat21);
    net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime("", simpleDateFormat16, simpleDateFormat21);
    java.text.SimpleDateFormat simpleDateFormat26 = null;
    java.text.SimpleDateFormat simpleDateFormat27 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat26, simpleDateFormat27);
    net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat27);
    net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime("Fri 31-Dec-0001 17:00:00", simpleDateFormat16, simpleDateFormat27);
    net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime((long) 2);
    java.text.SimpleDateFormat simpleDateFormat33 = dateTime32.getSdf();
    net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime(100L);
    int int36 = dateTime35.getMs();
    net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime(100L);
    double double43 = dateTime40.getDeltaYears(dateTime42);
    java.text.SimpleDateFormat simpleDateFormat44 = dateTime40.getSdf();
    boolean boolean45 = dateTime35.isLessThanOrEqual(dateTime40);
    java.lang.String str46 = dateTime35.getDay();
    java.text.SimpleDateFormat simpleDateFormat50 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat52 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat53 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime("", simpleDateFormat52, simpleDateFormat53);
    net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat50,
        simpleDateFormat53);
    java.text.SimpleDateFormat simpleDateFormat57 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat58 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime("", simpleDateFormat57, simpleDateFormat58);
    net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime("", simpleDateFormat53, simpleDateFormat58);
    java.text.SimpleDateFormat simpleDateFormat63 = null;
    java.text.SimpleDateFormat simpleDateFormat64 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat63, simpleDateFormat64);
    net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat64);
    net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime("Fri 31-Dec-0001 17:00:00", simpleDateFormat53, simpleDateFormat64);
    dateTime35.setSdf(simpleDateFormat64);
    double double69 = dateTime32.getDeltaYears(dateTime35);
    boolean boolean70 = dateTime30.isLessThanOrEqual(dateTime35);
    long long71 = dateTime6.getDeltaDays(dateTime35);
    java.text.SimpleDateFormat simpleDateFormat74 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat76 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat77 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime78 = new net.ajaskey.common.DateTime("", simpleDateFormat76, simpleDateFormat77);
    net.ajaskey.common.DateTime dateTime79 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat74,
        simpleDateFormat77);
    java.text.SimpleDateFormat simpleDateFormat80 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime81 = new net.ajaskey.common.DateTime("", simpleDateFormat77, simpleDateFormat80);
    dateTime6.setSdf(simpleDateFormat77);
    net.ajaskey.common.DateTime dateTime83 = new net.ajaskey.common.DateTime("10-Apr-0002", simpleDateFormat77);
    org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 365 + "'", int8 == 365);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertNotNull(simpleDateFormat13);
    org.junit.Assert.assertNotNull(simpleDateFormat15);
    org.junit.Assert.assertNotNull(simpleDateFormat16);
    org.junit.Assert.assertNotNull(simpleDateFormat20);
    org.junit.Assert.assertNotNull(simpleDateFormat21);
    org.junit.Assert.assertNotNull(simpleDateFormat27);
    org.junit.Assert.assertNull(simpleDateFormat33);
    org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
    org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-1972.041095890411d) + "'", double43 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat44);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Wednesday" + "'", str46, "Wednesday");
    org.junit.Assert.assertNotNull(simpleDateFormat50);
    org.junit.Assert.assertNotNull(simpleDateFormat52);
    org.junit.Assert.assertNotNull(simpleDateFormat53);
    org.junit.Assert.assertNotNull(simpleDateFormat57);
    org.junit.Assert.assertNotNull(simpleDateFormat58);
    org.junit.Assert.assertNotNull(simpleDateFormat64);
    org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    org.junit.Assert.assertTrue("'" + long71 + "' != '" + 0L + "'", long71 == 0L);
    org.junit.Assert.assertNotNull(simpleDateFormat74);
    org.junit.Assert.assertNotNull(simpleDateFormat76);
    org.junit.Assert.assertNotNull(simpleDateFormat77);
    org.junit.Assert.assertNotNull(simpleDateFormat80);
  }

  @Test
  public void test619() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test619");
    java.text.SimpleDateFormat simpleDateFormat1 = null;
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
    net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double5 = dateTime2.getDeltaYears(dateTime4);
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean10 = dateTime4.isEqual(dateTime9);
    java.util.Calendar calendar11 = dateTime4.getCal();
    java.lang.String str12 = dateTime4.toFullString();
    java.lang.String str14 = dateTime4.format("");
    java.lang.String str15 = dateTime4.toString();
    org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertNotNull(calendar11);
    org.junit.Assert.assertEquals(calendar11.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str12, "Wed 31-Dec-1969 17:00:00");
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "31-Dec-1969" + "'", str15, "31-Dec-1969");
  }

  @Test
  public void test620() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test620");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    java.text.SimpleDateFormat simpleDateFormat8 = null;
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double12 = dateTime9.getDeltaYears(dateTime11);
    boolean boolean13 = dateTime9.isWeekday();
    boolean boolean14 = dateTime3.sameDate(dateTime9);
    net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(100L);
    int int17 = dateTime16.getMs();
    java.text.SimpleDateFormat simpleDateFormat18 = net.ajaskey.common.Utils.sdf;
    dateTime16.setSdf(simpleDateFormat18);
    long long20 = dateTime3.getDeltaDays(dateTime16);
    java.text.SimpleDateFormat simpleDateFormat21 = dateTime16.getSdf();
    net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime(100L);
    int int24 = dateTime23.getMs();
    net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime(100L);
    double double31 = dateTime28.getDeltaYears(dateTime30);
    java.text.SimpleDateFormat simpleDateFormat32 = dateTime28.getSdf();
    boolean boolean33 = dateTime23.isLessThanOrEqual(dateTime28);
    java.lang.String str34 = dateTime23.getDay();
    boolean boolean35 = dateTime16.isEqual(dateTime23);
    java.lang.String str37 = dateTime23.format("         52");
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat18);
    org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-719795L) + "'", long20 == (-719795L));
    org.junit.Assert.assertNotNull(simpleDateFormat21);
    org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
    org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-1972.041095890411d) + "'", double31 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat32);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Wednesday" + "'", str34, "Wednesday");
    org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    org.junit.Assert.assertEquals("'" + str37 + "' != '" + "         52" + "'", str37, "         52");
  }

  @Test
  public void test621() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test621");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int2 = dateTime1.getHour();
    int int3 = dateTime1.getDayOfMonth();
    int int4 = dateTime1.getYear();
    java.util.Calendar calendar5 = dateTime1.getCal();
    int int6 = dateTime1.getYear();
    java.util.Date date7 = dateTime1.getTime();
    java.text.SimpleDateFormat simpleDateFormat9 = null;
    java.text.SimpleDateFormat simpleDateFormat10 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat9, simpleDateFormat10);
    java.lang.String str12 = dateTime11.getDay();
    long long13 = dateTime1.getDeltaDays(dateTime11);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 5 + "'", int2 == 5);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 31 + "'", int3 == 31);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1969 + "'", int4 == 1969);
    org.junit.Assert.assertNotNull(calendar5);
    org.junit.Assert.assertEquals(calendar5.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1969 + "'", int6 == 1969);
    org.junit.Assert.assertNotNull(date7);
    org.junit.Assert.assertEquals(date7.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertNotNull(simpleDateFormat10);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UNKNOWN" + "'", str12, "UNKNOWN");
    org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
  }

  @Test
  public void test622() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test622");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(10, 0, 0);
  }

  @Test
  public void test623() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test623");
    java.text.SimpleDateFormat simpleDateFormat2 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat5 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("", simpleDateFormat4, simpleDateFormat5);
    net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat2, simpleDateFormat5);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
    int int12 = dateTime11.getMs();
    java.text.SimpleDateFormat simpleDateFormat13 = net.ajaskey.common.Utils.sdf;
    dateTime11.setSdf(simpleDateFormat13);
    int int15 = dateTime11.getDayOfWeek();
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(100L);
    double double22 = dateTime19.getDeltaYears(dateTime21);
    java.util.Calendar calendar23 = dateTime19.getCal();
    dateTime11.set(calendar23);
    java.text.SimpleDateFormat simpleDateFormat26 = null;
    net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat26);
    net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double30 = dateTime27.getDeltaYears(dateTime29);
    net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean35 = dateTime29.isEqual(dateTime34);
    java.util.Calendar calendar36 = dateTime29.getCal();
    net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(calendar36);
    dateTime11.set(calendar36);
    java.text.SimpleDateFormat simpleDateFormat41 = null;
    java.text.SimpleDateFormat simpleDateFormat42 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat41, simpleDateFormat42);
    net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat42);
    dateTime11.setSdf(simpleDateFormat42);
    java.text.SimpleDateFormat simpleDateFormat49 = null;
    java.text.SimpleDateFormat simpleDateFormat50 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat49, simpleDateFormat50);
    net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat50);
    net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime("         14", simpleDateFormat50);
    net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime(
        "JanuaryThu 10-Apr-0002 14:03:11Thu 10-Apr-0002 14:03:11                                                                                               52.00Thu 10-Apr-0002 14:03:11hi!Thu 10-Apr-0002 14:03:11",
        simpleDateFormat42, simpleDateFormat50);
    net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 14:03:14", simpleDateFormat50);
    net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime("Invalid Time", simpleDateFormat2, simpleDateFormat50);
    net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime(100L);
    boolean boolean59 = dateTime56.sameDate(dateTime58);
    org.junit.Assert.assertNotNull(simpleDateFormat2);
    org.junit.Assert.assertNotNull(simpleDateFormat4);
    org.junit.Assert.assertNotNull(simpleDateFormat5);
    org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat13);
    org.junit.Assert.assertTrue("'" + int15 + "' != '" + 4 + "'", int15 == 4);
    org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-1972.041095890411d) + "'", double22 == (-1972.041095890411d));
    org.junit.Assert.assertNotNull(calendar23);
// flaky:         org.junit.Assert.assertEquals(calendar23.toString(), "java.util.GregorianCalendar[time=-62190298589641,areFieldsSet=true,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=3,SECOND=30,MILLISECOND=359,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    org.junit.Assert.assertNotNull(calendar36);
    org.junit.Assert.assertEquals(calendar36.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertNotNull(simpleDateFormat42);
    org.junit.Assert.assertNotNull(simpleDateFormat50);
    org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
  }

  @Test
  public void test624() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test624");
    java.util.zip.ZipOutputStream zipOutputStream1 = null;
    // The following exception was thrown during execution in test generation
    try {
      net.ajaskey.common.Utils.writeToZipFile("365.00", zipOutputStream1);
      org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: 365.00 (Access is denied)");
    }
    catch (java.io.FileNotFoundException e) {
      // Expected exception.
    }
  }

  @Test
  public void test625() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test625");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    int int2 = dateTime1.getMs();
    java.text.SimpleDateFormat simpleDateFormat3 = net.ajaskey.common.Utils.sdf;
    dateTime1.setSdf(simpleDateFormat3);
    int int5 = dateTime1.getDayOfWeek();
    net.ajaskey.common.DateTime dateTime6 = net.ajaskey.common.DateTime.copy(dateTime1);
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
    int int9 = dateTime8.getMs();
    java.text.SimpleDateFormat simpleDateFormat10 = net.ajaskey.common.Utils.sdf;
    dateTime8.setSdf(simpleDateFormat10);
    java.lang.String str12 = dateTime8.toFullString();
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(dateTime8);
    int int14 = dateTime8.getHour();
    boolean boolean15 = dateTime6.isGreaterThan(dateTime8);
    java.lang.String str16 = dateTime6.format();
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat3);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 4 + "'", int5 == 4);
    org.junit.Assert.assertNotNull(dateTime6);
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat10);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str12, "Wed 31-Dec-1969 17:00:00");
    org.junit.Assert.assertTrue("'" + int14 + "' != '" + 5 + "'", int14 == 5);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "31-Dec-1969" + "'", str16, "31-Dec-1969");
  }

  @Test
  public void test626() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test626");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    boolean boolean7 = dateTime5.isWeekday();
    net.ajaskey.common.DateTime dateTime10 = dateTime5.parse("31-Dec-1969", "January");
    net.ajaskey.common.DateTime dateTime11 = net.ajaskey.common.DateTime.copy(dateTime5);
    int int12 = dateTime11.getYear();
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertNull(dateTime10);
    org.junit.Assert.assertNotNull(dateTime11);
    org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1969 + "'", int12 == 1969);
  }

  @Test
  public void test627() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test627");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    java.text.SimpleDateFormat simpleDateFormat8 = null;
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double12 = dateTime9.getDeltaYears(dateTime11);
    boolean boolean13 = dateTime9.isWeekday();
    boolean boolean14 = dateTime3.sameDate(dateTime9);
    java.lang.String str15 = dateTime9.format();
    java.lang.String str16 = dateTime9.toString();
    java.text.SimpleDateFormat simpleDateFormat18 = null;
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat18);
    net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double22 = dateTime19.getDeltaYears(dateTime21);
    boolean boolean23 = dateTime19.isWeekday();
    net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime(100L);
    int int26 = dateTime25.getMs();
    java.lang.String str27 = dateTime25.toString();
    int int28 = dateTime25.getMs();
    java.util.Calendar calendar29 = dateTime25.getCal();
    dateTime19.set(calendar29);
    java.text.SimpleDateFormat simpleDateFormat31 = dateTime19.getSdf();
    boolean boolean32 = dateTime19.isWeekday();
    boolean boolean33 = net.ajaskey.common.Utils.sameMonth(dateTime9, dateTime19);
    java.lang.String str34 = dateTime9.getMonth();
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "BAD-DATE-FORMAT" + "'", str15, "BAD-DATE-FORMAT");
    org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "31-Dec-1969" + "'", str27, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
    org.junit.Assert.assertNotNull(calendar29);
    org.junit.Assert.assertEquals(calendar29.toString(),
        "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertNull(simpleDateFormat31);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    org.junit.Assert.assertEquals("'" + str34 + "' != '" + "UNKNOWN" + "'", str34, "UNKNOWN");
  }

  @Test
  public void test628() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test628");
    java.text.SimpleDateFormat simpleDateFormat1 = null;
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
    net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double5 = dateTime2.getDeltaYears(dateTime4);
    boolean boolean6 = dateTime2.isWeekday();
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
    int int9 = dateTime8.getMs();
    java.lang.String str10 = dateTime8.toString();
    int int11 = dateTime8.getMs();
    java.util.Calendar calendar12 = dateTime8.getCal();
    dateTime2.set(calendar12);
    java.text.SimpleDateFormat simpleDateFormat14 = dateTime2.getSdf();
    java.lang.String str15 = dateTime2.getMonth();
    int int16 = dateTime2.getDayOfYear();
    net.ajaskey.common.DateTime dateTime18 = dateTime2
        .parse("                                                                                               52.00");
    org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "31-Dec-1969" + "'", str10, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
    org.junit.Assert.assertNotNull(calendar12);
    org.junit.Assert.assertEquals(calendar12.toString(),
        "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertNull(simpleDateFormat14);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "December" + "'", str15, "December");
    org.junit.Assert.assertTrue("'" + int16 + "' != '" + 365 + "'", int16 == 365);
    org.junit.Assert.assertNull(dateTime18);
  }

  @Test
  public void test629() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test629");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    dateTime1.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str6 = dateTime1.getMonth();
    int int7 = dateTime1.getMs();
    int int8 = dateTime1.getHour();
    java.lang.String str9 = dateTime1.getDay();
    java.text.SimpleDateFormat simpleDateFormat13 = null;
    java.text.SimpleDateFormat simpleDateFormat14 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat13, simpleDateFormat14);
    net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat14);
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("Fri 31-Dec-0001 17:00:00", simpleDateFormat14);
    dateTime1.setSdf(simpleDateFormat14);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "January" + "'", str6, "January");
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Saturday" + "'", str9, "Saturday");
    org.junit.Assert.assertNotNull(simpleDateFormat14);
  }

  @Test
  public void test630() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test630");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int2 = dateTime1.getHour();
    int int3 = dateTime1.getDayOfMonth();
    int int4 = dateTime1.getYear();
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(dateTime1);
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
    double double12 = dateTime9.getDeltaYears(dateTime11);
    java.text.SimpleDateFormat simpleDateFormat14 = null;
    net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat14);
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double18 = dateTime15.getDeltaYears(dateTime17);
    boolean boolean19 = dateTime15.isWeekday();
    boolean boolean20 = dateTime9.sameDate(dateTime15);
    java.text.SimpleDateFormat simpleDateFormat22 = null;
    net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat22);
    net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double26 = dateTime23.getDeltaYears(dateTime25);
    net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean31 = dateTime25.isEqual(dateTime30);
    dateTime9.set(dateTime30);
    net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double35 = dateTime30.getDeltaYears(dateTime34);
    java.text.SimpleDateFormat simpleDateFormat37 = null;
    net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat37);
    net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double41 = dateTime38.getDeltaYears(dateTime40);
    boolean boolean42 = dateTime38.isWeekday();
    net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime(100L);
    int int45 = dateTime44.getMs();
    java.lang.String str46 = dateTime44.toString();
    int int47 = dateTime44.getMs();
    java.util.Calendar calendar48 = dateTime44.getCal();
    dateTime38.set(calendar48);
    dateTime30.set(calendar48);
    dateTime5.set(calendar48);
    net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime(calendar48);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 5 + "'", int2 == 5);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 31 + "'", int3 == 31);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1969 + "'", int4 == 1969);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1972.041095890411d) + "'", double12 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-1972.041095890411d) + "'", double35 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
    org.junit.Assert.assertEquals("'" + str46 + "' != '" + "31-Dec-1969" + "'", str46, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
    org.junit.Assert.assertNotNull(calendar48);
    org.junit.Assert.assertEquals(calendar48.toString(),
        "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
  }

  @Test
  public void test631() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test631");
    java.lang.String str2 = net.ajaskey.common.Utils.fmt((double) 97, (int) (byte) 1);
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Invalid fmt" + "'", str2, "Invalid fmt");
  }

  @Test
  public void test632() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test632");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    boolean boolean7 = dateTime5.isWeekday();
    java.util.Date date8 = dateTime5.getTime();
    java.lang.String str9 = dateTime5.toString();
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) 2);
    java.text.SimpleDateFormat simpleDateFormat12 = dateTime11.getSdf();
    boolean boolean13 = dateTime5.sameDate(dateTime11);
    net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(dateTime5);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertNotNull(date8);
    org.junit.Assert.assertEquals(date8.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "31-Dec-1969" + "'", str9, "31-Dec-1969");
    org.junit.Assert.assertNull(simpleDateFormat12);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
  }

  @Test
  public void test633() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test633");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) (short) 0);
    net.ajaskey.common.DateTime dateTime2 = net.ajaskey.common.DateTime.copy(dateTime1);
    net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime(100L);
    dateTime4.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str9 = dateTime4.getMonth();
    int int10 = dateTime4.getMs();
    java.lang.String str12 = dateTime4.format("                                                                                               52.00");
    net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(100L);
    dateTime14.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str19 = dateTime14.getMonth();
    long long20 = dateTime4.getDeltaDays(dateTime14);
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(100L);
    dateTime22.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str27 = dateTime22.getMonth();
    java.text.SimpleDateFormat simpleDateFormat29 = null;
    net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat29);
    net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double33 = dateTime30.getDeltaYears(dateTime32);
    boolean boolean34 = dateTime22.isLessThan(dateTime30);
    net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime(100L);
    double double41 = dateTime38.getDeltaYears(dateTime40);
    net.ajaskey.common.DateTime dateTime42 = null;
    long long43 = dateTime38.getDeltaDays(dateTime42);
    boolean boolean44 = dateTime30.isLessThanOrEqual(dateTime38);
    boolean boolean45 = dateTime4.isGreaterThanOrEqual(dateTime38);
    long long46 = dateTime2.getDeltaDays(dateTime38);
    net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime(100L);
    double double53 = dateTime50.getDeltaYears(dateTime52);
    java.util.Date date54 = dateTime50.getTime();
    net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime(date54);
    net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime(date54);
    net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime(date54);
    long long58 = dateTime2.getDeltaDays(dateTime57);
    int int59 = dateTime2.getDayOfMonth();
    org.junit.Assert.assertNotNull(dateTime2);
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "January" + "'", str9, "January");
    org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
    org.junit.Assert.assertEquals(
        "'" + str12 + "' != '" + "                                                                                               52.00" + "'", str12,
        "                                                                                               52.00");
    org.junit.Assert.assertEquals("'" + str19 + "' != '" + "January" + "'", str19, "January");
    org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "January" + "'", str27, "January");
    org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-1972.041095890411d) + "'", double41 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    org.junit.Assert.assertTrue("'" + long46 + "' != '" + 719795L + "'", long46 == 719795L);
    org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-1972.041095890411d) + "'", double53 == (-1972.041095890411d));
    org.junit.Assert.assertNotNull(date54);
// flaky:         org.junit.Assert.assertEquals(date54.toString(), "Thu Apr 10 14:03:30 MST 2");
    org.junit.Assert.assertTrue("'" + long58 + "' != '" + 719795L + "'", long58 == 719795L);
    org.junit.Assert.assertTrue("'" + int59 + "' != '" + 31 + "'", int59 == 31);
  }

  @Test
  public void test634() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test634");
    java.text.SimpleDateFormat simpleDateFormat4 = null;
    java.text.SimpleDateFormat simpleDateFormat5 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat4, simpleDateFormat5);
    net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat5);
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime("Fri 31-Dec-0001 17:00:00", simpleDateFormat5);
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("719,795", simpleDateFormat5);
    org.junit.Assert.assertNotNull(simpleDateFormat5);
  }

  @Test
  public void test635() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test635");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int2 = dateTime1.getHour();
    int int3 = dateTime1.getDayOfMonth();
    int int4 = dateTime1.getYear();
    java.lang.String str5 = dateTime1.format();
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 5 + "'", int2 == 5);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 31 + "'", int3 == 31);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1969 + "'", int4 == 1969);
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "BAD-DATE-FORMAT" + "'", str5, "BAD-DATE-FORMAT");
  }

  @Test
  public void test636() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test636");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    boolean boolean7 = dateTime5.isWeekday();
    java.util.Date date8 = dateTime5.getTime();
    java.lang.String str9 = dateTime5.toString();
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) 2);
    java.text.SimpleDateFormat simpleDateFormat12 = dateTime11.getSdf();
    boolean boolean13 = dateTime5.sameDate(dateTime11);
    net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(100L);
    int int16 = dateTime15.getMs();
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(100L);
    double double23 = dateTime20.getDeltaYears(dateTime22);
    java.text.SimpleDateFormat simpleDateFormat24 = dateTime20.getSdf();
    boolean boolean25 = dateTime15.isLessThanOrEqual(dateTime20);
    boolean boolean26 = net.ajaskey.common.Utils.sameMonth(dateTime5, dateTime20);
    net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((long) 2);
    java.text.SimpleDateFormat simpleDateFormat29 = dateTime28.getSdf();
    net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    java.text.SimpleDateFormat simpleDateFormat35 = null;
    net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat35);
    net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double39 = dateTime36.getDeltaYears(dateTime38);
    boolean boolean40 = dateTime33.isLessThan(dateTime38);
    int int41 = dateTime33.getHour();
    long long42 = dateTime28.getDeltaDays(dateTime33);
    java.lang.String str43 = dateTime28.toString();
    int int44 = dateTime28.getYear();
    int int45 = dateTime28.getYear();
    int int46 = dateTime28.getMs();
    boolean boolean47 = dateTime5.isLessThanOrEqual(dateTime28);
    dateTime5.set(5, (int) (byte) 10, 27);
    dateTime5.setFirstWorkDay();
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertNotNull(date8);
    org.junit.Assert.assertEquals(date8.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "31-Dec-1969" + "'", str9, "31-Dec-1969");
    org.junit.Assert.assertNull(simpleDateFormat12);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
    org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-1972.041095890411d) + "'", double23 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat24);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertNull(simpleDateFormat29);
    org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2 + "'", int41 == 2);
    org.junit.Assert.assertTrue("'" + long42 + "' != '" + 719795L + "'", long42 == 719795L);
    org.junit.Assert.assertEquals("'" + str43 + "' != '" + "31-Dec-1969" + "'", str43, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1969 + "'", int44 == 1969);
    org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1969 + "'", int45 == 1969);
    org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2 + "'", int46 == 2);
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
  }

  @Test
  public void test637() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test637");
    net.ajaskey.common.Utils.NL = "                                                                                                  31";
  }

  @Test
  public void test638() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test638");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    int int2 = dateTime1.getMs();
    net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
    double double9 = dateTime6.getDeltaYears(dateTime8);
    java.text.SimpleDateFormat simpleDateFormat10 = dateTime6.getSdf();
    boolean boolean11 = dateTime1.isLessThanOrEqual(dateTime6);
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(100L);
    int int14 = dateTime13.getMs();
    java.lang.String str15 = dateTime13.toString();
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int18 = dateTime17.getHour();
    int int19 = dateTime17.getDayOfMonth();
    dateTime13.set(dateTime17);
    double double21 = dateTime6.getDeltaYears(dateTime17);
    int int22 = dateTime17.getMinute();
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "31-Dec-1969" + "'", str15, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
    org.junit.Assert.assertTrue("'" + int19 + "' != '" + 31 + "'", int19 == 31);
    org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-1972.041095890411d) + "'", double21 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
  }

  @Test
  public void test639() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test639");
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("January", "BAD-DATE-FORMAT");
    java.util.Calendar calendar3 = dateTime2.getCal();
    // The following exception was thrown during execution in test generation
    try {
      java.lang.Class<?> wildcardClass4 = calendar3.getClass();
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
    }
    catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    org.junit.Assert.assertNull(calendar3);
  }

  @Test
  public void test640() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test640");
    java.util.zip.ZipOutputStream zipOutputStream1 = null;
    // The following exception was thrown during execution in test generation
    try {
      net.ajaskey.common.Utils.writeToZipFile("         14", zipOutputStream1);
      org.junit.Assert
          .fail("Expected exception of type java.io.FileNotFoundException; message:          14 (The system cannot find the file specified)");
    }
    catch (java.io.FileNotFoundException e) {
      // Expected exception.
    }
  }

  @Test
  public void test641() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test641");
    java.text.SimpleDateFormat simpleDateFormat4 = null;
    java.text.SimpleDateFormat simpleDateFormat5 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat4, simpleDateFormat5);
    net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat5);
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(0L);
    int int10 = dateTime9.getMs();
    java.text.SimpleDateFormat simpleDateFormat12 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat14 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat15 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("", simpleDateFormat14, simpleDateFormat15);
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat12,
        simpleDateFormat15);
    dateTime9.setSdf(simpleDateFormat15);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime("UNKNOWN", simpleDateFormat5, simpleDateFormat15);
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("        1.00", simpleDateFormat15);
    org.junit.Assert.assertNotNull(simpleDateFormat5);
    org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    org.junit.Assert.assertNotNull(simpleDateFormat12);
    org.junit.Assert.assertNotNull(simpleDateFormat14);
    org.junit.Assert.assertNotNull(simpleDateFormat15);
  }

  @Test
  public void test642() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test642");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    boolean boolean7 = dateTime5.isWeekday();
    boolean boolean8 = dateTime5.isWeekday();
    dateTime5.add((int) ' ', 6);
    int int12 = dateTime5.getYear();
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1969 + "'", int12 == 1969);
  }

  @Test
  public void test643() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test643");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) 2);
    java.text.SimpleDateFormat simpleDateFormat2 = dateTime1.getSdf();
    net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime(100L);
    int int5 = dateTime4.getMs();
    java.lang.String str6 = dateTime4.toString();
    int int7 = dateTime4.getMs();
    java.util.Calendar calendar8 = dateTime4.getCal();
    int int9 = dateTime1.getYears(dateTime4);
    net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime(dateTime1);
    java.util.Date date11 = dateTime1.getTime();
    int int12 = dateTime1.getYear();
    org.junit.Assert.assertNull(simpleDateFormat2);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "31-Dec-1969" + "'", str6, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
    org.junit.Assert.assertNotNull(calendar8);
    org.junit.Assert.assertEquals(calendar8.toString(),
        "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    org.junit.Assert.assertNotNull(date11);
    org.junit.Assert.assertEquals(date11.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1969 + "'", int12 == 1969);
  }

  @Test
  public void test644() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test644");
    java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readTextFile("hi!", false);
    java.lang.String str3 = net.ajaskey.common.TextUtils.toString(strList2);
    java.lang.String str4 = net.ajaskey.common.TextUtils.toString(strList2);
    java.lang.String str5 = net.ajaskey.common.TextUtils.toString(strList2);
    net.ajaskey.common.TextUtils.print(strList2);
    org.junit.Assert.assertNotNull(strList2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
  }

  @Test
  public void test645() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test645");
    net.ajaskey.common.DateTime dateTime0 = new net.ajaskey.common.DateTime();
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime(100L);
    dateTime2.set((int) (byte) 100, (-1), (int) '#');
    java.text.SimpleDateFormat simpleDateFormat7 = dateTime2.getSdf();
    boolean boolean8 = dateTime0.isEqual(dateTime2);
    net.ajaskey.common.DateTime dateTime9 = net.ajaskey.common.DateTime.copy(dateTime0);
    net.ajaskey.common.DateTime dateTime12 = dateTime0.parse(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        "February");
    org.junit.Assert.assertNull(simpleDateFormat7);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertNotNull(dateTime9);
    org.junit.Assert.assertNull(dateTime12);
  }

  @Test
  public void test646() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test646");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    int int2 = dateTime1.getMs();
    java.lang.String str3 = dateTime1.toString();
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int6 = dateTime5.getHour();
    int int7 = dateTime5.getDayOfMonth();
    dateTime1.set(dateTime5);
    int int9 = dateTime5.getMs();
    java.lang.String str10 = dateTime5.toFullString();
    boolean boolean11 = dateTime5.isNull();
    java.lang.Class<?> wildcardClass12 = dateTime5.getClass();
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "31-Dec-1969" + "'", str3, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 31 + "'", int7 == 31);
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str10, "Wed 31-Dec-1969 17:00:00");
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(wildcardClass12);
  }

  @Test
  public void test647() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test647");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    int int2 = dateTime1.getMs();
    java.text.SimpleDateFormat simpleDateFormat3 = net.ajaskey.common.Utils.sdf;
    dateTime1.setSdf(simpleDateFormat3);
    int int5 = dateTime1.getDayOfWeek();
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
    double double12 = dateTime9.getDeltaYears(dateTime11);
    java.util.Calendar calendar13 = dateTime9.getCal();
    dateTime1.set(calendar13);
    java.text.SimpleDateFormat simpleDateFormat16 = null;
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double20 = dateTime17.getDeltaYears(dateTime19);
    net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean25 = dateTime19.isEqual(dateTime24);
    java.util.Calendar calendar26 = dateTime19.getCal();
    net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(calendar26);
    dateTime1.set(calendar26);
    int int29 = dateTime1.getDayOfYear();
    int int30 = dateTime1.getMinute();
    java.text.SimpleDateFormat simpleDateFormat32 = null;
    net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat32);
    net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double36 = dateTime33.getDeltaYears(dateTime35);
    net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean41 = dateTime35.isEqual(dateTime40);
    java.text.SimpleDateFormat simpleDateFormat43 = null;
    java.text.SimpleDateFormat simpleDateFormat44 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat43, simpleDateFormat44);
    net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime(100L);
    double double52 = dateTime49.getDeltaYears(dateTime51);
    boolean boolean53 = dateTime51.isWeekday();
    java.util.Date date54 = dateTime51.getTime();
    java.lang.String str55 = dateTime51.toString();
    net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime(100L);
    int int58 = dateTime57.getMs();
    net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime(100L);
    double double65 = dateTime62.getDeltaYears(dateTime64);
    java.text.SimpleDateFormat simpleDateFormat66 = dateTime62.getSdf();
    boolean boolean67 = dateTime57.isLessThanOrEqual(dateTime62);
    boolean boolean68 = dateTime51.isLessThan(dateTime62);
    java.lang.String str69 = dateTime51.toString();
    long long70 = dateTime45.getDeltaMilliSeconds(dateTime51);
    net.ajaskey.common.DateTime dateTime74 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime76 = new net.ajaskey.common.DateTime(100L);
    double double77 = dateTime74.getDeltaYears(dateTime76);
    boolean boolean78 = dateTime76.isWeekday();
    java.util.Date date79 = dateTime76.getTime();
    int int80 = dateTime76.getMinute();
    boolean boolean81 = dateTime45.sameDate(dateTime76);
    int int82 = dateTime35.getYears(dateTime76);
    int int83 = dateTime76.getDayOfWeek();
    java.lang.String str84 = dateTime76.toString();
    net.ajaskey.common.DateTime dateTime85 = net.ajaskey.common.DateTime.copy(dateTime76);
    long long86 = dateTime1.getDeltaDays(dateTime76);
    int int87 = dateTime1.getYear();
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat3);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 4 + "'", int5 == 4);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1972.041095890411d) + "'", double12 == (-1972.041095890411d));
    org.junit.Assert.assertNotNull(calendar13);
// flaky:         org.junit.Assert.assertEquals(calendar13.toString(), "java.util.GregorianCalendar[time=-62190298589094,areFieldsSet=true,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=3,SECOND=30,MILLISECOND=906,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertNotNull(calendar26);
    org.junit.Assert.assertEquals(calendar26.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + int29 + "' != '" + 365 + "'", int29 == 365);
    org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
    org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    org.junit.Assert.assertNotNull(simpleDateFormat44);
    org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-1972.041095890411d) + "'", double52 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    org.junit.Assert.assertNotNull(date54);
    org.junit.Assert.assertEquals(date54.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str55 + "' != '" + "31-Dec-1969" + "'", str55, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
    org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-1972.041095890411d) + "'", double65 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat66);
    org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    org.junit.Assert.assertEquals("'" + str69 + "' != '" + "31-Dec-1969" + "'", str69, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + long70 + "' != '" + 0L + "'", long70 == 0L);
    org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-1972.041095890411d) + "'", double77 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
    org.junit.Assert.assertNotNull(date79);
    org.junit.Assert.assertEquals(date79.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
    org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
    org.junit.Assert.assertTrue("'" + int83 + "' != '" + 4 + "'", int83 == 4);
    org.junit.Assert.assertEquals("'" + str84 + "' != '" + "31-Dec-1969" + "'", str84, "31-Dec-1969");
    org.junit.Assert.assertNotNull(dateTime85);
    org.junit.Assert.assertTrue("'" + long86 + "' != '" + 0L + "'", long86 == 0L);
    org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1969 + "'", int87 == 1969);
  }

  @Test
  public void test648() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test648");
    java.util.zip.ZipOutputStream zipOutputStream1 = null;
    // The following exception was thrown during execution in test generation
    try {
      net.ajaskey.common.Utils.writeToZipFile("Thu 10-Apr-0002 14:03:19", zipOutputStream1);
      org.junit.Assert.fail(
          "Expected exception of type java.io.FileNotFoundException; message: Thu 10-Apr-0002 14:03:19 (The filename, directory name, or volume label syntax is incorrect)");
    }
    catch (java.io.FileNotFoundException e) {
      // Expected exception.
    }
  }

  @Test
  public void test649() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test649");
    java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readGzipFile("Wed 02-May-0014 14:03:29", false);
    org.junit.Assert.assertNull(strList2);
  }

  @Test
  public void test650() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test650");
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 14:03:11", "100");
    int int3 = dateTime2.getMs();
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
  }

  @Test
  public void test651() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test651");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(31, (int) (byte) 100, 5);
    net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    java.text.SimpleDateFormat simpleDateFormat9 = null;
    net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat9);
    net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double13 = dateTime10.getDeltaYears(dateTime12);
    boolean boolean14 = dateTime7.isLessThan(dateTime12);
    int int15 = dateTime7.getHour();
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(100L);
    double double22 = dateTime19.getDeltaYears(dateTime21);
    int int23 = dateTime19.getHour();
    net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(100L);
    double double30 = dateTime27.getDeltaYears(dateTime29);
    boolean boolean31 = dateTime29.isWeekday();
    java.util.Date date32 = dateTime29.getTime();
    java.lang.String str33 = dateTime29.toString();
    net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime(100L);
    int int36 = dateTime35.getMs();
    net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime(100L);
    double double43 = dateTime40.getDeltaYears(dateTime42);
    java.text.SimpleDateFormat simpleDateFormat44 = dateTime40.getSdf();
    boolean boolean45 = dateTime35.isLessThanOrEqual(dateTime40);
    boolean boolean46 = dateTime29.isLessThan(dateTime40);
    java.lang.String str47 = dateTime29.toString();
    boolean boolean48 = dateTime19.sameDate(dateTime29);
    int int49 = dateTime7.getYears(dateTime19);
    long long50 = dateTime3.getDeltaMilliSeconds(dateTime19);
    org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
    org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-1972.041095890411d) + "'", double22 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
    org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-1972.041095890411d) + "'", double30 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    org.junit.Assert.assertNotNull(date32);
    org.junit.Assert.assertEquals(date32.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str33 + "' != '" + "31-Dec-1969" + "'", str33, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
    org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-1972.041095890411d) + "'", double43 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat44);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    org.junit.Assert.assertEquals("'" + str47 + "' != '" + "31-Dec-1969" + "'", str47, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
  }

  @Test
  public void test652() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test652");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(14, 1969, 10);
  }

  @Test
  public void test653() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test653");
    java.lang.String[] strArray4 = new java.lang.String[] { "January", "",
        "                                                                                               52.00", "hi!" };
    java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
    boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
    net.ajaskey.common.TextUtils.print((java.util.List<java.lang.String>) strList5);
    java.lang.String str8 = net.ajaskey.common.TextUtils.toString((java.util.List<java.lang.String>) strList5);
    net.ajaskey.common.TextUtils.print((java.util.List<java.lang.String>) strList5);
    net.ajaskey.common.TextUtils.print((java.util.List<java.lang.String>) strList5);
    java.lang.String str11 = net.ajaskey.common.TextUtils.toString((java.util.List<java.lang.String>) strList5);
    org.junit.Assert.assertNotNull(strArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    org.junit.Assert.assertEquals("'" + str8 + "' != '"
        + "January                                                                                                  31                                                                                                  31                                                                                               52.00                                                                                                  31hi!                                                                                                  31"
        + "'", str8,
        "January                                                                                                  31                                                                                                  31                                                                                               52.00                                                                                                  31hi!                                                                                                  31");
    org.junit.Assert.assertEquals("'" + str11 + "' != '"
        + "January                                                                                                  31                                                                                                  31                                                                                               52.00                                                                                                  31hi!                                                                                                  31"
        + "'", str11,
        "January                                                                                                  31                                                                                                  31                                                                                               52.00                                                                                                  31hi!                                                                                                  31");
  }

  @Test
  public void test654() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test654");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(10, (int) '4', 2);
    java.lang.String str4 = dateTime3.toFullString();
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime(100L);
    double double11 = dateTime8.getDeltaYears(dateTime10);
    boolean boolean12 = dateTime10.isWeekday();
    java.util.Date date13 = dateTime10.getTime();
    java.lang.String str14 = dateTime10.toString();
    net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((long) 2);
    java.text.SimpleDateFormat simpleDateFormat17 = dateTime16.getSdf();
    boolean boolean18 = dateTime10.sameDate(dateTime16);
    boolean boolean19 = net.ajaskey.common.Utils.sameDate(dateTime3, dateTime16);
    boolean boolean20 = dateTime16.isWeekday();
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Wed 02-May-0014 14:03:31" + "'", str4, "Wed 02-May-0014 14:03:31");
    org.junit.Assert.assertTrue("'" + double11 + "' != '" + (-1972.041095890411d) + "'", double11 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    org.junit.Assert.assertNotNull(date13);
    org.junit.Assert.assertEquals(date13.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "31-Dec-1969" + "'", str14, "31-Dec-1969");
    org.junit.Assert.assertNull(simpleDateFormat17);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
  }

  @Test
  public void test655() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test655");
    java.text.SimpleDateFormat simpleDateFormat1 = null;
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
    net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double5 = dateTime2.getDeltaYears(dateTime4);
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean10 = dateTime4.isEqual(dateTime9);
    java.util.Calendar calendar11 = dateTime4.getCal();
    java.lang.String str12 = dateTime4.toFullString();
    int int13 = dateTime4.getDayOfYear();
    boolean boolean14 = dateTime4.isWeekday();
    org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertNotNull(calendar11);
    org.junit.Assert.assertEquals(calendar11.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str12, "Wed 31-Dec-1969 17:00:00");
    org.junit.Assert.assertTrue("'" + int13 + "' != '" + 365 + "'", int13 == 365);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
  }

  @Test
  public void test656() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test656");
    java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readGzipFile("          1.00", true);
    org.junit.Assert.assertNull(strList2);
  }

  @Test
  public void test657() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test657");
    java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat6 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat7 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime("", simpleDateFormat6, simpleDateFormat7);
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat4, simpleDateFormat7);
    java.text.SimpleDateFormat simpleDateFormat10 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime("", simpleDateFormat7, simpleDateFormat10);
    net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat10);
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(
        "                                                                                                                                                                                                                                                                                                                                                                        35.00",
        simpleDateFormat10);
    boolean boolean14 = dateTime13.isNull();
    net.ajaskey.common.DateTime dateTime16 = dateTime13.parse("100");
    org.junit.Assert.assertNotNull(simpleDateFormat4);
    org.junit.Assert.assertNotNull(simpleDateFormat6);
    org.junit.Assert.assertNotNull(simpleDateFormat7);
    org.junit.Assert.assertNotNull(simpleDateFormat10);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    org.junit.Assert.assertNull(dateTime16);
  }

  @Test
  public void test658() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test658");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    java.text.SimpleDateFormat simpleDateFormat8 = null;
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double12 = dateTime9.getDeltaYears(dateTime11);
    boolean boolean13 = dateTime9.isWeekday();
    boolean boolean14 = dateTime3.sameDate(dateTime9);
    java.lang.String str15 = dateTime9.format();
    int int16 = dateTime9.getMs();
    int int17 = dateTime9.getMs();
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "BAD-DATE-FORMAT" + "'", str15, "BAD-DATE-FORMAT");
    org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
  }

  @Test
  public void test659() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test659");
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("         52",
        "                                                                                               52.00");
    java.lang.String str3 = dateTime2.toFullString();
    java.text.SimpleDateFormat simpleDateFormat4 = dateTime2.getSdf();
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Invalid Time" + "'", str3, "Invalid Time");
    org.junit.Assert.assertNull(simpleDateFormat4);
  }

  @Test
  public void test660() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test660");
    net.ajaskey.common.TextUtils.printline(
        "January                                                                                                  31                                                                                                  31                                                                                               52.00                                                                                                  31hi!                                                                                                  31");
  }

  @Test
  public void test661() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test661");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    java.text.SimpleDateFormat simpleDateFormat8 = null;
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double12 = dateTime9.getDeltaYears(dateTime11);
    boolean boolean13 = dateTime9.isWeekday();
    boolean boolean14 = dateTime3.sameDate(dateTime9);
    java.text.SimpleDateFormat simpleDateFormat16 = null;
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double20 = dateTime17.getDeltaYears(dateTime19);
    net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean25 = dateTime19.isEqual(dateTime24);
    dateTime3.set(dateTime24);
    net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double29 = dateTime24.getDeltaYears(dateTime28);
    int int30 = dateTime28.getDayOfWeek();
    java.text.SimpleDateFormat simpleDateFormat32 = null;
    java.text.SimpleDateFormat simpleDateFormat33 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat32, simpleDateFormat33);
    java.lang.String str35 = dateTime34.getDay();
    java.util.Calendar calendar36 = dateTime34.getCal();
    java.lang.String str37 = dateTime34.format();
    int int38 = dateTime34.getMinute();
    net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int41 = dateTime40.getHour();
    int int42 = dateTime40.getDayOfMonth();
    java.text.SimpleDateFormat simpleDateFormat46 = null;
    java.text.SimpleDateFormat simpleDateFormat47 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat46, simpleDateFormat47);
    net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat47);
    net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat47);
    boolean boolean51 = net.ajaskey.common.Utils.sameDate(dateTime40, dateTime50);
    boolean boolean52 = dateTime34.isGreaterThan(dateTime40);
    long long53 = dateTime28.getDeltaMilliSeconds(dateTime34);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-1972.041095890411d) + "'", double29 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + int30 + "' != '" + 4 + "'", int30 == 4);
    org.junit.Assert.assertNotNull(simpleDateFormat33);
    org.junit.Assert.assertEquals("'" + str35 + "' != '" + "UNKNOWN" + "'", str35, "UNKNOWN");
    org.junit.Assert.assertNull(calendar36);
    org.junit.Assert.assertEquals("'" + str37 + "' != '" + "BAD-DATE-FORMAT" + "'", str37, "BAD-DATE-FORMAT");
    org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
    org.junit.Assert.assertTrue("'" + int41 + "' != '" + 5 + "'", int41 == 5);
    org.junit.Assert.assertTrue("'" + int42 + "' != '" + 31 + "'", int42 == 31);
    org.junit.Assert.assertNotNull(simpleDateFormat47);
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
  }

  @Test
  public void test662() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test662");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    boolean boolean7 = dateTime5.isWeekday();
    net.ajaskey.common.DateTime dateTime10 = dateTime5.parse("31-Dec-1969", "January");
    net.ajaskey.common.DateTime dateTime11 = net.ajaskey.common.DateTime.copy(dateTime5);
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(100L);
    dateTime13.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str18 = dateTime13.getMonth();
    int int19 = dateTime13.getMs();
    java.lang.String str21 = dateTime13
        .format("                                                                                               52.00");
    net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime(100L);
    dateTime23.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str28 = dateTime23.getMonth();
    long long29 = dateTime13.getDeltaDays(dateTime23);
    boolean boolean30 = dateTime11.isGreaterThan(dateTime23);
    net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime(100L);
    double double37 = dateTime34.getDeltaYears(dateTime36);
    boolean boolean38 = dateTime36.isWeekday();
    java.util.Date date39 = dateTime36.getTime();
    int int40 = dateTime36.getMinute();
    java.text.SimpleDateFormat simpleDateFormat42 = null;
    net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat42);
    net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double46 = dateTime43.getDeltaYears(dateTime45);
    net.ajaskey.common.DateTime dateTime47 = net.ajaskey.common.DateTime.copy(dateTime43);
    boolean boolean48 = net.ajaskey.common.Utils.sameDate(dateTime36, dateTime43);
    net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime(100L);
    int int51 = dateTime50.getMs();
    java.text.SimpleDateFormat simpleDateFormat52 = net.ajaskey.common.Utils.sdf;
    dateTime50.setSdf(simpleDateFormat52);
    int int54 = dateTime50.getDayOfWeek();
    net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime(100L);
    double double61 = dateTime58.getDeltaYears(dateTime60);
    java.util.Calendar calendar62 = dateTime58.getCal();
    dateTime50.set(calendar62);
    java.text.SimpleDateFormat simpleDateFormat65 = null;
    net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat65);
    net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double69 = dateTime66.getDeltaYears(dateTime68);
    net.ajaskey.common.DateTime dateTime73 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean74 = dateTime68.isEqual(dateTime73);
    java.util.Calendar calendar75 = dateTime68.getCal();
    net.ajaskey.common.DateTime dateTime76 = new net.ajaskey.common.DateTime(calendar75);
    dateTime50.set(calendar75);
    java.text.SimpleDateFormat simpleDateFormat80 = null;
    java.text.SimpleDateFormat simpleDateFormat81 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime82 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat80, simpleDateFormat81);
    net.ajaskey.common.DateTime dateTime83 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat81);
    dateTime50.setSdf(simpleDateFormat81);
    long long85 = dateTime43.getDeltaMilliSeconds(dateTime50);
    int int86 = dateTime11.getYears(dateTime43);
    java.lang.Class<?> wildcardClass87 = dateTime43.getClass();
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertNull(dateTime10);
    org.junit.Assert.assertNotNull(dateTime11);
    org.junit.Assert.assertEquals("'" + str18 + "' != '" + "January" + "'", str18, "January");
    org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
    org.junit.Assert.assertEquals(
        "'" + str21 + "' != '" + "                                                                                               52.00" + "'", str21,
        "                                                                                               52.00");
    org.junit.Assert.assertEquals("'" + str28 + "' != '" + "January" + "'", str28, "January");
    org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-1972.041095890411d) + "'", double37 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    org.junit.Assert.assertNotNull(date39);
    org.junit.Assert.assertEquals(date39.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
    org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
    org.junit.Assert.assertNull(dateTime47);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    org.junit.Assert.assertTrue("'" + int51 + "' != '" + 100 + "'", int51 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat52);
    org.junit.Assert.assertTrue("'" + int54 + "' != '" + 4 + "'", int54 == 4);
    org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-1972.041095890411d) + "'", double61 == (-1972.041095890411d));
    org.junit.Assert.assertNotNull(calendar62);
// flaky:         org.junit.Assert.assertEquals(calendar62.toString(), "java.util.GregorianCalendar[time=-62190298588714,areFieldsSet=true,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=3,SECOND=31,MILLISECOND=286,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    org.junit.Assert.assertNotNull(calendar75);
    org.junit.Assert.assertEquals(calendar75.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertNotNull(simpleDateFormat81);
    org.junit.Assert.assertTrue("'" + long85 + "' != '" + 0L + "'", long85 == 0L);
    org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
    org.junit.Assert.assertNotNull(wildcardClass87);
  }

  @Test
  public void test663() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test663");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    java.text.SimpleDateFormat simpleDateFormat7 = dateTime3.getSdf();
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(100L);
    double double14 = dateTime11.getDeltaYears(dateTime13);
    boolean boolean15 = dateTime13.isWeekday();
    net.ajaskey.common.DateTime dateTime18 = dateTime13.parse("31-Dec-1969", "January");
    net.ajaskey.common.DateTime dateTime19 = net.ajaskey.common.DateTime.copy(dateTime13);
    boolean boolean20 = dateTime3.sameDate(dateTime19);
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(100L);
    dateTime22.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str27 = dateTime22.getMonth();
    int int28 = dateTime22.getMs();
    net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime(100L);
    double double35 = dateTime32.getDeltaYears(dateTime34);
    java.text.SimpleDateFormat simpleDateFormat36 = dateTime32.getSdf();
    net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime(100L);
    double double43 = dateTime40.getDeltaYears(dateTime42);
    boolean boolean44 = dateTime42.isWeekday();
    net.ajaskey.common.DateTime dateTime47 = dateTime42.parse("31-Dec-1969", "January");
    net.ajaskey.common.DateTime dateTime48 = net.ajaskey.common.DateTime.copy(dateTime42);
    boolean boolean49 = dateTime32.sameDate(dateTime48);
    net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime(100L);
    double double56 = dateTime53.getDeltaYears(dateTime55);
    boolean boolean57 = dateTime48.isGreaterThan(dateTime53);
    int int58 = dateTime53.getDayOfWeek();
    boolean boolean59 = dateTime22.isGreaterThan(dateTime53);
    long long60 = dateTime19.getDeltaMilliSeconds(dateTime53);
    java.lang.String str61 = dateTime53.toString();
    java.lang.String str63 = dateTime53
        .format("                                                                                               10.00");
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat7);
    org.junit.Assert.assertTrue("'" + double14 + "' != '" + (-1972.041095890411d) + "'", double14 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    org.junit.Assert.assertNull(dateTime18);
    org.junit.Assert.assertNotNull(dateTime19);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "January" + "'", str27, "January");
    org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
    org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-1972.041095890411d) + "'", double35 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat36);
    org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-1972.041095890411d) + "'", double43 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    org.junit.Assert.assertNull(dateTime47);
    org.junit.Assert.assertNotNull(dateTime48);
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-1972.041095890411d) + "'", double56 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    org.junit.Assert.assertTrue("'" + int58 + "' != '" + 5 + "'", int58 == 5);
    org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
// flaky:         org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-62190298588788L) + "'", long60 == (-62190298588788L));
    org.junit.Assert.assertEquals("'" + str61 + "' != '" + "10-Apr-0002" + "'", str61, "10-Apr-0002");
    org.junit.Assert.assertEquals(
        "'" + str63 + "' != '" + "                                                                                               10.00" + "'", str63,
        "                                                                                               10.00");
  }

  @Test
  public void test664() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test664");
    net.ajaskey.common.DateTime dateTime0 = new net.ajaskey.common.DateTime();
    java.text.SimpleDateFormat simpleDateFormat4 = null;
    java.text.SimpleDateFormat simpleDateFormat5 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat4, simpleDateFormat5);
    net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat5);
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(0L);
    int int10 = dateTime9.getMs();
    java.text.SimpleDateFormat simpleDateFormat12 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat14 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat15 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("", simpleDateFormat14, simpleDateFormat15);
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat12,
        simpleDateFormat15);
    dateTime9.setSdf(simpleDateFormat15);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime("UNKNOWN", simpleDateFormat5, simpleDateFormat15);
    net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int22 = dateTime21.getHour();
    int int23 = dateTime21.getDayOfMonth();
    int int24 = dateTime21.getYear();
    java.util.Calendar calendar25 = dateTime21.getCal();
    dateTime19.set(calendar25);
    dateTime0.set(calendar25);
    net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(calendar25);
    net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(calendar25);
    org.junit.Assert.assertNotNull(simpleDateFormat5);
    org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    org.junit.Assert.assertNotNull(simpleDateFormat12);
    org.junit.Assert.assertNotNull(simpleDateFormat14);
    org.junit.Assert.assertNotNull(simpleDateFormat15);
    org.junit.Assert.assertTrue("'" + int22 + "' != '" + 5 + "'", int22 == 5);
    org.junit.Assert.assertTrue("'" + int23 + "' != '" + 31 + "'", int23 == 31);
    org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1969 + "'", int24 == 1969);
    org.junit.Assert.assertNotNull(calendar25);
    org.junit.Assert.assertEquals(calendar25.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
  }

  @Test
  public void test665() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test665");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("January", "BAD-DATE-FORMAT");
    boolean boolean7 = net.ajaskey.common.Utils.sameMonth(dateTime3, dateTime6);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(100L);
    double double14 = dateTime11.getDeltaYears(dateTime13);
    java.text.SimpleDateFormat simpleDateFormat16 = null;
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double20 = dateTime17.getDeltaYears(dateTime19);
    boolean boolean21 = dateTime17.isWeekday();
    boolean boolean22 = dateTime11.sameDate(dateTime17);
    net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime(0L);
    boolean boolean25 = dateTime17.isGreaterThanOrEqual(dateTime24);
    net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(100L);
    double double32 = dateTime29.getDeltaYears(dateTime31);
    boolean boolean33 = dateTime31.isWeekday();
    java.util.Date date34 = dateTime31.getTime();
    java.lang.String str35 = dateTime31.toString();
    net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime(3, (int) '4', (int) (byte) 0);
    boolean boolean40 = dateTime31.isGreaterThan(dateTime39);
    java.text.SimpleDateFormat simpleDateFormat42 = null;
    net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat42);
    net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double46 = dateTime43.getDeltaYears(dateTime45);
    net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean51 = dateTime45.isEqual(dateTime50);
    java.util.Calendar calendar52 = dateTime45.getCal();
    net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime(calendar52);
    net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime(calendar52);
    boolean boolean55 = dateTime31.isLessThan(dateTime54);
    java.text.SimpleDateFormat simpleDateFormat57 = null;
    net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat57);
    net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double61 = dateTime58.getDeltaYears(dateTime60);
    boolean boolean62 = dateTime58.isWeekday();
    java.lang.String str63 = dateTime58.getDay();
    java.util.Calendar calendar64 = dateTime58.getCal();
    boolean boolean65 = dateTime31.isLessThan(dateTime58);
    boolean boolean66 = net.ajaskey.common.Utils.sameDate(dateTime17, dateTime31);
    net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime(dateTime31);
    java.text.SimpleDateFormat simpleDateFormat68 = dateTime31.getSdf();
    dateTime6.setSdf(simpleDateFormat68);
    java.lang.String str71 = dateTime6.format(
        "January         52         52                                                                                               52.00         52hi!         52");
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertTrue("'" + double14 + "' != '" + (-1972.041095890411d) + "'", double14 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-1972.041095890411d) + "'", double32 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    org.junit.Assert.assertNotNull(date34);
    org.junit.Assert.assertEquals(date34.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str35 + "' != '" + "31-Dec-1969" + "'", str35, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    org.junit.Assert.assertNotNull(calendar52);
    org.junit.Assert.assertEquals(calendar52.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    org.junit.Assert.assertEquals("'" + str63 + "' != '" + "UNKNOWN" + "'", str63, "UNKNOWN");
    org.junit.Assert.assertNull(calendar64);
    org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    org.junit.Assert.assertNotNull(simpleDateFormat68);
    org.junit.Assert.assertEquals("'" + str71 + "' != '" + "BAD-DATE-FORMAT" + "'", str71, "BAD-DATE-FORMAT");
  }

  @Test
  public void test666() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test666");
    java.text.SimpleDateFormat simpleDateFormat1 = null;
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
    net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double5 = dateTime2.getDeltaYears(dateTime4);
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean10 = dateTime4.isEqual(dateTime9);
    java.text.SimpleDateFormat simpleDateFormat12 = null;
    java.text.SimpleDateFormat simpleDateFormat13 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat12, simpleDateFormat13);
    net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime(100L);
    double double21 = dateTime18.getDeltaYears(dateTime20);
    boolean boolean22 = dateTime20.isWeekday();
    java.util.Date date23 = dateTime20.getTime();
    java.lang.String str24 = dateTime20.toString();
    net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(100L);
    int int27 = dateTime26.getMs();
    net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime(100L);
    double double34 = dateTime31.getDeltaYears(dateTime33);
    java.text.SimpleDateFormat simpleDateFormat35 = dateTime31.getSdf();
    boolean boolean36 = dateTime26.isLessThanOrEqual(dateTime31);
    boolean boolean37 = dateTime20.isLessThan(dateTime31);
    java.lang.String str38 = dateTime20.toString();
    long long39 = dateTime14.getDeltaMilliSeconds(dateTime20);
    net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(100L);
    double double46 = dateTime43.getDeltaYears(dateTime45);
    boolean boolean47 = dateTime45.isWeekday();
    java.util.Date date48 = dateTime45.getTime();
    int int49 = dateTime45.getMinute();
    boolean boolean50 = dateTime14.sameDate(dateTime45);
    int int51 = dateTime4.getYears(dateTime45);
    int int52 = dateTime45.getHour();
    net.ajaskey.common.DateTime dateTime55 = dateTime45.parse("         52", "Thu 10-Apr-0002 14:03:26");
    org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertNotNull(simpleDateFormat13);
    org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-1972.041095890411d) + "'", double21 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    org.junit.Assert.assertNotNull(date23);
    org.junit.Assert.assertEquals(date23.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str24 + "' != '" + "31-Dec-1969" + "'", str24, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
    org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-1972.041095890411d) + "'", double34 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat35);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    org.junit.Assert.assertEquals("'" + str38 + "' != '" + "31-Dec-1969" + "'", str38, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
    org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-1972.041095890411d) + "'", double46 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    org.junit.Assert.assertNotNull(date48);
    org.junit.Assert.assertEquals(date48.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
    org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
    org.junit.Assert.assertTrue("'" + int52 + "' != '" + 5 + "'", int52 == 5);
    org.junit.Assert.assertNull(dateTime55);
  }

  @Test
  public void test667() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test667");
    java.lang.String str2 = net.ajaskey.common.Utils.fmt((double) (-61778343397695L), 50);
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Invalid fmt" + "'", str2, "Invalid fmt");
  }

  @Test
  public void test668() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test668");
    net.ajaskey.common.TextUtils.printline("         52");
  }

  @Test
  public void test670() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test670");
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("UNKNOWN", " 97.00");
  }

  @Test
  public void test671() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test671");
    java.text.SimpleDateFormat simpleDateFormat3 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat5 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat6 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("", simpleDateFormat5, simpleDateFormat6);
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat3, simpleDateFormat6);
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat3);
    net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime(
        "January                                                                                                  31                                                                                                  31                                                                                               52.00                                                                                                  31hi!                                                                                                  31",
        simpleDateFormat3);
    org.junit.Assert.assertNotNull(simpleDateFormat3);
    org.junit.Assert.assertNotNull(simpleDateFormat5);
    org.junit.Assert.assertNotNull(simpleDateFormat6);
  }

  @Test
  public void test672() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test672");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    int int2 = dateTime1.getMs();
    java.lang.String str3 = dateTime1.toString();
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int6 = dateTime5.getHour();
    int int7 = dateTime5.getDayOfMonth();
    dateTime1.set(dateTime5);
    java.util.Calendar calendar9 = dateTime1.getCal();
    net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime("365.00", "");
    java.text.SimpleDateFormat simpleDateFormat14 = null;
    net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat14);
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double18 = dateTime15.getDeltaYears(dateTime17);
    boolean boolean19 = dateTime15.isWeekday();
    java.lang.String str20 = dateTime15.getDay();
    net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(100L);
    double double27 = dateTime24.getDeltaYears(dateTime26);
    java.text.SimpleDateFormat simpleDateFormat28 = dateTime24.getSdf();
    net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime(100L);
    double double35 = dateTime32.getDeltaYears(dateTime34);
    boolean boolean36 = dateTime34.isWeekday();
    net.ajaskey.common.DateTime dateTime39 = dateTime34.parse("31-Dec-1969", "January");
    net.ajaskey.common.DateTime dateTime40 = net.ajaskey.common.DateTime.copy(dateTime34);
    boolean boolean41 = dateTime24.sameDate(dateTime40);
    boolean boolean42 = dateTime15.isEqual(dateTime24);
    java.text.SimpleDateFormat simpleDateFormat44 = null;
    net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat44);
    net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double48 = dateTime45.getDeltaYears(dateTime47);
    boolean boolean49 = dateTime45.isWeekday();
    net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime(100L);
    int int52 = dateTime51.getMs();
    java.lang.String str53 = dateTime51.toString();
    int int54 = dateTime51.getMs();
    java.util.Calendar calendar55 = dateTime51.getCal();
    dateTime45.set(calendar55);
    boolean boolean57 = dateTime15.isLessThanOrEqual(dateTime45);
    int int58 = dateTime15.getYear();
    boolean boolean59 = net.ajaskey.common.Utils.sameDate(dateTime12, dateTime15);
    boolean boolean60 = net.ajaskey.common.Utils.sameMonth(dateTime1, dateTime12);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "31-Dec-1969" + "'", str3, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 31 + "'", int7 == 31);
    org.junit.Assert.assertNotNull(calendar9);
    org.junit.Assert.assertEquals(calendar9.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "UNKNOWN" + "'", str20, "UNKNOWN");
    org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-1972.041095890411d) + "'", double27 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat28);
    org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-1972.041095890411d) + "'", double35 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    org.junit.Assert.assertNull(dateTime39);
    org.junit.Assert.assertNotNull(dateTime40);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    org.junit.Assert.assertTrue("'" + int52 + "' != '" + 100 + "'", int52 == 100);
    org.junit.Assert.assertEquals("'" + str53 + "' != '" + "31-Dec-1969" + "'", str53, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int54 + "' != '" + 100 + "'", int54 == 100);
    org.junit.Assert.assertNotNull(calendar55);
    org.junit.Assert.assertEquals(calendar55.toString(),
        "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
    org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
  }

  @Test
  public void test673() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test673");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    boolean boolean7 = dateTime5.isWeekday();
    java.util.Date date8 = dateTime5.getTime();
    int int9 = dateTime5.getMinute();
    java.text.SimpleDateFormat simpleDateFormat11 = null;
    net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat11);
    net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double15 = dateTime12.getDeltaYears(dateTime14);
    net.ajaskey.common.DateTime dateTime16 = net.ajaskey.common.DateTime.copy(dateTime12);
    boolean boolean17 = net.ajaskey.common.Utils.sameDate(dateTime5, dateTime12);
    java.text.SimpleDateFormat simpleDateFormat20 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat22 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat23 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("", simpleDateFormat22, simpleDateFormat23);
    net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat20,
        simpleDateFormat23);
    java.text.SimpleDateFormat simpleDateFormat27 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat28 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime("", simpleDateFormat27, simpleDateFormat28);
    net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime("", simpleDateFormat23, simpleDateFormat28);
    dateTime5.setSdf(simpleDateFormat23);
    java.text.SimpleDateFormat simpleDateFormat35 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat37 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat38 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime("", simpleDateFormat37, simpleDateFormat38);
    net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat35,
        simpleDateFormat38);
    java.text.SimpleDateFormat simpleDateFormat42 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat43 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime("", simpleDateFormat42, simpleDateFormat43);
    net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime("", simpleDateFormat38, simpleDateFormat43);
    java.text.SimpleDateFormat simpleDateFormat48 = null;
    java.text.SimpleDateFormat simpleDateFormat49 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat48, simpleDateFormat49);
    net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat49);
    net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime("Fri 31-Dec-0001 17:00:00", simpleDateFormat38, simpleDateFormat49);
    net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int55 = dateTime54.getHour();
    int int56 = dateTime54.getDayOfMonth();
    int int57 = dateTime54.getYear();
    net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime(dateTime54);
    int int59 = dateTime52.getYears(dateTime58);
    boolean boolean60 = dateTime5.isLessThan(dateTime58);
    boolean boolean61 = dateTime5.isWeekday();
    java.util.Calendar calendar62 = dateTime5.getCal();
    dateTime5.set(12, 1969, 14);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertNotNull(date8);
    org.junit.Assert.assertEquals(date8.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
    org.junit.Assert.assertNull(dateTime16);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertNotNull(simpleDateFormat20);
    org.junit.Assert.assertNotNull(simpleDateFormat22);
    org.junit.Assert.assertNotNull(simpleDateFormat23);
    org.junit.Assert.assertNotNull(simpleDateFormat27);
    org.junit.Assert.assertNotNull(simpleDateFormat28);
    org.junit.Assert.assertNotNull(simpleDateFormat35);
    org.junit.Assert.assertNotNull(simpleDateFormat37);
    org.junit.Assert.assertNotNull(simpleDateFormat38);
    org.junit.Assert.assertNotNull(simpleDateFormat42);
    org.junit.Assert.assertNotNull(simpleDateFormat43);
    org.junit.Assert.assertNotNull(simpleDateFormat49);
    org.junit.Assert.assertTrue("'" + int55 + "' != '" + 5 + "'", int55 == 5);
    org.junit.Assert.assertTrue("'" + int56 + "' != '" + 31 + "'", int56 == 31);
    org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1969 + "'", int57 == 1969);
    org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
    org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    org.junit.Assert.assertNotNull(calendar62);
    org.junit.Assert.assertEquals(calendar62.toString(),
        "java.util.GregorianCalendar[time=?,areFieldsSet=false,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=12,MONTH=1969,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=14,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
  }

  @Test
  public void test674() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test674");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    java.lang.String str4 = dateTime3.format();
    int int5 = dateTime3.getHour();
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "BAD-DATE-FORMAT" + "'", str4, "BAD-DATE-FORMAT");
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
  }

  @Test
  public void test675() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test675");
    java.text.SimpleDateFormat simpleDateFormat5 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat7 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat8 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("", simpleDateFormat7, simpleDateFormat8);
    net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat5, simpleDateFormat8);
    java.text.SimpleDateFormat simpleDateFormat12 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat13 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime("", simpleDateFormat12, simpleDateFormat13);
    net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime("", simpleDateFormat8, simpleDateFormat13);
    java.text.SimpleDateFormat simpleDateFormat18 = null;
    java.text.SimpleDateFormat simpleDateFormat19 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat18, simpleDateFormat19);
    net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat19);
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime("Fri 31-Dec-0001 17:00:00", simpleDateFormat8, simpleDateFormat19);
    net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime("      0.00", simpleDateFormat8);
    net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("365.00", simpleDateFormat8);
    java.lang.String str26 = dateTime24.format("Thu 10-Apr-0002 14:03:29");
    org.junit.Assert.assertNotNull(simpleDateFormat5);
    org.junit.Assert.assertNotNull(simpleDateFormat7);
    org.junit.Assert.assertNotNull(simpleDateFormat8);
    org.junit.Assert.assertNotNull(simpleDateFormat12);
    org.junit.Assert.assertNotNull(simpleDateFormat13);
    org.junit.Assert.assertNotNull(simpleDateFormat19);
    org.junit.Assert.assertEquals("'" + str26 + "' != '" + "BAD-DATE-FORMAT" + "'", str26, "BAD-DATE-FORMAT");
  }

  @Test
  public void test676() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test676");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    boolean boolean7 = dateTime5.isWeekday();
    net.ajaskey.common.DateTime dateTime10 = dateTime5.parse("31-Dec-1969", "January");
    net.ajaskey.common.DateTime dateTime11 = net.ajaskey.common.DateTime.copy(dateTime5);
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(100L);
    dateTime13.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str18 = dateTime13.getMonth();
    int int19 = dateTime13.getMs();
    java.lang.String str21 = dateTime13
        .format("                                                                                               52.00");
    net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime(100L);
    dateTime23.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str28 = dateTime23.getMonth();
    long long29 = dateTime13.getDeltaDays(dateTime23);
    boolean boolean30 = dateTime11.isGreaterThan(dateTime23);
    net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime(100L);
    double double37 = dateTime34.getDeltaYears(dateTime36);
    boolean boolean38 = dateTime36.isWeekday();
    java.util.Date date39 = dateTime36.getTime();
    int int40 = dateTime36.getMinute();
    java.text.SimpleDateFormat simpleDateFormat42 = null;
    net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat42);
    net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double46 = dateTime43.getDeltaYears(dateTime45);
    net.ajaskey.common.DateTime dateTime47 = net.ajaskey.common.DateTime.copy(dateTime43);
    boolean boolean48 = net.ajaskey.common.Utils.sameDate(dateTime36, dateTime43);
    net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime(100L);
    int int51 = dateTime50.getMs();
    java.text.SimpleDateFormat simpleDateFormat52 = net.ajaskey.common.Utils.sdf;
    dateTime50.setSdf(simpleDateFormat52);
    int int54 = dateTime50.getDayOfWeek();
    net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime(100L);
    double double61 = dateTime58.getDeltaYears(dateTime60);
    java.util.Calendar calendar62 = dateTime58.getCal();
    dateTime50.set(calendar62);
    java.text.SimpleDateFormat simpleDateFormat65 = null;
    net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat65);
    net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double69 = dateTime66.getDeltaYears(dateTime68);
    net.ajaskey.common.DateTime dateTime73 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean74 = dateTime68.isEqual(dateTime73);
    java.util.Calendar calendar75 = dateTime68.getCal();
    net.ajaskey.common.DateTime dateTime76 = new net.ajaskey.common.DateTime(calendar75);
    dateTime50.set(calendar75);
    java.text.SimpleDateFormat simpleDateFormat80 = null;
    java.text.SimpleDateFormat simpleDateFormat81 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime82 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat80, simpleDateFormat81);
    net.ajaskey.common.DateTime dateTime83 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat81);
    dateTime50.setSdf(simpleDateFormat81);
    long long85 = dateTime43.getDeltaMilliSeconds(dateTime50);
    int int86 = dateTime11.getYears(dateTime43);
    java.lang.String str87 = dateTime43.toString();
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertNull(dateTime10);
    org.junit.Assert.assertNotNull(dateTime11);
    org.junit.Assert.assertEquals("'" + str18 + "' != '" + "January" + "'", str18, "January");
    org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
    org.junit.Assert.assertEquals(
        "'" + str21 + "' != '" + "                                                                                               52.00" + "'", str21,
        "                                                                                               52.00");
    org.junit.Assert.assertEquals("'" + str28 + "' != '" + "January" + "'", str28, "January");
    org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-1972.041095890411d) + "'", double37 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    org.junit.Assert.assertNotNull(date39);
    org.junit.Assert.assertEquals(date39.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
    org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
    org.junit.Assert.assertNull(dateTime47);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    org.junit.Assert.assertTrue("'" + int51 + "' != '" + 100 + "'", int51 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat52);
    org.junit.Assert.assertTrue("'" + int54 + "' != '" + 4 + "'", int54 == 4);
    org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-1972.041095890411d) + "'", double61 == (-1972.041095890411d));
    org.junit.Assert.assertNotNull(calendar62);
// flaky:         org.junit.Assert.assertEquals(calendar62.toString(), "java.util.GregorianCalendar[time=-62190298588437,areFieldsSet=true,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=3,SECOND=31,MILLISECOND=563,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    org.junit.Assert.assertNotNull(calendar75);
    org.junit.Assert.assertEquals(calendar75.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertNotNull(simpleDateFormat81);
    org.junit.Assert.assertTrue("'" + long85 + "' != '" + 0L + "'", long85 == 0L);
    org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
    org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
  }

  @Test
  public void test677() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test677");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    java.text.SimpleDateFormat simpleDateFormat8 = null;
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double12 = dateTime9.getDeltaYears(dateTime11);
    boolean boolean13 = dateTime9.isWeekday();
    boolean boolean14 = dateTime3.sameDate(dateTime9);
    net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(0L);
    boolean boolean17 = dateTime9.isGreaterThanOrEqual(dateTime16);
    java.text.SimpleDateFormat simpleDateFormat21 = null;
    java.text.SimpleDateFormat simpleDateFormat22 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat21, simpleDateFormat22);
    net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat22);
    net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(0L);
    int int27 = dateTime26.getMs();
    java.text.SimpleDateFormat simpleDateFormat29 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat31 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat32 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime("", simpleDateFormat31, simpleDateFormat32);
    net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat29,
        simpleDateFormat32);
    dateTime26.setSdf(simpleDateFormat32);
    net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime("UNKNOWN", simpleDateFormat22, simpleDateFormat32);
    dateTime16.setSdf(simpleDateFormat32);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertNotNull(simpleDateFormat22);
    org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    org.junit.Assert.assertNotNull(simpleDateFormat29);
    org.junit.Assert.assertNotNull(simpleDateFormat31);
    org.junit.Assert.assertNotNull(simpleDateFormat32);
  }

  @Test
  public void test678() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test678");
    java.text.SimpleDateFormat simpleDateFormat3 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat5 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat6 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("", simpleDateFormat5, simpleDateFormat6);
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat3, simpleDateFormat6);
    java.text.SimpleDateFormat simpleDateFormat10 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat11 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime("", simpleDateFormat10, simpleDateFormat11);
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("", simpleDateFormat6, simpleDateFormat11);
    java.text.SimpleDateFormat simpleDateFormat16 = null;
    java.text.SimpleDateFormat simpleDateFormat17 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat16, simpleDateFormat17);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat17);
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("Fri 31-Dec-0001 17:00:00", simpleDateFormat6, simpleDateFormat17);
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int23 = dateTime22.getHour();
    int int24 = dateTime22.getDayOfMonth();
    int int25 = dateTime22.getYear();
    net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(dateTime22);
    int int27 = dateTime20.getYears(dateTime26);
    int int28 = dateTime20.getDayOfMonth();
    net.ajaskey.common.DateTime dateTime31 = dateTime20.parse("Thu 10-Apr-0002 14:03:23", "Thu 10-Apr-0002 14:03:20");
    boolean boolean32 = dateTime20.isWeekday();
    org.junit.Assert.assertNotNull(simpleDateFormat3);
    org.junit.Assert.assertNotNull(simpleDateFormat5);
    org.junit.Assert.assertNotNull(simpleDateFormat6);
    org.junit.Assert.assertNotNull(simpleDateFormat10);
    org.junit.Assert.assertNotNull(simpleDateFormat11);
    org.junit.Assert.assertNotNull(simpleDateFormat17);
    org.junit.Assert.assertTrue("'" + int23 + "' != '" + 5 + "'", int23 == 5);
    org.junit.Assert.assertTrue("'" + int24 + "' != '" + 31 + "'", int24 == 31);
    org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1969 + "'", int25 == 1969);
    org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
    org.junit.Assert.assertNull(dateTime31);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
  }

  @Test
  public void test679() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test679");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    dateTime1.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str6 = dateTime1.getMonth();
    int int7 = dateTime1.getMs();
    java.lang.String str9 = dateTime1.format("                                                                                               52.00");
    int int10 = dateTime1.getSecond();
    java.lang.String str11 = dateTime1.format();
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime((-61778343404661L));
    java.lang.String str15 = dateTime13
        .format("                                                                                               52.00");
    dateTime1.set(dateTime13);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "January" + "'", str6, "January");
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
    org.junit.Assert.assertEquals(
        "'" + str9 + "' != '" + "                                                                                               52.00" + "'", str9,
        "                                                                                               52.00");
    org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "BAD-DATE-FORMAT" + "'", str11, "BAD-DATE-FORMAT");
    org.junit.Assert.assertEquals(
        "'" + str15 + "' != '" + "                                                                                               52.00" + "'", str15,
        "                                                                                               52.00");
  }

  @Test
  public void test680() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test680");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    int int2 = dateTime1.getMs();
    java.text.SimpleDateFormat simpleDateFormat3 = net.ajaskey.common.Utils.sdf;
    dateTime1.setSdf(simpleDateFormat3);
    java.lang.String str5 = dateTime1.toFullString();
    net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime(100L);
    int int8 = dateTime7.getMs();
    java.text.SimpleDateFormat simpleDateFormat9 = net.ajaskey.common.Utils.sdf;
    dateTime7.setSdf(simpleDateFormat9);
    java.lang.String str11 = dateTime7.toFullString();
    java.lang.String str12 = dateTime7.format();
    int int13 = dateTime1.getYears(dateTime7);
    int int14 = dateTime7.getDayOfWeek();
    int int15 = dateTime7.getYear();
    java.lang.String str17 = dateTime7.format("Thu 10-Apr-0002 14:03:16");
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat3);
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str5, "Wed 31-Dec-1969 17:00:00");
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat9);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str11, "Wed 31-Dec-1969 17:00:00");
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "31-Dec-1969" + "'", str12, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    org.junit.Assert.assertTrue("'" + int14 + "' != '" + 4 + "'", int14 == 4);
    org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1969 + "'", int15 == 1969);
    org.junit.Assert.assertEquals("'" + str17 + "' != '" + "BAD-DATE-FORMAT" + "'", str17, "BAD-DATE-FORMAT");
  }

  @Test
  public void test681() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test681");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    java.text.SimpleDateFormat simpleDateFormat8 = null;
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double12 = dateTime9.getDeltaYears(dateTime11);
    boolean boolean13 = dateTime9.isWeekday();
    boolean boolean14 = dateTime3.sameDate(dateTime9);
    java.text.SimpleDateFormat simpleDateFormat16 = null;
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double20 = dateTime17.getDeltaYears(dateTime19);
    net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean25 = dateTime19.isEqual(dateTime24);
    dateTime3.set(dateTime24);
    net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double29 = dateTime24.getDeltaYears(dateTime28);
    java.text.SimpleDateFormat simpleDateFormat31 = null;
    net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat31);
    net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double35 = dateTime32.getDeltaYears(dateTime34);
    boolean boolean36 = dateTime32.isWeekday();
    net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime(100L);
    int int39 = dateTime38.getMs();
    java.lang.String str40 = dateTime38.toString();
    int int41 = dateTime38.getMs();
    java.util.Calendar calendar42 = dateTime38.getCal();
    dateTime32.set(calendar42);
    dateTime24.set(calendar42);
    java.lang.String str45 = dateTime24.toString();
    int int46 = dateTime24.getSecond();
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-1972.041095890411d) + "'", double29 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
    org.junit.Assert.assertEquals("'" + str40 + "' != '" + "31-Dec-1969" + "'", str40, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
    org.junit.Assert.assertNotNull(calendar42);
    org.junit.Assert.assertEquals(calendar42.toString(),
        "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertEquals("'" + str45 + "' != '" + "31-Dec-1969" + "'", str45, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
  }

  @Test
  public void test682() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test682");
    net.ajaskey.common.Utils.makeDir("                           -719,795");
  }

  @Test
  public void test683() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test683");
    java.text.SimpleDateFormat simpleDateFormat1 = null;
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
    net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double5 = dateTime2.getDeltaYears(dateTime4);
    int int6 = dateTime4.getDayOfYear();
    net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime();
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(100L);
    dateTime9.set((int) (byte) 100, (-1), (int) '#');
    java.text.SimpleDateFormat simpleDateFormat14 = dateTime9.getSdf();
    boolean boolean15 = dateTime7.isEqual(dateTime9);
    java.text.SimpleDateFormat simpleDateFormat17 = null;
    net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat17);
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double21 = dateTime18.getDeltaYears(dateTime20);
    net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean26 = dateTime20.isEqual(dateTime25);
    java.text.SimpleDateFormat simpleDateFormat28 = null;
    java.text.SimpleDateFormat simpleDateFormat29 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat28, simpleDateFormat29);
    net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime(100L);
    double double37 = dateTime34.getDeltaYears(dateTime36);
    boolean boolean38 = dateTime36.isWeekday();
    java.util.Date date39 = dateTime36.getTime();
    java.lang.String str40 = dateTime36.toString();
    net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime(100L);
    int int43 = dateTime42.getMs();
    net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime(100L);
    double double50 = dateTime47.getDeltaYears(dateTime49);
    java.text.SimpleDateFormat simpleDateFormat51 = dateTime47.getSdf();
    boolean boolean52 = dateTime42.isLessThanOrEqual(dateTime47);
    boolean boolean53 = dateTime36.isLessThan(dateTime47);
    java.lang.String str54 = dateTime36.toString();
    long long55 = dateTime30.getDeltaMilliSeconds(dateTime36);
    net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime(100L);
    double double62 = dateTime59.getDeltaYears(dateTime61);
    boolean boolean63 = dateTime61.isWeekday();
    java.util.Date date64 = dateTime61.getTime();
    int int65 = dateTime61.getMinute();
    boolean boolean66 = dateTime30.sameDate(dateTime61);
    int int67 = dateTime20.getYears(dateTime61);
    int int68 = dateTime61.getHour();
    dateTime9.set(dateTime61);
    boolean boolean70 = dateTime4.isLessThan(dateTime61);
    org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 365 + "'", int6 == 365);
    org.junit.Assert.assertNull(simpleDateFormat14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertNotNull(simpleDateFormat29);
    org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-1972.041095890411d) + "'", double37 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    org.junit.Assert.assertNotNull(date39);
    org.junit.Assert.assertEquals(date39.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str40 + "' != '" + "31-Dec-1969" + "'", str40, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
    org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-1972.041095890411d) + "'", double50 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat51);
    org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    org.junit.Assert.assertEquals("'" + str54 + "' != '" + "31-Dec-1969" + "'", str54, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + long55 + "' != '" + 0L + "'", long55 == 0L);
    org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-1972.041095890411d) + "'", double62 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    org.junit.Assert.assertNotNull(date64);
    org.junit.Assert.assertEquals(date64.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
    org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
    org.junit.Assert.assertTrue("'" + int68 + "' != '" + 5 + "'", int68 == 5);
    org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
  }

  @Test
  public void test684() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test684");
    java.lang.String str2 = net.ajaskey.common.Utils.lfmt((long) 50, 2);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "50" + "'", str2, "50");
  }

  @Test
  public void test685() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test685");
    net.ajaskey.common.Utils.NL = "      -62,190,298,597,820";
  }

  @Test
  public void test686() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test686");
    java.lang.String str2 = net.ajaskey.common.Utils.ifmt((int) 'a', 1);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "97" + "'", str2, "97");
  }

  @Test
  public void test687() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test687");
    java.text.SimpleDateFormat simpleDateFormat1 = null;
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
    net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double5 = dateTime2.getDeltaYears(dateTime4);
    int int6 = dateTime4.getDayOfYear();
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(0L);
    long long9 = dateTime4.getDeltaDays(dateTime8);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
    int int12 = dateTime11.getMs();
    net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(100L);
    double double19 = dateTime16.getDeltaYears(dateTime18);
    java.text.SimpleDateFormat simpleDateFormat20 = dateTime16.getSdf();
    boolean boolean21 = dateTime11.isLessThanOrEqual(dateTime16);
    java.lang.String str22 = dateTime11.getDay();
    java.text.SimpleDateFormat simpleDateFormat26 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat28 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat29 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime("", simpleDateFormat28, simpleDateFormat29);
    net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat26,
        simpleDateFormat29);
    java.text.SimpleDateFormat simpleDateFormat33 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat34 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("", simpleDateFormat33, simpleDateFormat34);
    net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime("", simpleDateFormat29, simpleDateFormat34);
    java.text.SimpleDateFormat simpleDateFormat39 = null;
    java.text.SimpleDateFormat simpleDateFormat40 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat39, simpleDateFormat40);
    net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat40);
    net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime("Fri 31-Dec-0001 17:00:00", simpleDateFormat29, simpleDateFormat40);
    dateTime11.setSdf(simpleDateFormat40);
    boolean boolean45 = dateTime4.isLessThanOrEqual(dateTime11);
    java.text.SimpleDateFormat simpleDateFormat48 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat50 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat51 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime("", simpleDateFormat50, simpleDateFormat51);
    net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat48,
        simpleDateFormat51);
    net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat48);
    boolean boolean55 = dateTime4.isEqual(dateTime54);
    org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 365 + "'", int6 == 365);
    org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
    org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
    org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-1972.041095890411d) + "'", double19 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat20);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Wednesday" + "'", str22, "Wednesday");
    org.junit.Assert.assertNotNull(simpleDateFormat26);
    org.junit.Assert.assertNotNull(simpleDateFormat28);
    org.junit.Assert.assertNotNull(simpleDateFormat29);
    org.junit.Assert.assertNotNull(simpleDateFormat33);
    org.junit.Assert.assertNotNull(simpleDateFormat34);
    org.junit.Assert.assertNotNull(simpleDateFormat40);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    org.junit.Assert.assertNotNull(simpleDateFormat48);
    org.junit.Assert.assertNotNull(simpleDateFormat50);
    org.junit.Assert.assertNotNull(simpleDateFormat51);
    org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
  }

  @Test
  public void test688() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test688");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    int int2 = dateTime1.getMs();
    java.text.SimpleDateFormat simpleDateFormat3 = net.ajaskey.common.Utils.sdf;
    dateTime1.setSdf(simpleDateFormat3);
    java.lang.String str5 = dateTime1.toFullString();
    net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime(100L);
    int int8 = dateTime7.getMs();
    java.text.SimpleDateFormat simpleDateFormat9 = net.ajaskey.common.Utils.sdf;
    dateTime7.setSdf(simpleDateFormat9);
    java.lang.String str11 = dateTime7.toFullString();
    java.lang.String str12 = dateTime7.format();
    int int13 = dateTime1.getYears(dateTime7);
    java.lang.String str14 = dateTime1.getMonth();
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat3);
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str5, "Wed 31-Dec-1969 17:00:00");
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat9);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str11, "Wed 31-Dec-1969 17:00:00");
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "31-Dec-1969" + "'", str12, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "December" + "'", str14, "December");
  }

  @Test
  public void test689() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test689");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(1, 5, 1);
  }

  @Test
  public void test690() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test690");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    java.text.SimpleDateFormat simpleDateFormat8 = null;
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double12 = dateTime9.getDeltaYears(dateTime11);
    boolean boolean13 = dateTime9.isWeekday();
    boolean boolean14 = dateTime3.sameDate(dateTime9);
    java.text.SimpleDateFormat simpleDateFormat16 = null;
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double20 = dateTime17.getDeltaYears(dateTime19);
    net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean25 = dateTime19.isEqual(dateTime24);
    dateTime3.set(dateTime24);
    java.lang.String str28 = dateTime24.format("hi!");
    java.util.Calendar calendar29 = dateTime24.getCal();
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertEquals("'" + str28 + "' != '" + "BAD-DATE-FORMAT" + "'", str28, "BAD-DATE-FORMAT");
    org.junit.Assert.assertNotNull(calendar29);
// flaky:         org.junit.Assert.assertEquals(calendar29.toString(), "java.util.GregorianCalendar[time=-62190298588167,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=3,SECOND=31,MILLISECOND=833,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
  }

  @Test
  public void test691() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test691");
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("Thursday", "Thu 10-Apr-0002 14:03:19");
  }

  @Test
  public void test692() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test692");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    int int2 = dateTime1.getMs();
    java.lang.String str3 = dateTime1.toString();
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int6 = dateTime5.getHour();
    int int7 = dateTime5.getDayOfMonth();
    dateTime1.set(dateTime5);
    java.text.SimpleDateFormat simpleDateFormat11 = null;
    java.text.SimpleDateFormat simpleDateFormat12 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat11, simpleDateFormat12);
    net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat12);
    dateTime5.setSdf(simpleDateFormat12);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    java.lang.String str20 = dateTime19.format();
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int23 = dateTime22.getDayOfWeek();
    java.lang.String str24 = dateTime22.toFullString();
    net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(100L);
    int int27 = dateTime26.getMs();
    net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime(100L);
    double double34 = dateTime31.getDeltaYears(dateTime33);
    java.text.SimpleDateFormat simpleDateFormat35 = dateTime31.getSdf();
    boolean boolean36 = dateTime26.isLessThanOrEqual(dateTime31);
    net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime(100L);
    int int39 = dateTime38.getMs();
    java.lang.String str40 = dateTime38.toString();
    net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int43 = dateTime42.getHour();
    int int44 = dateTime42.getDayOfMonth();
    dateTime38.set(dateTime42);
    double double46 = dateTime31.getDeltaYears(dateTime42);
    boolean boolean47 = net.ajaskey.common.Utils.sameDate(dateTime22, dateTime42);
    int int48 = dateTime19.getYears(dateTime22);
    boolean boolean49 = dateTime5.isEqual(dateTime19);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "31-Dec-1969" + "'", str3, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 31 + "'", int7 == 31);
    org.junit.Assert.assertNotNull(simpleDateFormat12);
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "BAD-DATE-FORMAT" + "'", str20, "BAD-DATE-FORMAT");
    org.junit.Assert.assertTrue("'" + int23 + "' != '" + 4 + "'", int23 == 4);
    org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str24, "Wed 31-Dec-1969 17:00:00");
    org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
    org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-1972.041095890411d) + "'", double34 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat35);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
    org.junit.Assert.assertEquals("'" + str40 + "' != '" + "31-Dec-1969" + "'", str40, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int43 + "' != '" + 5 + "'", int43 == 5);
    org.junit.Assert.assertTrue("'" + int44 + "' != '" + 31 + "'", int44 == 31);
    org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-1972.041095890411d) + "'", double46 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1967 + "'", int48 == 1967);
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
  }

  @Test
  public void test693() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test693");
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("UNKNOWN", "Thu 10-Apr-0002 14:03:19");
    java.text.SimpleDateFormat simpleDateFormat6 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat8 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat9 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("", simpleDateFormat8, simpleDateFormat9);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat6, simpleDateFormat9);
    net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat6);
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("December", simpleDateFormat6);
    dateTime2.setSdf(simpleDateFormat6);
    org.junit.Assert.assertNotNull(simpleDateFormat6);
    org.junit.Assert.assertNotNull(simpleDateFormat8);
    org.junit.Assert.assertNotNull(simpleDateFormat9);
  }

  @Test
  public void test694() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test694");
    java.text.SimpleDateFormat simpleDateFormat2 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat5 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("", simpleDateFormat4, simpleDateFormat5);
    net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat2, simpleDateFormat5);
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat2);
    int int9 = dateTime8.getDayOfWeek();
    org.junit.Assert.assertNotNull(simpleDateFormat2);
    org.junit.Assert.assertNotNull(simpleDateFormat4);
    org.junit.Assert.assertNotNull(simpleDateFormat5);
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
  }

  @Test
  public void test695() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test695");
    java.util.Map<java.lang.String, java.lang.Integer> strMap0 = null;
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str2 = net.ajaskey.common.Utils.findName(strMap0, (java.lang.Integer) 25);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
    }
    catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
  }

  @Test
  public void test696() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test696");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(100L);
    int int4 = dateTime3.getMs();
    java.text.SimpleDateFormat simpleDateFormat5 = net.ajaskey.common.Utils.sdf;
    dateTime3.setSdf(simpleDateFormat5);
    java.text.SimpleDateFormat simpleDateFormat9 = null;
    java.text.SimpleDateFormat simpleDateFormat10 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat9, simpleDateFormat10);
    net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat10);
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("         52", simpleDateFormat5, simpleDateFormat10);
    net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(100L);
    int int16 = dateTime15.getMs();
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(100L);
    double double23 = dateTime20.getDeltaYears(dateTime22);
    java.text.SimpleDateFormat simpleDateFormat24 = dateTime20.getSdf();
    boolean boolean25 = dateTime15.isLessThanOrEqual(dateTime20);
    dateTime20.setFirstWorkDay();
    java.lang.String str27 = dateTime20.toFullString();
    net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime(100L);
    double double34 = dateTime31.getDeltaYears(dateTime33);
    java.text.SimpleDateFormat simpleDateFormat36 = null;
    net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat36);
    net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double40 = dateTime37.getDeltaYears(dateTime39);
    boolean boolean41 = dateTime37.isWeekday();
    boolean boolean42 = dateTime31.sameDate(dateTime37);
    net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime(0L);
    boolean boolean45 = dateTime37.isGreaterThanOrEqual(dateTime44);
    net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime(100L);
    dateTime47.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str52 = dateTime47.getMonth();
    java.text.SimpleDateFormat simpleDateFormat54 = null;
    net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat54);
    net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double58 = dateTime55.getDeltaYears(dateTime57);
    boolean boolean59 = dateTime47.isLessThan(dateTime55);
    net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime(100L);
    double double66 = dateTime63.getDeltaYears(dateTime65);
    net.ajaskey.common.DateTime dateTime67 = null;
    long long68 = dateTime63.getDeltaDays(dateTime67);
    boolean boolean69 = dateTime55.isLessThanOrEqual(dateTime63);
    java.lang.String str70 = dateTime55.format();
    boolean boolean71 = dateTime37.isGreaterThan(dateTime55);
    boolean boolean72 = net.ajaskey.common.Utils.sameMonth(dateTime20, dateTime37);
    java.text.SimpleDateFormat simpleDateFormat76 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat78 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat79 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime80 = new net.ajaskey.common.DateTime("", simpleDateFormat78, simpleDateFormat79);
    net.ajaskey.common.DateTime dateTime81 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat76,
        simpleDateFormat79);
    net.ajaskey.common.DateTime dateTime82 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat76);
    net.ajaskey.common.DateTime dateTime83 = new net.ajaskey.common.DateTime("December", simpleDateFormat76);
    dateTime37.setSdf(simpleDateFormat76);
    net.ajaskey.common.DateTime dateTime85 = new net.ajaskey.common.DateTime("                           -719,795", simpleDateFormat5,
        simpleDateFormat76);
    int int86 = dateTime85.getDayOfMonth();
    dateTime85.setFirstWorkDay();
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat5);
    org.junit.Assert.assertNotNull(simpleDateFormat10);
    org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
    org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-1972.041095890411d) + "'", double23 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat24);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Thu 10-Apr-0002 14:03:31" + "'", str27, "Thu 10-Apr-0002 14:03:31");
    org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-1972.041095890411d) + "'", double34 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    org.junit.Assert.assertEquals("'" + str52 + "' != '" + "January" + "'", str52, "January");
    org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-1972.041095890411d) + "'", double66 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + long68 + "' != '" + 0L + "'", long68 == 0L);
    org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    org.junit.Assert.assertEquals("'" + str70 + "' != '" + "BAD-DATE-FORMAT" + "'", str70, "BAD-DATE-FORMAT");
    org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    org.junit.Assert.assertNotNull(simpleDateFormat76);
    org.junit.Assert.assertNotNull(simpleDateFormat78);
    org.junit.Assert.assertNotNull(simpleDateFormat79);
    org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
  }

  @Test
  public void test697() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test697");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    dateTime1.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str6 = dateTime1.getMonth();
    int int7 = dateTime1.getMs();
    java.lang.String str9 = dateTime1.format("                                                                                               52.00");
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
    dateTime11.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str16 = dateTime11.getMonth();
    long long17 = dateTime1.getDeltaDays(dateTime11);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(100L);
    dateTime19.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str24 = dateTime19.getMonth();
    java.text.SimpleDateFormat simpleDateFormat26 = null;
    net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat26);
    net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double30 = dateTime27.getDeltaYears(dateTime29);
    boolean boolean31 = dateTime19.isLessThan(dateTime27);
    net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(100L);
    double double38 = dateTime35.getDeltaYears(dateTime37);
    net.ajaskey.common.DateTime dateTime39 = null;
    long long40 = dateTime35.getDeltaDays(dateTime39);
    boolean boolean41 = dateTime27.isLessThanOrEqual(dateTime35);
    boolean boolean42 = dateTime1.isGreaterThanOrEqual(dateTime35);
    boolean boolean43 = dateTime35.isNull();
    java.util.Calendar calendar44 = dateTime35.getCal();
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "January" + "'", str6, "January");
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
    org.junit.Assert.assertEquals(
        "'" + str9 + "' != '" + "                                                                                               52.00" + "'", str9,
        "                                                                                               52.00");
    org.junit.Assert.assertEquals("'" + str16 + "' != '" + "January" + "'", str16, "January");
    org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
    org.junit.Assert.assertEquals("'" + str24 + "' != '" + "January" + "'", str24, "January");
    org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1972.041095890411d) + "'", double38 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    org.junit.Assert.assertNotNull(calendar44);
// flaky:         org.junit.Assert.assertEquals(calendar44.toString(), "java.util.GregorianCalendar[time=-62190298588064,areFieldsSet=true,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=3,SECOND=31,MILLISECOND=936,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
  }

  @Test
  public void test698() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test698");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    java.text.SimpleDateFormat simpleDateFormat7 = dateTime3.getSdf();
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(100L);
    double double14 = dateTime11.getDeltaYears(dateTime13);
    boolean boolean15 = dateTime13.isWeekday();
    net.ajaskey.common.DateTime dateTime18 = dateTime13.parse("31-Dec-1969", "January");
    net.ajaskey.common.DateTime dateTime19 = net.ajaskey.common.DateTime.copy(dateTime13);
    boolean boolean20 = dateTime3.sameDate(dateTime19);
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(100L);
    dateTime22.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str27 = dateTime22.getMonth();
    int int28 = dateTime22.getMs();
    net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime(100L);
    double double35 = dateTime32.getDeltaYears(dateTime34);
    java.text.SimpleDateFormat simpleDateFormat36 = dateTime32.getSdf();
    net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime(100L);
    double double43 = dateTime40.getDeltaYears(dateTime42);
    boolean boolean44 = dateTime42.isWeekday();
    net.ajaskey.common.DateTime dateTime47 = dateTime42.parse("31-Dec-1969", "January");
    net.ajaskey.common.DateTime dateTime48 = net.ajaskey.common.DateTime.copy(dateTime42);
    boolean boolean49 = dateTime32.sameDate(dateTime48);
    net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime(100L);
    double double56 = dateTime53.getDeltaYears(dateTime55);
    boolean boolean57 = dateTime48.isGreaterThan(dateTime53);
    int int58 = dateTime53.getDayOfWeek();
    boolean boolean59 = dateTime22.isGreaterThan(dateTime53);
    long long60 = dateTime19.getDeltaMilliSeconds(dateTime53);
    dateTime19.set(8, 1970, (int) ' ');
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat7);
    org.junit.Assert.assertTrue("'" + double14 + "' != '" + (-1972.041095890411d) + "'", double14 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    org.junit.Assert.assertNull(dateTime18);
    org.junit.Assert.assertNotNull(dateTime19);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "January" + "'", str27, "January");
    org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
    org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-1972.041095890411d) + "'", double35 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat36);
    org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-1972.041095890411d) + "'", double43 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    org.junit.Assert.assertNull(dateTime47);
    org.junit.Assert.assertNotNull(dateTime48);
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-1972.041095890411d) + "'", double56 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    org.junit.Assert.assertTrue("'" + int58 + "' != '" + 5 + "'", int58 == 5);
    org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
// flaky:         org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-62190298588147L) + "'", long60 == (-62190298588147L));
  }

  @Test
  public void test699() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test699");
    net.ajaskey.common.Utils.sleep(3);
  }

  @Test
  public void test700() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test700");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    java.text.SimpleDateFormat simpleDateFormat5 = null;
    net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat5);
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double9 = dateTime6.getDeltaYears(dateTime8);
    boolean boolean10 = dateTime3.isLessThan(dateTime8);
    int int11 = dateTime3.getHour();
    net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(100L);
    double double18 = dateTime15.getDeltaYears(dateTime17);
    java.text.SimpleDateFormat simpleDateFormat20 = null;
    net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat20);
    net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double24 = dateTime21.getDeltaYears(dateTime23);
    boolean boolean25 = dateTime21.isWeekday();
    boolean boolean26 = dateTime15.sameDate(dateTime21);
    java.text.SimpleDateFormat simpleDateFormat28 = null;
    net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat28);
    net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double32 = dateTime29.getDeltaYears(dateTime31);
    net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean37 = dateTime31.isEqual(dateTime36);
    dateTime15.set(dateTime36);
    boolean boolean39 = net.ajaskey.common.Utils.sameDate(dateTime3, dateTime36);
    java.util.Date date40 = dateTime3.getTime();
    net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime(100L);
    double double47 = dateTime44.getDeltaYears(dateTime46);
    java.text.SimpleDateFormat simpleDateFormat48 = dateTime44.getSdf();
    net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime(100L);
    double double55 = dateTime52.getDeltaYears(dateTime54);
    boolean boolean56 = dateTime54.isWeekday();
    net.ajaskey.common.DateTime dateTime59 = dateTime54.parse("31-Dec-1969", "January");
    net.ajaskey.common.DateTime dateTime60 = net.ajaskey.common.DateTime.copy(dateTime54);
    boolean boolean61 = dateTime44.sameDate(dateTime60);
    net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime(100L);
    int int64 = dateTime63.getMs();
    net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime(100L);
    double double71 = dateTime68.getDeltaYears(dateTime70);
    java.text.SimpleDateFormat simpleDateFormat72 = dateTime68.getSdf();
    boolean boolean73 = dateTime63.isLessThanOrEqual(dateTime68);
    java.lang.String str74 = dateTime63.getDay();
    boolean boolean75 = dateTime60.isLessThanOrEqual(dateTime63);
    long long76 = dateTime3.getDeltaDays(dateTime63);
    boolean boolean77 = dateTime3.isNull();
    java.lang.String str78 = dateTime3.getDay();
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
    org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1972.041095890411d) + "'", double18 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    org.junit.Assert.assertNotNull(date40);
// flaky:         org.junit.Assert.assertEquals(date40.toString(), "Thu Apr 10 14:03:31 MST 2");
    org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-1972.041095890411d) + "'", double47 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat48);
    org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-1972.041095890411d) + "'", double55 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    org.junit.Assert.assertNull(dateTime59);
    org.junit.Assert.assertNotNull(dateTime60);
    org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    org.junit.Assert.assertTrue("'" + int64 + "' != '" + 100 + "'", int64 == 100);
    org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-1972.041095890411d) + "'", double71 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat72);
    org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Wednesday" + "'", str74, "Wednesday");
    org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    org.junit.Assert.assertTrue("'" + long76 + "' != '" + (-719795L) + "'", long76 == (-719795L));
    org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    org.junit.Assert.assertEquals("'" + str78 + "' != '" + "Thursday" + "'", str78, "Thursday");
  }

  @Test
  public void test701() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test701");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    int int2 = dateTime1.getMs();
    java.lang.String str3 = dateTime1.toString();
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int6 = dateTime5.getHour();
    int int7 = dateTime5.getDayOfMonth();
    dateTime1.set(dateTime5);
    dateTime5.setFirstWorkDay();
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "31-Dec-1969" + "'", str3, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 31 + "'", int7 == 31);
  }

  @Test
  public void test702() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test702");
    net.ajaskey.common.TextUtils.printline("Thu 10-Apr-0002 14:03:23");
  }

  @Test
  public void test703() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test703");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    java.text.SimpleDateFormat simpleDateFormat8 = null;
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double12 = dateTime9.getDeltaYears(dateTime11);
    dateTime11.set(0, 12, 0);
    boolean boolean17 = net.ajaskey.common.Utils.sameMonth(dateTime3, dateTime11);
    java.lang.Class<?> wildcardClass18 = dateTime11.getClass();
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertNotNull(wildcardClass18);
  }

  @Test
  public void test704() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test704");
    java.text.SimpleDateFormat simpleDateFormat1 = null;
    java.text.SimpleDateFormat simpleDateFormat2 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat1, simpleDateFormat2);
    java.lang.String str4 = dateTime3.getDay();
    java.lang.String str5 = dateTime3.getMonth();
    boolean boolean6 = dateTime3.isNull();
    java.util.Calendar calendar7 = dateTime3.getCal();
    org.junit.Assert.assertNotNull(simpleDateFormat2);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UNKNOWN" + "'", str4, "UNKNOWN");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UNKNOWN" + "'", str5, "UNKNOWN");
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    org.junit.Assert.assertNull(calendar7);
  }

  @Test
  public void test705() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test705");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    java.text.SimpleDateFormat simpleDateFormat5 = null;
    net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat5);
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double9 = dateTime6.getDeltaYears(dateTime8);
    boolean boolean10 = dateTime3.isLessThan(dateTime8);
    int int11 = dateTime3.getHour();
    net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(100L);
    double double18 = dateTime15.getDeltaYears(dateTime17);
    int int19 = dateTime15.getHour();
    net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime(100L);
    double double26 = dateTime23.getDeltaYears(dateTime25);
    boolean boolean27 = dateTime25.isWeekday();
    java.util.Date date28 = dateTime25.getTime();
    java.lang.String str29 = dateTime25.toString();
    net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(100L);
    int int32 = dateTime31.getMs();
    net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime(100L);
    double double39 = dateTime36.getDeltaYears(dateTime38);
    java.text.SimpleDateFormat simpleDateFormat40 = dateTime36.getSdf();
    boolean boolean41 = dateTime31.isLessThanOrEqual(dateTime36);
    boolean boolean42 = dateTime25.isLessThan(dateTime36);
    java.lang.String str43 = dateTime25.toString();
    boolean boolean44 = dateTime15.sameDate(dateTime25);
    int int45 = dateTime3.getYears(dateTime15);
    net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime(100L);
    double double52 = dateTime49.getDeltaYears(dateTime51);
    java.util.Date date53 = dateTime49.getTime();
    net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime(date53);
    net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime(date53);
    net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime(12, 4, (-1));
    int int60 = dateTime55.getYears(dateTime59);
    long long61 = dateTime3.getDeltaDays(dateTime55);
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
    org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1972.041095890411d) + "'", double18 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
    org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-1972.041095890411d) + "'", double26 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    org.junit.Assert.assertNotNull(date28);
    org.junit.Assert.assertEquals(date28.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str29 + "' != '" + "31-Dec-1969" + "'", str29, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
    org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-1972.041095890411d) + "'", double39 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat40);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    org.junit.Assert.assertEquals("'" + str43 + "' != '" + "31-Dec-1969" + "'", str43, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
    org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-1972.041095890411d) + "'", double52 == (-1972.041095890411d));
    org.junit.Assert.assertNotNull(date53);
// flaky:         org.junit.Assert.assertEquals(date53.toString(), "Thu Apr 10 14:03:32 MST 2");
    org.junit.Assert.assertTrue("'" + int60 + "' != '" + 10 + "'", int60 == 10);
    org.junit.Assert.assertTrue("'" + long61 + "' != '" + 0L + "'", long61 == 0L);
  }

  @Test
  public void test706() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test706");
    java.text.SimpleDateFormat simpleDateFormat1 = null;
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
    net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double5 = dateTime2.getDeltaYears(dateTime4);
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean10 = dateTime4.isEqual(dateTime9);
    java.text.SimpleDateFormat simpleDateFormat12 = null;
    java.text.SimpleDateFormat simpleDateFormat13 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat12, simpleDateFormat13);
    net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime(100L);
    double double21 = dateTime18.getDeltaYears(dateTime20);
    boolean boolean22 = dateTime20.isWeekday();
    java.util.Date date23 = dateTime20.getTime();
    java.lang.String str24 = dateTime20.toString();
    net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(100L);
    int int27 = dateTime26.getMs();
    net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime(100L);
    double double34 = dateTime31.getDeltaYears(dateTime33);
    java.text.SimpleDateFormat simpleDateFormat35 = dateTime31.getSdf();
    boolean boolean36 = dateTime26.isLessThanOrEqual(dateTime31);
    boolean boolean37 = dateTime20.isLessThan(dateTime31);
    java.lang.String str38 = dateTime20.toString();
    long long39 = dateTime14.getDeltaMilliSeconds(dateTime20);
    net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(100L);
    double double46 = dateTime43.getDeltaYears(dateTime45);
    boolean boolean47 = dateTime45.isWeekday();
    java.util.Date date48 = dateTime45.getTime();
    int int49 = dateTime45.getMinute();
    boolean boolean50 = dateTime14.sameDate(dateTime45);
    int int51 = dateTime4.getYears(dateTime45);
    int int52 = dateTime45.getDayOfWeek();
    java.lang.String str53 = dateTime45.toString();
    int int54 = dateTime45.getMs();
    int int55 = dateTime45.getDayOfWeek();
    org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertNotNull(simpleDateFormat13);
    org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-1972.041095890411d) + "'", double21 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    org.junit.Assert.assertNotNull(date23);
    org.junit.Assert.assertEquals(date23.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str24 + "' != '" + "31-Dec-1969" + "'", str24, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
    org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-1972.041095890411d) + "'", double34 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat35);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    org.junit.Assert.assertEquals("'" + str38 + "' != '" + "31-Dec-1969" + "'", str38, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
    org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-1972.041095890411d) + "'", double46 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    org.junit.Assert.assertNotNull(date48);
    org.junit.Assert.assertEquals(date48.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
    org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
    org.junit.Assert.assertTrue("'" + int52 + "' != '" + 4 + "'", int52 == 4);
    org.junit.Assert.assertEquals("'" + str53 + "' != '" + "31-Dec-1969" + "'", str53, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int54 + "' != '" + 100 + "'", int54 == 100);
    org.junit.Assert.assertTrue("'" + int55 + "' != '" + 4 + "'", int55 == 4);
  }

  @Test
  public void test707() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test707");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    int int2 = dateTime1.getMs();
    net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
    double double9 = dateTime6.getDeltaYears(dateTime8);
    java.text.SimpleDateFormat simpleDateFormat10 = dateTime6.getSdf();
    boolean boolean11 = dateTime1.isLessThanOrEqual(dateTime6);
    net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(100L);
    double double18 = dateTime15.getDeltaYears(dateTime17);
    java.text.SimpleDateFormat simpleDateFormat20 = null;
    net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat20);
    net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double24 = dateTime21.getDeltaYears(dateTime23);
    dateTime23.set(0, 12, 0);
    boolean boolean29 = net.ajaskey.common.Utils.sameMonth(dateTime15, dateTime23);
    int int30 = dateTime1.getYears(dateTime15);
    int int31 = dateTime15.getYear();
    net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    java.text.SimpleDateFormat simpleDateFormat37 = null;
    net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat37);
    net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double41 = dateTime38.getDeltaYears(dateTime40);
    boolean boolean42 = dateTime35.isLessThan(dateTime40);
    int int43 = dateTime35.getHour();
    net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime(100L);
    double double50 = dateTime47.getDeltaYears(dateTime49);
    java.text.SimpleDateFormat simpleDateFormat52 = null;
    net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat52);
    net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double56 = dateTime53.getDeltaYears(dateTime55);
    boolean boolean57 = dateTime53.isWeekday();
    boolean boolean58 = dateTime47.sameDate(dateTime53);
    java.text.SimpleDateFormat simpleDateFormat60 = null;
    net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat60);
    net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double64 = dateTime61.getDeltaYears(dateTime63);
    net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean69 = dateTime63.isEqual(dateTime68);
    dateTime47.set(dateTime68);
    boolean boolean71 = net.ajaskey.common.Utils.sameDate(dateTime35, dateTime68);
    java.util.Date date72 = dateTime35.getTime();
    dateTime15.set(date72);
    dateTime15.add((int) (byte) 1, (int) '4');
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1972.041095890411d) + "'", double18 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1968) + "'", int30 == (-1968));
    org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
    org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
    org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-1972.041095890411d) + "'", double50 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    org.junit.Assert.assertNotNull(date72);
// flaky:         org.junit.Assert.assertEquals(date72.toString(), "Thu Apr 10 14:03:32 MST 2");
  }

  @Test
  public void test708() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test708");
    net.ajaskey.common.Utils.NL = "                           -719,795";
  }

  @Test
  public void test709() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test709");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    int int2 = dateTime1.getMs();
    java.text.SimpleDateFormat simpleDateFormat3 = net.ajaskey.common.Utils.sdf;
    dateTime1.setSdf(simpleDateFormat3);
    int int5 = dateTime1.getSecond();
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat3);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
  }

  @Test
  public void test710() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test710");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    dateTime1.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str6 = dateTime1.getMonth();
    int int7 = dateTime1.getMs();
    java.lang.String str9 = dateTime1.format("                                                                                               52.00");
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
    dateTime11.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str16 = dateTime11.getMonth();
    long long17 = dateTime1.getDeltaDays(dateTime11);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(100L);
    dateTime19.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str24 = dateTime19.getMonth();
    java.text.SimpleDateFormat simpleDateFormat26 = null;
    net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat26);
    net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double30 = dateTime27.getDeltaYears(dateTime29);
    boolean boolean31 = dateTime19.isLessThan(dateTime27);
    net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(100L);
    double double38 = dateTime35.getDeltaYears(dateTime37);
    net.ajaskey.common.DateTime dateTime39 = null;
    long long40 = dateTime35.getDeltaDays(dateTime39);
    boolean boolean41 = dateTime27.isLessThanOrEqual(dateTime35);
    boolean boolean42 = dateTime1.isGreaterThanOrEqual(dateTime35);
    java.util.Calendar calendar43 = dateTime35.getCal();
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "January" + "'", str6, "January");
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
    org.junit.Assert.assertEquals(
        "'" + str9 + "' != '" + "                                                                                               52.00" + "'", str9,
        "                                                                                               52.00");
    org.junit.Assert.assertEquals("'" + str16 + "' != '" + "January" + "'", str16, "January");
    org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
    org.junit.Assert.assertEquals("'" + str24 + "' != '" + "January" + "'", str24, "January");
    org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1972.041095890411d) + "'", double38 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    org.junit.Assert.assertNotNull(calendar43);
// flaky:         org.junit.Assert.assertEquals(calendar43.toString(), "java.util.GregorianCalendar[time=-62190298587848,areFieldsSet=true,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=3,SECOND=32,MILLISECOND=152,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
  }

  @Test
  public void test711() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test711");
    java.text.SimpleDateFormat simpleDateFormat1 = null;
    java.text.SimpleDateFormat simpleDateFormat2 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat1, simpleDateFormat2);
    net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(100L);
    double double10 = dateTime7.getDeltaYears(dateTime9);
    boolean boolean11 = dateTime9.isWeekday();
    java.util.Date date12 = dateTime9.getTime();
    java.lang.String str13 = dateTime9.toString();
    net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(100L);
    int int16 = dateTime15.getMs();
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(100L);
    double double23 = dateTime20.getDeltaYears(dateTime22);
    java.text.SimpleDateFormat simpleDateFormat24 = dateTime20.getSdf();
    boolean boolean25 = dateTime15.isLessThanOrEqual(dateTime20);
    boolean boolean26 = dateTime9.isLessThan(dateTime20);
    java.lang.String str27 = dateTime9.toString();
    long long28 = dateTime3.getDeltaMilliSeconds(dateTime9);
    net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime(100L);
    double double35 = dateTime32.getDeltaYears(dateTime34);
    boolean boolean36 = dateTime34.isWeekday();
    java.util.Date date37 = dateTime34.getTime();
    int int38 = dateTime34.getMinute();
    boolean boolean39 = dateTime3.sameDate(dateTime34);
    int int40 = dateTime34.getYear();
    int int41 = dateTime34.getDayOfWeek();
    org.junit.Assert.assertNotNull(simpleDateFormat2);
    org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1972.041095890411d) + "'", double10 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    org.junit.Assert.assertNotNull(date12);
    org.junit.Assert.assertEquals(date12.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "31-Dec-1969" + "'", str13, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
    org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-1972.041095890411d) + "'", double23 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat24);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "31-Dec-1969" + "'", str27, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
    org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-1972.041095890411d) + "'", double35 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    org.junit.Assert.assertNotNull(date37);
    org.junit.Assert.assertEquals(date37.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1969 + "'", int40 == 1969);
    org.junit.Assert.assertTrue("'" + int41 + "' != '" + 4 + "'", int41 == 4);
  }

  @Test
  public void test712() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test712");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    dateTime1.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str6 = dateTime1.getMonth();
    java.text.SimpleDateFormat simpleDateFormat8 = null;
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double12 = dateTime9.getDeltaYears(dateTime11);
    boolean boolean13 = dateTime1.isLessThan(dateTime9);
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(100L);
    double double20 = dateTime17.getDeltaYears(dateTime19);
    net.ajaskey.common.DateTime dateTime21 = null;
    long long22 = dateTime17.getDeltaDays(dateTime21);
    boolean boolean23 = dateTime9.isLessThanOrEqual(dateTime17);
    net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(100L);
    double double30 = dateTime27.getDeltaYears(dateTime29);
    int int31 = dateTime27.getHour();
    boolean boolean32 = net.ajaskey.common.Utils.sameMonth(dateTime17, dateTime27);
    java.lang.String str33 = dateTime27.format();
    java.lang.String str34 = dateTime27.format();
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "January" + "'", str6, "January");
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-1972.041095890411d) + "'", double20 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-1972.041095890411d) + "'", double30 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    org.junit.Assert.assertEquals("'" + str33 + "' != '" + "BAD-DATE-FORMAT" + "'", str33, "BAD-DATE-FORMAT");
    org.junit.Assert.assertEquals("'" + str34 + "' != '" + "BAD-DATE-FORMAT" + "'", str34, "BAD-DATE-FORMAT");
  }

  @Test
  public void test713() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test713");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    boolean boolean7 = dateTime5.isWeekday();
    java.util.Date date8 = dateTime5.getTime();
    java.lang.String str9 = dateTime5.toString();
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) 2);
    java.text.SimpleDateFormat simpleDateFormat12 = dateTime11.getSdf();
    boolean boolean13 = dateTime5.sameDate(dateTime11);
    net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(100L);
    int int16 = dateTime15.getMs();
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(100L);
    double double23 = dateTime20.getDeltaYears(dateTime22);
    java.text.SimpleDateFormat simpleDateFormat24 = dateTime20.getSdf();
    boolean boolean25 = dateTime15.isLessThanOrEqual(dateTime20);
    boolean boolean26 = net.ajaskey.common.Utils.sameMonth(dateTime5, dateTime20);
    int int27 = dateTime5.getHour();
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertNotNull(date8);
    org.junit.Assert.assertEquals(date8.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "31-Dec-1969" + "'", str9, "31-Dec-1969");
    org.junit.Assert.assertNull(simpleDateFormat12);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
    org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-1972.041095890411d) + "'", double23 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat24);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertTrue("'" + int27 + "' != '" + 5 + "'", int27 == 5);
  }

  @Test
  public void test714() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test714");
    java.lang.String str2 = net.ajaskey.common.Utils.lfmt((long) (-1), (int) (short) 100);
    org.junit.Assert.assertEquals(
        "'" + str2 + "' != '" + "                                                                                                  -1" + "'", str2,
        "                                                                                                  -1");
  }

  @Test
  public void test715() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test715");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) '4');
  }

  @Test
  public void test716() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test716");
    java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readGzipFile("             0", false);
    org.junit.Assert.assertNull(strList2);
  }

  @Test
  public void test717() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test717");
    java.text.SimpleDateFormat simpleDateFormat1 = null;
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
    net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double5 = dateTime2.getDeltaYears(dateTime4);
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean10 = dateTime4.isEqual(dateTime9);
    int int11 = dateTime4.getDayOfWeek();
    java.lang.String str12 = dateTime4.format();
    net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(100L);
    dateTime14.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str19 = dateTime14.getMonth();
    java.text.SimpleDateFormat simpleDateFormat21 = null;
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat21);
    net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double25 = dateTime22.getDeltaYears(dateTime24);
    boolean boolean26 = dateTime14.isLessThan(dateTime22);
    net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime(100L);
    double double33 = dateTime30.getDeltaYears(dateTime32);
    net.ajaskey.common.DateTime dateTime34 = null;
    long long35 = dateTime30.getDeltaDays(dateTime34);
    boolean boolean36 = dateTime22.isLessThanOrEqual(dateTime30);
    boolean boolean37 = dateTime4.isGreaterThanOrEqual(dateTime30);
    net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime(100L);
    int int40 = dateTime39.getMs();
    java.text.SimpleDateFormat simpleDateFormat41 = net.ajaskey.common.Utils.sdf;
    dateTime39.setSdf(simpleDateFormat41);
    int int43 = dateTime39.getDayOfWeek();
    net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime(100L);
    double double50 = dateTime47.getDeltaYears(dateTime49);
    java.util.Calendar calendar51 = dateTime47.getCal();
    dateTime39.set(calendar51);
    java.text.SimpleDateFormat simpleDateFormat54 = null;
    net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat54);
    net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double58 = dateTime55.getDeltaYears(dateTime57);
    net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean63 = dateTime57.isEqual(dateTime62);
    java.util.Calendar calendar64 = dateTime57.getCal();
    net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime(calendar64);
    dateTime39.set(calendar64);
    int int67 = dateTime39.getDayOfYear();
    net.ajaskey.common.DateTime dateTime70 = dateTime39.parse("         52", "Thursday");
    double double71 = dateTime30.getDeltaYears(dateTime39);
    org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + int11 + "' != '" + 4 + "'", int11 == 4);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "BAD-DATE-FORMAT" + "'", str12, "BAD-DATE-FORMAT");
    org.junit.Assert.assertEquals("'" + str19 + "' != '" + "January" + "'", str19, "January");
    org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-1972.041095890411d) + "'", double33 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat41);
    org.junit.Assert.assertTrue("'" + int43 + "' != '" + 4 + "'", int43 == 4);
    org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-1972.041095890411d) + "'", double50 == (-1972.041095890411d));
    org.junit.Assert.assertNotNull(calendar51);
// flaky:         org.junit.Assert.assertEquals(calendar51.toString(), "java.util.GregorianCalendar[time=-62190298587691,areFieldsSet=true,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=3,SECOND=32,MILLISECOND=309,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    org.junit.Assert.assertNotNull(calendar64);
    org.junit.Assert.assertEquals(calendar64.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + int67 + "' != '" + 365 + "'", int67 == 365);
    org.junit.Assert.assertNull(dateTime70);
    org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-1972.041095890411d) + "'", double71 == (-1972.041095890411d));
  }

  @Test
  public void test718() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test718");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(62190298601123L);
    net.ajaskey.common.DateTime dateTime2 = net.ajaskey.common.DateTime.copy(dateTime1);
    org.junit.Assert.assertNotNull(dateTime2);
  }

  @Test
  public void test719() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test719");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(62190298601123L);
    int int2 = dateTime1.getMs();
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 123 + "'", int2 == 123);
  }

  @Test
  public void test720() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test720");
    java.lang.String str1 = net.ajaskey.common.Utils.getFromUrl("Fri 31-Dec-0001 17:00:00");
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
  }

  @Test
  public void test721() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test721");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    dateTime1.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str6 = dateTime1.getMonth();
    int int7 = dateTime1.getMs();
    java.lang.String str9 = dateTime1.format("                                                                                               52.00");
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
    dateTime11.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str16 = dateTime11.getMonth();
    long long17 = dateTime1.getDeltaDays(dateTime11);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(100L);
    dateTime19.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str24 = dateTime19.getMonth();
    java.text.SimpleDateFormat simpleDateFormat26 = null;
    net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat26);
    net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double30 = dateTime27.getDeltaYears(dateTime29);
    boolean boolean31 = dateTime19.isLessThan(dateTime27);
    net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(100L);
    double double38 = dateTime35.getDeltaYears(dateTime37);
    net.ajaskey.common.DateTime dateTime39 = null;
    long long40 = dateTime35.getDeltaDays(dateTime39);
    boolean boolean41 = dateTime27.isLessThanOrEqual(dateTime35);
    boolean boolean42 = dateTime1.isGreaterThanOrEqual(dateTime35);
    boolean boolean43 = dateTime35.isNull();
    net.ajaskey.common.DateTime dateTime44 = net.ajaskey.common.DateTime.copy(dateTime35);
    java.lang.String str46 = dateTime35.format("February");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "January" + "'", str6, "January");
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
    org.junit.Assert.assertEquals(
        "'" + str9 + "' != '" + "                                                                                               52.00" + "'", str9,
        "                                                                                               52.00");
    org.junit.Assert.assertEquals("'" + str16 + "' != '" + "January" + "'", str16, "January");
    org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
    org.junit.Assert.assertEquals("'" + str24 + "' != '" + "January" + "'", str24, "January");
    org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1972.041095890411d) + "'", double38 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    org.junit.Assert.assertNotNull(dateTime44);
    org.junit.Assert.assertEquals("'" + str46 + "' != '" + "BAD-DATE-FORMAT" + "'", str46, "BAD-DATE-FORMAT");
  }

  @Test
  public void test722() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test722");
    java.text.SimpleDateFormat simpleDateFormat3 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat5 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat6 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("", simpleDateFormat5, simpleDateFormat6);
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat3, simpleDateFormat6);
    net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(100L);
    int int13 = dateTime12.getMs();
    java.text.SimpleDateFormat simpleDateFormat14 = net.ajaskey.common.Utils.sdf;
    dateTime12.setSdf(simpleDateFormat14);
    int int16 = dateTime12.getDayOfWeek();
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(100L);
    double double23 = dateTime20.getDeltaYears(dateTime22);
    java.util.Calendar calendar24 = dateTime20.getCal();
    dateTime12.set(calendar24);
    java.text.SimpleDateFormat simpleDateFormat27 = null;
    net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat27);
    net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double31 = dateTime28.getDeltaYears(dateTime30);
    net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean36 = dateTime30.isEqual(dateTime35);
    java.util.Calendar calendar37 = dateTime30.getCal();
    net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime(calendar37);
    dateTime12.set(calendar37);
    java.text.SimpleDateFormat simpleDateFormat42 = null;
    java.text.SimpleDateFormat simpleDateFormat43 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat42, simpleDateFormat43);
    net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat43);
    dateTime12.setSdf(simpleDateFormat43);
    java.text.SimpleDateFormat simpleDateFormat50 = null;
    java.text.SimpleDateFormat simpleDateFormat51 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat50, simpleDateFormat51);
    net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat51);
    net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime("         14", simpleDateFormat51);
    net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime(
        "JanuaryThu 10-Apr-0002 14:03:11Thu 10-Apr-0002 14:03:11                                                                                               52.00Thu 10-Apr-0002 14:03:11hi!Thu 10-Apr-0002 14:03:11",
        simpleDateFormat43, simpleDateFormat51);
    net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 14:03:14", simpleDateFormat51);
    net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime("Invalid Time", simpleDateFormat3, simpleDateFormat51);
    java.text.SimpleDateFormat simpleDateFormat63 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat65 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat66 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime("", simpleDateFormat65, simpleDateFormat66);
    net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat63,
        simpleDateFormat66);
    net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat63);
    java.text.SimpleDateFormat simpleDateFormat73 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat75 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat76 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime("", simpleDateFormat75, simpleDateFormat76);
    net.ajaskey.common.DateTime dateTime78 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat73,
        simpleDateFormat76);
    java.text.SimpleDateFormat simpleDateFormat79 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime80 = new net.ajaskey.common.DateTime("", simpleDateFormat76, simpleDateFormat79);
    net.ajaskey.common.DateTime dateTime81 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat79);
    net.ajaskey.common.DateTime dateTime82 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat63, simpleDateFormat79);
    java.text.SimpleDateFormat simpleDateFormat87 = null;
    java.text.SimpleDateFormat simpleDateFormat88 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime89 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat87, simpleDateFormat88);
    net.ajaskey.common.DateTime dateTime90 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat88);
    net.ajaskey.common.DateTime dateTime91 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat88);
    net.ajaskey.common.DateTime dateTime92 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat88);
    net.ajaskey.common.DateTime dateTime93 = new net.ajaskey.common.DateTime("", simpleDateFormat79, simpleDateFormat88);
    net.ajaskey.common.DateTime dateTime94 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 14:03:11", simpleDateFormat79);
    net.ajaskey.common.DateTime dateTime95 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 14:03:29", simpleDateFormat3, simpleDateFormat79);
    org.junit.Assert.assertNotNull(simpleDateFormat3);
    org.junit.Assert.assertNotNull(simpleDateFormat5);
    org.junit.Assert.assertNotNull(simpleDateFormat6);
    org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat14);
    org.junit.Assert.assertTrue("'" + int16 + "' != '" + 4 + "'", int16 == 4);
    org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-1972.041095890411d) + "'", double23 == (-1972.041095890411d));
    org.junit.Assert.assertNotNull(calendar24);
// flaky:         org.junit.Assert.assertEquals(calendar24.toString(), "java.util.GregorianCalendar[time=-62190298587621,areFieldsSet=true,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=3,SECOND=32,MILLISECOND=379,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    org.junit.Assert.assertNotNull(calendar37);
    org.junit.Assert.assertEquals(calendar37.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertNotNull(simpleDateFormat43);
    org.junit.Assert.assertNotNull(simpleDateFormat51);
    org.junit.Assert.assertNotNull(simpleDateFormat63);
    org.junit.Assert.assertNotNull(simpleDateFormat65);
    org.junit.Assert.assertNotNull(simpleDateFormat66);
    org.junit.Assert.assertNotNull(simpleDateFormat73);
    org.junit.Assert.assertNotNull(simpleDateFormat75);
    org.junit.Assert.assertNotNull(simpleDateFormat76);
    org.junit.Assert.assertNotNull(simpleDateFormat79);
    org.junit.Assert.assertNotNull(simpleDateFormat88);
  }

  @Test
  public void test723() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test723");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    java.text.SimpleDateFormat simpleDateFormat5 = null;
    net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat5);
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double9 = dateTime6.getDeltaYears(dateTime8);
    boolean boolean10 = dateTime3.isLessThan(dateTime8);
    int int11 = dateTime3.getHour();
    net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(100L);
    double double18 = dateTime15.getDeltaYears(dateTime17);
    java.text.SimpleDateFormat simpleDateFormat20 = null;
    net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat20);
    net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double24 = dateTime21.getDeltaYears(dateTime23);
    boolean boolean25 = dateTime21.isWeekday();
    boolean boolean26 = dateTime15.sameDate(dateTime21);
    java.text.SimpleDateFormat simpleDateFormat28 = null;
    net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat28);
    net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double32 = dateTime29.getDeltaYears(dateTime31);
    net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean37 = dateTime31.isEqual(dateTime36);
    dateTime15.set(dateTime36);
    boolean boolean39 = net.ajaskey.common.Utils.sameDate(dateTime3, dateTime36);
    java.util.Date date40 = dateTime3.getTime();
    net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime();
    net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime(100L);
    dateTime43.set((int) (byte) 100, (-1), (int) '#');
    java.text.SimpleDateFormat simpleDateFormat48 = dateTime43.getSdf();
    boolean boolean49 = dateTime41.isEqual(dateTime43);
    net.ajaskey.common.DateTime dateTime50 = net.ajaskey.common.DateTime.copy(dateTime41);
    java.util.Calendar calendar51 = dateTime41.getCal();
    dateTime3.set(calendar51);
    net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime(calendar51);
    net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime(calendar51);
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
    org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1972.041095890411d) + "'", double18 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    org.junit.Assert.assertNotNull(date40);
// flaky:         org.junit.Assert.assertEquals(date40.toString(), "Thu Apr 10 14:03:32 MST 2");
    org.junit.Assert.assertNull(simpleDateFormat48);
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    org.junit.Assert.assertNotNull(dateTime50);
    org.junit.Assert.assertNotNull(calendar51);
// flaky:         org.junit.Assert.assertEquals(calendar51.toString(), "java.util.GregorianCalendar[time=1593115412416,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2020,MONTH=5,WEEK_OF_YEAR=26,WEEK_OF_MONTH=4,DAY_OF_MONTH=25,DAY_OF_YEAR=177,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=3,SECOND=32,MILLISECOND=416,ZONE_OFFSET=-25200000,DST_OFFSET=3600000]");
  }

  @Test
  public void test724() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test724");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) 1);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime(100L);
    double double8 = dateTime5.getDeltaYears(dateTime7);
    boolean boolean9 = dateTime7.isWeekday();
    java.util.Date date10 = dateTime7.getTime();
    java.lang.String str11 = dateTime7.toString();
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(100L);
    int int14 = dateTime13.getMs();
    net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime(100L);
    double double21 = dateTime18.getDeltaYears(dateTime20);
    java.text.SimpleDateFormat simpleDateFormat22 = dateTime18.getSdf();
    boolean boolean23 = dateTime13.isLessThanOrEqual(dateTime18);
    boolean boolean24 = dateTime7.isLessThan(dateTime18);
    dateTime1.set(dateTime7);
    java.lang.String str27 = dateTime7.format("04-Jan-0100");
    org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-1972.041095890411d) + "'", double8 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertEquals(date10.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "31-Dec-1969" + "'", str11, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
    org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-1972.041095890411d) + "'", double21 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat22);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "BAD-DATE-FORMAT" + "'", str27, "BAD-DATE-FORMAT");
  }

  @Test
  public void test725() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test725");
    net.ajaskey.common.Utils.sleep(4);
  }

  @Test
  public void test726() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test726");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    java.text.SimpleDateFormat simpleDateFormat5 = null;
    net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat5);
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double9 = dateTime6.getDeltaYears(dateTime8);
    boolean boolean10 = dateTime3.isLessThan(dateTime8);
    int int11 = dateTime3.getHour();
    net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(100L);
    double double18 = dateTime15.getDeltaYears(dateTime17);
    java.text.SimpleDateFormat simpleDateFormat20 = null;
    net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat20);
    net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double24 = dateTime21.getDeltaYears(dateTime23);
    boolean boolean25 = dateTime21.isWeekday();
    boolean boolean26 = dateTime15.sameDate(dateTime21);
    java.text.SimpleDateFormat simpleDateFormat28 = null;
    net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat28);
    net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double32 = dateTime29.getDeltaYears(dateTime31);
    net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean37 = dateTime31.isEqual(dateTime36);
    dateTime15.set(dateTime36);
    boolean boolean39 = net.ajaskey.common.Utils.sameDate(dateTime3, dateTime36);
    java.lang.String str40 = dateTime36.toString();
    int int41 = dateTime36.getHour();
    net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime(dateTime36);
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
    org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1972.041095890411d) + "'", double18 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    org.junit.Assert.assertEquals("'" + str40 + "' != '" + "10-Apr-0002" + "'", str40, "10-Apr-0002");
    org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2 + "'", int41 == 2);
  }

  @Test
  public void test727() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test727");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    boolean boolean7 = dateTime5.isWeekday();
    java.util.Date date8 = dateTime5.getTime();
    int int9 = dateTime5.getMinute();
    java.text.SimpleDateFormat simpleDateFormat11 = null;
    net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat11);
    net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double15 = dateTime12.getDeltaYears(dateTime14);
    net.ajaskey.common.DateTime dateTime16 = net.ajaskey.common.DateTime.copy(dateTime12);
    boolean boolean17 = net.ajaskey.common.Utils.sameDate(dateTime5, dateTime12);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(100L);
    int int20 = dateTime19.getMs();
    java.text.SimpleDateFormat simpleDateFormat21 = net.ajaskey.common.Utils.sdf;
    dateTime19.setSdf(simpleDateFormat21);
    int int23 = dateTime19.getDayOfWeek();
    net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(100L);
    double double30 = dateTime27.getDeltaYears(dateTime29);
    java.util.Calendar calendar31 = dateTime27.getCal();
    dateTime19.set(calendar31);
    java.text.SimpleDateFormat simpleDateFormat34 = null;
    net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat34);
    net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double38 = dateTime35.getDeltaYears(dateTime37);
    net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean43 = dateTime37.isEqual(dateTime42);
    java.util.Calendar calendar44 = dateTime37.getCal();
    net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(calendar44);
    dateTime19.set(calendar44);
    java.text.SimpleDateFormat simpleDateFormat49 = null;
    java.text.SimpleDateFormat simpleDateFormat50 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat49, simpleDateFormat50);
    net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat50);
    dateTime19.setSdf(simpleDateFormat50);
    long long54 = dateTime12.getDeltaMilliSeconds(dateTime19);
    dateTime19.set(1, 1967, 365);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertNotNull(date8);
    org.junit.Assert.assertEquals(date8.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
    org.junit.Assert.assertNull(dateTime16);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat21);
    org.junit.Assert.assertTrue("'" + int23 + "' != '" + 4 + "'", int23 == 4);
    org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-1972.041095890411d) + "'", double30 == (-1972.041095890411d));
    org.junit.Assert.assertNotNull(calendar31);
// flaky:         org.junit.Assert.assertEquals(calendar31.toString(), "java.util.GregorianCalendar[time=-62190298587486,areFieldsSet=true,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=3,SECOND=32,MILLISECOND=514,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    org.junit.Assert.assertNotNull(calendar44);
    org.junit.Assert.assertEquals(calendar44.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertNotNull(simpleDateFormat50);
    org.junit.Assert.assertTrue("'" + long54 + "' != '" + 0L + "'", long54 == 0L);
  }

  @Test
  public void test728() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test728");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    boolean boolean7 = dateTime5.isWeekday();
    net.ajaskey.common.DateTime dateTime10 = dateTime5.parse("31-Dec-1969", "January");
    net.ajaskey.common.DateTime dateTime11 = net.ajaskey.common.DateTime.copy(dateTime5);
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(100L);
    dateTime13.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str18 = dateTime13.getMonth();
    int int19 = dateTime13.getMs();
    java.lang.String str21 = dateTime13
        .format("                                                                                               52.00");
    net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime(100L);
    dateTime23.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str28 = dateTime23.getMonth();
    long long29 = dateTime13.getDeltaDays(dateTime23);
    boolean boolean30 = dateTime11.isGreaterThan(dateTime23);
    net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime(100L);
    double double37 = dateTime34.getDeltaYears(dateTime36);
    boolean boolean38 = dateTime36.isWeekday();
    java.util.Date date39 = dateTime36.getTime();
    int int40 = dateTime36.getMinute();
    java.text.SimpleDateFormat simpleDateFormat42 = null;
    net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat42);
    net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double46 = dateTime43.getDeltaYears(dateTime45);
    net.ajaskey.common.DateTime dateTime47 = net.ajaskey.common.DateTime.copy(dateTime43);
    boolean boolean48 = net.ajaskey.common.Utils.sameDate(dateTime36, dateTime43);
    net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime(100L);
    int int51 = dateTime50.getMs();
    java.text.SimpleDateFormat simpleDateFormat52 = net.ajaskey.common.Utils.sdf;
    dateTime50.setSdf(simpleDateFormat52);
    int int54 = dateTime50.getDayOfWeek();
    net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime(100L);
    double double61 = dateTime58.getDeltaYears(dateTime60);
    java.util.Calendar calendar62 = dateTime58.getCal();
    dateTime50.set(calendar62);
    java.text.SimpleDateFormat simpleDateFormat65 = null;
    net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat65);
    net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double69 = dateTime66.getDeltaYears(dateTime68);
    net.ajaskey.common.DateTime dateTime73 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean74 = dateTime68.isEqual(dateTime73);
    java.util.Calendar calendar75 = dateTime68.getCal();
    net.ajaskey.common.DateTime dateTime76 = new net.ajaskey.common.DateTime(calendar75);
    dateTime50.set(calendar75);
    java.text.SimpleDateFormat simpleDateFormat80 = null;
    java.text.SimpleDateFormat simpleDateFormat81 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime82 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat80, simpleDateFormat81);
    net.ajaskey.common.DateTime dateTime83 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat81);
    dateTime50.setSdf(simpleDateFormat81);
    long long85 = dateTime43.getDeltaMilliSeconds(dateTime50);
    int int86 = dateTime11.getYears(dateTime43);
    dateTime11.add((int) (short) 10, 1);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertNull(dateTime10);
    org.junit.Assert.assertNotNull(dateTime11);
    org.junit.Assert.assertEquals("'" + str18 + "' != '" + "January" + "'", str18, "January");
    org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
    org.junit.Assert.assertEquals(
        "'" + str21 + "' != '" + "                                                                                               52.00" + "'", str21,
        "                                                                                               52.00");
    org.junit.Assert.assertEquals("'" + str28 + "' != '" + "January" + "'", str28, "January");
    org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-1972.041095890411d) + "'", double37 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    org.junit.Assert.assertNotNull(date39);
    org.junit.Assert.assertEquals(date39.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
    org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
    org.junit.Assert.assertNull(dateTime47);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    org.junit.Assert.assertTrue("'" + int51 + "' != '" + 100 + "'", int51 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat52);
    org.junit.Assert.assertTrue("'" + int54 + "' != '" + 4 + "'", int54 == 4);
    org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-1972.041095890411d) + "'", double61 == (-1972.041095890411d));
    org.junit.Assert.assertNotNull(calendar62);
// flaky:         org.junit.Assert.assertEquals(calendar62.toString(), "java.util.GregorianCalendar[time=-62190298587466,areFieldsSet=true,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=3,SECOND=32,MILLISECOND=534,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    org.junit.Assert.assertNotNull(calendar75);
    org.junit.Assert.assertEquals(calendar75.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertNotNull(simpleDateFormat81);
    org.junit.Assert.assertTrue("'" + long85 + "' != '" + 0L + "'", long85 == 0L);
    org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
  }

  @Test
  public void test729() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test729");
    java.text.SimpleDateFormat simpleDateFormat1 = null;
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
    net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double5 = dateTime2.getDeltaYears(dateTime4);
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean10 = dateTime4.isEqual(dateTime9);
    java.text.SimpleDateFormat simpleDateFormat12 = null;
    java.text.SimpleDateFormat simpleDateFormat13 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat12, simpleDateFormat13);
    net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime(100L);
    double double21 = dateTime18.getDeltaYears(dateTime20);
    boolean boolean22 = dateTime20.isWeekday();
    java.util.Date date23 = dateTime20.getTime();
    java.lang.String str24 = dateTime20.toString();
    net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(100L);
    int int27 = dateTime26.getMs();
    net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime(100L);
    double double34 = dateTime31.getDeltaYears(dateTime33);
    java.text.SimpleDateFormat simpleDateFormat35 = dateTime31.getSdf();
    boolean boolean36 = dateTime26.isLessThanOrEqual(dateTime31);
    boolean boolean37 = dateTime20.isLessThan(dateTime31);
    java.lang.String str38 = dateTime20.toString();
    long long39 = dateTime14.getDeltaMilliSeconds(dateTime20);
    net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(100L);
    double double46 = dateTime43.getDeltaYears(dateTime45);
    boolean boolean47 = dateTime45.isWeekday();
    java.util.Date date48 = dateTime45.getTime();
    int int49 = dateTime45.getMinute();
    boolean boolean50 = dateTime14.sameDate(dateTime45);
    int int51 = dateTime4.getYears(dateTime45);
    int int52 = dateTime45.getDayOfWeek();
    int int53 = dateTime45.getHour();
    java.lang.String str55 = dateTime45.format("");
    org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertNotNull(simpleDateFormat13);
    org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-1972.041095890411d) + "'", double21 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    org.junit.Assert.assertNotNull(date23);
    org.junit.Assert.assertEquals(date23.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str24 + "' != '" + "31-Dec-1969" + "'", str24, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
    org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-1972.041095890411d) + "'", double34 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat35);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    org.junit.Assert.assertEquals("'" + str38 + "' != '" + "31-Dec-1969" + "'", str38, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
    org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-1972.041095890411d) + "'", double46 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    org.junit.Assert.assertNotNull(date48);
    org.junit.Assert.assertEquals(date48.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
    org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
    org.junit.Assert.assertTrue("'" + int52 + "' != '" + 4 + "'", int52 == 4);
    org.junit.Assert.assertTrue("'" + int53 + "' != '" + 5 + "'", int53 == 5);
    org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
  }

  @Test
  public void test730() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test730");
    java.util.zip.ZipOutputStream zipOutputStream1 = null;
    // The following exception was thrown during execution in test generation
    try {
      net.ajaskey.common.Utils.writeToZipFile("                                                                                               52.00",
          zipOutputStream1);
      org.junit.Assert.fail(
          "Expected exception of type java.io.FileNotFoundException; message:                                                                                                52.00 (Access is denied)");
    }
    catch (java.io.FileNotFoundException e) {
      // Expected exception.
    }
  }

  @Test
  public void test731() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test731");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    dateTime1.set((int) (byte) 100, (-1), (int) '#');
    java.util.Calendar calendar6 = dateTime1.getCal();
    net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime(calendar6);
    net.ajaskey.common.DateTime dateTime8 = net.ajaskey.common.DateTime.copy(dateTime7);
    java.lang.Class<?> wildcardClass9 = dateTime7.getClass();
    org.junit.Assert.assertNotNull(calendar6);
    org.junit.Assert.assertEquals(calendar6.toString(),
        "java.util.GregorianCalendar[time=-59011286399900,areFieldsSet=true,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=100,MONTH=0,WEEK_OF_YEAR=1,WEEK_OF_MONTH=1,DAY_OF_MONTH=4,DAY_OF_YEAR=4,DAY_OF_WEEK=7,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertNotNull(dateTime8);
    org.junit.Assert.assertNotNull(wildcardClass9);
  }

  @Test
  public void test732() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test732");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    dateTime1.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str6 = dateTime1.getMonth();
    int int7 = dateTime1.getMs();
    java.lang.String str9 = dateTime1.format("                                                                                               52.00");
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
    dateTime11.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str16 = dateTime11.getMonth();
    long long17 = dateTime1.getDeltaDays(dateTime11);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(100L);
    dateTime19.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str24 = dateTime19.getMonth();
    java.text.SimpleDateFormat simpleDateFormat26 = null;
    net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat26);
    net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double30 = dateTime27.getDeltaYears(dateTime29);
    boolean boolean31 = dateTime19.isLessThan(dateTime27);
    net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(100L);
    double double38 = dateTime35.getDeltaYears(dateTime37);
    net.ajaskey.common.DateTime dateTime39 = null;
    long long40 = dateTime35.getDeltaDays(dateTime39);
    boolean boolean41 = dateTime27.isLessThanOrEqual(dateTime35);
    boolean boolean42 = dateTime1.isGreaterThanOrEqual(dateTime35);
    net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime((long) 2);
    java.text.SimpleDateFormat simpleDateFormat45 = dateTime44.getSdf();
    net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    java.text.SimpleDateFormat simpleDateFormat51 = null;
    net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat51);
    net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double55 = dateTime52.getDeltaYears(dateTime54);
    boolean boolean56 = dateTime49.isLessThan(dateTime54);
    int int57 = dateTime49.getHour();
    long long58 = dateTime44.getDeltaDays(dateTime49);
    boolean boolean59 = dateTime1.isGreaterThan(dateTime49);
    boolean boolean60 = dateTime1.isWeekday();
    java.lang.String str61 = dateTime1.toFullString();
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "January" + "'", str6, "January");
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
    org.junit.Assert.assertEquals(
        "'" + str9 + "' != '" + "                                                                                               52.00" + "'", str9,
        "                                                                                               52.00");
    org.junit.Assert.assertEquals("'" + str16 + "' != '" + "January" + "'", str16, "January");
    org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
    org.junit.Assert.assertEquals("'" + str24 + "' != '" + "January" + "'", str24, "January");
    org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1972.041095890411d) + "'", double38 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    org.junit.Assert.assertNull(simpleDateFormat45);
    org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
    org.junit.Assert.assertTrue("'" + long58 + "' != '" + 719795L + "'", long58 == 719795L);
    org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Sat 04-Jan-0100 17:00:00" + "'", str61, "Sat 04-Jan-0100 17:00:00");
  }

  @Test
  public void test733() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test733");
    java.lang.String str1 = net.ajaskey.common.Utils.getFromUrl("April");
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
  }

  @Test
  public void test734() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test734");
    java.util.zip.ZipOutputStream zipOutputStream1 = null;
    // The following exception was thrown during execution in test generation
    try {
      net.ajaskey.common.Utils.writeToZipFile("1", zipOutputStream1);
      org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: 1 (The system cannot find the file specified)");
    }
    catch (java.io.FileNotFoundException e) {
      // Expected exception.
    }
  }

  @Test
  public void test735() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test735");
    java.text.SimpleDateFormat simpleDateFormat1 = null;
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
    net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double5 = dateTime2.getDeltaYears(dateTime4);
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean10 = dateTime4.isEqual(dateTime9);
    java.text.SimpleDateFormat simpleDateFormat12 = null;
    java.text.SimpleDateFormat simpleDateFormat13 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat12, simpleDateFormat13);
    net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime(100L);
    double double21 = dateTime18.getDeltaYears(dateTime20);
    boolean boolean22 = dateTime20.isWeekday();
    java.util.Date date23 = dateTime20.getTime();
    java.lang.String str24 = dateTime20.toString();
    net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(100L);
    int int27 = dateTime26.getMs();
    net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime(100L);
    double double34 = dateTime31.getDeltaYears(dateTime33);
    java.text.SimpleDateFormat simpleDateFormat35 = dateTime31.getSdf();
    boolean boolean36 = dateTime26.isLessThanOrEqual(dateTime31);
    boolean boolean37 = dateTime20.isLessThan(dateTime31);
    java.lang.String str38 = dateTime20.toString();
    long long39 = dateTime14.getDeltaMilliSeconds(dateTime20);
    net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(100L);
    double double46 = dateTime43.getDeltaYears(dateTime45);
    boolean boolean47 = dateTime45.isWeekday();
    java.util.Date date48 = dateTime45.getTime();
    int int49 = dateTime45.getMinute();
    boolean boolean50 = dateTime14.sameDate(dateTime45);
    int int51 = dateTime4.getYears(dateTime45);
    int int52 = dateTime45.getHour();
    int int53 = dateTime45.getSecond();
    org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertNotNull(simpleDateFormat13);
    org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-1972.041095890411d) + "'", double21 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    org.junit.Assert.assertNotNull(date23);
    org.junit.Assert.assertEquals(date23.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str24 + "' != '" + "31-Dec-1969" + "'", str24, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
    org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-1972.041095890411d) + "'", double34 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat35);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    org.junit.Assert.assertEquals("'" + str38 + "' != '" + "31-Dec-1969" + "'", str38, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
    org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-1972.041095890411d) + "'", double46 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    org.junit.Assert.assertNotNull(date48);
    org.junit.Assert.assertEquals(date48.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
    org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
    org.junit.Assert.assertTrue("'" + int52 + "' != '" + 5 + "'", int52 == 5);
    org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
  }

  @Test
  public void test736() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test736");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    dateTime1.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str6 = dateTime1.getMonth();
    java.text.SimpleDateFormat simpleDateFormat8 = null;
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double12 = dateTime9.getDeltaYears(dateTime11);
    boolean boolean13 = dateTime1.isLessThan(dateTime9);
    java.util.Date date14 = dateTime9.getTime();
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "January" + "'", str6, "January");
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertNull(date14);
  }

  @Test
  public void test737() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test737");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    int int2 = dateTime1.getMs();
    java.text.SimpleDateFormat simpleDateFormat3 = net.ajaskey.common.Utils.sdf;
    dateTime1.setSdf(simpleDateFormat3);
    int int5 = dateTime1.getDayOfWeek();
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
    double double12 = dateTime9.getDeltaYears(dateTime11);
    java.util.Calendar calendar13 = dateTime9.getCal();
    dateTime1.set(calendar13);
    net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime(100L);
    double double21 = dateTime18.getDeltaYears(dateTime20);
    boolean boolean22 = dateTime20.isWeekday();
    java.util.Date date23 = dateTime20.getTime();
    dateTime1.set(date23);
    net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime(date23);
    net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(100L);
    double double32 = dateTime29.getDeltaYears(dateTime31);
    boolean boolean33 = dateTime31.isWeekday();
    java.util.Date date34 = dateTime31.getTime();
    java.lang.String str35 = dateTime31.toString();
    dateTime31.add(31, 0);
    java.text.SimpleDateFormat simpleDateFormat40 = null;
    net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat40);
    net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double44 = dateTime41.getDeltaYears(dateTime43);
    boolean boolean45 = dateTime41.isWeekday();
    boolean boolean46 = dateTime41.isWeekday();
    net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime(100L);
    double double53 = dateTime50.getDeltaYears(dateTime52);
    java.util.Date date54 = dateTime50.getTime();
    net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime(date54);
    net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime(date54);
    net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime(date54);
    dateTime41.set(date54);
    dateTime31.set(date54);
    dateTime25.set(date54);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat3);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 4 + "'", int5 == 4);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1972.041095890411d) + "'", double12 == (-1972.041095890411d));
    org.junit.Assert.assertNotNull(calendar13);
// flaky:         org.junit.Assert.assertEquals(calendar13.toString(), "java.util.GregorianCalendar[time=-62190298587323,areFieldsSet=true,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=3,SECOND=32,MILLISECOND=677,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-1972.041095890411d) + "'", double21 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    org.junit.Assert.assertNotNull(date23);
    org.junit.Assert.assertEquals(date23.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-1972.041095890411d) + "'", double32 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    org.junit.Assert.assertNotNull(date34);
    org.junit.Assert.assertEquals(date34.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str35 + "' != '" + "31-Dec-1969" + "'", str35, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-1972.041095890411d) + "'", double53 == (-1972.041095890411d));
    org.junit.Assert.assertNotNull(date54);
// flaky:         org.junit.Assert.assertEquals(date54.toString(), "Thu Apr 10 14:03:32 MST 2");
  }

  @Test
  public void test738() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test738");
    net.ajaskey.common.Utils.NL = "Sat 04-Jan-0100 17:00:00";
  }

  @Test
  public void test739() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test739");
    net.ajaskey.common.Utils.makeDir("         14");
  }

  @Test
  public void test740() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test740");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    java.lang.String str4 = dateTime3.format();
    int int5 = dateTime3.getYear();
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "BAD-DATE-FORMAT" + "'", str4, "BAD-DATE-FORMAT");
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
  }

  @Test
  public void test741() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test741");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    int int2 = dateTime1.getMs();
    net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
    double double9 = dateTime6.getDeltaYears(dateTime8);
    java.text.SimpleDateFormat simpleDateFormat10 = dateTime6.getSdf();
    boolean boolean11 = dateTime1.isLessThanOrEqual(dateTime6);
    java.lang.String str12 = dateTime1.getDay();
    java.text.SimpleDateFormat simpleDateFormat16 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat18 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat19 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("", simpleDateFormat18, simpleDateFormat19);
    net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat16,
        simpleDateFormat19);
    java.text.SimpleDateFormat simpleDateFormat23 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat24 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("", simpleDateFormat23, simpleDateFormat24);
    net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime("", simpleDateFormat19, simpleDateFormat24);
    java.text.SimpleDateFormat simpleDateFormat29 = null;
    java.text.SimpleDateFormat simpleDateFormat30 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat29, simpleDateFormat30);
    net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat30);
    net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime("Fri 31-Dec-0001 17:00:00", simpleDateFormat19, simpleDateFormat30);
    dateTime1.setSdf(simpleDateFormat30);
    net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime(100L);
    int int37 = dateTime36.getMs();
    net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime(100L);
    double double44 = dateTime41.getDeltaYears(dateTime43);
    java.text.SimpleDateFormat simpleDateFormat45 = dateTime41.getSdf();
    boolean boolean46 = dateTime36.isLessThanOrEqual(dateTime41);
    long long47 = dateTime1.getDeltaMilliSeconds(dateTime36);
    java.lang.String str48 = dateTime36.getMonth();
    net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime(dateTime36);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Wednesday" + "'", str12, "Wednesday");
    org.junit.Assert.assertNotNull(simpleDateFormat16);
    org.junit.Assert.assertNotNull(simpleDateFormat18);
    org.junit.Assert.assertNotNull(simpleDateFormat19);
    org.junit.Assert.assertNotNull(simpleDateFormat23);
    org.junit.Assert.assertNotNull(simpleDateFormat24);
    org.junit.Assert.assertNotNull(simpleDateFormat30);
    org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
    org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-1972.041095890411d) + "'", double44 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat45);
    org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
    org.junit.Assert.assertEquals("'" + str48 + "' != '" + "December" + "'", str48, "December");
  }

  @Test
  public void test742() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test742");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("January", "BAD-DATE-FORMAT");
    boolean boolean7 = net.ajaskey.common.Utils.sameMonth(dateTime3, dateTime6);
    dateTime6.set(13, (-1870), 4);
    boolean boolean12 = dateTime6.isWeekday();
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
  }

  @Test
  public void test743() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test743");
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("31-Dec-1969", "Thu 10-Apr-0002 14:03:14");
    java.util.Date date3 = dateTime2.getTime();
    java.lang.String str5 = dateTime2.format("10-Apr-0002");
    java.text.SimpleDateFormat simpleDateFormat7 = null;
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat7);
    net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double11 = dateTime8.getDeltaYears(dateTime10);
    boolean boolean12 = dateTime8.isWeekday();
    net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(100L);
    int int15 = dateTime14.getMs();
    java.lang.String str16 = dateTime14.toString();
    int int17 = dateTime14.getMs();
    java.util.Calendar calendar18 = dateTime14.getCal();
    dateTime8.set(calendar18);
    java.text.SimpleDateFormat simpleDateFormat20 = dateTime8.getSdf();
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(100L);
    int int23 = dateTime22.getMs();
    net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(100L);
    double double30 = dateTime27.getDeltaYears(dateTime29);
    java.text.SimpleDateFormat simpleDateFormat31 = dateTime27.getSdf();
    boolean boolean32 = dateTime22.isLessThanOrEqual(dateTime27);
    java.lang.String str33 = dateTime22.format();
    java.util.Calendar calendar34 = dateTime22.getCal();
    dateTime8.set(calendar34);
    java.lang.String str37 = dateTime8.format("365.00");
    dateTime8.setFirstWorkDay();
    boolean boolean39 = dateTime2.sameDate(dateTime8);
    org.junit.Assert.assertNull(date3);
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "BAD-DATE-FORMAT" + "'", str5, "BAD-DATE-FORMAT");
    org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
    org.junit.Assert.assertEquals("'" + str16 + "' != '" + "31-Dec-1969" + "'", str16, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
    org.junit.Assert.assertNotNull(calendar18);
    org.junit.Assert.assertEquals(calendar18.toString(),
        "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertNull(simpleDateFormat20);
    org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
    org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-1972.041095890411d) + "'", double30 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat31);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    org.junit.Assert.assertEquals("'" + str33 + "' != '" + "BAD-DATE-FORMAT" + "'", str33, "BAD-DATE-FORMAT");
    org.junit.Assert.assertNotNull(calendar34);
    org.junit.Assert.assertEquals(calendar34.toString(),
        "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertEquals("'" + str37 + "' != '" + "365.00" + "'", str37, "365.00");
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
  }

  @Test
  public void test744() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test744");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    int int2 = dateTime1.getMs();
    java.text.SimpleDateFormat simpleDateFormat3 = net.ajaskey.common.Utils.sdf;
    dateTime1.setSdf(simpleDateFormat3);
    int int5 = dateTime1.getDayOfWeek();
    net.ajaskey.common.DateTime dateTime6 = net.ajaskey.common.DateTime.copy(dateTime1);
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
    int int9 = dateTime8.getMs();
    java.text.SimpleDateFormat simpleDateFormat10 = net.ajaskey.common.Utils.sdf;
    dateTime8.setSdf(simpleDateFormat10);
    java.lang.String str12 = dateTime8.toFullString();
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(dateTime8);
    int int14 = dateTime8.getHour();
    boolean boolean15 = dateTime6.isGreaterThan(dateTime8);
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(100L);
    int int18 = dateTime17.getMs();
    java.lang.String str19 = dateTime17.toString();
    net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int22 = dateTime21.getHour();
    int int23 = dateTime21.getDayOfMonth();
    dateTime17.set(dateTime21);
    int int25 = dateTime21.getMs();
    java.lang.String str26 = dateTime21.toFullString();
    boolean boolean27 = dateTime8.isGreaterThanOrEqual(dateTime21);
    net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int30 = dateTime29.getDayOfWeek();
    java.lang.String str31 = dateTime29.toFullString();
    net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime(100L);
    int int34 = dateTime33.getMs();
    net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime(100L);
    double double41 = dateTime38.getDeltaYears(dateTime40);
    java.text.SimpleDateFormat simpleDateFormat42 = dateTime38.getSdf();
    boolean boolean43 = dateTime33.isLessThanOrEqual(dateTime38);
    net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(100L);
    int int46 = dateTime45.getMs();
    java.lang.String str47 = dateTime45.toString();
    net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int50 = dateTime49.getHour();
    int int51 = dateTime49.getDayOfMonth();
    dateTime45.set(dateTime49);
    double double53 = dateTime38.getDeltaYears(dateTime49);
    boolean boolean54 = net.ajaskey.common.Utils.sameDate(dateTime29, dateTime49);
    boolean boolean55 = dateTime8.sameDate(dateTime29);
    java.lang.String str56 = dateTime8.format();
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat3);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 4 + "'", int5 == 4);
    org.junit.Assert.assertNotNull(dateTime6);
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat10);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str12, "Wed 31-Dec-1969 17:00:00");
    org.junit.Assert.assertTrue("'" + int14 + "' != '" + 5 + "'", int14 == 5);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
    org.junit.Assert.assertEquals("'" + str19 + "' != '" + "31-Dec-1969" + "'", str19, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int22 + "' != '" + 5 + "'", int22 == 5);
    org.junit.Assert.assertTrue("'" + int23 + "' != '" + 31 + "'", int23 == 31);
    org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
    org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str26, "Wed 31-Dec-1969 17:00:00");
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    org.junit.Assert.assertTrue("'" + int30 + "' != '" + 4 + "'", int30 == 4);
    org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str31, "Wed 31-Dec-1969 17:00:00");
    org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
    org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-1972.041095890411d) + "'", double41 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat42);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
    org.junit.Assert.assertEquals("'" + str47 + "' != '" + "31-Dec-1969" + "'", str47, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int50 + "' != '" + 5 + "'", int50 == 5);
    org.junit.Assert.assertTrue("'" + int51 + "' != '" + 31 + "'", int51 == 31);
    org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-1972.041095890411d) + "'", double53 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    org.junit.Assert.assertEquals("'" + str56 + "' != '" + "31-Dec-1969" + "'", str56, "31-Dec-1969");
  }

  @Test
  public void test745() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test745");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    boolean boolean7 = dateTime5.isWeekday();
    java.util.Date date8 = dateTime5.getTime();
    java.lang.String str9 = dateTime5.toString();
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(3, (int) '4', (int) (byte) 0);
    boolean boolean14 = dateTime5.isGreaterThan(dateTime13);
    net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(100L);
    int int17 = dateTime16.getMs();
    net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime(100L);
    double double24 = dateTime21.getDeltaYears(dateTime23);
    java.text.SimpleDateFormat simpleDateFormat25 = dateTime21.getSdf();
    boolean boolean26 = dateTime16.isLessThanOrEqual(dateTime21);
    net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime(100L);
    double double33 = dateTime30.getDeltaYears(dateTime32);
    java.text.SimpleDateFormat simpleDateFormat35 = null;
    net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat35);
    net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double39 = dateTime36.getDeltaYears(dateTime38);
    dateTime38.set(0, 12, 0);
    boolean boolean44 = net.ajaskey.common.Utils.sameMonth(dateTime30, dateTime38);
    int int45 = dateTime16.getYears(dateTime30);
    double double46 = dateTime5.getDeltaYears(dateTime16);
    java.lang.String str47 = dateTime5.format();
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertNotNull(date8);
    org.junit.Assert.assertEquals(date8.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "31-Dec-1969" + "'", str9, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
    org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1972.041095890411d) + "'", double24 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat25);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-1972.041095890411d) + "'", double33 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1968) + "'", int45 == (-1968));
    org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
    org.junit.Assert.assertEquals("'" + str47 + "' != '" + "31-Dec-1969" + "'", str47, "31-Dec-1969");
  }

  @Test
  public void test746() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test746");
    java.text.SimpleDateFormat simpleDateFormat3 = null;
    java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat3, simpleDateFormat4);
    net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat4);
    net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat4);
    net.ajaskey.common.DateTime dateTime8 = net.ajaskey.common.DateTime.copy(dateTime7);
    net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(10, (int) '4', 2);
    java.lang.String str13 = dateTime12.toFullString();
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(100L);
    double double20 = dateTime17.getDeltaYears(dateTime19);
    boolean boolean21 = dateTime19.isWeekday();
    java.util.Date date22 = dateTime19.getTime();
    java.lang.String str23 = dateTime19.toString();
    net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime((long) 2);
    java.text.SimpleDateFormat simpleDateFormat26 = dateTime25.getSdf();
    boolean boolean27 = dateTime19.sameDate(dateTime25);
    boolean boolean28 = net.ajaskey.common.Utils.sameDate(dateTime12, dateTime25);
    boolean boolean29 = net.ajaskey.common.Utils.sameDate(dateTime7, dateTime25);
    org.junit.Assert.assertNotNull(simpleDateFormat4);
    org.junit.Assert.assertNull(dateTime8);
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Wed 02-May-0014 14:03:32" + "'", str13, "Wed 02-May-0014 14:03:32");
    org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-1972.041095890411d) + "'", double20 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    org.junit.Assert.assertNotNull(date22);
    org.junit.Assert.assertEquals(date22.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str23 + "' != '" + "31-Dec-1969" + "'", str23, "31-Dec-1969");
    org.junit.Assert.assertNull(simpleDateFormat26);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
  }

  @Test
  public void test747() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test747");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    java.text.SimpleDateFormat simpleDateFormat8 = null;
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double12 = dateTime9.getDeltaYears(dateTime11);
    boolean boolean13 = dateTime9.isWeekday();
    boolean boolean14 = dateTime3.sameDate(dateTime9);
    net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(0L);
    boolean boolean17 = dateTime9.isGreaterThanOrEqual(dateTime16);
    net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime(100L);
    double double24 = dateTime21.getDeltaYears(dateTime23);
    boolean boolean25 = dateTime23.isWeekday();
    java.util.Date date26 = dateTime23.getTime();
    java.lang.String str27 = dateTime23.toString();
    net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(3, (int) '4', (int) (byte) 0);
    boolean boolean32 = dateTime23.isGreaterThan(dateTime31);
    java.text.SimpleDateFormat simpleDateFormat34 = null;
    net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat34);
    net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double38 = dateTime35.getDeltaYears(dateTime37);
    net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean43 = dateTime37.isEqual(dateTime42);
    java.util.Calendar calendar44 = dateTime37.getCal();
    net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(calendar44);
    net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime(calendar44);
    boolean boolean47 = dateTime23.isLessThan(dateTime46);
    java.text.SimpleDateFormat simpleDateFormat49 = null;
    net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat49);
    net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double53 = dateTime50.getDeltaYears(dateTime52);
    boolean boolean54 = dateTime50.isWeekday();
    java.lang.String str55 = dateTime50.getDay();
    java.util.Calendar calendar56 = dateTime50.getCal();
    boolean boolean57 = dateTime23.isLessThan(dateTime50);
    boolean boolean58 = net.ajaskey.common.Utils.sameDate(dateTime9, dateTime23);
    net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime(dateTime23);
    java.text.SimpleDateFormat simpleDateFormat60 = dateTime23.getSdf();
    dateTime23.setFirstWorkDay();
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1972.041095890411d) + "'", double24 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    org.junit.Assert.assertNotNull(date26);
    org.junit.Assert.assertEquals(date26.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "31-Dec-1969" + "'", str27, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    org.junit.Assert.assertNotNull(calendar44);
    org.junit.Assert.assertEquals(calendar44.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    org.junit.Assert.assertEquals("'" + str55 + "' != '" + "UNKNOWN" + "'", str55, "UNKNOWN");
    org.junit.Assert.assertNull(calendar56);
    org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    org.junit.Assert.assertNotNull(simpleDateFormat60);
  }

  @Test
  public void test748() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test748");
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime(
        "UNKNOWNJanuary31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969JanuaryJanuary31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969hi!January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969JanuaryJanuary31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969Wed 31-Dec-1969 17:00:00January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969       10.00January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        "Thursday");
    int int3 = dateTime2.getMinute();
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
  }

  @Test
  public void test749() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test749");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    dateTime1.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str6 = dateTime1.getMonth();
    java.lang.String str7 = dateTime1.format();
    int int8 = dateTime1.getDayOfMonth();
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "January" + "'", str6, "January");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "BAD-DATE-FORMAT" + "'", str7, "BAD-DATE-FORMAT");
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 4 + "'", int8 == 4);
  }

  @Test
  public void test750() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test750");
    java.lang.String str1 = net.ajaskey.common.Utils.getFromUrl("Wed 02-May-0014 14:03:29");
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
  }

  @Test
  public void test751() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test751");
    java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils
        .readTextFile("                                                                                 -62,190,298,606,387", true);
    java.lang.String str3 = net.ajaskey.common.TextUtils.toString(strList2);
    org.junit.Assert.assertNotNull(strList2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
  }

  @Test
  public void test752() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test752");
    java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readTextFile("Wed 02-May-0014 14:03:32", false);
    org.junit.Assert.assertNotNull(strList2);
  }

  @Test
  public void test753() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test753");
    java.text.SimpleDateFormat simpleDateFormat1 = null;
    java.text.SimpleDateFormat simpleDateFormat2 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat1, simpleDateFormat2);
    net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(100L);
    double double10 = dateTime7.getDeltaYears(dateTime9);
    boolean boolean11 = dateTime9.isWeekday();
    java.util.Date date12 = dateTime9.getTime();
    java.lang.String str13 = dateTime9.toString();
    net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(100L);
    int int16 = dateTime15.getMs();
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(100L);
    double double23 = dateTime20.getDeltaYears(dateTime22);
    java.text.SimpleDateFormat simpleDateFormat24 = dateTime20.getSdf();
    boolean boolean25 = dateTime15.isLessThanOrEqual(dateTime20);
    boolean boolean26 = dateTime9.isLessThan(dateTime20);
    java.lang.String str27 = dateTime9.toString();
    long long28 = dateTime3.getDeltaMilliSeconds(dateTime9);
    net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime(100L);
    double double35 = dateTime32.getDeltaYears(dateTime34);
    boolean boolean36 = dateTime34.isWeekday();
    java.util.Date date37 = dateTime34.getTime();
    int int38 = dateTime34.getMinute();
    boolean boolean39 = dateTime3.sameDate(dateTime34);
    java.util.Calendar calendar40 = dateTime3.getCal();
    boolean boolean41 = dateTime3.isNull();
    net.ajaskey.common.DateTime dateTime44 = dateTime3
        .parse("                                                                                               97", "");
    // The following exception was thrown during execution in test generation
    try {
      net.ajaskey.common.DateTime dateTime46 = dateTime44.parse("31-Dec-1969");
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
    }
    catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    org.junit.Assert.assertNotNull(simpleDateFormat2);
    org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1972.041095890411d) + "'", double10 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    org.junit.Assert.assertNotNull(date12);
    org.junit.Assert.assertEquals(date12.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "31-Dec-1969" + "'", str13, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
    org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-1972.041095890411d) + "'", double23 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat24);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "31-Dec-1969" + "'", str27, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
    org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-1972.041095890411d) + "'", double35 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    org.junit.Assert.assertNotNull(date37);
    org.junit.Assert.assertEquals(date37.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    org.junit.Assert.assertNull(calendar40);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    org.junit.Assert.assertNull(dateTime44);
  }

  @Test
  public void test754() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test754");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    int int2 = dateTime1.getMs();
    java.text.SimpleDateFormat simpleDateFormat3 = net.ajaskey.common.Utils.sdf;
    dateTime1.setSdf(simpleDateFormat3);
    int int5 = dateTime1.getDayOfWeek();
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
    double double12 = dateTime9.getDeltaYears(dateTime11);
    java.util.Calendar calendar13 = dateTime9.getCal();
    dateTime1.set(calendar13);
    dateTime1.setFirstWorkDay();
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat3);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 4 + "'", int5 == 4);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1972.041095890411d) + "'", double12 == (-1972.041095890411d));
    org.junit.Assert.assertNotNull(calendar13);
// flaky:         org.junit.Assert.assertEquals(calendar13.toString(), "java.util.GregorianCalendar[time=-62190298586998,areFieldsSet=true,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=3,SECOND=33,MILLISECOND=2,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
  }

  @Test
  public void test755() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test755");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    java.text.SimpleDateFormat simpleDateFormat8 = null;
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double12 = dateTime9.getDeltaYears(dateTime11);
    boolean boolean13 = dateTime9.isWeekday();
    boolean boolean14 = dateTime3.sameDate(dateTime9);
    net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(0L);
    boolean boolean17 = dateTime9.isGreaterThanOrEqual(dateTime16);
    java.util.Calendar calendar18 = dateTime16.getCal();
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(calendar18);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertNotNull(calendar18);
    org.junit.Assert.assertEquals(calendar18.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
  }

  @Test
  public void test756() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test756");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(1967, 1970, (-1968));
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    dateTime5.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str10 = dateTime5.getMonth();
    java.text.SimpleDateFormat simpleDateFormat12 = null;
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat12);
    net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double16 = dateTime13.getDeltaYears(dateTime15);
    boolean boolean17 = dateTime5.isLessThan(dateTime13);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(10L);
    int int20 = dateTime19.getSecond();
    long long21 = dateTime13.getDeltaMilliSeconds(dateTime19);
    int int22 = dateTime19.getDayOfWeek();
    net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(100L);
    double double29 = dateTime26.getDeltaYears(dateTime28);
    boolean boolean30 = dateTime28.isWeekday();
    java.util.Date date31 = dateTime28.getTime();
    net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime(date31);
    net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime(date31);
    dateTime19.set(date31);
    dateTime3.set(date31);
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "January" + "'", str10, "January");
    org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
    org.junit.Assert.assertTrue("'" + int22 + "' != '" + 4 + "'", int22 == 4);
    org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-1972.041095890411d) + "'", double29 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    org.junit.Assert.assertNotNull(date31);
    org.junit.Assert.assertEquals(date31.toString(), "Wed Dec 31 17:00:00 MST 1969");
  }

  @Test
  public void test757() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test757");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(50, (int) (byte) -1, 1869);
  }

  @Test
  public void test758() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test758");
    net.ajaskey.common.TextUtils.printline("                                                                                                   7");
  }

  @Test
  public void test759() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test759");
    java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readGzipFile("     -1,870", false);
    org.junit.Assert.assertNull(strList2);
  }

  @Test
  public void test760() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test760");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    int int2 = dateTime1.getMs();
    java.text.SimpleDateFormat simpleDateFormat3 = net.ajaskey.common.Utils.sdf;
    dateTime1.setSdf(simpleDateFormat3);
    int int5 = dateTime1.getDayOfWeek();
    net.ajaskey.common.DateTime dateTime6 = net.ajaskey.common.DateTime.copy(dateTime1);
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
    int int9 = dateTime8.getMs();
    java.text.SimpleDateFormat simpleDateFormat10 = net.ajaskey.common.Utils.sdf;
    dateTime8.setSdf(simpleDateFormat10);
    java.lang.String str12 = dateTime8.toFullString();
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(dateTime8);
    int int14 = dateTime8.getHour();
    boolean boolean15 = dateTime6.isGreaterThan(dateTime8);
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(100L);
    int int18 = dateTime17.getMs();
    java.lang.String str19 = dateTime17.toString();
    net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int22 = dateTime21.getHour();
    int int23 = dateTime21.getDayOfMonth();
    dateTime17.set(dateTime21);
    int int25 = dateTime21.getMs();
    java.lang.String str26 = dateTime21.toFullString();
    boolean boolean27 = dateTime8.isGreaterThanOrEqual(dateTime21);
    java.lang.String str28 = dateTime21.format();
    java.lang.String str29 = dateTime21.format();
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat3);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 4 + "'", int5 == 4);
    org.junit.Assert.assertNotNull(dateTime6);
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat10);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str12, "Wed 31-Dec-1969 17:00:00");
    org.junit.Assert.assertTrue("'" + int14 + "' != '" + 5 + "'", int14 == 5);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
    org.junit.Assert.assertEquals("'" + str19 + "' != '" + "31-Dec-1969" + "'", str19, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int22 + "' != '" + 5 + "'", int22 == 5);
    org.junit.Assert.assertTrue("'" + int23 + "' != '" + 31 + "'", int23 == 31);
    org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
    org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str26, "Wed 31-Dec-1969 17:00:00");
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    org.junit.Assert.assertEquals("'" + str28 + "' != '" + "BAD-DATE-FORMAT" + "'", str28, "BAD-DATE-FORMAT");
    org.junit.Assert.assertEquals("'" + str29 + "' != '" + "BAD-DATE-FORMAT" + "'", str29, "BAD-DATE-FORMAT");
  }

  @Test
  public void test761() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test761");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) 8);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    java.text.SimpleDateFormat simpleDateFormat7 = null;
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat7);
    net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double11 = dateTime8.getDeltaYears(dateTime10);
    boolean boolean12 = dateTime5.isLessThan(dateTime10);
    int int13 = dateTime5.getHour();
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(100L);
    double double20 = dateTime17.getDeltaYears(dateTime19);
    int int21 = dateTime17.getHour();
    net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(100L);
    double double28 = dateTime25.getDeltaYears(dateTime27);
    boolean boolean29 = dateTime27.isWeekday();
    java.util.Date date30 = dateTime27.getTime();
    java.lang.String str31 = dateTime27.toString();
    net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime(100L);
    int int34 = dateTime33.getMs();
    net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime(100L);
    double double41 = dateTime38.getDeltaYears(dateTime40);
    java.text.SimpleDateFormat simpleDateFormat42 = dateTime38.getSdf();
    boolean boolean43 = dateTime33.isLessThanOrEqual(dateTime38);
    boolean boolean44 = dateTime27.isLessThan(dateTime38);
    java.lang.String str45 = dateTime27.toString();
    boolean boolean46 = dateTime17.sameDate(dateTime27);
    int int47 = dateTime5.getYears(dateTime17);
    double double48 = dateTime1.getDeltaYears(dateTime17);
    int int49 = dateTime1.getDayOfMonth();
    org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
    org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-1972.041095890411d) + "'", double20 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
    org.junit.Assert.assertTrue("'" + double28 + "' != '" + (-1972.041095890411d) + "'", double28 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    org.junit.Assert.assertNotNull(date30);
    org.junit.Assert.assertEquals(date30.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str31 + "' != '" + "31-Dec-1969" + "'", str31, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
    org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-1972.041095890411d) + "'", double41 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat42);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    org.junit.Assert.assertEquals("'" + str45 + "' != '" + "31-Dec-1969" + "'", str45, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
    org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1972.041095890411d + "'", double48 == 1972.041095890411d);
    org.junit.Assert.assertTrue("'" + int49 + "' != '" + 31 + "'", int49 == 31);
  }

  @Test
  public void test762() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test762");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    java.text.SimpleDateFormat simpleDateFormat7 = dateTime3.getSdf();
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(100L);
    double double14 = dateTime11.getDeltaYears(dateTime13);
    boolean boolean15 = dateTime13.isWeekday();
    net.ajaskey.common.DateTime dateTime18 = dateTime13.parse("31-Dec-1969", "January");
    net.ajaskey.common.DateTime dateTime19 = net.ajaskey.common.DateTime.copy(dateTime13);
    boolean boolean20 = dateTime3.sameDate(dateTime19);
    net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(100L);
    double double27 = dateTime24.getDeltaYears(dateTime26);
    boolean boolean28 = dateTime19.isGreaterThan(dateTime24);
    java.lang.String str29 = dateTime19.getMonth();
    net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime(100L);
    double double36 = dateTime33.getDeltaYears(dateTime35);
    boolean boolean37 = dateTime35.isWeekday();
    java.util.Date date38 = dateTime35.getTime();
    int int39 = dateTime35.getMinute();
    java.text.SimpleDateFormat simpleDateFormat41 = null;
    net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat41);
    net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double45 = dateTime42.getDeltaYears(dateTime44);
    net.ajaskey.common.DateTime dateTime46 = net.ajaskey.common.DateTime.copy(dateTime42);
    boolean boolean47 = net.ajaskey.common.Utils.sameDate(dateTime35, dateTime42);
    java.text.SimpleDateFormat simpleDateFormat50 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat52 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat53 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime("", simpleDateFormat52, simpleDateFormat53);
    net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat50,
        simpleDateFormat53);
    java.text.SimpleDateFormat simpleDateFormat57 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat58 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime("", simpleDateFormat57, simpleDateFormat58);
    net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime("", simpleDateFormat53, simpleDateFormat58);
    dateTime35.setSdf(simpleDateFormat53);
    java.text.SimpleDateFormat simpleDateFormat65 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat67 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat68 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime("", simpleDateFormat67, simpleDateFormat68);
    net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat65,
        simpleDateFormat68);
    java.text.SimpleDateFormat simpleDateFormat72 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat73 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime74 = new net.ajaskey.common.DateTime("", simpleDateFormat72, simpleDateFormat73);
    net.ajaskey.common.DateTime dateTime75 = new net.ajaskey.common.DateTime("", simpleDateFormat68, simpleDateFormat73);
    java.text.SimpleDateFormat simpleDateFormat78 = null;
    java.text.SimpleDateFormat simpleDateFormat79 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime80 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat78, simpleDateFormat79);
    net.ajaskey.common.DateTime dateTime81 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat79);
    net.ajaskey.common.DateTime dateTime82 = new net.ajaskey.common.DateTime("Fri 31-Dec-0001 17:00:00", simpleDateFormat68, simpleDateFormat79);
    net.ajaskey.common.DateTime dateTime84 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int85 = dateTime84.getHour();
    int int86 = dateTime84.getDayOfMonth();
    int int87 = dateTime84.getYear();
    net.ajaskey.common.DateTime dateTime88 = new net.ajaskey.common.DateTime(dateTime84);
    int int89 = dateTime82.getYears(dateTime88);
    boolean boolean90 = dateTime35.isLessThan(dateTime88);
    boolean boolean91 = dateTime35.isWeekday();
    java.util.Calendar calendar92 = dateTime35.getCal();
    net.ajaskey.common.DateTime dateTime95 = dateTime35.parse("719,795", "Wednesday");
    int int96 = dateTime19.getYears(dateTime95);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat7);
    org.junit.Assert.assertTrue("'" + double14 + "' != '" + (-1972.041095890411d) + "'", double14 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    org.junit.Assert.assertNull(dateTime18);
    org.junit.Assert.assertNotNull(dateTime19);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-1972.041095890411d) + "'", double27 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    org.junit.Assert.assertEquals("'" + str29 + "' != '" + "December" + "'", str29, "December");
    org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-1972.041095890411d) + "'", double36 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    org.junit.Assert.assertNotNull(date38);
    org.junit.Assert.assertEquals(date38.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
    org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
    org.junit.Assert.assertNull(dateTime46);
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    org.junit.Assert.assertNotNull(simpleDateFormat50);
    org.junit.Assert.assertNotNull(simpleDateFormat52);
    org.junit.Assert.assertNotNull(simpleDateFormat53);
    org.junit.Assert.assertNotNull(simpleDateFormat57);
    org.junit.Assert.assertNotNull(simpleDateFormat58);
    org.junit.Assert.assertNotNull(simpleDateFormat65);
    org.junit.Assert.assertNotNull(simpleDateFormat67);
    org.junit.Assert.assertNotNull(simpleDateFormat68);
    org.junit.Assert.assertNotNull(simpleDateFormat72);
    org.junit.Assert.assertNotNull(simpleDateFormat73);
    org.junit.Assert.assertNotNull(simpleDateFormat79);
    org.junit.Assert.assertTrue("'" + int85 + "' != '" + 5 + "'", int85 == 5);
    org.junit.Assert.assertTrue("'" + int86 + "' != '" + 31 + "'", int86 == 31);
    org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1969 + "'", int87 == 1969);
    org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
    org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    org.junit.Assert.assertNotNull(calendar92);
    org.junit.Assert.assertEquals(calendar92.toString(),
        "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertNull(dateTime95);
    org.junit.Assert.assertTrue("'" + int96 + "' != '" + 0 + "'", int96 == 0);
  }

  @Test
  public void test763() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test763");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    int int2 = dateTime1.getMs();
    net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
    double double9 = dateTime6.getDeltaYears(dateTime8);
    java.text.SimpleDateFormat simpleDateFormat10 = dateTime6.getSdf();
    boolean boolean11 = dateTime1.isLessThanOrEqual(dateTime6);
    net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(100L);
    double double18 = dateTime15.getDeltaYears(dateTime17);
    java.text.SimpleDateFormat simpleDateFormat20 = null;
    net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat20);
    net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double24 = dateTime21.getDeltaYears(dateTime23);
    dateTime23.set(0, 12, 0);
    boolean boolean29 = net.ajaskey.common.Utils.sameMonth(dateTime15, dateTime23);
    int int30 = dateTime1.getYears(dateTime15);
    int int31 = dateTime15.getYear();
    net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    java.text.SimpleDateFormat simpleDateFormat37 = null;
    net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat37);
    net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double41 = dateTime38.getDeltaYears(dateTime40);
    boolean boolean42 = dateTime35.isLessThan(dateTime40);
    int int43 = dateTime35.getHour();
    net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime(100L);
    double double50 = dateTime47.getDeltaYears(dateTime49);
    java.text.SimpleDateFormat simpleDateFormat52 = null;
    net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat52);
    net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double56 = dateTime53.getDeltaYears(dateTime55);
    boolean boolean57 = dateTime53.isWeekday();
    boolean boolean58 = dateTime47.sameDate(dateTime53);
    java.text.SimpleDateFormat simpleDateFormat60 = null;
    net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat60);
    net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double64 = dateTime61.getDeltaYears(dateTime63);
    net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean69 = dateTime63.isEqual(dateTime68);
    dateTime47.set(dateTime68);
    boolean boolean71 = net.ajaskey.common.Utils.sameDate(dateTime35, dateTime68);
    java.util.Date date72 = dateTime35.getTime();
    dateTime15.set(date72);
    java.lang.String str74 = dateTime15.getDay();
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1972.041095890411d) + "'", double18 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1968) + "'", int30 == (-1968));
    org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
    org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
    org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-1972.041095890411d) + "'", double50 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    org.junit.Assert.assertNotNull(date72);
// flaky:         org.junit.Assert.assertEquals(date72.toString(), "Thu Apr 10 14:03:33 MST 2");
    org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Thursday" + "'", str74, "Thursday");
  }

  @Test
  public void test764() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test764");
    java.lang.String[] strArray10 = new java.lang.String[] {
        "                                                                                               52.00", "UNKNOWN",
        "                                                                                               10.00", "",
        "JanuaryThu 10-Apr-0002 14:03:11Thu 10-Apr-0002 14:03:11                                                                                               52.00Thu 10-Apr-0002 14:03:11hi!Thu 10-Apr-0002 14:03:11",
        "365.00" };
    java.util.List<java.io.File> fileList11 = net.ajaskey.common.Utils.getDirTree(
        "JanuaryThu 10-Apr-0002 14:03:11Thu 10-Apr-0002 14:03:11                                                                                               52.00Thu 10-Apr-0002 14:03:11hi!Thu 10-Apr-0002 14:03:11",
        strArray10);
    java.util.List<java.io.File> fileList12 = net.ajaskey.common.Utils.getDirTree("Wed 31-Dec-1969 17:00:00", strArray10);
    java.util.List<java.io.File> fileList13 = net.ajaskey.common.Utils.getDirTree("", strArray10);
    java.util.List<java.io.File> fileList14 = net.ajaskey.common.Utils.getDirTree("1", strArray10);
    org.junit.Assert.assertNotNull(strArray10);
    org.junit.Assert.assertNull(fileList11);
    org.junit.Assert.assertNull(fileList12);
    org.junit.Assert.assertNull(fileList13);
    org.junit.Assert.assertNull(fileList14);
  }

  @Test
  public void test765() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test765");
    java.text.SimpleDateFormat simpleDateFormat1 = null;
    java.text.SimpleDateFormat simpleDateFormat2 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat1, simpleDateFormat2);
    java.lang.String str4 = dateTime3.getDay();
    java.lang.String str5 = dateTime3.getMonth();
    int int6 = dateTime3.getMs();
    int int7 = dateTime3.getYear();
    org.junit.Assert.assertNotNull(simpleDateFormat2);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UNKNOWN" + "'", str4, "UNKNOWN");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UNKNOWN" + "'", str5, "UNKNOWN");
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
  }

  @Test
  public void test766() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test766");
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 14:03:27", "      -62,190,298,597,820");
  }

  @Test
  public void test767() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test767");
    java.text.SimpleDateFormat simpleDateFormat1 = null;
    java.text.SimpleDateFormat simpleDateFormat2 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat1, simpleDateFormat2);
    net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(100L);
    double double10 = dateTime7.getDeltaYears(dateTime9);
    boolean boolean11 = dateTime9.isWeekday();
    java.util.Date date12 = dateTime9.getTime();
    java.lang.String str13 = dateTime9.toString();
    net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(100L);
    int int16 = dateTime15.getMs();
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(100L);
    double double23 = dateTime20.getDeltaYears(dateTime22);
    java.text.SimpleDateFormat simpleDateFormat24 = dateTime20.getSdf();
    boolean boolean25 = dateTime15.isLessThanOrEqual(dateTime20);
    boolean boolean26 = dateTime9.isLessThan(dateTime20);
    java.lang.String str27 = dateTime9.toString();
    long long28 = dateTime3.getDeltaMilliSeconds(dateTime9);
    net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime(100L);
    double double35 = dateTime32.getDeltaYears(dateTime34);
    boolean boolean36 = dateTime34.isWeekday();
    java.util.Date date37 = dateTime34.getTime();
    int int38 = dateTime34.getMinute();
    boolean boolean39 = dateTime3.sameDate(dateTime34);
    java.util.Calendar calendar40 = dateTime3.getCal();
    boolean boolean41 = dateTime3.isNull();
    net.ajaskey.common.DateTime dateTime42 = null;
    boolean boolean43 = dateTime3.isGreaterThan(dateTime42);
    org.junit.Assert.assertNotNull(simpleDateFormat2);
    org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1972.041095890411d) + "'", double10 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    org.junit.Assert.assertNotNull(date12);
    org.junit.Assert.assertEquals(date12.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "31-Dec-1969" + "'", str13, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
    org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-1972.041095890411d) + "'", double23 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat24);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "31-Dec-1969" + "'", str27, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
    org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-1972.041095890411d) + "'", double35 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    org.junit.Assert.assertNotNull(date37);
    org.junit.Assert.assertEquals(date37.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    org.junit.Assert.assertNull(calendar40);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
  }

  @Test
  public void test768() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test768");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    java.text.SimpleDateFormat simpleDateFormat8 = null;
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double12 = dateTime9.getDeltaYears(dateTime11);
    boolean boolean13 = dateTime9.isWeekday();
    boolean boolean14 = dateTime3.sameDate(dateTime9);
    net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(0L);
    boolean boolean17 = dateTime9.isGreaterThanOrEqual(dateTime16);
    net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime(100L);
    double double24 = dateTime21.getDeltaYears(dateTime23);
    boolean boolean25 = dateTime23.isWeekday();
    java.util.Date date26 = dateTime23.getTime();
    java.lang.String str27 = dateTime23.toString();
    net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(3, (int) '4', (int) (byte) 0);
    boolean boolean32 = dateTime23.isGreaterThan(dateTime31);
    long long33 = dateTime16.getDeltaDays(dateTime23);
    java.lang.String str34 = dateTime16.toFullString();
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1972.041095890411d) + "'", double24 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    org.junit.Assert.assertNotNull(date26);
    org.junit.Assert.assertEquals(date26.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "31-Dec-1969" + "'", str27, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
    org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str34, "Wed 31-Dec-1969 17:00:00");
  }

  @Test
  public void test769() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test769");
    java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readTextFile("Thu 10-Apr-0002 14:03:31", false);
    org.junit.Assert.assertNotNull(strList2);
  }

  @Test
  public void test770() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test770");
    java.text.SimpleDateFormat simpleDateFormat1 = null;
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
    net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double5 = dateTime2.getDeltaYears(dateTime4);
    boolean boolean6 = dateTime2.isWeekday();
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
    int int9 = dateTime8.getMs();
    java.lang.String str10 = dateTime8.toString();
    int int11 = dateTime8.getMs();
    java.util.Calendar calendar12 = dateTime8.getCal();
    dateTime2.set(calendar12);
    java.text.SimpleDateFormat simpleDateFormat14 = dateTime2.getSdf();
    net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(100L);
    int int17 = dateTime16.getMs();
    net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime(100L);
    double double24 = dateTime21.getDeltaYears(dateTime23);
    java.text.SimpleDateFormat simpleDateFormat25 = dateTime21.getSdf();
    boolean boolean26 = dateTime16.isLessThanOrEqual(dateTime21);
    java.lang.String str27 = dateTime16.format();
    java.util.Calendar calendar28 = dateTime16.getCal();
    dateTime2.set(calendar28);
    net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime(calendar28);
    net.ajaskey.common.DateTime dateTime32 = dateTime30.parse("           365");
    org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "31-Dec-1969" + "'", str10, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
    org.junit.Assert.assertNotNull(calendar12);
    org.junit.Assert.assertEquals(calendar12.toString(),
        "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertNull(simpleDateFormat14);
    org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
    org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1972.041095890411d) + "'", double24 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat25);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "BAD-DATE-FORMAT" + "'", str27, "BAD-DATE-FORMAT");
    org.junit.Assert.assertNotNull(calendar28);
    org.junit.Assert.assertEquals(calendar28.toString(),
        "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertNull(dateTime32);
  }

  @Test
  public void test771() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test771");
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime(
        "January         52         52                                                                                               52.00         52hi!         52",
        "     100");
  }

  @Test
  public void test772() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test772");
    net.ajaskey.common.DateTime dateTime0 = new net.ajaskey.common.DateTime();
    java.text.SimpleDateFormat simpleDateFormat2 = null;
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat2);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    int int7 = dateTime5.getDayOfYear();
    boolean boolean8 = dateTime0.isLessThan(dateTime5);
    java.text.SimpleDateFormat simpleDateFormat12 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat14 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat15 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("", simpleDateFormat14, simpleDateFormat15);
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat12,
        simpleDateFormat15);
    java.text.SimpleDateFormat simpleDateFormat19 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat20 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("", simpleDateFormat19, simpleDateFormat20);
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime("", simpleDateFormat15, simpleDateFormat20);
    java.text.SimpleDateFormat simpleDateFormat25 = null;
    java.text.SimpleDateFormat simpleDateFormat26 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat25, simpleDateFormat26);
    net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat26);
    net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime("Fri 31-Dec-0001 17:00:00", simpleDateFormat15, simpleDateFormat26);
    net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((long) 2);
    java.text.SimpleDateFormat simpleDateFormat32 = dateTime31.getSdf();
    net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime(100L);
    int int35 = dateTime34.getMs();
    net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime(100L);
    double double42 = dateTime39.getDeltaYears(dateTime41);
    java.text.SimpleDateFormat simpleDateFormat43 = dateTime39.getSdf();
    boolean boolean44 = dateTime34.isLessThanOrEqual(dateTime39);
    java.lang.String str45 = dateTime34.getDay();
    java.text.SimpleDateFormat simpleDateFormat49 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat51 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat52 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime("", simpleDateFormat51, simpleDateFormat52);
    net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat49,
        simpleDateFormat52);
    java.text.SimpleDateFormat simpleDateFormat56 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat57 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime("", simpleDateFormat56, simpleDateFormat57);
    net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime("", simpleDateFormat52, simpleDateFormat57);
    java.text.SimpleDateFormat simpleDateFormat62 = null;
    java.text.SimpleDateFormat simpleDateFormat63 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat62, simpleDateFormat63);
    net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat63);
    net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime("Fri 31-Dec-0001 17:00:00", simpleDateFormat52, simpleDateFormat63);
    dateTime34.setSdf(simpleDateFormat63);
    double double68 = dateTime31.getDeltaYears(dateTime34);
    boolean boolean69 = dateTime29.isLessThanOrEqual(dateTime34);
    long long70 = dateTime5.getDeltaDays(dateTime34);
    java.text.SimpleDateFormat simpleDateFormat73 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat75 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat76 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime("", simpleDateFormat75, simpleDateFormat76);
    net.ajaskey.common.DateTime dateTime78 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat73,
        simpleDateFormat76);
    java.text.SimpleDateFormat simpleDateFormat79 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime80 = new net.ajaskey.common.DateTime("", simpleDateFormat76, simpleDateFormat79);
    dateTime5.setSdf(simpleDateFormat76);
    int int82 = dateTime5.getDayOfWeek();
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 365 + "'", int7 == 365);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertNotNull(simpleDateFormat12);
    org.junit.Assert.assertNotNull(simpleDateFormat14);
    org.junit.Assert.assertNotNull(simpleDateFormat15);
    org.junit.Assert.assertNotNull(simpleDateFormat19);
    org.junit.Assert.assertNotNull(simpleDateFormat20);
    org.junit.Assert.assertNotNull(simpleDateFormat26);
    org.junit.Assert.assertNull(simpleDateFormat32);
    org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
    org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-1972.041095890411d) + "'", double42 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat43);
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Wednesday" + "'", str45, "Wednesday");
    org.junit.Assert.assertNotNull(simpleDateFormat49);
    org.junit.Assert.assertNotNull(simpleDateFormat51);
    org.junit.Assert.assertNotNull(simpleDateFormat52);
    org.junit.Assert.assertNotNull(simpleDateFormat56);
    org.junit.Assert.assertNotNull(simpleDateFormat57);
    org.junit.Assert.assertNotNull(simpleDateFormat63);
    org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    org.junit.Assert.assertTrue("'" + long70 + "' != '" + 0L + "'", long70 == 0L);
    org.junit.Assert.assertNotNull(simpleDateFormat73);
    org.junit.Assert.assertNotNull(simpleDateFormat75);
    org.junit.Assert.assertNotNull(simpleDateFormat76);
    org.junit.Assert.assertNotNull(simpleDateFormat79);
    org.junit.Assert.assertTrue("'" + int82 + "' != '" + 4 + "'", int82 == 4);
  }

  @Test
  public void test773() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test773");
    net.ajaskey.common.DateTime dateTime0 = new net.ajaskey.common.DateTime();
    java.text.SimpleDateFormat simpleDateFormat2 = null;
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat2);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    int int7 = dateTime5.getDayOfYear();
    boolean boolean8 = dateTime0.isLessThan(dateTime5);
    java.text.SimpleDateFormat simpleDateFormat12 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat14 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat15 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("", simpleDateFormat14, simpleDateFormat15);
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat12,
        simpleDateFormat15);
    java.text.SimpleDateFormat simpleDateFormat19 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat20 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("", simpleDateFormat19, simpleDateFormat20);
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime("", simpleDateFormat15, simpleDateFormat20);
    java.text.SimpleDateFormat simpleDateFormat25 = null;
    java.text.SimpleDateFormat simpleDateFormat26 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat25, simpleDateFormat26);
    net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat26);
    net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime("Fri 31-Dec-0001 17:00:00", simpleDateFormat15, simpleDateFormat26);
    net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((long) 2);
    java.text.SimpleDateFormat simpleDateFormat32 = dateTime31.getSdf();
    net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime(100L);
    int int35 = dateTime34.getMs();
    net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime(100L);
    double double42 = dateTime39.getDeltaYears(dateTime41);
    java.text.SimpleDateFormat simpleDateFormat43 = dateTime39.getSdf();
    boolean boolean44 = dateTime34.isLessThanOrEqual(dateTime39);
    java.lang.String str45 = dateTime34.getDay();
    java.text.SimpleDateFormat simpleDateFormat49 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat51 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat52 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime("", simpleDateFormat51, simpleDateFormat52);
    net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat49,
        simpleDateFormat52);
    java.text.SimpleDateFormat simpleDateFormat56 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat57 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime("", simpleDateFormat56, simpleDateFormat57);
    net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime("", simpleDateFormat52, simpleDateFormat57);
    java.text.SimpleDateFormat simpleDateFormat62 = null;
    java.text.SimpleDateFormat simpleDateFormat63 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat62, simpleDateFormat63);
    net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat63);
    net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime("Fri 31-Dec-0001 17:00:00", simpleDateFormat52, simpleDateFormat63);
    dateTime34.setSdf(simpleDateFormat63);
    double double68 = dateTime31.getDeltaYears(dateTime34);
    boolean boolean69 = dateTime29.isLessThanOrEqual(dateTime34);
    long long70 = dateTime5.getDeltaDays(dateTime34);
    java.text.SimpleDateFormat simpleDateFormat73 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat75 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat76 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime("", simpleDateFormat75, simpleDateFormat76);
    net.ajaskey.common.DateTime dateTime78 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat73,
        simpleDateFormat76);
    java.text.SimpleDateFormat simpleDateFormat79 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime80 = new net.ajaskey.common.DateTime("", simpleDateFormat76, simpleDateFormat79);
    dateTime5.setSdf(simpleDateFormat76);
    java.lang.String str82 = dateTime5.getMonth();
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 365 + "'", int7 == 365);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertNotNull(simpleDateFormat12);
    org.junit.Assert.assertNotNull(simpleDateFormat14);
    org.junit.Assert.assertNotNull(simpleDateFormat15);
    org.junit.Assert.assertNotNull(simpleDateFormat19);
    org.junit.Assert.assertNotNull(simpleDateFormat20);
    org.junit.Assert.assertNotNull(simpleDateFormat26);
    org.junit.Assert.assertNull(simpleDateFormat32);
    org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
    org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-1972.041095890411d) + "'", double42 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat43);
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Wednesday" + "'", str45, "Wednesday");
    org.junit.Assert.assertNotNull(simpleDateFormat49);
    org.junit.Assert.assertNotNull(simpleDateFormat51);
    org.junit.Assert.assertNotNull(simpleDateFormat52);
    org.junit.Assert.assertNotNull(simpleDateFormat56);
    org.junit.Assert.assertNotNull(simpleDateFormat57);
    org.junit.Assert.assertNotNull(simpleDateFormat63);
    org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    org.junit.Assert.assertTrue("'" + long70 + "' != '" + 0L + "'", long70 == 0L);
    org.junit.Assert.assertNotNull(simpleDateFormat73);
    org.junit.Assert.assertNotNull(simpleDateFormat75);
    org.junit.Assert.assertNotNull(simpleDateFormat76);
    org.junit.Assert.assertNotNull(simpleDateFormat79);
    org.junit.Assert.assertEquals("'" + str82 + "' != '" + "December" + "'", str82, "December");
  }

  @Test
  public void test774() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test774");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    dateTime1.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str6 = dateTime1.toString();
    java.text.SimpleDateFormat simpleDateFormat7 = dateTime1.getSdf();
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "04-Jan-0100" + "'", str6, "04-Jan-0100");
    org.junit.Assert.assertNotNull(simpleDateFormat7);
  }

  @Test
  public void test775() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test775");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) 2);
    java.text.SimpleDateFormat simpleDateFormat2 = dateTime1.getSdf();
    net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    java.text.SimpleDateFormat simpleDateFormat8 = null;
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double12 = dateTime9.getDeltaYears(dateTime11);
    boolean boolean13 = dateTime6.isLessThan(dateTime11);
    int int14 = dateTime6.getHour();
    long long15 = dateTime1.getDeltaDays(dateTime6);
    java.lang.String str16 = dateTime1.toString();
    int int17 = dateTime1.getYear();
    int int18 = dateTime1.getYear();
    int int19 = dateTime1.getMs();
    net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime(100L);
    double double26 = dateTime23.getDeltaYears(dateTime25);
    java.text.SimpleDateFormat simpleDateFormat28 = null;
    net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat28);
    net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double32 = dateTime29.getDeltaYears(dateTime31);
    boolean boolean33 = dateTime29.isWeekday();
    boolean boolean34 = dateTime23.sameDate(dateTime29);
    java.text.SimpleDateFormat simpleDateFormat36 = null;
    net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat36);
    net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double40 = dateTime37.getDeltaYears(dateTime39);
    net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean45 = dateTime39.isEqual(dateTime44);
    dateTime23.set(dateTime44);
    net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double49 = dateTime44.getDeltaYears(dateTime48);
    int int50 = dateTime48.getDayOfWeek();
    boolean boolean51 = dateTime1.isEqual(dateTime48);
    net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime(100L);
    double double58 = dateTime55.getDeltaYears(dateTime57);
    java.text.SimpleDateFormat simpleDateFormat60 = null;
    net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat60);
    net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double64 = dateTime61.getDeltaYears(dateTime63);
    boolean boolean65 = dateTime61.isWeekday();
    boolean boolean66 = dateTime55.sameDate(dateTime61);
    java.text.SimpleDateFormat simpleDateFormat68 = null;
    net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat68);
    net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double72 = dateTime69.getDeltaYears(dateTime71);
    net.ajaskey.common.DateTime dateTime76 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean77 = dateTime71.isEqual(dateTime76);
    dateTime55.set(dateTime76);
    net.ajaskey.common.DateTime dateTime80 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int81 = dateTime80.getDayOfWeek();
    double double82 = dateTime76.getDeltaYears(dateTime80);
    java.text.SimpleDateFormat simpleDateFormat83 = dateTime76.getSdf();
    boolean boolean84 = dateTime48.isLessThan(dateTime76);
    net.ajaskey.common.DateTime dateTime87 = dateTime48.parse(
        "JanuaryJanuaryJanuary                                                                                               52.00Januaryhi!January",
        "        2");
    net.ajaskey.common.DateTime dateTime89 = new net.ajaskey.common.DateTime((long) (short) 0);
    net.ajaskey.common.DateTime dateTime90 = net.ajaskey.common.DateTime.copy(dateTime89);
    java.lang.String str91 = dateTime90.getDay();
    dateTime48.set(dateTime90);
    org.junit.Assert.assertNull(simpleDateFormat2);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
    org.junit.Assert.assertTrue("'" + long15 + "' != '" + 719795L + "'", long15 == 719795L);
    org.junit.Assert.assertEquals("'" + str16 + "' != '" + "31-Dec-1969" + "'", str16, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1969 + "'", int17 == 1969);
    org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1969 + "'", int18 == 1969);
    org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
    org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-1972.041095890411d) + "'", double26 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-1972.041095890411d) + "'", double49 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + int50 + "' != '" + 4 + "'", int50 == 4);
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-1972.041095890411d) + "'", double58 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    org.junit.Assert.assertTrue("'" + int81 + "' != '" + 4 + "'", int81 == 4);
    org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-1972.041095890411d) + "'", double82 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat83);
    org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    org.junit.Assert.assertNull(dateTime87);
    org.junit.Assert.assertNotNull(dateTime90);
    org.junit.Assert.assertEquals("'" + str91 + "' != '" + "Wednesday" + "'", str91, "Wednesday");
  }

  @Test
  public void test776() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test776");
    net.ajaskey.common.DateTime dateTime0 = new net.ajaskey.common.DateTime();
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime(100L);
    dateTime2.set((int) (byte) 100, (-1), (int) '#');
    java.text.SimpleDateFormat simpleDateFormat7 = dateTime2.getSdf();
    boolean boolean8 = dateTime0.isEqual(dateTime2);
    net.ajaskey.common.DateTime dateTime9 = net.ajaskey.common.DateTime.copy(dateTime0);
    java.util.Calendar calendar10 = dateTime0.getCal();
    net.ajaskey.common.DateTime dateTime11 = net.ajaskey.common.DateTime.copy(dateTime0);
    net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime("31-Dec-1969", "Thu 10-Apr-0002 14:03:14");
    java.util.Date date15 = dateTime14.getTime();
    java.lang.String str17 = dateTime14.format("10-Apr-0002");
    java.text.SimpleDateFormat simpleDateFormat19 = null;
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat19);
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double23 = dateTime20.getDeltaYears(dateTime22);
    boolean boolean24 = dateTime20.isWeekday();
    net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(100L);
    int int27 = dateTime26.getMs();
    java.lang.String str28 = dateTime26.toString();
    int int29 = dateTime26.getMs();
    java.util.Calendar calendar30 = dateTime26.getCal();
    dateTime20.set(calendar30);
    dateTime14.set(calendar30);
    boolean boolean33 = net.ajaskey.common.Utils.sameDate(dateTime0, dateTime14);
    org.junit.Assert.assertNull(simpleDateFormat7);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertNotNull(dateTime9);
    org.junit.Assert.assertNotNull(calendar10);
// flaky:         org.junit.Assert.assertEquals(calendar10.toString(), "java.util.GregorianCalendar[time=1593115413393,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2020,MONTH=5,WEEK_OF_YEAR=26,WEEK_OF_MONTH=4,DAY_OF_MONTH=25,DAY_OF_YEAR=177,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=3,SECOND=33,MILLISECOND=393,ZONE_OFFSET=-25200000,DST_OFFSET=3600000]");
    org.junit.Assert.assertNotNull(dateTime11);
    org.junit.Assert.assertNull(date15);
    org.junit.Assert.assertEquals("'" + str17 + "' != '" + "BAD-DATE-FORMAT" + "'", str17, "BAD-DATE-FORMAT");
    org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
    org.junit.Assert.assertEquals("'" + str28 + "' != '" + "31-Dec-1969" + "'", str28, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
    org.junit.Assert.assertNotNull(calendar30);
    org.junit.Assert.assertEquals(calendar30.toString(),
        "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
  }

  @Test
  public void test777() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test777");
    net.ajaskey.common.Utils.NL = "Saturday";
  }

  @Test
  public void test778() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test778");
    java.text.SimpleDateFormat simpleDateFormat1 = null;
    java.text.SimpleDateFormat simpleDateFormat2 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat1, simpleDateFormat2);
    java.lang.String str4 = dateTime3.getDay();
    java.util.Calendar calendar5 = dateTime3.getCal();
    java.lang.String str6 = dateTime3.format();
    int int7 = dateTime3.getMinute();
    int int8 = dateTime3.getDayOfWeek();
    org.junit.Assert.assertNotNull(simpleDateFormat2);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UNKNOWN" + "'", str4, "UNKNOWN");
    org.junit.Assert.assertNull(calendar5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "BAD-DATE-FORMAT" + "'", str6, "BAD-DATE-FORMAT");
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
  }

  @Test
  public void test779() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test779");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    dateTime1.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str6 = dateTime1.getMonth();
    int int7 = dateTime1.getMs();
    java.lang.String str9 = dateTime1.format("                                                                                               52.00");
    java.lang.String str10 = dateTime1.getDay();
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "January" + "'", str6, "January");
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
    org.junit.Assert.assertEquals(
        "'" + str9 + "' != '" + "                                                                                               52.00" + "'", str9,
        "                                                                                               52.00");
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Saturday" + "'", str10, "Saturday");
  }

  @Test
  public void test780() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test780");
    java.text.SimpleDateFormat simpleDateFormat1 = null;
    java.text.SimpleDateFormat simpleDateFormat2 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat1, simpleDateFormat2);
    net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(100L);
    double double10 = dateTime7.getDeltaYears(dateTime9);
    boolean boolean11 = dateTime9.isWeekday();
    java.util.Date date12 = dateTime9.getTime();
    java.lang.String str13 = dateTime9.toString();
    net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(100L);
    int int16 = dateTime15.getMs();
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(100L);
    double double23 = dateTime20.getDeltaYears(dateTime22);
    java.text.SimpleDateFormat simpleDateFormat24 = dateTime20.getSdf();
    boolean boolean25 = dateTime15.isLessThanOrEqual(dateTime20);
    boolean boolean26 = dateTime9.isLessThan(dateTime20);
    java.lang.String str27 = dateTime9.toString();
    long long28 = dateTime3.getDeltaMilliSeconds(dateTime9);
    net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime(100L);
    double double35 = dateTime32.getDeltaYears(dateTime34);
    boolean boolean36 = dateTime34.isWeekday();
    java.util.Date date37 = dateTime34.getTime();
    int int38 = dateTime34.getMinute();
    boolean boolean39 = dateTime3.sameDate(dateTime34);
    net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(100L);
    double double46 = dateTime43.getDeltaYears(dateTime45);
    boolean boolean47 = dateTime45.isWeekday();
    net.ajaskey.common.DateTime dateTime50 = dateTime45.parse("31-Dec-1969", "January");
    java.util.Calendar calendar51 = dateTime45.getCal();
    dateTime3.set(calendar51);
    net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime(calendar51);
    org.junit.Assert.assertNotNull(simpleDateFormat2);
    org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1972.041095890411d) + "'", double10 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    org.junit.Assert.assertNotNull(date12);
    org.junit.Assert.assertEquals(date12.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "31-Dec-1969" + "'", str13, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
    org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-1972.041095890411d) + "'", double23 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat24);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "31-Dec-1969" + "'", str27, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
    org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-1972.041095890411d) + "'", double35 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    org.junit.Assert.assertNotNull(date37);
    org.junit.Assert.assertEquals(date37.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-1972.041095890411d) + "'", double46 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    org.junit.Assert.assertNull(dateTime50);
    org.junit.Assert.assertNotNull(calendar51);
    org.junit.Assert.assertEquals(calendar51.toString(),
        "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
  }

  @Test
  public void test781() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test781");
    java.text.SimpleDateFormat simpleDateFormat3 = null;
    java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat3, simpleDateFormat4);
    net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat4);
    net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat4);
    net.ajaskey.common.DateTime dateTime8 = net.ajaskey.common.DateTime.copy(dateTime7);
    net.ajaskey.common.DateTime dateTime10 = dateTime7.parse("      0.00");
    org.junit.Assert.assertNotNull(simpleDateFormat4);
    org.junit.Assert.assertNull(dateTime8);
    org.junit.Assert.assertNull(dateTime10);
  }

  @Test
  public void test782() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test782");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    java.text.SimpleDateFormat simpleDateFormat7 = dateTime3.getSdf();
    java.text.SimpleDateFormat simpleDateFormat9 = null;
    net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat9);
    net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double13 = dateTime10.getDeltaYears(dateTime12);
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean18 = dateTime12.isEqual(dateTime17);
    java.util.Calendar calendar19 = dateTime12.getCal();
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime(dateTime12);
    boolean boolean21 = dateTime12.isWeekday();
    int int22 = dateTime12.getHour();
    net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int25 = dateTime24.getHour();
    int int26 = dateTime24.getDayOfMonth();
    int int27 = dateTime24.getYear();
    net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(dateTime24);
    net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime(100L);
    double double35 = dateTime32.getDeltaYears(dateTime34);
    java.text.SimpleDateFormat simpleDateFormat37 = null;
    net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat37);
    net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double41 = dateTime38.getDeltaYears(dateTime40);
    boolean boolean42 = dateTime38.isWeekday();
    boolean boolean43 = dateTime32.sameDate(dateTime38);
    java.text.SimpleDateFormat simpleDateFormat45 = null;
    net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat45);
    net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double49 = dateTime46.getDeltaYears(dateTime48);
    net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean54 = dateTime48.isEqual(dateTime53);
    dateTime32.set(dateTime53);
    net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double58 = dateTime53.getDeltaYears(dateTime57);
    java.text.SimpleDateFormat simpleDateFormat60 = null;
    net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat60);
    net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double64 = dateTime61.getDeltaYears(dateTime63);
    boolean boolean65 = dateTime61.isWeekday();
    net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime(100L);
    int int68 = dateTime67.getMs();
    java.lang.String str69 = dateTime67.toString();
    int int70 = dateTime67.getMs();
    java.util.Calendar calendar71 = dateTime67.getCal();
    dateTime61.set(calendar71);
    dateTime53.set(calendar71);
    dateTime28.set(calendar71);
    java.text.SimpleDateFormat simpleDateFormat75 = net.ajaskey.common.Utils.sdf;
    dateTime28.setSdf(simpleDateFormat75);
    boolean boolean77 = net.ajaskey.common.Utils.sameDate(dateTime12, dateTime28);
    boolean boolean78 = dateTime3.isGreaterThan(dateTime28);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat7);
    org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    org.junit.Assert.assertNotNull(calendar19);
    org.junit.Assert.assertEquals(calendar19.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    org.junit.Assert.assertTrue("'" + int22 + "' != '" + 5 + "'", int22 == 5);
    org.junit.Assert.assertTrue("'" + int25 + "' != '" + 5 + "'", int25 == 5);
    org.junit.Assert.assertTrue("'" + int26 + "' != '" + 31 + "'", int26 == 31);
    org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1969 + "'", int27 == 1969);
    org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-1972.041095890411d) + "'", double35 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-1972.041095890411d) + "'", double58 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
    org.junit.Assert.assertEquals("'" + str69 + "' != '" + "31-Dec-1969" + "'", str69, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int70 + "' != '" + 100 + "'", int70 == 100);
    org.junit.Assert.assertNotNull(calendar71);
    org.junit.Assert.assertEquals(calendar71.toString(),
        "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertNotNull(simpleDateFormat75);
    org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
  }

  @Test
  public void test783() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test783");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    java.text.SimpleDateFormat simpleDateFormat7 = dateTime3.getSdf();
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(100L);
    double double14 = dateTime11.getDeltaYears(dateTime13);
    boolean boolean15 = dateTime13.isWeekday();
    net.ajaskey.common.DateTime dateTime18 = dateTime13.parse("31-Dec-1969", "January");
    net.ajaskey.common.DateTime dateTime19 = net.ajaskey.common.DateTime.copy(dateTime13);
    boolean boolean20 = dateTime3.sameDate(dateTime19);
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int23 = dateTime22.getDayOfWeek();
    int int24 = dateTime19.getYears(dateTime22);
    java.lang.String str25 = dateTime22.toString();
    java.util.Date date26 = dateTime22.getTime();
    net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(date26);
    net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(date26);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat7);
    org.junit.Assert.assertTrue("'" + double14 + "' != '" + (-1972.041095890411d) + "'", double14 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    org.junit.Assert.assertNull(dateTime18);
    org.junit.Assert.assertNotNull(dateTime19);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertTrue("'" + int23 + "' != '" + 4 + "'", int23 == 4);
    org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    org.junit.Assert.assertEquals("'" + str25 + "' != '" + "31-Dec-1969" + "'", str25, "31-Dec-1969");
    org.junit.Assert.assertNotNull(date26);
    org.junit.Assert.assertEquals(date26.toString(), "Wed Dec 31 17:00:00 MST 1969");
  }

  @Test
  public void test784() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test784");
    java.text.SimpleDateFormat simpleDateFormat1 = null;
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
    net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double5 = dateTime2.getDeltaYears(dateTime4);
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean10 = dateTime4.isEqual(dateTime9);
    java.text.SimpleDateFormat simpleDateFormat12 = null;
    java.text.SimpleDateFormat simpleDateFormat13 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat12, simpleDateFormat13);
    net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime(100L);
    double double21 = dateTime18.getDeltaYears(dateTime20);
    boolean boolean22 = dateTime20.isWeekday();
    java.util.Date date23 = dateTime20.getTime();
    java.lang.String str24 = dateTime20.toString();
    net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(100L);
    int int27 = dateTime26.getMs();
    net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime(100L);
    double double34 = dateTime31.getDeltaYears(dateTime33);
    java.text.SimpleDateFormat simpleDateFormat35 = dateTime31.getSdf();
    boolean boolean36 = dateTime26.isLessThanOrEqual(dateTime31);
    boolean boolean37 = dateTime20.isLessThan(dateTime31);
    java.lang.String str38 = dateTime20.toString();
    long long39 = dateTime14.getDeltaMilliSeconds(dateTime20);
    net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(100L);
    double double46 = dateTime43.getDeltaYears(dateTime45);
    boolean boolean47 = dateTime45.isWeekday();
    java.util.Date date48 = dateTime45.getTime();
    int int49 = dateTime45.getMinute();
    boolean boolean50 = dateTime14.sameDate(dateTime45);
    int int51 = dateTime4.getYears(dateTime45);
    int int52 = dateTime45.getDayOfWeek();
    java.lang.String str53 = dateTime45.toString();
    int int54 = dateTime45.getMs();
    net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime(100L);
    int int57 = dateTime56.getMs();
    java.text.SimpleDateFormat simpleDateFormat58 = net.ajaskey.common.Utils.sdf;
    dateTime56.setSdf(simpleDateFormat58);
    int int60 = dateTime56.getDayOfWeek();
    net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime(100L);
    double double67 = dateTime64.getDeltaYears(dateTime66);
    java.util.Calendar calendar68 = dateTime64.getCal();
    dateTime56.set(calendar68);
    java.text.SimpleDateFormat simpleDateFormat71 = null;
    net.ajaskey.common.DateTime dateTime72 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat71);
    net.ajaskey.common.DateTime dateTime74 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double75 = dateTime72.getDeltaYears(dateTime74);
    net.ajaskey.common.DateTime dateTime79 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean80 = dateTime74.isEqual(dateTime79);
    java.util.Calendar calendar81 = dateTime74.getCal();
    net.ajaskey.common.DateTime dateTime82 = new net.ajaskey.common.DateTime(calendar81);
    dateTime56.set(calendar81);
    int int84 = dateTime56.getDayOfYear();
    boolean boolean85 = dateTime45.isGreaterThan(dateTime56);
    java.lang.String str86 = dateTime56.format();
    org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertNotNull(simpleDateFormat13);
    org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-1972.041095890411d) + "'", double21 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    org.junit.Assert.assertNotNull(date23);
    org.junit.Assert.assertEquals(date23.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str24 + "' != '" + "31-Dec-1969" + "'", str24, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
    org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-1972.041095890411d) + "'", double34 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat35);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    org.junit.Assert.assertEquals("'" + str38 + "' != '" + "31-Dec-1969" + "'", str38, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
    org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-1972.041095890411d) + "'", double46 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    org.junit.Assert.assertNotNull(date48);
    org.junit.Assert.assertEquals(date48.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
    org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
    org.junit.Assert.assertTrue("'" + int52 + "' != '" + 4 + "'", int52 == 4);
    org.junit.Assert.assertEquals("'" + str53 + "' != '" + "31-Dec-1969" + "'", str53, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int54 + "' != '" + 100 + "'", int54 == 100);
    org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat58);
    org.junit.Assert.assertTrue("'" + int60 + "' != '" + 4 + "'", int60 == 4);
    org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-1972.041095890411d) + "'", double67 == (-1972.041095890411d));
    org.junit.Assert.assertNotNull(calendar68);
// flaky:         org.junit.Assert.assertEquals(calendar68.toString(), "java.util.GregorianCalendar[time=-62190298586469,areFieldsSet=true,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=3,SECOND=33,MILLISECOND=531,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    org.junit.Assert.assertNotNull(calendar81);
    org.junit.Assert.assertEquals(calendar81.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + int84 + "' != '" + 365 + "'", int84 == 365);
    org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    org.junit.Assert.assertEquals("'" + str86 + "' != '" + "31-Dec-1969" + "'", str86, "31-Dec-1969");
  }

  @Test
  public void test785() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test785");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    int int2 = dateTime1.getMs();
    java.lang.String str3 = dateTime1.toString();
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int6 = dateTime5.getHour();
    int int7 = dateTime5.getDayOfMonth();
    dateTime1.set(dateTime5);
    int int9 = dateTime5.getMs();
    java.text.SimpleDateFormat simpleDateFormat10 = dateTime5.getSdf();
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "31-Dec-1969" + "'", str3, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 31 + "'", int7 == 31);
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    org.junit.Assert.assertNull(simpleDateFormat10);
  }

  @Test
  public void test786() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test786");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    java.text.SimpleDateFormat simpleDateFormat8 = null;
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double12 = dateTime9.getDeltaYears(dateTime11);
    boolean boolean13 = dateTime9.isWeekday();
    boolean boolean14 = dateTime3.sameDate(dateTime9);
    java.text.SimpleDateFormat simpleDateFormat16 = null;
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double20 = dateTime17.getDeltaYears(dateTime19);
    net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean25 = dateTime19.isEqual(dateTime24);
    dateTime3.set(dateTime24);
    net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double29 = dateTime24.getDeltaYears(dateTime28);
    int int30 = dateTime28.getHour();
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-1972.041095890411d) + "'", double29 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + int30 + "' != '" + 5 + "'", int30 == 5);
  }

  @Test
  public void test787() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test787");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    java.text.SimpleDateFormat simpleDateFormat7 = null;
    java.text.SimpleDateFormat simpleDateFormat8 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat7, simpleDateFormat8);
    net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat8);
    net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(0L);
    int int13 = dateTime12.getMs();
    java.text.SimpleDateFormat simpleDateFormat15 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat17 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat18 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime("", simpleDateFormat17, simpleDateFormat18);
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat15,
        simpleDateFormat18);
    dateTime12.setSdf(simpleDateFormat18);
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime("UNKNOWN", simpleDateFormat8, simpleDateFormat18);
    dateTime3.setSdf(simpleDateFormat18);
    org.junit.Assert.assertNotNull(simpleDateFormat8);
    org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    org.junit.Assert.assertNotNull(simpleDateFormat15);
    org.junit.Assert.assertNotNull(simpleDateFormat17);
    org.junit.Assert.assertNotNull(simpleDateFormat18);
  }

  @Test
  public void test788() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test788");
    java.lang.String str2 = net.ajaskey.common.Utils.lfmt((-62190298597863L), 31);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "            -62,190,298,597,863" + "'", str2, "            -62,190,298,597,863");
  }

  @Test
  public void test789() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test789");
    net.ajaskey.common.DateTime dateTime0 = new net.ajaskey.common.DateTime();
    java.text.SimpleDateFormat simpleDateFormat2 = null;
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat2);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    int int7 = dateTime5.getDayOfYear();
    boolean boolean8 = dateTime0.isLessThan(dateTime5);
    java.text.SimpleDateFormat simpleDateFormat12 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat14 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat15 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("", simpleDateFormat14, simpleDateFormat15);
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat12,
        simpleDateFormat15);
    java.text.SimpleDateFormat simpleDateFormat19 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat20 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("", simpleDateFormat19, simpleDateFormat20);
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime("", simpleDateFormat15, simpleDateFormat20);
    java.text.SimpleDateFormat simpleDateFormat25 = null;
    java.text.SimpleDateFormat simpleDateFormat26 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat25, simpleDateFormat26);
    net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat26);
    net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime("Fri 31-Dec-0001 17:00:00", simpleDateFormat15, simpleDateFormat26);
    net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((long) 2);
    java.text.SimpleDateFormat simpleDateFormat32 = dateTime31.getSdf();
    net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime(100L);
    int int35 = dateTime34.getMs();
    net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime(100L);
    double double42 = dateTime39.getDeltaYears(dateTime41);
    java.text.SimpleDateFormat simpleDateFormat43 = dateTime39.getSdf();
    boolean boolean44 = dateTime34.isLessThanOrEqual(dateTime39);
    java.lang.String str45 = dateTime34.getDay();
    java.text.SimpleDateFormat simpleDateFormat49 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat51 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat52 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime("", simpleDateFormat51, simpleDateFormat52);
    net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat49,
        simpleDateFormat52);
    java.text.SimpleDateFormat simpleDateFormat56 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat57 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime("", simpleDateFormat56, simpleDateFormat57);
    net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime("", simpleDateFormat52, simpleDateFormat57);
    java.text.SimpleDateFormat simpleDateFormat62 = null;
    java.text.SimpleDateFormat simpleDateFormat63 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat62, simpleDateFormat63);
    net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat63);
    net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime("Fri 31-Dec-0001 17:00:00", simpleDateFormat52, simpleDateFormat63);
    dateTime34.setSdf(simpleDateFormat63);
    double double68 = dateTime31.getDeltaYears(dateTime34);
    boolean boolean69 = dateTime29.isLessThanOrEqual(dateTime34);
    long long70 = dateTime5.getDeltaDays(dateTime34);
    int int71 = dateTime34.getDayOfWeek();
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 365 + "'", int7 == 365);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertNotNull(simpleDateFormat12);
    org.junit.Assert.assertNotNull(simpleDateFormat14);
    org.junit.Assert.assertNotNull(simpleDateFormat15);
    org.junit.Assert.assertNotNull(simpleDateFormat19);
    org.junit.Assert.assertNotNull(simpleDateFormat20);
    org.junit.Assert.assertNotNull(simpleDateFormat26);
    org.junit.Assert.assertNull(simpleDateFormat32);
    org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
    org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-1972.041095890411d) + "'", double42 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat43);
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Wednesday" + "'", str45, "Wednesday");
    org.junit.Assert.assertNotNull(simpleDateFormat49);
    org.junit.Assert.assertNotNull(simpleDateFormat51);
    org.junit.Assert.assertNotNull(simpleDateFormat52);
    org.junit.Assert.assertNotNull(simpleDateFormat56);
    org.junit.Assert.assertNotNull(simpleDateFormat57);
    org.junit.Assert.assertNotNull(simpleDateFormat63);
    org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    org.junit.Assert.assertTrue("'" + long70 + "' != '" + 0L + "'", long70 == 0L);
    org.junit.Assert.assertTrue("'" + int71 + "' != '" + 4 + "'", int71 == 4);
  }

  @Test
  public void test790() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test790");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(100L);
    int int4 = dateTime3.getMs();
    java.text.SimpleDateFormat simpleDateFormat5 = net.ajaskey.common.Utils.sdf;
    dateTime3.setSdf(simpleDateFormat5);
    java.text.SimpleDateFormat simpleDateFormat9 = null;
    java.text.SimpleDateFormat simpleDateFormat10 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat9, simpleDateFormat10);
    net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat10);
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("         52", simpleDateFormat5, simpleDateFormat10);
    net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(100L);
    int int16 = dateTime15.getMs();
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(100L);
    double double23 = dateTime20.getDeltaYears(dateTime22);
    java.text.SimpleDateFormat simpleDateFormat24 = dateTime20.getSdf();
    boolean boolean25 = dateTime15.isLessThanOrEqual(dateTime20);
    dateTime20.setFirstWorkDay();
    java.lang.String str27 = dateTime20.toFullString();
    net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime(100L);
    double double34 = dateTime31.getDeltaYears(dateTime33);
    java.text.SimpleDateFormat simpleDateFormat36 = null;
    net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat36);
    net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double40 = dateTime37.getDeltaYears(dateTime39);
    boolean boolean41 = dateTime37.isWeekday();
    boolean boolean42 = dateTime31.sameDate(dateTime37);
    net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime(0L);
    boolean boolean45 = dateTime37.isGreaterThanOrEqual(dateTime44);
    net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime(100L);
    dateTime47.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str52 = dateTime47.getMonth();
    java.text.SimpleDateFormat simpleDateFormat54 = null;
    net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat54);
    net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double58 = dateTime55.getDeltaYears(dateTime57);
    boolean boolean59 = dateTime47.isLessThan(dateTime55);
    net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime(100L);
    double double66 = dateTime63.getDeltaYears(dateTime65);
    net.ajaskey.common.DateTime dateTime67 = null;
    long long68 = dateTime63.getDeltaDays(dateTime67);
    boolean boolean69 = dateTime55.isLessThanOrEqual(dateTime63);
    java.lang.String str70 = dateTime55.format();
    boolean boolean71 = dateTime37.isGreaterThan(dateTime55);
    boolean boolean72 = net.ajaskey.common.Utils.sameMonth(dateTime20, dateTime37);
    java.text.SimpleDateFormat simpleDateFormat76 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat78 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat79 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime80 = new net.ajaskey.common.DateTime("", simpleDateFormat78, simpleDateFormat79);
    net.ajaskey.common.DateTime dateTime81 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat76,
        simpleDateFormat79);
    net.ajaskey.common.DateTime dateTime82 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat76);
    net.ajaskey.common.DateTime dateTime83 = new net.ajaskey.common.DateTime("December", simpleDateFormat76);
    dateTime37.setSdf(simpleDateFormat76);
    net.ajaskey.common.DateTime dateTime85 = new net.ajaskey.common.DateTime("                           -719,795", simpleDateFormat5,
        simpleDateFormat76);
    int int86 = dateTime85.getDayOfMonth();
    dateTime85.set(25, 14, (int) (short) 10);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat5);
    org.junit.Assert.assertNotNull(simpleDateFormat10);
    org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
    org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-1972.041095890411d) + "'", double23 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat24);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Thu 10-Apr-0002 14:03:33" + "'", str27, "Thu 10-Apr-0002 14:03:33");
    org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-1972.041095890411d) + "'", double34 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    org.junit.Assert.assertEquals("'" + str52 + "' != '" + "January" + "'", str52, "January");
    org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-1972.041095890411d) + "'", double66 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + long68 + "' != '" + 0L + "'", long68 == 0L);
    org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    org.junit.Assert.assertEquals("'" + str70 + "' != '" + "BAD-DATE-FORMAT" + "'", str70, "BAD-DATE-FORMAT");
    org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    org.junit.Assert.assertNotNull(simpleDateFormat76);
    org.junit.Assert.assertNotNull(simpleDateFormat78);
    org.junit.Assert.assertNotNull(simpleDateFormat79);
    org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
  }

  @Test
  public void test791() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test791");
    java.util.zip.ZipOutputStream zipOutputStream1 = null;
    // The following exception was thrown during execution in test generation
    try {
      net.ajaskey.common.Utils.writeToZipFile(
          "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
          zipOutputStream1);
      org.junit.Assert.fail(
          "Expected exception of type java.io.FileNotFoundException; message: January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969 (Access is denied)");
    }
    catch (java.io.FileNotFoundException e) {
      // Expected exception.
    }
  }

  @Test
  public void test792() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test792");
    java.text.SimpleDateFormat simpleDateFormat1 = null;
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
    net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double5 = dateTime2.getDeltaYears(dateTime4);
    boolean boolean6 = dateTime2.isWeekday();
    java.lang.String str7 = dateTime2.getDay();
    int int8 = dateTime2.getDayOfWeek();
    org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UNKNOWN" + "'", str7, "UNKNOWN");
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
  }

  @Test
  public void test793() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test793");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    int int2 = dateTime1.getMs();
    java.lang.String str3 = dateTime1.toString();
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int6 = dateTime5.getHour();
    int int7 = dateTime5.getDayOfMonth();
    dateTime1.set(dateTime5);
    net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(100L);
    double double15 = dateTime12.getDeltaYears(dateTime14);
    boolean boolean16 = dateTime14.isWeekday();
    java.util.Date date17 = dateTime14.getTime();
    java.lang.String str18 = dateTime14.toString();
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(3, (int) '4', (int) (byte) 0);
    boolean boolean23 = dateTime14.isGreaterThan(dateTime22);
    boolean boolean24 = net.ajaskey.common.Utils.sameMonth(dateTime1, dateTime22);
    java.lang.String str25 = dateTime1.getDay();
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "31-Dec-1969" + "'", str3, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 31 + "'", int7 == 31);
    org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-1972.041095890411d) + "'", double15 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    org.junit.Assert.assertNotNull(date17);
    org.junit.Assert.assertEquals(date17.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str18 + "' != '" + "31-Dec-1969" + "'", str18, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Wednesday" + "'", str25, "Wednesday");
  }

  @Test
  public void test794() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test794");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    java.text.SimpleDateFormat simpleDateFormat7 = dateTime3.getSdf();
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(100L);
    double double14 = dateTime11.getDeltaYears(dateTime13);
    boolean boolean15 = dateTime13.isWeekday();
    net.ajaskey.common.DateTime dateTime18 = dateTime13.parse("31-Dec-1969", "January");
    net.ajaskey.common.DateTime dateTime19 = net.ajaskey.common.DateTime.copy(dateTime13);
    boolean boolean20 = dateTime3.sameDate(dateTime19);
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(100L);
    int int23 = dateTime22.getMs();
    net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(100L);
    double double30 = dateTime27.getDeltaYears(dateTime29);
    java.text.SimpleDateFormat simpleDateFormat31 = dateTime27.getSdf();
    boolean boolean32 = dateTime22.isLessThanOrEqual(dateTime27);
    java.lang.String str33 = dateTime22.getDay();
    boolean boolean34 = dateTime19.isLessThanOrEqual(dateTime22);
    boolean boolean35 = dateTime22.isNull();
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat7);
    org.junit.Assert.assertTrue("'" + double14 + "' != '" + (-1972.041095890411d) + "'", double14 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    org.junit.Assert.assertNull(dateTime18);
    org.junit.Assert.assertNotNull(dateTime19);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
    org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-1972.041095890411d) + "'", double30 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat31);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Wednesday" + "'", str33, "Wednesday");
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
  }

  @Test
  public void test795() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test795");
    java.text.SimpleDateFormat simpleDateFormat1 = null;
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
    net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double5 = dateTime2.getDeltaYears(dateTime4);
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean10 = dateTime4.isEqual(dateTime9);
    java.util.Calendar calendar11 = dateTime4.getCal();
    net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(calendar11);
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(calendar11);
    java.util.Calendar calendar14 = dateTime13.getCal();
    org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertNotNull(calendar11);
    org.junit.Assert.assertEquals(calendar11.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertNotNull(calendar14);
    org.junit.Assert.assertEquals(calendar14.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
  }

  @Test
  public void test796() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test796");
    java.text.SimpleDateFormat simpleDateFormat3 = null;
    java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat3, simpleDateFormat4);
    net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat4);
    net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("         14", simpleDateFormat4);
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(0L);
    java.lang.String str10 = dateTime9.toFullString();
    dateTime7.set(dateTime9);
    net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(100L);
    double double18 = dateTime15.getDeltaYears(dateTime17);
    boolean boolean19 = dateTime17.isWeekday();
    java.util.Date date20 = dateTime17.getTime();
    int int21 = dateTime17.getMinute();
    java.text.SimpleDateFormat simpleDateFormat23 = null;
    net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat23);
    net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double27 = dateTime24.getDeltaYears(dateTime26);
    net.ajaskey.common.DateTime dateTime28 = net.ajaskey.common.DateTime.copy(dateTime24);
    boolean boolean29 = net.ajaskey.common.Utils.sameDate(dateTime17, dateTime24);
    java.text.SimpleDateFormat simpleDateFormat32 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat34 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat35 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime("", simpleDateFormat34, simpleDateFormat35);
    net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat32,
        simpleDateFormat35);
    java.text.SimpleDateFormat simpleDateFormat39 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat40 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime("", simpleDateFormat39, simpleDateFormat40);
    net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime("", simpleDateFormat35, simpleDateFormat40);
    dateTime17.setSdf(simpleDateFormat35);
    java.text.SimpleDateFormat simpleDateFormat47 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat49 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat50 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime("", simpleDateFormat49, simpleDateFormat50);
    net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat47,
        simpleDateFormat50);
    java.text.SimpleDateFormat simpleDateFormat54 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat55 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime("", simpleDateFormat54, simpleDateFormat55);
    net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime("", simpleDateFormat50, simpleDateFormat55);
    java.text.SimpleDateFormat simpleDateFormat60 = null;
    java.text.SimpleDateFormat simpleDateFormat61 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat60, simpleDateFormat61);
    net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat61);
    net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime("Fri 31-Dec-0001 17:00:00", simpleDateFormat50, simpleDateFormat61);
    net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int67 = dateTime66.getHour();
    int int68 = dateTime66.getDayOfMonth();
    int int69 = dateTime66.getYear();
    net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime(dateTime66);
    int int71 = dateTime64.getYears(dateTime70);
    boolean boolean72 = dateTime17.isLessThan(dateTime70);
    boolean boolean73 = dateTime17.isWeekday();
    int int74 = dateTime17.getDayOfYear();
    boolean boolean75 = dateTime7.isLessThanOrEqual(dateTime17);
    org.junit.Assert.assertNotNull(simpleDateFormat4);
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str10, "Wed 31-Dec-1969 17:00:00");
    org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1972.041095890411d) + "'", double18 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    org.junit.Assert.assertNotNull(date20);
    org.junit.Assert.assertEquals(date20.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
    org.junit.Assert.assertNull(dateTime28);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    org.junit.Assert.assertNotNull(simpleDateFormat32);
    org.junit.Assert.assertNotNull(simpleDateFormat34);
    org.junit.Assert.assertNotNull(simpleDateFormat35);
    org.junit.Assert.assertNotNull(simpleDateFormat39);
    org.junit.Assert.assertNotNull(simpleDateFormat40);
    org.junit.Assert.assertNotNull(simpleDateFormat47);
    org.junit.Assert.assertNotNull(simpleDateFormat49);
    org.junit.Assert.assertNotNull(simpleDateFormat50);
    org.junit.Assert.assertNotNull(simpleDateFormat54);
    org.junit.Assert.assertNotNull(simpleDateFormat55);
    org.junit.Assert.assertNotNull(simpleDateFormat61);
    org.junit.Assert.assertTrue("'" + int67 + "' != '" + 5 + "'", int67 == 5);
    org.junit.Assert.assertTrue("'" + int68 + "' != '" + 31 + "'", int68 == 31);
    org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1969 + "'", int69 == 1969);
    org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
    org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    org.junit.Assert.assertTrue("'" + int74 + "' != '" + 365 + "'", int74 == 365);
    org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
  }

  @Test
  public void test797() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test797");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) 2);
    java.text.SimpleDateFormat simpleDateFormat2 = dateTime1.getSdf();
    net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime(100L);
    int int5 = dateTime4.getMs();
    java.lang.String str6 = dateTime4.toString();
    int int7 = dateTime4.getMs();
    java.util.Calendar calendar8 = dateTime4.getCal();
    int int9 = dateTime1.getYears(dateTime4);
    int int10 = dateTime4.getHour();
    java.text.SimpleDateFormat simpleDateFormat12 = null;
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat12);
    net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double16 = dateTime13.getDeltaYears(dateTime15);
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean21 = dateTime15.isEqual(dateTime20);
    java.util.Calendar calendar22 = dateTime15.getCal();
    java.lang.String str23 = dateTime15.toFullString();
    net.ajaskey.common.DateTime dateTime24 = net.ajaskey.common.DateTime.copy(dateTime15);
    boolean boolean25 = dateTime4.isGreaterThan(dateTime15);
    java.text.SimpleDateFormat simpleDateFormat30 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat32 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat33 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime("", simpleDateFormat32, simpleDateFormat33);
    net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat30,
        simpleDateFormat33);
    java.text.SimpleDateFormat simpleDateFormat37 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat38 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime("", simpleDateFormat37, simpleDateFormat38);
    net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime("", simpleDateFormat33, simpleDateFormat38);
    java.text.SimpleDateFormat simpleDateFormat43 = null;
    java.text.SimpleDateFormat simpleDateFormat44 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat43, simpleDateFormat44);
    net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat44);
    net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime("Fri 31-Dec-0001 17:00:00", simpleDateFormat33, simpleDateFormat44);
    net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime("      0.00", simpleDateFormat33);
    java.lang.String str49 = dateTime48.toString();
    double double50 = dateTime15.getDeltaYears(dateTime48);
    org.junit.Assert.assertNull(simpleDateFormat2);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "31-Dec-1969" + "'", str6, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
    org.junit.Assert.assertNotNull(calendar8);
    org.junit.Assert.assertEquals(calendar8.toString(),
        "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
    org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    org.junit.Assert.assertNotNull(calendar22);
    org.junit.Assert.assertEquals(calendar22.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str23, "Wed 31-Dec-1969 17:00:00");
    org.junit.Assert.assertNotNull(dateTime24);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    org.junit.Assert.assertNotNull(simpleDateFormat30);
    org.junit.Assert.assertNotNull(simpleDateFormat32);
    org.junit.Assert.assertNotNull(simpleDateFormat33);
    org.junit.Assert.assertNotNull(simpleDateFormat37);
    org.junit.Assert.assertNotNull(simpleDateFormat38);
    org.junit.Assert.assertNotNull(simpleDateFormat44);
    org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
    org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
  }

  @Test
  public void test798() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test798");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(0L);
    java.lang.String str2 = dateTime1.format();
    net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) 2);
    java.text.SimpleDateFormat simpleDateFormat5 = dateTime4.getSdf();
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    java.text.SimpleDateFormat simpleDateFormat11 = null;
    net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat11);
    net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double15 = dateTime12.getDeltaYears(dateTime14);
    boolean boolean16 = dateTime9.isLessThan(dateTime14);
    int int17 = dateTime9.getHour();
    long long18 = dateTime4.getDeltaDays(dateTime9);
    java.lang.String str19 = dateTime4.toString();
    dateTime4.add(1969, 9);
    dateTime1.set(dateTime4);
    int int24 = dateTime4.getDayOfWeek();
    net.ajaskey.common.DateTime dateTime25 = null;
    boolean boolean26 = dateTime4.isLessThan(dateTime25);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "BAD-DATE-FORMAT" + "'", str2, "BAD-DATE-FORMAT");
    org.junit.Assert.assertNull(simpleDateFormat5);
    org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
    org.junit.Assert.assertTrue("'" + long18 + "' != '" + 719795L + "'", long18 == 719795L);
    org.junit.Assert.assertEquals("'" + str19 + "' != '" + "31-Dec-1969" + "'", str19, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int24 + "' != '" + 4 + "'", int24 == 4);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
  }

  @Test
  public void test799() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test799");
    net.ajaskey.common.DateTime dateTime0 = new net.ajaskey.common.DateTime();
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime(100L);
    dateTime2.set((int) (byte) 100, (-1), (int) '#');
    java.text.SimpleDateFormat simpleDateFormat7 = dateTime2.getSdf();
    boolean boolean8 = dateTime0.isEqual(dateTime2);
    net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime(100L);
    dateTime10.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str15 = dateTime10.getMonth();
    java.text.SimpleDateFormat simpleDateFormat17 = null;
    net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat17);
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double21 = dateTime18.getDeltaYears(dateTime20);
    boolean boolean22 = dateTime10.isLessThan(dateTime18);
    net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(100L);
    double double29 = dateTime26.getDeltaYears(dateTime28);
    net.ajaskey.common.DateTime dateTime30 = null;
    long long31 = dateTime26.getDeltaDays(dateTime30);
    boolean boolean32 = dateTime18.isLessThanOrEqual(dateTime26);
    long long33 = dateTime0.getDeltaDays(dateTime26);
    java.lang.String str34 = dateTime0.toFullString();
    org.junit.Assert.assertNull(simpleDateFormat7);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "January" + "'", str15, "January");
    org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-1972.041095890411d) + "'", double29 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    org.junit.Assert.assertTrue("'" + long33 + "' != '" + 738233L + "'", long33 == 738233L);
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Thu 25-Jun-2020 14:03:33" + "'", str34, "Thu 25-Jun-2020 14:03:33");
  }

  @Test
  public void test800() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test800");
    java.text.SimpleDateFormat simpleDateFormat1 = null;
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
    net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double5 = dateTime2.getDeltaYears(dateTime4);
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean10 = dateTime4.isEqual(dateTime9);
    java.util.Calendar calendar11 = dateTime4.getCal();
    java.lang.String str12 = dateTime4.toFullString();
    int int13 = dateTime4.getHour();
    java.text.SimpleDateFormat simpleDateFormat17 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat19 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat20 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("", simpleDateFormat19, simpleDateFormat20);
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat17,
        simpleDateFormat20);
    net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat17);
    java.text.SimpleDateFormat simpleDateFormat24 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("", simpleDateFormat17, simpleDateFormat24);
    boolean boolean26 = dateTime4.isGreaterThan(dateTime25);
    org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertNotNull(calendar11);
    org.junit.Assert.assertEquals(calendar11.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str12, "Wed 31-Dec-1969 17:00:00");
    org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
    org.junit.Assert.assertNotNull(simpleDateFormat17);
    org.junit.Assert.assertNotNull(simpleDateFormat19);
    org.junit.Assert.assertNotNull(simpleDateFormat20);
    org.junit.Assert.assertNotNull(simpleDateFormat24);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
  }

  @Test
  public void test801() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test801");
    java.lang.String str2 = net.ajaskey.common.Utils.fmt((double) 'a', 1970);
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Invalid fmt" + "'", str2, "Invalid fmt");
  }

  @Test
  public void test802() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test802");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    int int2 = dateTime1.getMs();
    net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
    double double9 = dateTime6.getDeltaYears(dateTime8);
    java.text.SimpleDateFormat simpleDateFormat10 = dateTime6.getSdf();
    boolean boolean11 = dateTime1.isLessThanOrEqual(dateTime6);
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(100L);
    int int14 = dateTime13.getMs();
    java.lang.String str15 = dateTime13.toString();
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int18 = dateTime17.getHour();
    int int19 = dateTime17.getDayOfMonth();
    dateTime13.set(dateTime17);
    double double21 = dateTime6.getDeltaYears(dateTime17);
    net.ajaskey.common.DateTime dateTime22 = net.ajaskey.common.DateTime.copy(dateTime6);
    net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("31-Dec-1969", "Thu 10-Apr-0002 14:03:14");
    java.text.SimpleDateFormat simpleDateFormat28 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat30 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat31 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime("", simpleDateFormat30, simpleDateFormat31);
    net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat28,
        simpleDateFormat31);
    net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat28);
    java.lang.String str35 = dateTime34.getDay();
    dateTime34.set((int) (byte) -1, (int) (byte) 1, 10);
    boolean boolean40 = net.ajaskey.common.Utils.sameMonth(dateTime25, dateTime34);
    int int41 = dateTime34.getDayOfMonth();
    boolean boolean42 = net.ajaskey.common.Utils.sameMonth(dateTime22, dateTime34);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "31-Dec-1969" + "'", str15, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
    org.junit.Assert.assertTrue("'" + int19 + "' != '" + 31 + "'", int19 == 31);
    org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-1972.041095890411d) + "'", double21 == (-1972.041095890411d));
    org.junit.Assert.assertNotNull(dateTime22);
    org.junit.Assert.assertNotNull(simpleDateFormat28);
    org.junit.Assert.assertNotNull(simpleDateFormat30);
    org.junit.Assert.assertNotNull(simpleDateFormat31);
    org.junit.Assert.assertEquals("'" + str35 + "' != '" + "UNKNOWN" + "'", str35, "UNKNOWN");
    org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    org.junit.Assert.assertTrue("'" + int41 + "' != '" + 10 + "'", int41 == 10);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
  }

  @Test
  public void test803() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test803");
    java.text.SimpleDateFormat simpleDateFormat1 = null;
    java.text.SimpleDateFormat simpleDateFormat2 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat1, simpleDateFormat2);
    java.lang.String str4 = dateTime3.getDay();
    int int5 = dateTime3.getYear();
    org.junit.Assert.assertNotNull(simpleDateFormat2);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UNKNOWN" + "'", str4, "UNKNOWN");
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
  }

  @Test
  public void test804() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test804");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    boolean boolean7 = dateTime5.isWeekday();
    java.util.Date date8 = dateTime5.getTime();
    int int9 = dateTime5.getMinute();
    int int10 = dateTime5.getYear();
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertNotNull(date8);
    org.junit.Assert.assertEquals(date8.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1969 + "'", int10 == 1969);
  }

  @Test
  public void test805() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test805");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    java.util.Date date7 = dateTime3.getTime();
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(date7);
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(date7);
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(12, 4, (-1));
    int int14 = dateTime9.getYears(dateTime13);
    net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime(100L);
    double double21 = dateTime18.getDeltaYears(dateTime20);
    java.text.SimpleDateFormat simpleDateFormat22 = dateTime18.getSdf();
    net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(100L);
    double double29 = dateTime26.getDeltaYears(dateTime28);
    boolean boolean30 = dateTime28.isWeekday();
    net.ajaskey.common.DateTime dateTime33 = dateTime28.parse("31-Dec-1969", "January");
    net.ajaskey.common.DateTime dateTime34 = net.ajaskey.common.DateTime.copy(dateTime28);
    boolean boolean35 = dateTime18.sameDate(dateTime34);
    net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int38 = dateTime37.getDayOfWeek();
    int int39 = dateTime34.getYears(dateTime37);
    java.lang.String str40 = dateTime37.toString();
    java.util.Date date41 = dateTime37.getTime();
    boolean boolean42 = net.ajaskey.common.Utils.sameMonth(dateTime13, dateTime37);
    net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime(dateTime13);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertNotNull(date7);
// flaky:         org.junit.Assert.assertEquals(date7.toString(), "Thu Apr 10 14:03:33 MST 2");
    org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
    org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-1972.041095890411d) + "'", double21 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat22);
    org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-1972.041095890411d) + "'", double29 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    org.junit.Assert.assertNull(dateTime33);
    org.junit.Assert.assertNotNull(dateTime34);
    org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    org.junit.Assert.assertTrue("'" + int38 + "' != '" + 4 + "'", int38 == 4);
    org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
    org.junit.Assert.assertEquals("'" + str40 + "' != '" + "31-Dec-1969" + "'", str40, "31-Dec-1969");
    org.junit.Assert.assertNotNull(date41);
    org.junit.Assert.assertEquals(date41.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
  }

  @Test
  public void test806() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test806");
    java.text.SimpleDateFormat simpleDateFormat1 = null;
    java.text.SimpleDateFormat simpleDateFormat2 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat1, simpleDateFormat2);
    net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(100L);
    double double10 = dateTime7.getDeltaYears(dateTime9);
    boolean boolean11 = dateTime9.isWeekday();
    java.util.Date date12 = dateTime9.getTime();
    java.lang.String str13 = dateTime9.toString();
    net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(100L);
    int int16 = dateTime15.getMs();
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(100L);
    double double23 = dateTime20.getDeltaYears(dateTime22);
    java.text.SimpleDateFormat simpleDateFormat24 = dateTime20.getSdf();
    boolean boolean25 = dateTime15.isLessThanOrEqual(dateTime20);
    boolean boolean26 = dateTime9.isLessThan(dateTime20);
    java.lang.String str27 = dateTime9.toString();
    long long28 = dateTime3.getDeltaMilliSeconds(dateTime9);
    java.lang.String str29 = dateTime3.toString();
    java.text.SimpleDateFormat simpleDateFormat30 = dateTime3.getSdf();
    org.junit.Assert.assertNotNull(simpleDateFormat2);
    org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1972.041095890411d) + "'", double10 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    org.junit.Assert.assertNotNull(date12);
    org.junit.Assert.assertEquals(date12.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "31-Dec-1969" + "'", str13, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
    org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-1972.041095890411d) + "'", double23 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat24);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "31-Dec-1969" + "'", str27, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
    org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
    org.junit.Assert.assertNull(simpleDateFormat30);
  }

  @Test
  public void test807() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test807");
    java.text.SimpleDateFormat simpleDateFormat1 = null;
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
    net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double5 = dateTime2.getDeltaYears(dateTime4);
    boolean boolean6 = dateTime2.isWeekday();
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
    int int9 = dateTime8.getMs();
    java.lang.String str10 = dateTime8.toString();
    int int11 = dateTime8.getMs();
    java.util.Calendar calendar12 = dateTime8.getCal();
    dateTime2.set(calendar12);
    java.text.SimpleDateFormat simpleDateFormat14 = dateTime2.getSdf();
    boolean boolean15 = dateTime2.isWeekday();
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(100L);
    dateTime17.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str22 = dateTime17.getMonth();
    int int23 = dateTime17.getMs();
    java.lang.String str25 = dateTime17
        .format("                                                                                               52.00");
    net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(100L);
    dateTime27.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str32 = dateTime27.getMonth();
    long long33 = dateTime17.getDeltaDays(dateTime27);
    net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime(100L);
    dateTime35.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str40 = dateTime35.getMonth();
    java.text.SimpleDateFormat simpleDateFormat42 = null;
    net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat42);
    net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double46 = dateTime43.getDeltaYears(dateTime45);
    boolean boolean47 = dateTime35.isLessThan(dateTime43);
    net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime(100L);
    double double54 = dateTime51.getDeltaYears(dateTime53);
    net.ajaskey.common.DateTime dateTime55 = null;
    long long56 = dateTime51.getDeltaDays(dateTime55);
    boolean boolean57 = dateTime43.isLessThanOrEqual(dateTime51);
    boolean boolean58 = dateTime17.isGreaterThanOrEqual(dateTime51);
    int int59 = dateTime51.getHour();
    java.lang.String str60 = dateTime51.toString();
    boolean boolean61 = dateTime2.isLessThanOrEqual(dateTime51);
    org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "31-Dec-1969" + "'", str10, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
    org.junit.Assert.assertNotNull(calendar12);
    org.junit.Assert.assertEquals(calendar12.toString(),
        "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertNull(simpleDateFormat14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    org.junit.Assert.assertEquals("'" + str22 + "' != '" + "January" + "'", str22, "January");
    org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
    org.junit.Assert.assertEquals(
        "'" + str25 + "' != '" + "                                                                                               52.00" + "'", str25,
        "                                                                                               52.00");
    org.junit.Assert.assertEquals("'" + str32 + "' != '" + "January" + "'", str32, "January");
    org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
    org.junit.Assert.assertEquals("'" + str40 + "' != '" + "January" + "'", str40, "January");
    org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-1972.041095890411d) + "'", double54 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + long56 + "' != '" + 0L + "'", long56 == 0L);
    org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2 + "'", int59 == 2);
    org.junit.Assert.assertEquals("'" + str60 + "' != '" + "10-Apr-0002" + "'", str60, "10-Apr-0002");
    org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
  }

  @Test
  public void test808() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test808");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    java.text.SimpleDateFormat simpleDateFormat8 = null;
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double12 = dateTime9.getDeltaYears(dateTime11);
    boolean boolean13 = dateTime9.isWeekday();
    boolean boolean14 = dateTime3.sameDate(dateTime9);
    int int15 = dateTime9.getDayOfMonth();
    java.lang.String str16 = dateTime9.toFullString();
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Invalid Time" + "'", str16, "Invalid Time");
  }

  @Test
  public void test809() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test809");
    java.text.SimpleDateFormat simpleDateFormat3 = null;
    java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat3, simpleDateFormat4);
    net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat4);
    net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("         14", simpleDateFormat4);
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(0L);
    java.lang.String str10 = dateTime9.toFullString();
    dateTime7.set(dateTime9);
    int int12 = dateTime7.getDayOfWeek();
    net.ajaskey.common.DateTime dateTime15 = dateTime7.parse("Saturday",
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969");
    org.junit.Assert.assertNotNull(simpleDateFormat4);
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str10, "Wed 31-Dec-1969 17:00:00");
    org.junit.Assert.assertTrue("'" + int12 + "' != '" + 4 + "'", int12 == 4);
    org.junit.Assert.assertNull(dateTime15);
  }

  @Test
  public void test810() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test810");
    java.text.SimpleDateFormat simpleDateFormat1 = null;
    java.text.SimpleDateFormat simpleDateFormat2 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat1, simpleDateFormat2);
    int int4 = dateTime3.getDayOfMonth();
    java.text.SimpleDateFormat simpleDateFormat9 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat11 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat12 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("", simpleDateFormat11, simpleDateFormat12);
    net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat9,
        simpleDateFormat12);
    net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat9);
    java.text.SimpleDateFormat simpleDateFormat19 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat21 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat22 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime("", simpleDateFormat21, simpleDateFormat22);
    net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat19,
        simpleDateFormat22);
    java.text.SimpleDateFormat simpleDateFormat25 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime("", simpleDateFormat22, simpleDateFormat25);
    net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat25);
    net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat9, simpleDateFormat25);
    java.text.SimpleDateFormat simpleDateFormat33 = null;
    java.text.SimpleDateFormat simpleDateFormat34 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat33, simpleDateFormat34);
    net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat34);
    net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat34);
    net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat34);
    net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime("", simpleDateFormat25, simpleDateFormat34);
    boolean boolean40 = dateTime3.isGreaterThan(dateTime39);
    int int41 = dateTime3.getMinute();
    net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime(100L);
    double double48 = dateTime45.getDeltaYears(dateTime47);
    boolean boolean49 = dateTime47.isWeekday();
    java.util.Date date50 = dateTime47.getTime();
    int int51 = dateTime47.getMinute();
    int int52 = dateTime47.getDayOfYear();
    net.ajaskey.common.DateTime dateTime53 = null;
    boolean boolean54 = dateTime47.isLessThan(dateTime53);
    boolean boolean55 = dateTime3.sameDate(dateTime47);
    int int56 = dateTime3.getDayOfWeek();
    org.junit.Assert.assertNotNull(simpleDateFormat2);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    org.junit.Assert.assertNotNull(simpleDateFormat9);
    org.junit.Assert.assertNotNull(simpleDateFormat11);
    org.junit.Assert.assertNotNull(simpleDateFormat12);
    org.junit.Assert.assertNotNull(simpleDateFormat19);
    org.junit.Assert.assertNotNull(simpleDateFormat21);
    org.junit.Assert.assertNotNull(simpleDateFormat22);
    org.junit.Assert.assertNotNull(simpleDateFormat25);
    org.junit.Assert.assertNotNull(simpleDateFormat34);
    org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
    org.junit.Assert.assertTrue("'" + double48 + "' != '" + (-1972.041095890411d) + "'", double48 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    org.junit.Assert.assertNotNull(date50);
    org.junit.Assert.assertEquals(date50.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
    org.junit.Assert.assertTrue("'" + int52 + "' != '" + 365 + "'", int52 == 365);
    org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
  }

  @Test
  public void test811() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test811");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    int int2 = dateTime1.getMs();
    java.lang.String str3 = dateTime1.toString();
    int int4 = dateTime1.getMs();
    java.util.Calendar calendar5 = dateTime1.getCal();
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
    double double12 = dateTime9.getDeltaYears(dateTime11);
    boolean boolean13 = dateTime11.isWeekday();
    net.ajaskey.common.DateTime dateTime16 = dateTime11.parse("31-Dec-1969", "January");
    net.ajaskey.common.DateTime dateTime17 = net.ajaskey.common.DateTime.copy(dateTime11);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(100L);
    dateTime19.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str24 = dateTime19.getMonth();
    int int25 = dateTime19.getMs();
    java.lang.String str27 = dateTime19
        .format("                                                                                               52.00");
    net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(100L);
    dateTime29.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str34 = dateTime29.getMonth();
    long long35 = dateTime19.getDeltaDays(dateTime29);
    boolean boolean36 = dateTime17.isGreaterThan(dateTime29);
    int int37 = dateTime1.getYears(dateTime29);
    net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime(dateTime1);
    net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime(100L);
    double double45 = dateTime42.getDeltaYears(dateTime44);
    boolean boolean46 = dateTime44.isWeekday();
    java.util.Date date47 = dateTime44.getTime();
    java.lang.String str48 = dateTime44.toString();
    net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime(100L);
    int int51 = dateTime50.getMs();
    net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime(100L);
    double double58 = dateTime55.getDeltaYears(dateTime57);
    java.text.SimpleDateFormat simpleDateFormat59 = dateTime55.getSdf();
    boolean boolean60 = dateTime50.isLessThanOrEqual(dateTime55);
    boolean boolean61 = dateTime44.isLessThan(dateTime55);
    int int62 = dateTime44.getDayOfWeek();
    net.ajaskey.common.DateTime dateTime64 = dateTime44.parse("365.00");
    long long65 = dateTime38.getDeltaMilliSeconds(dateTime64);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "31-Dec-1969" + "'", str3, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
    org.junit.Assert.assertNotNull(calendar5);
    org.junit.Assert.assertEquals(calendar5.toString(),
        "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1972.041095890411d) + "'", double12 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNull(dateTime16);
    org.junit.Assert.assertNotNull(dateTime17);
    org.junit.Assert.assertEquals("'" + str24 + "' != '" + "January" + "'", str24, "January");
    org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
    org.junit.Assert.assertEquals(
        "'" + str27 + "' != '" + "                                                                                               52.00" + "'", str27,
        "                                                                                               52.00");
    org.junit.Assert.assertEquals("'" + str34 + "' != '" + "January" + "'", str34, "January");
    org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1870) + "'", int37 == (-1870));
    org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-1972.041095890411d) + "'", double45 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    org.junit.Assert.assertNotNull(date47);
    org.junit.Assert.assertEquals(date47.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str48 + "' != '" + "31-Dec-1969" + "'", str48, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int51 + "' != '" + 100 + "'", int51 == 100);
    org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-1972.041095890411d) + "'", double58 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat59);
    org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    org.junit.Assert.assertTrue("'" + int62 + "' != '" + 4 + "'", int62 == 4);
    org.junit.Assert.assertNull(dateTime64);
    org.junit.Assert.assertTrue("'" + long65 + "' != '" + 0L + "'", long65 == 0L);
  }

  @Test
  public void test812() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test812");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    int int2 = dateTime1.getMs();
    net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
    double double9 = dateTime6.getDeltaYears(dateTime8);
    java.text.SimpleDateFormat simpleDateFormat10 = dateTime6.getSdf();
    boolean boolean11 = dateTime1.isLessThanOrEqual(dateTime6);
    net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(100L);
    double double18 = dateTime15.getDeltaYears(dateTime17);
    java.text.SimpleDateFormat simpleDateFormat20 = null;
    net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat20);
    net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double24 = dateTime21.getDeltaYears(dateTime23);
    dateTime23.set(0, 12, 0);
    boolean boolean29 = net.ajaskey.common.Utils.sameMonth(dateTime15, dateTime23);
    int int30 = dateTime1.getYears(dateTime15);
    int int31 = dateTime15.getYear();
    net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int34 = dateTime33.getHour();
    int int35 = dateTime33.getDayOfMonth();
    dateTime33.set((int) '#', (-1870), (int) (short) 1);
    boolean boolean40 = dateTime15.sameDate(dateTime33);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1972.041095890411d) + "'", double18 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1968) + "'", int30 == (-1968));
    org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
    org.junit.Assert.assertTrue("'" + int34 + "' != '" + 5 + "'", int34 == 5);
    org.junit.Assert.assertTrue("'" + int35 + "' != '" + 31 + "'", int35 == 31);
    org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
  }

  @Test
  public void test813() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test813");
    java.text.SimpleDateFormat simpleDateFormat1 = null;
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
    net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double5 = dateTime2.getDeltaYears(dateTime4);
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean10 = dateTime4.isEqual(dateTime9);
    java.util.Calendar calendar11 = dateTime4.getCal();
    net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(dateTime4);
    boolean boolean13 = dateTime4.isWeekday();
    java.lang.String str15 = dateTime4.format("Invalid Time");
    org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertNotNull(calendar11);
    org.junit.Assert.assertEquals(calendar11.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "BAD-DATE-FORMAT" + "'", str15, "BAD-DATE-FORMAT");
  }

  @Test
  public void test814() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test814");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    boolean boolean7 = dateTime5.isWeekday();
    net.ajaskey.common.DateTime dateTime10 = dateTime5.parse("31-Dec-1969", "January");
    java.util.Calendar calendar11 = dateTime5.getCal();
    net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(100L);
    double double18 = dateTime15.getDeltaYears(dateTime17);
    boolean boolean19 = dateTime17.isWeekday();
    net.ajaskey.common.DateTime dateTime22 = dateTime17.parse("31-Dec-1969", "January");
    net.ajaskey.common.DateTime dateTime23 = net.ajaskey.common.DateTime.copy(dateTime17);
    dateTime5.set(dateTime23);
    net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    java.text.SimpleDateFormat simpleDateFormat30 = null;
    net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat30);
    net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double34 = dateTime31.getDeltaYears(dateTime33);
    boolean boolean35 = dateTime28.isLessThan(dateTime33);
    int int36 = dateTime28.getHour();
    net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime(100L);
    double double43 = dateTime40.getDeltaYears(dateTime42);
    java.text.SimpleDateFormat simpleDateFormat45 = null;
    net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat45);
    net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double49 = dateTime46.getDeltaYears(dateTime48);
    boolean boolean50 = dateTime46.isWeekday();
    boolean boolean51 = dateTime40.sameDate(dateTime46);
    java.text.SimpleDateFormat simpleDateFormat53 = null;
    net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat53);
    net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double57 = dateTime54.getDeltaYears(dateTime56);
    net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean62 = dateTime56.isEqual(dateTime61);
    dateTime40.set(dateTime61);
    boolean boolean64 = net.ajaskey.common.Utils.sameDate(dateTime28, dateTime61);
    java.util.Date date65 = dateTime28.getTime();
    net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime();
    net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime(100L);
    dateTime68.set((int) (byte) 100, (-1), (int) '#');
    java.text.SimpleDateFormat simpleDateFormat73 = dateTime68.getSdf();
    boolean boolean74 = dateTime66.isEqual(dateTime68);
    net.ajaskey.common.DateTime dateTime75 = net.ajaskey.common.DateTime.copy(dateTime66);
    java.util.Calendar calendar76 = dateTime66.getCal();
    dateTime28.set(calendar76);
    net.ajaskey.common.DateTime dateTime78 = new net.ajaskey.common.DateTime(calendar76);
    dateTime23.set(calendar76);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertNull(dateTime10);
    org.junit.Assert.assertNotNull(calendar11);
    org.junit.Assert.assertEquals(calendar11.toString(),
        "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1972.041095890411d) + "'", double18 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    org.junit.Assert.assertNull(dateTime22);
    org.junit.Assert.assertNotNull(dateTime23);
    org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
    org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-1972.041095890411d) + "'", double43 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    org.junit.Assert.assertNotNull(date65);
// flaky:         org.junit.Assert.assertEquals(date65.toString(), "Thu Apr 10 14:03:34 MST 2");
    org.junit.Assert.assertNull(simpleDateFormat73);
    org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    org.junit.Assert.assertNotNull(dateTime75);
    org.junit.Assert.assertNotNull(calendar76);
// flaky:         org.junit.Assert.assertEquals(calendar76.toString(), "java.util.GregorianCalendar[time=1593115414108,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2020,MONTH=5,WEEK_OF_YEAR=26,WEEK_OF_MONTH=4,DAY_OF_MONTH=25,DAY_OF_YEAR=177,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=3,SECOND=34,MILLISECOND=108,ZONE_OFFSET=-25200000,DST_OFFSET=3600000]");
  }

  @Test
  public void test815() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test815");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    boolean boolean7 = dateTime5.isWeekday();
    net.ajaskey.common.DateTime dateTime10 = dateTime5.parse("31-Dec-1969", "January");
    net.ajaskey.common.DateTime dateTime11 = net.ajaskey.common.DateTime.copy(dateTime5);
    dateTime11.set((int) ' ', 1970, (int) (short) -1);
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int18 = dateTime17.getHour();
    int int19 = dateTime17.getDayOfMonth();
    int int20 = dateTime17.getYear();
    java.util.Calendar calendar21 = dateTime17.getCal();
    int int22 = dateTime17.getYear();
    java.util.Date date23 = dateTime17.getTime();
    dateTime11.set(date23);
    net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime(date23);
    net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(date23);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertNull(dateTime10);
    org.junit.Assert.assertNotNull(dateTime11);
    org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
    org.junit.Assert.assertTrue("'" + int19 + "' != '" + 31 + "'", int19 == 31);
    org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1969 + "'", int20 == 1969);
    org.junit.Assert.assertNotNull(calendar21);
    org.junit.Assert.assertEquals(calendar21.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1969 + "'", int22 == 1969);
    org.junit.Assert.assertNotNull(date23);
    org.junit.Assert.assertEquals(date23.toString(), "Wed Dec 31 17:00:00 MST 1969");
  }

  @Test
  public void test816() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test816");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(0, 1, 2);
  }

  @Test
  public void test817() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test817");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    int int2 = dateTime1.getMs();
    java.text.SimpleDateFormat simpleDateFormat3 = net.ajaskey.common.Utils.sdf;
    dateTime1.setSdf(simpleDateFormat3);
    int int5 = dateTime1.getDayOfWeek();
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
    double double12 = dateTime9.getDeltaYears(dateTime11);
    java.util.Calendar calendar13 = dateTime9.getCal();
    dateTime1.set(calendar13);
    java.text.SimpleDateFormat simpleDateFormat16 = null;
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double20 = dateTime17.getDeltaYears(dateTime19);
    net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean25 = dateTime19.isEqual(dateTime24);
    java.util.Calendar calendar26 = dateTime19.getCal();
    net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(calendar26);
    dateTime1.set(calendar26);
    int int29 = dateTime1.getDayOfYear();
    int int30 = dateTime1.getMinute();
    java.lang.String str31 = dateTime1.toFullString();
    net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(100L);
    double double38 = dateTime35.getDeltaYears(dateTime37);
    boolean boolean39 = dateTime37.isWeekday();
    java.util.Date date40 = dateTime37.getTime();
    java.lang.String str41 = dateTime37.toString();
    net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime((long) 2);
    java.text.SimpleDateFormat simpleDateFormat44 = dateTime43.getSdf();
    boolean boolean45 = dateTime37.sameDate(dateTime43);
    net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime(100L);
    int int48 = dateTime47.getMs();
    net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime(100L);
    double double55 = dateTime52.getDeltaYears(dateTime54);
    java.text.SimpleDateFormat simpleDateFormat56 = dateTime52.getSdf();
    boolean boolean57 = dateTime47.isLessThanOrEqual(dateTime52);
    boolean boolean58 = net.ajaskey.common.Utils.sameMonth(dateTime37, dateTime52);
    net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime((long) 2);
    java.text.SimpleDateFormat simpleDateFormat61 = dateTime60.getSdf();
    net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    java.text.SimpleDateFormat simpleDateFormat67 = null;
    net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat67);
    net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double71 = dateTime68.getDeltaYears(dateTime70);
    boolean boolean72 = dateTime65.isLessThan(dateTime70);
    int int73 = dateTime65.getHour();
    long long74 = dateTime60.getDeltaDays(dateTime65);
    java.lang.String str75 = dateTime60.toString();
    int int76 = dateTime60.getYear();
    int int77 = dateTime60.getYear();
    int int78 = dateTime60.getMs();
    boolean boolean79 = dateTime37.isLessThanOrEqual(dateTime60);
    boolean boolean80 = dateTime1.isLessThanOrEqual(dateTime37);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat3);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 4 + "'", int5 == 4);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1972.041095890411d) + "'", double12 == (-1972.041095890411d));
    org.junit.Assert.assertNotNull(calendar13);
// flaky:         org.junit.Assert.assertEquals(calendar13.toString(), "java.util.GregorianCalendar[time=-62190298585844,areFieldsSet=true,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=3,SECOND=34,MILLISECOND=156,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertNotNull(calendar26);
    org.junit.Assert.assertEquals(calendar26.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + int29 + "' != '" + 365 + "'", int29 == 365);
    org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
    org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str31, "Wed 31-Dec-1969 17:00:00");
    org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1972.041095890411d) + "'", double38 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    org.junit.Assert.assertNotNull(date40);
    org.junit.Assert.assertEquals(date40.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str41 + "' != '" + "31-Dec-1969" + "'", str41, "31-Dec-1969");
    org.junit.Assert.assertNull(simpleDateFormat44);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    org.junit.Assert.assertTrue("'" + int48 + "' != '" + 100 + "'", int48 == 100);
    org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-1972.041095890411d) + "'", double55 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat56);
    org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    org.junit.Assert.assertNull(simpleDateFormat61);
    org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    org.junit.Assert.assertTrue("'" + int73 + "' != '" + 2 + "'", int73 == 2);
    org.junit.Assert.assertTrue("'" + long74 + "' != '" + 719795L + "'", long74 == 719795L);
    org.junit.Assert.assertEquals("'" + str75 + "' != '" + "31-Dec-1969" + "'", str75, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1969 + "'", int76 == 1969);
    org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1969 + "'", int77 == 1969);
    org.junit.Assert.assertTrue("'" + int78 + "' != '" + 2 + "'", int78 == 2);
    org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
  }

  @Test
  public void test818() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test818");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) 2);
    net.ajaskey.common.DateTime dateTime4 = dateTime1.parse("December", "Wed 31-Dec-1969 17:00:00");
    org.junit.Assert.assertNull(dateTime4);
  }

  @Test
  public void test819() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test819");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    int int2 = dateTime1.getMs();
    net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
    double double9 = dateTime6.getDeltaYears(dateTime8);
    java.text.SimpleDateFormat simpleDateFormat10 = dateTime6.getSdf();
    boolean boolean11 = dateTime1.isLessThanOrEqual(dateTime6);
    java.lang.String str12 = dateTime1.format();
    java.util.Calendar calendar13 = dateTime1.getCal();
    net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(calendar13);
    int int15 = dateTime14.getYear();
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "BAD-DATE-FORMAT" + "'", str12, "BAD-DATE-FORMAT");
    org.junit.Assert.assertNotNull(calendar13);
    org.junit.Assert.assertEquals(calendar13.toString(),
        "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1969 + "'", int15 == 1969);
  }

  @Test
  public void test820() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test820");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    java.text.SimpleDateFormat simpleDateFormat7 = dateTime3.getSdf();
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(100L);
    double double14 = dateTime11.getDeltaYears(dateTime13);
    boolean boolean15 = dateTime13.isWeekday();
    net.ajaskey.common.DateTime dateTime18 = dateTime13.parse("31-Dec-1969", "January");
    net.ajaskey.common.DateTime dateTime19 = net.ajaskey.common.DateTime.copy(dateTime13);
    boolean boolean20 = dateTime3.sameDate(dateTime19);
    int int21 = dateTime3.getHour();
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat7);
    org.junit.Assert.assertTrue("'" + double14 + "' != '" + (-1972.041095890411d) + "'", double14 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    org.junit.Assert.assertNull(dateTime18);
    org.junit.Assert.assertNotNull(dateTime19);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
  }

  @Test
  public void test821() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test821");
    java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readTextFile("97", false);
    java.lang.String str3 = net.ajaskey.common.TextUtils.toString(strList2);
    org.junit.Assert.assertNotNull(strList2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
  }

  @Test
  public void test822() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test822");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) 2);
    java.text.SimpleDateFormat simpleDateFormat2 = dateTime1.getSdf();
    net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    java.text.SimpleDateFormat simpleDateFormat8 = null;
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double12 = dateTime9.getDeltaYears(dateTime11);
    boolean boolean13 = dateTime6.isLessThan(dateTime11);
    int int14 = dateTime6.getHour();
    long long15 = dateTime1.getDeltaDays(dateTime6);
    java.lang.String str16 = dateTime1.toString();
    int int17 = dateTime1.getYear();
    int int18 = dateTime1.getYear();
    java.text.SimpleDateFormat simpleDateFormat22 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat24 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat25 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime("", simpleDateFormat24, simpleDateFormat25);
    net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat22,
        simpleDateFormat25);
    java.text.SimpleDateFormat simpleDateFormat29 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat30 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime("", simpleDateFormat29, simpleDateFormat30);
    net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime("", simpleDateFormat25, simpleDateFormat30);
    java.text.SimpleDateFormat simpleDateFormat35 = null;
    java.text.SimpleDateFormat simpleDateFormat36 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat35, simpleDateFormat36);
    net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat36);
    net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime("Fri 31-Dec-0001 17:00:00", simpleDateFormat25, simpleDateFormat36);
    double double40 = dateTime1.getDeltaYears(dateTime39);
    net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime(100L);
    double double47 = dateTime44.getDeltaYears(dateTime46);
    boolean boolean48 = dateTime46.isWeekday();
    net.ajaskey.common.DateTime dateTime51 = dateTime46.parse("31-Dec-1969", "January");
    net.ajaskey.common.DateTime dateTime52 = net.ajaskey.common.DateTime.copy(dateTime46);
    net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime(100L);
    dateTime54.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str59 = dateTime54.getMonth();
    int int60 = dateTime54.getMs();
    java.lang.String str62 = dateTime54
        .format("                                                                                               52.00");
    net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime(100L);
    dateTime64.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str69 = dateTime64.getMonth();
    long long70 = dateTime54.getDeltaDays(dateTime64);
    boolean boolean71 = dateTime52.isGreaterThan(dateTime64);
    java.lang.String str72 = dateTime64.getDay();
    dateTime39.set(dateTime64);
    org.junit.Assert.assertNull(simpleDateFormat2);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
    org.junit.Assert.assertTrue("'" + long15 + "' != '" + 719795L + "'", long15 == 719795L);
    org.junit.Assert.assertEquals("'" + str16 + "' != '" + "31-Dec-1969" + "'", str16, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1969 + "'", int17 == 1969);
    org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1969 + "'", int18 == 1969);
    org.junit.Assert.assertNotNull(simpleDateFormat22);
    org.junit.Assert.assertNotNull(simpleDateFormat24);
    org.junit.Assert.assertNotNull(simpleDateFormat25);
    org.junit.Assert.assertNotNull(simpleDateFormat29);
    org.junit.Assert.assertNotNull(simpleDateFormat30);
    org.junit.Assert.assertNotNull(simpleDateFormat36);
    org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
    org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-1972.041095890411d) + "'", double47 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    org.junit.Assert.assertNull(dateTime51);
    org.junit.Assert.assertNotNull(dateTime52);
    org.junit.Assert.assertEquals("'" + str59 + "' != '" + "January" + "'", str59, "January");
    org.junit.Assert.assertTrue("'" + int60 + "' != '" + 100 + "'", int60 == 100);
    org.junit.Assert.assertEquals(
        "'" + str62 + "' != '" + "                                                                                               52.00" + "'", str62,
        "                                                                                               52.00");
    org.junit.Assert.assertEquals("'" + str69 + "' != '" + "January" + "'", str69, "January");
    org.junit.Assert.assertTrue("'" + long70 + "' != '" + 0L + "'", long70 == 0L);
    org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Saturday" + "'", str72, "Saturday");
  }

  @Test
  public void test823() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test823");
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 14:03:11", "100");
    java.text.SimpleDateFormat simpleDateFormat3 = dateTime2.getSdf();
    org.junit.Assert.assertNull(simpleDateFormat3);
  }

  @Test
  public void test824() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test824");
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("", "");
  }

  @Test
  public void test825() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test825");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    boolean boolean7 = dateTime5.isWeekday();
    java.util.Date date8 = dateTime5.getTime();
    java.lang.String str9 = dateTime5.toString();
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
    int int12 = dateTime11.getMs();
    net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(100L);
    double double19 = dateTime16.getDeltaYears(dateTime18);
    java.text.SimpleDateFormat simpleDateFormat20 = dateTime16.getSdf();
    boolean boolean21 = dateTime11.isLessThanOrEqual(dateTime16);
    boolean boolean22 = dateTime5.isLessThan(dateTime16);
    java.lang.String str23 = dateTime5.toString();
    java.util.Date date24 = dateTime5.getTime();
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertNotNull(date8);
    org.junit.Assert.assertEquals(date8.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "31-Dec-1969" + "'", str9, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
    org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-1972.041095890411d) + "'", double19 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat20);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    org.junit.Assert.assertEquals("'" + str23 + "' != '" + "31-Dec-1969" + "'", str23, "31-Dec-1969");
    org.junit.Assert.assertNotNull(date24);
    org.junit.Assert.assertEquals(date24.toString(), "Wed Dec 31 17:00:00 MST 1969");
  }

  @Test
  public void test826() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test826");
    net.ajaskey.common.Utils.makeDir("100");
  }

  @Test
  public void test827() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test827");
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime("January", "BAD-DATE-FORMAT");
    boolean boolean9 = net.ajaskey.common.Utils.sameMonth(dateTime5, dateTime8);
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(100L);
    double double16 = dateTime13.getDeltaYears(dateTime15);
    java.text.SimpleDateFormat simpleDateFormat18 = null;
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat18);
    net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double22 = dateTime19.getDeltaYears(dateTime21);
    boolean boolean23 = dateTime19.isWeekday();
    boolean boolean24 = dateTime13.sameDate(dateTime19);
    net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(0L);
    boolean boolean27 = dateTime19.isGreaterThanOrEqual(dateTime26);
    net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime(100L);
    double double34 = dateTime31.getDeltaYears(dateTime33);
    boolean boolean35 = dateTime33.isWeekday();
    java.util.Date date36 = dateTime33.getTime();
    java.lang.String str37 = dateTime33.toString();
    net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime(3, (int) '4', (int) (byte) 0);
    boolean boolean42 = dateTime33.isGreaterThan(dateTime41);
    java.text.SimpleDateFormat simpleDateFormat44 = null;
    net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat44);
    net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double48 = dateTime45.getDeltaYears(dateTime47);
    net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean53 = dateTime47.isEqual(dateTime52);
    java.util.Calendar calendar54 = dateTime47.getCal();
    net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime(calendar54);
    net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime(calendar54);
    boolean boolean57 = dateTime33.isLessThan(dateTime56);
    java.text.SimpleDateFormat simpleDateFormat59 = null;
    net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat59);
    net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double63 = dateTime60.getDeltaYears(dateTime62);
    boolean boolean64 = dateTime60.isWeekday();
    java.lang.String str65 = dateTime60.getDay();
    java.util.Calendar calendar66 = dateTime60.getCal();
    boolean boolean67 = dateTime33.isLessThan(dateTime60);
    boolean boolean68 = net.ajaskey.common.Utils.sameDate(dateTime19, dateTime33);
    net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime(dateTime33);
    java.text.SimpleDateFormat simpleDateFormat70 = dateTime33.getSdf();
    dateTime8.setSdf(simpleDateFormat70);
    net.ajaskey.common.DateTime dateTime72 = new net.ajaskey.common.DateTime("Wed 02-May-0014 14:03:29", simpleDateFormat70);
    net.ajaskey.common.DateTime dateTime74 = new net.ajaskey.common.DateTime(100L);
    int int75 = dateTime74.getMs();
    java.lang.String str76 = dateTime74.toString();
    int int77 = dateTime74.getMs();
    net.ajaskey.common.DateTime dateTime79 = new net.ajaskey.common.DateTime((long) 2);
    boolean boolean80 = dateTime74.isLessThanOrEqual(dateTime79);
    java.text.SimpleDateFormat simpleDateFormat81 = dateTime74.getSdf();
    net.ajaskey.common.DateTime dateTime82 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 14:03:33", simpleDateFormat70, simpleDateFormat81);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-1972.041095890411d) + "'", double16 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-1972.041095890411d) + "'", double34 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    org.junit.Assert.assertNotNull(date36);
    org.junit.Assert.assertEquals(date36.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str37 + "' != '" + "31-Dec-1969" + "'", str37, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    org.junit.Assert.assertNotNull(calendar54);
    org.junit.Assert.assertEquals(calendar54.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    org.junit.Assert.assertEquals("'" + str65 + "' != '" + "UNKNOWN" + "'", str65, "UNKNOWN");
    org.junit.Assert.assertNull(calendar66);
    org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    org.junit.Assert.assertNotNull(simpleDateFormat70);
    org.junit.Assert.assertTrue("'" + int75 + "' != '" + 100 + "'", int75 == 100);
    org.junit.Assert.assertEquals("'" + str76 + "' != '" + "31-Dec-1969" + "'", str76, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int77 + "' != '" + 100 + "'", int77 == 100);
    org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
    org.junit.Assert.assertNotNull(simpleDateFormat81);
  }

  @Test
  public void test828() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test828");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (byte) 10, (int) (short) 10, (int) (byte) 1);
  }

  @Test
  public void test829() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test829");
    net.ajaskey.common.DateTime dateTime0 = new net.ajaskey.common.DateTime();
    java.text.SimpleDateFormat simpleDateFormat2 = null;
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat2);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    int int7 = dateTime5.getDayOfYear();
    boolean boolean8 = dateTime0.isLessThan(dateTime5);
    int int9 = dateTime0.getDayOfWeek();
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 365 + "'", int7 == 365);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + 5 + "'", int9 == 5);
  }

  @Test
  public void test830() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test830");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    int int2 = dateTime1.getMs();
    net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
    double double9 = dateTime6.getDeltaYears(dateTime8);
    java.text.SimpleDateFormat simpleDateFormat10 = dateTime6.getSdf();
    boolean boolean11 = dateTime1.isLessThanOrEqual(dateTime6);
    int int12 = dateTime1.getMinute();
    java.lang.String str14 = dateTime1.format("719,795");
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "719,795" + "'", str14, "719,795");
  }

  @Test
  public void test831() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test831");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    int int2 = dateTime1.getMs();
    java.text.SimpleDateFormat simpleDateFormat3 = net.ajaskey.common.Utils.sdf;
    dateTime1.setSdf(simpleDateFormat3);
    int int5 = dateTime1.getDayOfWeek();
    net.ajaskey.common.DateTime dateTime6 = net.ajaskey.common.DateTime.copy(dateTime1);
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
    int int9 = dateTime8.getMs();
    java.text.SimpleDateFormat simpleDateFormat10 = net.ajaskey.common.Utils.sdf;
    dateTime8.setSdf(simpleDateFormat10);
    java.lang.String str12 = dateTime8.toFullString();
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(dateTime8);
    int int14 = dateTime8.getHour();
    boolean boolean15 = dateTime6.isGreaterThan(dateTime8);
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(100L);
    int int18 = dateTime17.getMs();
    java.lang.String str19 = dateTime17.toString();
    net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int22 = dateTime21.getHour();
    int int23 = dateTime21.getDayOfMonth();
    dateTime17.set(dateTime21);
    int int25 = dateTime21.getMs();
    java.lang.String str26 = dateTime21.toFullString();
    boolean boolean27 = dateTime8.isGreaterThanOrEqual(dateTime21);
    int int28 = dateTime8.getDayOfYear();
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat3);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 4 + "'", int5 == 4);
    org.junit.Assert.assertNotNull(dateTime6);
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat10);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str12, "Wed 31-Dec-1969 17:00:00");
    org.junit.Assert.assertTrue("'" + int14 + "' != '" + 5 + "'", int14 == 5);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
    org.junit.Assert.assertEquals("'" + str19 + "' != '" + "31-Dec-1969" + "'", str19, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int22 + "' != '" + 5 + "'", int22 == 5);
    org.junit.Assert.assertTrue("'" + int23 + "' != '" + 31 + "'", int23 == 31);
    org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
    org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str26, "Wed 31-Dec-1969 17:00:00");
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    org.junit.Assert.assertTrue("'" + int28 + "' != '" + 365 + "'", int28 == 365);
  }

  @Test
  public void test832() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test832");
    net.ajaskey.common.Utils.makeDir("            -62,190,298,597,863");
  }

  @Test
  public void test833() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test833");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    int int2 = dateTime1.getMs();
    net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
    double double9 = dateTime6.getDeltaYears(dateTime8);
    java.text.SimpleDateFormat simpleDateFormat10 = dateTime6.getSdf();
    boolean boolean11 = dateTime1.isLessThanOrEqual(dateTime6);
    java.lang.String str12 = dateTime1.format();
    int int13 = dateTime1.getMinute();
    net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(100L);
    dateTime15.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str20 = dateTime15.getMonth();
    int int21 = dateTime15.getMs();
    net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(100L);
    double double28 = dateTime25.getDeltaYears(dateTime27);
    java.text.SimpleDateFormat simpleDateFormat29 = dateTime25.getSdf();
    net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime(100L);
    double double36 = dateTime33.getDeltaYears(dateTime35);
    boolean boolean37 = dateTime35.isWeekday();
    net.ajaskey.common.DateTime dateTime40 = dateTime35.parse("31-Dec-1969", "January");
    net.ajaskey.common.DateTime dateTime41 = net.ajaskey.common.DateTime.copy(dateTime35);
    boolean boolean42 = dateTime25.sameDate(dateTime41);
    net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime(100L);
    double double49 = dateTime46.getDeltaYears(dateTime48);
    boolean boolean50 = dateTime41.isGreaterThan(dateTime46);
    int int51 = dateTime46.getDayOfWeek();
    boolean boolean52 = dateTime15.isGreaterThan(dateTime46);
    net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int55 = dateTime54.getHour();
    int int56 = dateTime54.getDayOfMonth();
    java.lang.String str57 = dateTime54.getDay();
    boolean boolean58 = dateTime46.isLessThan(dateTime54);
    boolean boolean59 = dateTime1.isLessThan(dateTime54);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "BAD-DATE-FORMAT" + "'", str12, "BAD-DATE-FORMAT");
    org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "January" + "'", str20, "January");
    org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
    org.junit.Assert.assertTrue("'" + double28 + "' != '" + (-1972.041095890411d) + "'", double28 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat29);
    org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-1972.041095890411d) + "'", double36 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    org.junit.Assert.assertNull(dateTime40);
    org.junit.Assert.assertNotNull(dateTime41);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-1972.041095890411d) + "'", double49 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    org.junit.Assert.assertTrue("'" + int51 + "' != '" + 5 + "'", int51 == 5);
    org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    org.junit.Assert.assertTrue("'" + int55 + "' != '" + 5 + "'", int55 == 5);
    org.junit.Assert.assertTrue("'" + int56 + "' != '" + 31 + "'", int56 == 31);
    org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Wednesday" + "'", str57, "Wednesday");
    org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
  }

  @Test
  public void test834() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test834");
    java.lang.String str1 = net.ajaskey.common.Utils.getFromUrl(
        "January                                                                                                  31                                                                                                  31                                                                                               52.00                                                                                                  31hi!                                                                                                  31");
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
  }

  @Test
  public void test835() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test835");
    java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat6 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat7 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime("", simpleDateFormat6, simpleDateFormat7);
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat4, simpleDateFormat7);
    net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat4);
    java.text.SimpleDateFormat simpleDateFormat14 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat16 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat17 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime("", simpleDateFormat16, simpleDateFormat17);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat14,
        simpleDateFormat17);
    java.text.SimpleDateFormat simpleDateFormat20 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("", simpleDateFormat17, simpleDateFormat20);
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat20);
    net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat4, simpleDateFormat20);
    java.text.SimpleDateFormat simpleDateFormat28 = null;
    java.text.SimpleDateFormat simpleDateFormat29 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat28, simpleDateFormat29);
    net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat29);
    net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat29);
    net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat29);
    net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime("", simpleDateFormat20, simpleDateFormat29);
    net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    java.text.SimpleDateFormat simpleDateFormat40 = null;
    net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat40);
    net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double44 = dateTime41.getDeltaYears(dateTime43);
    boolean boolean45 = dateTime38.isLessThan(dateTime43);
    boolean boolean46 = dateTime34.isLessThanOrEqual(dateTime43);
    org.junit.Assert.assertNotNull(simpleDateFormat4);
    org.junit.Assert.assertNotNull(simpleDateFormat6);
    org.junit.Assert.assertNotNull(simpleDateFormat7);
    org.junit.Assert.assertNotNull(simpleDateFormat14);
    org.junit.Assert.assertNotNull(simpleDateFormat16);
    org.junit.Assert.assertNotNull(simpleDateFormat17);
    org.junit.Assert.assertNotNull(simpleDateFormat20);
    org.junit.Assert.assertNotNull(simpleDateFormat29);
    org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
  }

  @Test
  public void test836() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test836");
    net.ajaskey.common.Utils.NL = "                                                                                 -62,190,298,606,387";
  }

  @Test
  public void test837() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test837");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    dateTime1.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str6 = dateTime1.getMonth();
    java.text.SimpleDateFormat simpleDateFormat8 = null;
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double12 = dateTime9.getDeltaYears(dateTime11);
    boolean boolean13 = dateTime1.isLessThan(dateTime9);
    net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(100L);
    int int16 = dateTime15.getMs();
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(100L);
    double double23 = dateTime20.getDeltaYears(dateTime22);
    java.text.SimpleDateFormat simpleDateFormat24 = dateTime20.getSdf();
    boolean boolean25 = dateTime15.isLessThanOrEqual(dateTime20);
    java.lang.String str26 = dateTime15.getDay();
    dateTime9.set(dateTime15);
    int int28 = dateTime9.getDayOfYear();
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "January" + "'", str6, "January");
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
    org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-1972.041095890411d) + "'", double23 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat24);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Wednesday" + "'", str26, "Wednesday");
    org.junit.Assert.assertTrue("'" + int28 + "' != '" + 365 + "'", int28 == 365);
  }

  @Test
  public void test838() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test838");
    java.text.SimpleDateFormat simpleDateFormat1 = null;
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
    net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double5 = dateTime2.getDeltaYears(dateTime4);
    boolean boolean6 = dateTime2.isWeekday();
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
    int int9 = dateTime8.getMs();
    java.lang.String str10 = dateTime8.toString();
    int int11 = dateTime8.getMs();
    java.util.Calendar calendar12 = dateTime8.getCal();
    dateTime2.set(calendar12);
    java.text.SimpleDateFormat simpleDateFormat14 = dateTime2.getSdf();
    net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(100L);
    int int17 = dateTime16.getMs();
    net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime(100L);
    double double24 = dateTime21.getDeltaYears(dateTime23);
    java.text.SimpleDateFormat simpleDateFormat25 = dateTime21.getSdf();
    boolean boolean26 = dateTime16.isLessThanOrEqual(dateTime21);
    java.lang.String str27 = dateTime16.format();
    java.util.Calendar calendar28 = dateTime16.getCal();
    dateTime2.set(calendar28);
    net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime(calendar28);
    net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(calendar28);
    net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(100L);
    double double38 = dateTime35.getDeltaYears(dateTime37);
    boolean boolean39 = dateTime37.isWeekday();
    java.util.Date date40 = dateTime37.getTime();
    int int41 = dateTime37.getMinute();
    java.text.SimpleDateFormat simpleDateFormat43 = null;
    net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat43);
    net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double47 = dateTime44.getDeltaYears(dateTime46);
    net.ajaskey.common.DateTime dateTime48 = net.ajaskey.common.DateTime.copy(dateTime44);
    boolean boolean49 = net.ajaskey.common.Utils.sameDate(dateTime37, dateTime44);
    net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime(100L);
    double double56 = dateTime53.getDeltaYears(dateTime55);
    java.text.SimpleDateFormat simpleDateFormat58 = null;
    net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat58);
    net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double62 = dateTime59.getDeltaYears(dateTime61);
    boolean boolean63 = dateTime59.isWeekday();
    boolean boolean64 = dateTime53.sameDate(dateTime59);
    java.text.SimpleDateFormat simpleDateFormat66 = null;
    net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat66);
    net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double70 = dateTime67.getDeltaYears(dateTime69);
    net.ajaskey.common.DateTime dateTime74 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean75 = dateTime69.isEqual(dateTime74);
    dateTime53.set(dateTime74);
    net.ajaskey.common.DateTime dateTime78 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int79 = dateTime78.getDayOfWeek();
    double double80 = dateTime74.getDeltaYears(dateTime78);
    java.text.SimpleDateFormat simpleDateFormat82 = null;
    net.ajaskey.common.DateTime dateTime83 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat82);
    net.ajaskey.common.DateTime dateTime85 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double86 = dateTime83.getDeltaYears(dateTime85);
    net.ajaskey.common.DateTime dateTime90 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean91 = dateTime85.isEqual(dateTime90);
    java.util.Calendar calendar92 = dateTime85.getCal();
    dateTime74.set(calendar92);
    dateTime37.set(calendar92);
    dateTime31.set(calendar92);
    org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "31-Dec-1969" + "'", str10, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
    org.junit.Assert.assertNotNull(calendar12);
    org.junit.Assert.assertEquals(calendar12.toString(),
        "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertNull(simpleDateFormat14);
    org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
    org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1972.041095890411d) + "'", double24 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat25);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "BAD-DATE-FORMAT" + "'", str27, "BAD-DATE-FORMAT");
    org.junit.Assert.assertNotNull(calendar28);
    org.junit.Assert.assertEquals(calendar28.toString(),
        "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1972.041095890411d) + "'", double38 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    org.junit.Assert.assertNotNull(date40);
    org.junit.Assert.assertEquals(date40.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
    org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
    org.junit.Assert.assertNull(dateTime48);
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-1972.041095890411d) + "'", double56 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    org.junit.Assert.assertTrue("'" + int79 + "' != '" + 4 + "'", int79 == 4);
    org.junit.Assert.assertTrue("'" + double80 + "' != '" + (-1972.041095890411d) + "'", double80 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    org.junit.Assert.assertNotNull(calendar92);
    org.junit.Assert.assertEquals(calendar92.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
  }

  @Test
  public void test839() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test839");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    java.text.SimpleDateFormat simpleDateFormat8 = null;
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double12 = dateTime9.getDeltaYears(dateTime11);
    boolean boolean13 = dateTime9.isWeekday();
    boolean boolean14 = dateTime3.sameDate(dateTime9);
    java.lang.String str15 = dateTime9.format();
    dateTime9.set(0, (int) (byte) 10, 13);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "BAD-DATE-FORMAT" + "'", str15, "BAD-DATE-FORMAT");
  }

  @Test
  public void test840() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test840");
    java.lang.String str2 = net.ajaskey.common.Utils.ifmt(25, 9);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "       25" + "'", str2, "       25");
  }

  @Test
  public void test841() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test841");
    java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils
        .readTextFile("                                                                                 -62,190,298,606,387", true);
    net.ajaskey.common.TextUtils.print(strList2);
    net.ajaskey.common.TextUtils.print(strList2);
    java.lang.String str5 = net.ajaskey.common.TextUtils.toString(strList2);
    org.junit.Assert.assertNotNull(strList2);
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
  }

  @Test
  public void test842() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test842");
    java.lang.String str2 = net.ajaskey.common.Utils.lfmt(719795L, 13);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "      719,795" + "'", str2, "      719,795");
  }

  @Test
  public void test843() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test843");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    int int2 = dateTime1.getMs();
    java.text.SimpleDateFormat simpleDateFormat3 = net.ajaskey.common.Utils.sdf;
    dateTime1.setSdf(simpleDateFormat3);
    int int5 = dateTime1.getDayOfWeek();
    net.ajaskey.common.DateTime dateTime6 = net.ajaskey.common.DateTime.copy(dateTime1);
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
    int int9 = dateTime8.getMs();
    java.text.SimpleDateFormat simpleDateFormat10 = net.ajaskey.common.Utils.sdf;
    dateTime8.setSdf(simpleDateFormat10);
    java.lang.String str12 = dateTime8.toFullString();
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(dateTime8);
    int int14 = dateTime8.getHour();
    boolean boolean15 = dateTime6.isGreaterThan(dateTime8);
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(100L);
    int int18 = dateTime17.getMs();
    java.lang.String str19 = dateTime17.toString();
    net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int22 = dateTime21.getHour();
    int int23 = dateTime21.getDayOfMonth();
    dateTime17.set(dateTime21);
    int int25 = dateTime21.getMs();
    java.lang.String str26 = dateTime21.toFullString();
    boolean boolean27 = dateTime8.isGreaterThanOrEqual(dateTime21);
    java.text.SimpleDateFormat simpleDateFormat29 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime("January", simpleDateFormat29);
    boolean boolean31 = dateTime8.sameDate(dateTime30);
    java.text.SimpleDateFormat simpleDateFormat35 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat37 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat38 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime("", simpleDateFormat37, simpleDateFormat38);
    net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat35,
        simpleDateFormat38);
    java.text.SimpleDateFormat simpleDateFormat42 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat43 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime("", simpleDateFormat42, simpleDateFormat43);
    net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime("", simpleDateFormat38, simpleDateFormat43);
    java.text.SimpleDateFormat simpleDateFormat48 = null;
    java.text.SimpleDateFormat simpleDateFormat49 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat48, simpleDateFormat49);
    net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat49);
    net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime("Fri 31-Dec-0001 17:00:00", simpleDateFormat38, simpleDateFormat49);
    net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int55 = dateTime54.getHour();
    int int56 = dateTime54.getDayOfMonth();
    int int57 = dateTime54.getYear();
    net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime(dateTime54);
    int int59 = dateTime52.getYears(dateTime58);
    java.text.SimpleDateFormat simpleDateFormat65 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat67 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat68 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime("", simpleDateFormat67, simpleDateFormat68);
    net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat65,
        simpleDateFormat68);
    net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat65);
    java.text.SimpleDateFormat simpleDateFormat75 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat77 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat78 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime79 = new net.ajaskey.common.DateTime("", simpleDateFormat77, simpleDateFormat78);
    net.ajaskey.common.DateTime dateTime80 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat75,
        simpleDateFormat78);
    java.text.SimpleDateFormat simpleDateFormat81 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime82 = new net.ajaskey.common.DateTime("", simpleDateFormat78, simpleDateFormat81);
    net.ajaskey.common.DateTime dateTime83 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat81);
    net.ajaskey.common.DateTime dateTime84 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat65, simpleDateFormat81);
    java.text.SimpleDateFormat simpleDateFormat89 = null;
    java.text.SimpleDateFormat simpleDateFormat90 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime91 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat89, simpleDateFormat90);
    net.ajaskey.common.DateTime dateTime92 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat90);
    net.ajaskey.common.DateTime dateTime93 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat90);
    net.ajaskey.common.DateTime dateTime94 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat90);
    net.ajaskey.common.DateTime dateTime95 = new net.ajaskey.common.DateTime("", simpleDateFormat81, simpleDateFormat90);
    net.ajaskey.common.DateTime dateTime96 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 14:03:11", simpleDateFormat81);
    dateTime52.setSdf(simpleDateFormat81);
    dateTime8.setSdf(simpleDateFormat81);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat3);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 4 + "'", int5 == 4);
    org.junit.Assert.assertNotNull(dateTime6);
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat10);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str12, "Wed 31-Dec-1969 17:00:00");
    org.junit.Assert.assertTrue("'" + int14 + "' != '" + 5 + "'", int14 == 5);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
    org.junit.Assert.assertEquals("'" + str19 + "' != '" + "31-Dec-1969" + "'", str19, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int22 + "' != '" + 5 + "'", int22 == 5);
    org.junit.Assert.assertTrue("'" + int23 + "' != '" + 31 + "'", int23 == 31);
    org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
    org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str26, "Wed 31-Dec-1969 17:00:00");
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    org.junit.Assert.assertNotNull(simpleDateFormat29);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    org.junit.Assert.assertNotNull(simpleDateFormat35);
    org.junit.Assert.assertNotNull(simpleDateFormat37);
    org.junit.Assert.assertNotNull(simpleDateFormat38);
    org.junit.Assert.assertNotNull(simpleDateFormat42);
    org.junit.Assert.assertNotNull(simpleDateFormat43);
    org.junit.Assert.assertNotNull(simpleDateFormat49);
    org.junit.Assert.assertTrue("'" + int55 + "' != '" + 5 + "'", int55 == 5);
    org.junit.Assert.assertTrue("'" + int56 + "' != '" + 31 + "'", int56 == 31);
    org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1969 + "'", int57 == 1969);
    org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
    org.junit.Assert.assertNotNull(simpleDateFormat65);
    org.junit.Assert.assertNotNull(simpleDateFormat67);
    org.junit.Assert.assertNotNull(simpleDateFormat68);
    org.junit.Assert.assertNotNull(simpleDateFormat75);
    org.junit.Assert.assertNotNull(simpleDateFormat77);
    org.junit.Assert.assertNotNull(simpleDateFormat78);
    org.junit.Assert.assertNotNull(simpleDateFormat81);
    org.junit.Assert.assertNotNull(simpleDateFormat90);
  }

  @Test
  public void test844() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test844");
    java.text.SimpleDateFormat simpleDateFormat1 = null;
    java.text.SimpleDateFormat simpleDateFormat2 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat1, simpleDateFormat2);
    java.lang.String str4 = dateTime3.getDay();
    java.util.Calendar calendar5 = dateTime3.getCal();
    java.lang.String str6 = dateTime3.format();
    java.lang.String str7 = dateTime3.format();
    org.junit.Assert.assertNotNull(simpleDateFormat2);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UNKNOWN" + "'", str4, "UNKNOWN");
    org.junit.Assert.assertNull(calendar5);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "BAD-DATE-FORMAT" + "'", str6, "BAD-DATE-FORMAT");
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "BAD-DATE-FORMAT" + "'", str7, "BAD-DATE-FORMAT");
  }

  @Test
  public void test845() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test845");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    java.text.SimpleDateFormat simpleDateFormat8 = null;
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double12 = dateTime9.getDeltaYears(dateTime11);
    boolean boolean13 = dateTime9.isWeekday();
    boolean boolean14 = dateTime3.sameDate(dateTime9);
    net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(0L);
    boolean boolean17 = dateTime9.isGreaterThanOrEqual(dateTime16);
    net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime(100L);
    double double24 = dateTime21.getDeltaYears(dateTime23);
    boolean boolean25 = dateTime23.isWeekday();
    java.util.Date date26 = dateTime23.getTime();
    java.lang.String str27 = dateTime23.toString();
    net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(3, (int) '4', (int) (byte) 0);
    boolean boolean32 = dateTime23.isGreaterThan(dateTime31);
    java.text.SimpleDateFormat simpleDateFormat34 = null;
    net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat34);
    net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double38 = dateTime35.getDeltaYears(dateTime37);
    net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean43 = dateTime37.isEqual(dateTime42);
    java.util.Calendar calendar44 = dateTime37.getCal();
    net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(calendar44);
    net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime(calendar44);
    boolean boolean47 = dateTime23.isLessThan(dateTime46);
    java.text.SimpleDateFormat simpleDateFormat49 = null;
    net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat49);
    net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double53 = dateTime50.getDeltaYears(dateTime52);
    boolean boolean54 = dateTime50.isWeekday();
    java.lang.String str55 = dateTime50.getDay();
    java.util.Calendar calendar56 = dateTime50.getCal();
    boolean boolean57 = dateTime23.isLessThan(dateTime50);
    boolean boolean58 = net.ajaskey.common.Utils.sameDate(dateTime9, dateTime23);
    net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime(dateTime23);
    net.ajaskey.common.DateTime dateTime62 = dateTime59.parse("Thu 10-Apr-0002 14:03:16", "Thu 10-Apr-0002 14:03:19");
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1972.041095890411d) + "'", double24 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    org.junit.Assert.assertNotNull(date26);
    org.junit.Assert.assertEquals(date26.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "31-Dec-1969" + "'", str27, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    org.junit.Assert.assertNotNull(calendar44);
    org.junit.Assert.assertEquals(calendar44.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    org.junit.Assert.assertEquals("'" + str55 + "' != '" + "UNKNOWN" + "'", str55, "UNKNOWN");
    org.junit.Assert.assertNull(calendar56);
    org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    org.junit.Assert.assertNull(dateTime62);
  }

  @Test
  public void test846() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test846");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    dateTime1.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str6 = dateTime1.getMonth();
    int int7 = dateTime1.getMs();
    java.lang.String str9 = dateTime1.format("                                                                                               52.00");
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
    dateTime11.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str16 = dateTime11.getMonth();
    long long17 = dateTime1.getDeltaDays(dateTime11);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(100L);
    dateTime19.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str24 = dateTime19.getMonth();
    java.text.SimpleDateFormat simpleDateFormat26 = null;
    net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat26);
    net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double30 = dateTime27.getDeltaYears(dateTime29);
    boolean boolean31 = dateTime19.isLessThan(dateTime27);
    net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(100L);
    double double38 = dateTime35.getDeltaYears(dateTime37);
    net.ajaskey.common.DateTime dateTime39 = null;
    long long40 = dateTime35.getDeltaDays(dateTime39);
    boolean boolean41 = dateTime27.isLessThanOrEqual(dateTime35);
    boolean boolean42 = dateTime1.isGreaterThanOrEqual(dateTime35);
    net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime((long) 2);
    java.text.SimpleDateFormat simpleDateFormat45 = dateTime44.getSdf();
    net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    java.text.SimpleDateFormat simpleDateFormat51 = null;
    net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat51);
    net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double55 = dateTime52.getDeltaYears(dateTime54);
    boolean boolean56 = dateTime49.isLessThan(dateTime54);
    int int57 = dateTime49.getHour();
    long long58 = dateTime44.getDeltaDays(dateTime49);
    boolean boolean59 = dateTime1.isGreaterThan(dateTime49);
    java.text.SimpleDateFormat simpleDateFormat60 = dateTime49.getSdf();
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "January" + "'", str6, "January");
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
    org.junit.Assert.assertEquals(
        "'" + str9 + "' != '" + "                                                                                               52.00" + "'", str9,
        "                                                                                               52.00");
    org.junit.Assert.assertEquals("'" + str16 + "' != '" + "January" + "'", str16, "January");
    org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
    org.junit.Assert.assertEquals("'" + str24 + "' != '" + "January" + "'", str24, "January");
    org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1972.041095890411d) + "'", double38 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    org.junit.Assert.assertNull(simpleDateFormat45);
    org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
    org.junit.Assert.assertTrue("'" + long58 + "' != '" + 719795L + "'", long58 == 719795L);
    org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    org.junit.Assert.assertNull(simpleDateFormat60);
  }

  @Test
  public void test847() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test847");
    net.ajaskey.common.TextUtils.printline("       10.00");
  }

  @Test
  public void test848() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test848");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    boolean boolean7 = dateTime5.isWeekday();
    net.ajaskey.common.DateTime dateTime10 = dateTime5.parse("31-Dec-1969", "January");
    net.ajaskey.common.DateTime dateTime11 = net.ajaskey.common.DateTime.copy(dateTime5);
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(100L);
    dateTime13.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str18 = dateTime13.getMonth();
    int int19 = dateTime13.getMs();
    java.lang.String str21 = dateTime13
        .format("                                                                                               52.00");
    net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime(100L);
    dateTime23.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str28 = dateTime23.getMonth();
    long long29 = dateTime13.getDeltaDays(dateTime23);
    boolean boolean30 = dateTime11.isGreaterThan(dateTime23);
    java.util.Date date31 = dateTime23.getTime();
    int int32 = dateTime23.getDayOfMonth();
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertNull(dateTime10);
    org.junit.Assert.assertNotNull(dateTime11);
    org.junit.Assert.assertEquals("'" + str18 + "' != '" + "January" + "'", str18, "January");
    org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
    org.junit.Assert.assertEquals(
        "'" + str21 + "' != '" + "                                                                                               52.00" + "'", str21,
        "                                                                                               52.00");
    org.junit.Assert.assertEquals("'" + str28 + "' != '" + "January" + "'", str28, "January");
    org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    org.junit.Assert.assertNotNull(date31);
    org.junit.Assert.assertEquals(date31.toString(), "Sat Jan 04 17:00:00 MST 100");
    org.junit.Assert.assertTrue("'" + int32 + "' != '" + 4 + "'", int32 == 4);
  }

  @Test
  public void test849() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test849");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    java.text.SimpleDateFormat simpleDateFormat8 = null;
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double12 = dateTime9.getDeltaYears(dateTime11);
    boolean boolean13 = dateTime9.isWeekday();
    boolean boolean14 = dateTime3.sameDate(dateTime9);
    java.text.SimpleDateFormat simpleDateFormat16 = null;
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double20 = dateTime17.getDeltaYears(dateTime19);
    net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean25 = dateTime19.isEqual(dateTime24);
    dateTime3.set(dateTime24);
    net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int29 = dateTime28.getDayOfWeek();
    double double30 = dateTime24.getDeltaYears(dateTime28);
    java.text.SimpleDateFormat simpleDateFormat32 = null;
    net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat32);
    net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double36 = dateTime33.getDeltaYears(dateTime35);
    net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean41 = dateTime35.isEqual(dateTime40);
    java.util.Calendar calendar42 = dateTime35.getCal();
    dateTime24.set(calendar42);
    net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime(calendar42);
    net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(calendar42);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertTrue("'" + int29 + "' != '" + 4 + "'", int29 == 4);
    org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-1972.041095890411d) + "'", double30 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    org.junit.Assert.assertNotNull(calendar42);
    org.junit.Assert.assertEquals(calendar42.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
  }

  @Test
  public void test850() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test850");
    net.ajaskey.common.Utils.sleep(123);
  }

  @Test
  public void test851() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test851");
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("Sat 04-Jan-0100 17:00:00", "           365");
    int int3 = dateTime2.getDayOfWeek();
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
  }

  @Test
  public void test852() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test852");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    java.text.SimpleDateFormat simpleDateFormat8 = null;
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double12 = dateTime9.getDeltaYears(dateTime11);
    boolean boolean13 = dateTime9.isWeekday();
    boolean boolean14 = dateTime3.sameDate(dateTime9);
    net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(0L);
    boolean boolean17 = dateTime9.isGreaterThanOrEqual(dateTime16);
    dateTime16.setFirstWorkDay();
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
  }

  @Test
  public void test853() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test853");
    java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat6 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat7 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime("", simpleDateFormat6, simpleDateFormat7);
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat4, simpleDateFormat7);
    java.text.SimpleDateFormat simpleDateFormat10 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime("", simpleDateFormat7, simpleDateFormat10);
    net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat10);
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(
        "                                                                                                                                                                                                                                                                                                                                                                        35.00",
        simpleDateFormat10);
    int int14 = dateTime13.getMs();
    org.junit.Assert.assertNotNull(simpleDateFormat4);
    org.junit.Assert.assertNotNull(simpleDateFormat6);
    org.junit.Assert.assertNotNull(simpleDateFormat7);
    org.junit.Assert.assertNotNull(simpleDateFormat10);
    org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
  }

  @Test
  public void test854() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test854");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    int int2 = dateTime1.getMs();
    java.text.SimpleDateFormat simpleDateFormat3 = net.ajaskey.common.Utils.sdf;
    dateTime1.setSdf(simpleDateFormat3);
    int int5 = dateTime1.getDayOfWeek();
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
    double double12 = dateTime9.getDeltaYears(dateTime11);
    java.util.Calendar calendar13 = dateTime9.getCal();
    dateTime1.set(calendar13);
    java.text.SimpleDateFormat simpleDateFormat16 = null;
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double20 = dateTime17.getDeltaYears(dateTime19);
    net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean25 = dateTime19.isEqual(dateTime24);
    java.util.Calendar calendar26 = dateTime19.getCal();
    net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(calendar26);
    dateTime1.set(calendar26);
    int int29 = dateTime1.getDayOfYear();
    int int30 = dateTime1.getMinute();
    java.lang.String str31 = dateTime1.toFullString();
    java.util.Date date32 = dateTime1.getTime();
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat3);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 4 + "'", int5 == 4);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1972.041095890411d) + "'", double12 == (-1972.041095890411d));
    org.junit.Assert.assertNotNull(calendar13);
// flaky:         org.junit.Assert.assertEquals(calendar13.toString(), "java.util.GregorianCalendar[time=-62190298585009,areFieldsSet=true,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=3,SECOND=34,MILLISECOND=991,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertNotNull(calendar26);
    org.junit.Assert.assertEquals(calendar26.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + int29 + "' != '" + 365 + "'", int29 == 365);
    org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
    org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str31, "Wed 31-Dec-1969 17:00:00");
    org.junit.Assert.assertNotNull(date32);
    org.junit.Assert.assertEquals(date32.toString(), "Wed Dec 31 17:00:00 MST 1969");
  }

  @Test
  public void test855() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test855");
    java.util.zip.ZipOutputStream zipOutputStream1 = null;
    // The following exception was thrown during execution in test generation
    try {
      net.ajaskey.common.Utils.writeToZipFile("                                                                                 -62,190,298,606,387",
          zipOutputStream1);
      org.junit.Assert.fail(
          "Expected exception of type java.io.FileNotFoundException; message:                                                                                  -62,190,298,606,387 (The system cannot find the file specified)");
    }
    catch (java.io.FileNotFoundException e) {
      // Expected exception.
    }
  }

  @Test
  public void test856() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test856");
    java.lang.String str1 = net.ajaskey.common.Utils.getFromUrl("                              97");
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
  }

  @Test
  public void test857() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test857");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    java.text.SimpleDateFormat simpleDateFormat5 = null;
    net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat5);
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double9 = dateTime6.getDeltaYears(dateTime8);
    boolean boolean10 = dateTime3.isLessThan(dateTime8);
    dateTime8.add(10, (int) (short) 1);
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
  }

  @Test
  public void test858() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test858");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    boolean boolean7 = dateTime5.isWeekday();
    java.util.Date date8 = dateTime5.getTime();
    java.lang.String str9 = dateTime5.toString();
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
    int int12 = dateTime11.getMs();
    net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(100L);
    double double19 = dateTime16.getDeltaYears(dateTime18);
    java.text.SimpleDateFormat simpleDateFormat20 = dateTime16.getSdf();
    boolean boolean21 = dateTime11.isLessThanOrEqual(dateTime16);
    boolean boolean22 = dateTime5.isLessThan(dateTime16);
    int int23 = dateTime5.getDayOfWeek();
    dateTime5.add(50, 10);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertNotNull(date8);
    org.junit.Assert.assertEquals(date8.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "31-Dec-1969" + "'", str9, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
    org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-1972.041095890411d) + "'", double19 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat20);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    org.junit.Assert.assertTrue("'" + int23 + "' != '" + 4 + "'", int23 == 4);
  }

  @Test
  public void test860() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test860");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) ' ');
    java.lang.String str2 = dateTime1.format();
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "BAD-DATE-FORMAT" + "'", str2, "BAD-DATE-FORMAT");
  }

  @Test
  public void test861() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test861");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    dateTime1.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str6 = dateTime1.getMonth();
    java.text.SimpleDateFormat simpleDateFormat8 = null;
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double12 = dateTime9.getDeltaYears(dateTime11);
    boolean boolean13 = dateTime1.isLessThan(dateTime9);
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(100L);
    double double20 = dateTime17.getDeltaYears(dateTime19);
    net.ajaskey.common.DateTime dateTime21 = null;
    long long22 = dateTime17.getDeltaDays(dateTime21);
    boolean boolean23 = dateTime9.isLessThanOrEqual(dateTime17);
    net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(100L);
    double double30 = dateTime27.getDeltaYears(dateTime29);
    int int31 = dateTime27.getHour();
    boolean boolean32 = net.ajaskey.common.Utils.sameMonth(dateTime17, dateTime27);
    java.lang.String str33 = dateTime27.format();
    dateTime27.setFirstWorkDay();
    java.lang.String str35 = dateTime27.toFullString();
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "January" + "'", str6, "January");
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-1972.041095890411d) + "'", double20 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-1972.041095890411d) + "'", double30 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    org.junit.Assert.assertEquals("'" + str33 + "' != '" + "BAD-DATE-FORMAT" + "'", str33, "BAD-DATE-FORMAT");
// flaky:         org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Thu 10-Apr-0002 14:03:35" + "'", str35, "Thu 10-Apr-0002 14:03:35");
  }

  @Test
  public void test862() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test862");
    java.text.SimpleDateFormat simpleDateFormat1 = null;
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
    net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double5 = dateTime2.getDeltaYears(dateTime4);
    boolean boolean6 = dateTime2.isWeekday();
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
    int int9 = dateTime8.getMs();
    java.lang.String str10 = dateTime8.toString();
    int int11 = dateTime8.getMs();
    java.util.Calendar calendar12 = dateTime8.getCal();
    dateTime2.set(calendar12);
    java.text.SimpleDateFormat simpleDateFormat14 = dateTime2.getSdf();
    net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(100L);
    int int17 = dateTime16.getMs();
    net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime(100L);
    double double24 = dateTime21.getDeltaYears(dateTime23);
    java.text.SimpleDateFormat simpleDateFormat25 = dateTime21.getSdf();
    boolean boolean26 = dateTime16.isLessThanOrEqual(dateTime21);
    java.lang.String str27 = dateTime16.format();
    java.util.Calendar calendar28 = dateTime16.getCal();
    dateTime2.set(calendar28);
    net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime(calendar28);
    net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(calendar28);
    java.lang.String str32 = dateTime31.toFullString();
    org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "31-Dec-1969" + "'", str10, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
    org.junit.Assert.assertNotNull(calendar12);
    org.junit.Assert.assertEquals(calendar12.toString(),
        "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertNull(simpleDateFormat14);
    org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
    org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1972.041095890411d) + "'", double24 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat25);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "BAD-DATE-FORMAT" + "'", str27, "BAD-DATE-FORMAT");
    org.junit.Assert.assertNotNull(calendar28);
    org.junit.Assert.assertEquals(calendar28.toString(),
        "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str32, "Wed 31-Dec-1969 17:00:00");
  }

  @Test
  public void test863() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test863");
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("January", "BAD-DATE-FORMAT");
    java.util.Calendar calendar3 = dateTime2.getCal();
    java.text.SimpleDateFormat simpleDateFormat5 = null;
    java.text.SimpleDateFormat simpleDateFormat6 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat5, simpleDateFormat6);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(100L);
    double double14 = dateTime11.getDeltaYears(dateTime13);
    boolean boolean15 = dateTime13.isWeekday();
    java.util.Date date16 = dateTime13.getTime();
    java.lang.String str17 = dateTime13.toString();
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(100L);
    int int20 = dateTime19.getMs();
    net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(100L);
    double double27 = dateTime24.getDeltaYears(dateTime26);
    java.text.SimpleDateFormat simpleDateFormat28 = dateTime24.getSdf();
    boolean boolean29 = dateTime19.isLessThanOrEqual(dateTime24);
    boolean boolean30 = dateTime13.isLessThan(dateTime24);
    java.lang.String str31 = dateTime13.toString();
    long long32 = dateTime7.getDeltaMilliSeconds(dateTime13);
    java.lang.String str33 = dateTime13.getDay();
    java.text.SimpleDateFormat simpleDateFormat34 = dateTime13.getSdf();
    double double35 = dateTime2.getDeltaYears(dateTime13);
    java.util.Calendar calendar36 = dateTime2.getCal();
    org.junit.Assert.assertNull(calendar3);
    org.junit.Assert.assertNotNull(simpleDateFormat6);
    org.junit.Assert.assertTrue("'" + double14 + "' != '" + (-1972.041095890411d) + "'", double14 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    org.junit.Assert.assertNotNull(date16);
    org.junit.Assert.assertEquals(date16.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str17 + "' != '" + "31-Dec-1969" + "'", str17, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
    org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-1972.041095890411d) + "'", double27 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat28);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    org.junit.Assert.assertEquals("'" + str31 + "' != '" + "31-Dec-1969" + "'", str31, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
    org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Wednesday" + "'", str33, "Wednesday");
    org.junit.Assert.assertNotNull(simpleDateFormat34);
    org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
    org.junit.Assert.assertNull(calendar36);
  }

  @Test
  public void test864() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test864");
    net.ajaskey.common.DateTime dateTime0 = new net.ajaskey.common.DateTime();
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime(100L);
    dateTime2.set((int) (byte) 100, (-1), (int) '#');
    java.text.SimpleDateFormat simpleDateFormat7 = dateTime2.getSdf();
    boolean boolean8 = dateTime0.isEqual(dateTime2);
    net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime(100L);
    boolean boolean11 = dateTime2.isGreaterThanOrEqual(dateTime10);
    net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime();
    java.text.SimpleDateFormat simpleDateFormat13 = dateTime12.getSdf();
    java.text.SimpleDateFormat simpleDateFormat17 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat19 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat20 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("", simpleDateFormat19, simpleDateFormat20);
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat17,
        simpleDateFormat20);
    java.text.SimpleDateFormat simpleDateFormat24 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat25 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime("", simpleDateFormat24, simpleDateFormat25);
    net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime("", simpleDateFormat20, simpleDateFormat25);
    java.text.SimpleDateFormat simpleDateFormat30 = null;
    java.text.SimpleDateFormat simpleDateFormat31 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat30, simpleDateFormat31);
    net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat31);
    net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime("Fri 31-Dec-0001 17:00:00", simpleDateFormat20, simpleDateFormat31);
    boolean boolean35 = dateTime12.isLessThan(dateTime34);
    dateTime12.setFirstWorkDay();
    dateTime2.set(dateTime12);
    org.junit.Assert.assertNull(simpleDateFormat7);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNull(simpleDateFormat13);
    org.junit.Assert.assertNotNull(simpleDateFormat17);
    org.junit.Assert.assertNotNull(simpleDateFormat19);
    org.junit.Assert.assertNotNull(simpleDateFormat20);
    org.junit.Assert.assertNotNull(simpleDateFormat24);
    org.junit.Assert.assertNotNull(simpleDateFormat25);
    org.junit.Assert.assertNotNull(simpleDateFormat31);
    org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
  }

  @Test
  public void test865() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test865");
    net.ajaskey.common.DateTime dateTime0 = new net.ajaskey.common.DateTime();
    java.text.SimpleDateFormat simpleDateFormat1 = dateTime0.getSdf();
    net.ajaskey.common.DateTime dateTime4 = dateTime0.parse("                              97", "Thu 10-Apr-0002 14:03:27");
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(dateTime4);
    org.junit.Assert.assertNull(simpleDateFormat1);
    org.junit.Assert.assertNull(dateTime4);
  }

  @Test
  public void test866() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test866");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    boolean boolean7 = dateTime5.isWeekday();
    java.util.Date date8 = dateTime5.getTime();
    java.lang.String str9 = dateTime5.toString();
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
    int int12 = dateTime11.getMs();
    net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(100L);
    double double19 = dateTime16.getDeltaYears(dateTime18);
    java.text.SimpleDateFormat simpleDateFormat20 = dateTime16.getSdf();
    boolean boolean21 = dateTime11.isLessThanOrEqual(dateTime16);
    boolean boolean22 = dateTime5.isLessThan(dateTime16);
    int int23 = dateTime5.getDayOfWeek();
    java.text.SimpleDateFormat simpleDateFormat25 = null;
    net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat25);
    net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double29 = dateTime26.getDeltaYears(dateTime28);
    net.ajaskey.common.DateTime dateTime30 = net.ajaskey.common.DateTime.copy(dateTime26);
    double double31 = dateTime5.getDeltaYears(dateTime26);
    java.lang.String str32 = dateTime5.getDay();
    java.text.SimpleDateFormat simpleDateFormat34 = null;
    java.text.SimpleDateFormat simpleDateFormat35 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat34, simpleDateFormat35);
    java.lang.String str37 = dateTime36.getDay();
    java.lang.String str38 = dateTime36.getMonth();
    net.ajaskey.common.DateTime dateTime39 = null;
    long long40 = dateTime36.getDeltaMilliSeconds(dateTime39);
    boolean boolean41 = dateTime5.isEqual(dateTime36);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertNotNull(date8);
    org.junit.Assert.assertEquals(date8.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "31-Dec-1969" + "'", str9, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
    org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-1972.041095890411d) + "'", double19 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat20);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    org.junit.Assert.assertTrue("'" + int23 + "' != '" + 4 + "'", int23 == 4);
    org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
    org.junit.Assert.assertNull(dateTime30);
    org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
    org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Wednesday" + "'", str32, "Wednesday");
    org.junit.Assert.assertNotNull(simpleDateFormat35);
    org.junit.Assert.assertEquals("'" + str37 + "' != '" + "UNKNOWN" + "'", str37, "UNKNOWN");
    org.junit.Assert.assertEquals("'" + str38 + "' != '" + "UNKNOWN" + "'", str38, "UNKNOWN");
    org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
  }

  @Test
  public void test867() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test867");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    java.text.SimpleDateFormat simpleDateFormat7 = dateTime3.getSdf();
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(dateTime3);
    int int9 = dateTime3.getYear();
    java.lang.String str11 = dateTime3.format("31-Dec-1969");
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat7);
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
    org.junit.Assert.assertEquals("'" + str11 + "' != '" + "BAD-DATE-FORMAT" + "'", str11, "BAD-DATE-FORMAT");
  }

  @Test
  public void test868() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test868");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    java.text.SimpleDateFormat simpleDateFormat7 = dateTime3.getSdf();
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(100L);
    double double14 = dateTime11.getDeltaYears(dateTime13);
    boolean boolean15 = dateTime13.isWeekday();
    net.ajaskey.common.DateTime dateTime18 = dateTime13.parse("31-Dec-1969", "January");
    net.ajaskey.common.DateTime dateTime19 = net.ajaskey.common.DateTime.copy(dateTime13);
    boolean boolean20 = dateTime3.sameDate(dateTime19);
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int23 = dateTime22.getDayOfWeek();
    int int24 = dateTime19.getYears(dateTime22);
    java.lang.String str25 = dateTime22.toString();
    net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(100L);
    double double32 = dateTime29.getDeltaYears(dateTime31);
    java.text.SimpleDateFormat simpleDateFormat34 = null;
    net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat34);
    net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double38 = dateTime35.getDeltaYears(dateTime37);
    boolean boolean39 = dateTime35.isWeekday();
    boolean boolean40 = dateTime29.sameDate(dateTime35);
    boolean boolean41 = dateTime22.isEqual(dateTime29);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat7);
    org.junit.Assert.assertTrue("'" + double14 + "' != '" + (-1972.041095890411d) + "'", double14 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    org.junit.Assert.assertNull(dateTime18);
    org.junit.Assert.assertNotNull(dateTime19);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertTrue("'" + int23 + "' != '" + 4 + "'", int23 == 4);
    org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    org.junit.Assert.assertEquals("'" + str25 + "' != '" + "31-Dec-1969" + "'", str25, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-1972.041095890411d) + "'", double32 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
  }

  @Test
  public void test869() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test869");
    java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat6 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat7 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime("", simpleDateFormat6, simpleDateFormat7);
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat4, simpleDateFormat7);
    net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat4);
    java.text.SimpleDateFormat simpleDateFormat14 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat16 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat17 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime("", simpleDateFormat16, simpleDateFormat17);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat14,
        simpleDateFormat17);
    java.text.SimpleDateFormat simpleDateFormat20 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("", simpleDateFormat17, simpleDateFormat20);
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat20);
    net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat4, simpleDateFormat20);
    net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("", simpleDateFormat20);
    org.junit.Assert.assertNotNull(simpleDateFormat4);
    org.junit.Assert.assertNotNull(simpleDateFormat6);
    org.junit.Assert.assertNotNull(simpleDateFormat7);
    org.junit.Assert.assertNotNull(simpleDateFormat14);
    org.junit.Assert.assertNotNull(simpleDateFormat16);
    org.junit.Assert.assertNotNull(simpleDateFormat17);
    org.junit.Assert.assertNotNull(simpleDateFormat20);
  }

  @Test
  public void test870() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test870");
    java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readTextFile("hi!", false);
    net.ajaskey.common.TextUtils.print(strList2);
    java.lang.String str4 = net.ajaskey.common.TextUtils.toString(strList2);
    org.junit.Assert.assertNotNull(strList2);
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
  }

  @Test
  public void test871() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test871");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    dateTime1.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str6 = dateTime1.getMonth();
    int int7 = dateTime1.getMs();
    java.lang.String str9 = dateTime1.format("                                                                                               52.00");
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
    dateTime11.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str16 = dateTime11.getMonth();
    long long17 = dateTime1.getDeltaDays(dateTime11);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(100L);
    dateTime19.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str24 = dateTime19.getMonth();
    java.text.SimpleDateFormat simpleDateFormat26 = null;
    net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat26);
    net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double30 = dateTime27.getDeltaYears(dateTime29);
    boolean boolean31 = dateTime19.isLessThan(dateTime27);
    net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(100L);
    double double38 = dateTime35.getDeltaYears(dateTime37);
    net.ajaskey.common.DateTime dateTime39 = null;
    long long40 = dateTime35.getDeltaDays(dateTime39);
    boolean boolean41 = dateTime27.isLessThanOrEqual(dateTime35);
    boolean boolean42 = dateTime1.isGreaterThanOrEqual(dateTime35);
    net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime((long) 2);
    java.text.SimpleDateFormat simpleDateFormat45 = dateTime44.getSdf();
    net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    java.text.SimpleDateFormat simpleDateFormat51 = null;
    net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat51);
    net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double55 = dateTime52.getDeltaYears(dateTime54);
    boolean boolean56 = dateTime49.isLessThan(dateTime54);
    int int57 = dateTime49.getHour();
    long long58 = dateTime44.getDeltaDays(dateTime49);
    boolean boolean59 = dateTime1.isGreaterThan(dateTime49);
    int int60 = dateTime1.getMs();
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "January" + "'", str6, "January");
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
    org.junit.Assert.assertEquals(
        "'" + str9 + "' != '" + "                                                                                               52.00" + "'", str9,
        "                                                                                               52.00");
    org.junit.Assert.assertEquals("'" + str16 + "' != '" + "January" + "'", str16, "January");
    org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
    org.junit.Assert.assertEquals("'" + str24 + "' != '" + "January" + "'", str24, "January");
    org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1972.041095890411d) + "'", double38 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    org.junit.Assert.assertNull(simpleDateFormat45);
    org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
    org.junit.Assert.assertTrue("'" + long58 + "' != '" + 719795L + "'", long58 == 719795L);
    org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    org.junit.Assert.assertTrue("'" + int60 + "' != '" + 100 + "'", int60 == 100);
  }

  @Test
  public void test872() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test872");
    net.ajaskey.common.DateTime dateTime0 = new net.ajaskey.common.DateTime();
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime(100L);
    dateTime2.set((int) (byte) 100, (-1), (int) '#');
    java.text.SimpleDateFormat simpleDateFormat7 = dateTime2.getSdf();
    boolean boolean8 = dateTime0.isEqual(dateTime2);
    net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(100L);
    double double15 = dateTime12.getDeltaYears(dateTime14);
    boolean boolean16 = dateTime14.isWeekday();
    java.util.Date date17 = dateTime14.getTime();
    java.lang.String str18 = dateTime14.toString();
    dateTime14.add(31, 0);
    java.text.SimpleDateFormat simpleDateFormat23 = null;
    net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat23);
    net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double27 = dateTime24.getDeltaYears(dateTime26);
    boolean boolean28 = dateTime24.isWeekday();
    boolean boolean29 = dateTime24.isWeekday();
    net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime(100L);
    double double36 = dateTime33.getDeltaYears(dateTime35);
    java.util.Date date37 = dateTime33.getTime();
    net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime(date37);
    net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime(date37);
    net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime(date37);
    dateTime24.set(date37);
    dateTime14.set(date37);
    dateTime2.set(date37);
    org.junit.Assert.assertNull(simpleDateFormat7);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-1972.041095890411d) + "'", double15 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    org.junit.Assert.assertNotNull(date17);
    org.junit.Assert.assertEquals(date17.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str18 + "' != '" + "31-Dec-1969" + "'", str18, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-1972.041095890411d) + "'", double36 == (-1972.041095890411d));
    org.junit.Assert.assertNotNull(date37);
// flaky:         org.junit.Assert.assertEquals(date37.toString(), "Thu Apr 10 14:03:35 MST 2");
  }

  @Test
  public void test873() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test873");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    boolean boolean7 = dateTime5.isWeekday();
    java.util.Date date8 = dateTime5.getTime();
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(date8);
    net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime(date8);
    net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(100L);
    dateTime12.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str17 = dateTime12.getMonth();
    int int18 = dateTime12.getMs();
    java.lang.String str20 = dateTime12
        .format("                                                                                               52.00");
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(100L);
    dateTime22.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str27 = dateTime22.getMonth();
    long long28 = dateTime12.getDeltaDays(dateTime22);
    net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime(100L);
    dateTime30.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str35 = dateTime30.getMonth();
    java.text.SimpleDateFormat simpleDateFormat37 = null;
    net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat37);
    net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double41 = dateTime38.getDeltaYears(dateTime40);
    boolean boolean42 = dateTime30.isLessThan(dateTime38);
    net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime(100L);
    double double49 = dateTime46.getDeltaYears(dateTime48);
    net.ajaskey.common.DateTime dateTime50 = null;
    long long51 = dateTime46.getDeltaDays(dateTime50);
    boolean boolean52 = dateTime38.isLessThanOrEqual(dateTime46);
    boolean boolean53 = dateTime12.isGreaterThanOrEqual(dateTime46);
    int int54 = dateTime46.getHour();
    java.lang.String str55 = dateTime46.toString();
    boolean boolean56 = dateTime10.isLessThanOrEqual(dateTime46);
    net.ajaskey.common.DateTime dateTime58 = dateTime46.parse(
        "                                                                                                                                                                                                                                                                                                                                                                        35.00");
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertNotNull(date8);
    org.junit.Assert.assertEquals(date8.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str17 + "' != '" + "January" + "'", str17, "January");
    org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
    org.junit.Assert.assertEquals(
        "'" + str20 + "' != '" + "                                                                                               52.00" + "'", str20,
        "                                                                                               52.00");
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "January" + "'", str27, "January");
    org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
    org.junit.Assert.assertEquals("'" + str35 + "' != '" + "January" + "'", str35, "January");
    org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-1972.041095890411d) + "'", double49 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
    org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2 + "'", int54 == 2);
    org.junit.Assert.assertEquals("'" + str55 + "' != '" + "10-Apr-0002" + "'", str55, "10-Apr-0002");
    org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    org.junit.Assert.assertNull(dateTime58);
  }

  @Test
  public void test874() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test874");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    java.text.SimpleDateFormat simpleDateFormat7 = dateTime3.getSdf();
    java.util.Date date8 = null;
    dateTime3.set(date8);
    boolean boolean10 = dateTime3.isWeekday();
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat7);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
  }

  @Test
  public void test875() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test875");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    java.text.SimpleDateFormat simpleDateFormat7 = dateTime3.getSdf();
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(100L);
    double double14 = dateTime11.getDeltaYears(dateTime13);
    boolean boolean15 = dateTime13.isWeekday();
    net.ajaskey.common.DateTime dateTime18 = dateTime13.parse("31-Dec-1969", "January");
    net.ajaskey.common.DateTime dateTime19 = net.ajaskey.common.DateTime.copy(dateTime13);
    boolean boolean20 = dateTime3.sameDate(dateTime19);
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(100L);
    dateTime22.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str27 = dateTime22.getMonth();
    int int28 = dateTime22.getMs();
    net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime(100L);
    double double35 = dateTime32.getDeltaYears(dateTime34);
    java.text.SimpleDateFormat simpleDateFormat36 = dateTime32.getSdf();
    net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime(100L);
    double double43 = dateTime40.getDeltaYears(dateTime42);
    boolean boolean44 = dateTime42.isWeekday();
    net.ajaskey.common.DateTime dateTime47 = dateTime42.parse("31-Dec-1969", "January");
    net.ajaskey.common.DateTime dateTime48 = net.ajaskey.common.DateTime.copy(dateTime42);
    boolean boolean49 = dateTime32.sameDate(dateTime48);
    net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime(100L);
    double double56 = dateTime53.getDeltaYears(dateTime55);
    boolean boolean57 = dateTime48.isGreaterThan(dateTime53);
    int int58 = dateTime53.getDayOfWeek();
    boolean boolean59 = dateTime22.isGreaterThan(dateTime53);
    long long60 = dateTime19.getDeltaMilliSeconds(dateTime53);
    net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime(1, 7, 7);
    boolean boolean65 = dateTime53.sameDate(dateTime64);
    boolean boolean66 = dateTime64.isNull();
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat7);
    org.junit.Assert.assertTrue("'" + double14 + "' != '" + (-1972.041095890411d) + "'", double14 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    org.junit.Assert.assertNull(dateTime18);
    org.junit.Assert.assertNotNull(dateTime19);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "January" + "'", str27, "January");
    org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
    org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-1972.041095890411d) + "'", double35 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat36);
    org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-1972.041095890411d) + "'", double43 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    org.junit.Assert.assertNull(dateTime47);
    org.junit.Assert.assertNotNull(dateTime48);
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-1972.041095890411d) + "'", double56 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    org.junit.Assert.assertTrue("'" + int58 + "' != '" + 5 + "'", int58 == 5);
    org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
// flaky:         org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-62190298584776L) + "'", long60 == (-62190298584776L));
    org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
  }

  @Test
  public void test876() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test876");
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("         52",
        "                                                                                               52.00");
    java.lang.String str3 = dateTime2.toFullString();
    java.lang.String str4 = dateTime2.format();
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Invalid Time" + "'", str3, "Invalid Time");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "BAD-DATE-FORMAT" + "'", str4, "BAD-DATE-FORMAT");
  }

  @Test
  public void test877() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test877");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    int int2 = dateTime1.getMs();
    java.lang.String str3 = dateTime1.toString();
    int int4 = dateTime1.getMs();
    java.util.Calendar calendar5 = dateTime1.getCal();
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
    double double12 = dateTime9.getDeltaYears(dateTime11);
    boolean boolean13 = dateTime11.isWeekday();
    net.ajaskey.common.DateTime dateTime16 = dateTime11.parse("31-Dec-1969", "January");
    net.ajaskey.common.DateTime dateTime17 = net.ajaskey.common.DateTime.copy(dateTime11);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(100L);
    dateTime19.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str24 = dateTime19.getMonth();
    int int25 = dateTime19.getMs();
    java.lang.String str27 = dateTime19
        .format("                                                                                               52.00");
    net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(100L);
    dateTime29.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str34 = dateTime29.getMonth();
    long long35 = dateTime19.getDeltaDays(dateTime29);
    boolean boolean36 = dateTime17.isGreaterThan(dateTime29);
    int int37 = dateTime1.getYears(dateTime29);
    java.lang.String str39 = dateTime1.format("Thu 10-Apr-0002 14:03:20");
    net.ajaskey.common.DateTime dateTime42 = dateTime1.parse("Thu 10-Apr-0002 14:03:18",
        "                                                                                               97");
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "31-Dec-1969" + "'", str3, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
    org.junit.Assert.assertNotNull(calendar5);
    org.junit.Assert.assertEquals(calendar5.toString(),
        "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1972.041095890411d) + "'", double12 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNull(dateTime16);
    org.junit.Assert.assertNotNull(dateTime17);
    org.junit.Assert.assertEquals("'" + str24 + "' != '" + "January" + "'", str24, "January");
    org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
    org.junit.Assert.assertEquals(
        "'" + str27 + "' != '" + "                                                                                               52.00" + "'", str27,
        "                                                                                               52.00");
    org.junit.Assert.assertEquals("'" + str34 + "' != '" + "January" + "'", str34, "January");
    org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1870) + "'", int37 == (-1870));
    org.junit.Assert.assertEquals("'" + str39 + "' != '" + "BAD-DATE-FORMAT" + "'", str39, "BAD-DATE-FORMAT");
    org.junit.Assert.assertNull(dateTime42);
  }

  @Test
  public void test878() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test878");
    java.text.SimpleDateFormat simpleDateFormat5 = null;
    java.text.SimpleDateFormat simpleDateFormat6 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat5, simpleDateFormat6);
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat6);
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("Fri 31-Dec-0001 17:00:00", simpleDateFormat6);
    java.text.SimpleDateFormat simpleDateFormat11 = null;
    java.text.SimpleDateFormat simpleDateFormat16 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat18 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat19 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("", simpleDateFormat18, simpleDateFormat19);
    net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat16,
        simpleDateFormat19);
    java.text.SimpleDateFormat simpleDateFormat22 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime("", simpleDateFormat19, simpleDateFormat22);
    net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat22);
    net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime(
        "                                                                                                                                                                                                                                                                                                                                                                        35.00",
        simpleDateFormat22);
    net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(" 97.00", simpleDateFormat11, simpleDateFormat22);
    net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime("Wed 02-May-0014 14:03:29", simpleDateFormat6, simpleDateFormat11);
    net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 14:03:25", simpleDateFormat6);
    org.junit.Assert.assertNotNull(simpleDateFormat6);
    org.junit.Assert.assertNotNull(simpleDateFormat16);
    org.junit.Assert.assertNotNull(simpleDateFormat18);
    org.junit.Assert.assertNotNull(simpleDateFormat19);
    org.junit.Assert.assertNotNull(simpleDateFormat22);
  }

  @Test
  public void test879() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test879");
    java.lang.String str2 = net.ajaskey.common.Utils.fmt((double) 2020, (int) (short) 0);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Invalid fmt" + "'", str2, "Invalid fmt");
  }

  @Test
  public void test880() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test880");
    java.lang.String str2 = net.ajaskey.common.Utils.fmt((double) 1, 10);
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Invalid fmt" + "'", str2, "Invalid fmt");
  }

  @Test
  public void test881() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test881");
    java.util.zip.ZipOutputStream zipOutputStream1 = null;
    // The following exception was thrown during execution in test generation
    try {
      net.ajaskey.common.Utils.writeToZipFile("Thu 10-Apr-0002 14:03:29", zipOutputStream1);
      org.junit.Assert.fail(
          "Expected exception of type java.io.FileNotFoundException; message: Thu 10-Apr-0002 14:03:29 (The filename, directory name, or volume label syntax is incorrect)");
    }
    catch (java.io.FileNotFoundException e) {
      // Expected exception.
    }
  }

  @Test
  public void test882() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test882");
    java.text.SimpleDateFormat simpleDateFormat1 = null;
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
    net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double5 = dateTime2.getDeltaYears(dateTime4);
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean10 = dateTime4.isEqual(dateTime9);
    int int11 = dateTime4.getDayOfMonth();
    org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + int11 + "' != '" + 31 + "'", int11 == 31);
  }

  @Test
  public void test883() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test883");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) 8);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    java.text.SimpleDateFormat simpleDateFormat7 = null;
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat7);
    net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double11 = dateTime8.getDeltaYears(dateTime10);
    boolean boolean12 = dateTime5.isLessThan(dateTime10);
    int int13 = dateTime5.getHour();
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(100L);
    double double20 = dateTime17.getDeltaYears(dateTime19);
    int int21 = dateTime17.getHour();
    net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(100L);
    double double28 = dateTime25.getDeltaYears(dateTime27);
    boolean boolean29 = dateTime27.isWeekday();
    java.util.Date date30 = dateTime27.getTime();
    java.lang.String str31 = dateTime27.toString();
    net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime(100L);
    int int34 = dateTime33.getMs();
    net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime(100L);
    double double41 = dateTime38.getDeltaYears(dateTime40);
    java.text.SimpleDateFormat simpleDateFormat42 = dateTime38.getSdf();
    boolean boolean43 = dateTime33.isLessThanOrEqual(dateTime38);
    boolean boolean44 = dateTime27.isLessThan(dateTime38);
    java.lang.String str45 = dateTime27.toString();
    boolean boolean46 = dateTime17.sameDate(dateTime27);
    int int47 = dateTime5.getYears(dateTime17);
    double double48 = dateTime1.getDeltaYears(dateTime17);
    int int49 = dateTime17.getDayOfYear();
    org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
    org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-1972.041095890411d) + "'", double20 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
    org.junit.Assert.assertTrue("'" + double28 + "' != '" + (-1972.041095890411d) + "'", double28 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    org.junit.Assert.assertNotNull(date30);
    org.junit.Assert.assertEquals(date30.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str31 + "' != '" + "31-Dec-1969" + "'", str31, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
    org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-1972.041095890411d) + "'", double41 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat42);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    org.junit.Assert.assertEquals("'" + str45 + "' != '" + "31-Dec-1969" + "'", str45, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
    org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1972.041095890411d + "'", double48 == 1972.041095890411d);
    org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
  }

  @Test
  public void test884() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test884");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    java.text.SimpleDateFormat simpleDateFormat8 = null;
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double12 = dateTime9.getDeltaYears(dateTime11);
    boolean boolean13 = dateTime9.isWeekday();
    boolean boolean14 = dateTime3.sameDate(dateTime9);
    java.text.SimpleDateFormat simpleDateFormat16 = null;
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double20 = dateTime17.getDeltaYears(dateTime19);
    net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean25 = dateTime19.isEqual(dateTime24);
    dateTime3.set(dateTime24);
    net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double29 = dateTime24.getDeltaYears(dateTime28);
    int int30 = dateTime24.getSecond();
    int int31 = dateTime24.getHour();
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-1972.041095890411d) + "'", double29 == (-1972.041095890411d));
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 35 + "'", int30 == 35);
    org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
  }

  @Test
  public void test885() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test885");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (byte) 10, (int) (short) 100, 5);
  }

  @Test
  public void test886() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test886");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    boolean boolean7 = dateTime5.isWeekday();
    java.util.Date date8 = dateTime5.getTime();
    int int9 = dateTime5.getMinute();
    java.text.SimpleDateFormat simpleDateFormat11 = null;
    net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat11);
    net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double15 = dateTime12.getDeltaYears(dateTime14);
    net.ajaskey.common.DateTime dateTime16 = net.ajaskey.common.DateTime.copy(dateTime12);
    boolean boolean17 = net.ajaskey.common.Utils.sameDate(dateTime5, dateTime12);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(100L);
    int int20 = dateTime19.getMs();
    java.text.SimpleDateFormat simpleDateFormat21 = net.ajaskey.common.Utils.sdf;
    dateTime19.setSdf(simpleDateFormat21);
    int int23 = dateTime19.getDayOfWeek();
    net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(100L);
    double double30 = dateTime27.getDeltaYears(dateTime29);
    java.util.Calendar calendar31 = dateTime27.getCal();
    dateTime19.set(calendar31);
    java.text.SimpleDateFormat simpleDateFormat34 = null;
    net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat34);
    net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double38 = dateTime35.getDeltaYears(dateTime37);
    net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean43 = dateTime37.isEqual(dateTime42);
    java.util.Calendar calendar44 = dateTime37.getCal();
    net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(calendar44);
    dateTime19.set(calendar44);
    java.text.SimpleDateFormat simpleDateFormat49 = null;
    java.text.SimpleDateFormat simpleDateFormat50 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat49, simpleDateFormat50);
    net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat50);
    dateTime19.setSdf(simpleDateFormat50);
    long long54 = dateTime12.getDeltaMilliSeconds(dateTime19);
    java.text.SimpleDateFormat simpleDateFormat55 = dateTime19.getSdf();
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertNotNull(date8);
    org.junit.Assert.assertEquals(date8.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
    org.junit.Assert.assertNull(dateTime16);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat21);
    org.junit.Assert.assertTrue("'" + int23 + "' != '" + 4 + "'", int23 == 4);
    org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-1972.041095890411d) + "'", double30 == (-1972.041095890411d));
    org.junit.Assert.assertNotNull(calendar31);
// flaky:         org.junit.Assert.assertEquals(calendar31.toString(), "java.util.GregorianCalendar[time=-62190298584498,areFieldsSet=true,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=3,SECOND=35,MILLISECOND=502,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    org.junit.Assert.assertNotNull(calendar44);
    org.junit.Assert.assertEquals(calendar44.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertNotNull(simpleDateFormat50);
    org.junit.Assert.assertTrue("'" + long54 + "' != '" + 0L + "'", long54 == 0L);
    org.junit.Assert.assertNotNull(simpleDateFormat55);
  }

  @Test
  public void test887() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test887");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    int int2 = dateTime1.getMs();
    java.lang.String str3 = dateTime1.toString();
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int6 = dateTime5.getHour();
    int int7 = dateTime5.getDayOfMonth();
    dateTime1.set(dateTime5);
    boolean boolean9 = dateTime5.isNull();
    boolean boolean10 = dateTime5.isWeekday();
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "31-Dec-1969" + "'", str3, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 31 + "'", int7 == 31);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
  }

  @Test
  public void test888() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test888");
    java.lang.String str2 = net.ajaskey.common.Utils.lfmt(0L, 9);
    org.junit.Assert.assertEquals("'" + str2 + "' != '" + "        0" + "'", str2, "        0");
  }

  @Test
  public void test889() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test889");
    java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readTextFile("                              97", false);
    org.junit.Assert.assertNotNull(strList2);
  }

  @Test
  public void test890() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test890");
    net.ajaskey.common.DateTime dateTime0 = null;
    net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    java.text.SimpleDateFormat simpleDateFormat6 = null;
    net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat6);
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double10 = dateTime7.getDeltaYears(dateTime9);
    boolean boolean11 = dateTime4.isLessThan(dateTime9);
    int int12 = dateTime4.getHour();
    net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(100L);
    double double19 = dateTime16.getDeltaYears(dateTime18);
    java.text.SimpleDateFormat simpleDateFormat21 = null;
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat21);
    net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double25 = dateTime22.getDeltaYears(dateTime24);
    boolean boolean26 = dateTime22.isWeekday();
    boolean boolean27 = dateTime16.sameDate(dateTime22);
    java.text.SimpleDateFormat simpleDateFormat29 = null;
    net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat29);
    net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double33 = dateTime30.getDeltaYears(dateTime32);
    net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean38 = dateTime32.isEqual(dateTime37);
    dateTime16.set(dateTime37);
    boolean boolean40 = net.ajaskey.common.Utils.sameDate(dateTime4, dateTime37);
    java.lang.String str41 = dateTime37.toString();
    int int42 = dateTime37.getHour();
    boolean boolean43 = net.ajaskey.common.Utils.sameMonth(dateTime0, dateTime37);
    int int44 = dateTime37.getDayOfMonth();
    org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
    org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-1972.041095890411d) + "'", double19 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    org.junit.Assert.assertEquals("'" + str41 + "' != '" + "10-Apr-0002" + "'", str41, "10-Apr-0002");
    org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2 + "'", int42 == 2);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    org.junit.Assert.assertTrue("'" + int44 + "' != '" + 10 + "'", int44 == 10);
  }

  @Test
  public void test891() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test891");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    java.util.Date date7 = dateTime3.getTime();
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(date7);
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(date7);
    net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime(date7);
    net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime((long) 1);
    net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(100L);
    double double19 = dateTime16.getDeltaYears(dateTime18);
    boolean boolean20 = dateTime18.isWeekday();
    java.util.Date date21 = dateTime18.getTime();
    java.lang.String str22 = dateTime18.toString();
    net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime(100L);
    int int25 = dateTime24.getMs();
    net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(100L);
    double double32 = dateTime29.getDeltaYears(dateTime31);
    java.text.SimpleDateFormat simpleDateFormat33 = dateTime29.getSdf();
    boolean boolean34 = dateTime24.isLessThanOrEqual(dateTime29);
    boolean boolean35 = dateTime18.isLessThan(dateTime29);
    dateTime12.set(dateTime18);
    dateTime12.add((int) ' ', 2);
    net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(100L);
    double double46 = dateTime43.getDeltaYears(dateTime45);
    java.util.Date date47 = dateTime43.getTime();
    net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime(date47);
    net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime(date47);
    net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime(12, 4, (-1));
    int int54 = dateTime49.getYears(dateTime53);
    long long55 = dateTime12.getDeltaMilliSeconds(dateTime53);
    boolean boolean56 = dateTime10.isGreaterThanOrEqual(dateTime12);
    net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime(100L);
    int int59 = dateTime58.getMs();
    java.lang.String str60 = dateTime58.toString();
    int int61 = dateTime58.getMs();
    java.util.Calendar calendar62 = dateTime58.getCal();
    net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime(dateTime58);
    java.util.Calendar calendar64 = dateTime58.getCal();
    dateTime12.set(calendar64);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertNotNull(date7);
// flaky:         org.junit.Assert.assertEquals(date7.toString(), "Thu Apr 10 14:03:35 MST 2");
    org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-1972.041095890411d) + "'", double19 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    org.junit.Assert.assertNotNull(date21);
    org.junit.Assert.assertEquals(date21.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str22 + "' != '" + "31-Dec-1969" + "'", str22, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
    org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-1972.041095890411d) + "'", double32 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat33);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-1972.041095890411d) + "'", double46 == (-1972.041095890411d));
    org.junit.Assert.assertNotNull(date47);
// flaky:         org.junit.Assert.assertEquals(date47.toString(), "Thu Apr 10 14:03:35 MST 2");
    org.junit.Assert.assertTrue("'" + int54 + "' != '" + 10 + "'", int54 == 10);
// flaky:         org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-61778343384505L) + "'", long55 == (-61778343384505L));
    org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    org.junit.Assert.assertTrue("'" + int59 + "' != '" + 100 + "'", int59 == 100);
    org.junit.Assert.assertEquals("'" + str60 + "' != '" + "31-Dec-1969" + "'", str60, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
    org.junit.Assert.assertNotNull(calendar62);
    org.junit.Assert.assertEquals(calendar62.toString(),
        "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertNotNull(calendar64);
    org.junit.Assert.assertEquals(calendar64.toString(),
        "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
  }

  @Test
  public void test892() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test892");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    dateTime1.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str6 = dateTime1.getMonth();
    int int7 = dateTime1.getMs();
    int int8 = dateTime1.getHour();
    net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime(100L);
    int int11 = dateTime10.getMs();
    java.text.SimpleDateFormat simpleDateFormat12 = net.ajaskey.common.Utils.sdf;
    dateTime10.setSdf(simpleDateFormat12);
    java.lang.String str14 = dateTime10.toFullString();
    java.lang.String str15 = dateTime10.format();
    boolean boolean16 = dateTime10.isWeekday();
    boolean boolean17 = net.ajaskey.common.Utils.sameDate(dateTime1, dateTime10);
    int int18 = dateTime10.getYear();
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "January" + "'", str6, "January");
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
    org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat12);
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str14, "Wed 31-Dec-1969 17:00:00");
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "31-Dec-1969" + "'", str15, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1969 + "'", int18 == 1969);
  }

  @Test
  public void test893() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test893");
    java.lang.String str2 = net.ajaskey.common.Utils.fmt((double) 1, 3);
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Invalid fmt" + "'", str2, "Invalid fmt");
  }

  @Test
  public void test894() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test894");
    java.text.SimpleDateFormat simpleDateFormat3 = null;
    java.text.SimpleDateFormat simpleDateFormat8 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat10 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat11 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime("", simpleDateFormat10, simpleDateFormat11);
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat8,
        simpleDateFormat11);
    java.text.SimpleDateFormat simpleDateFormat14 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime("", simpleDateFormat11, simpleDateFormat14);
    net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat14);
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(
        "                                                                                                                                                                                                                                                                                                                                                                        35.00",
        simpleDateFormat14);
    net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(" 97.00", simpleDateFormat3, simpleDateFormat14);
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime(100L);
    int int21 = dateTime20.getMs();
    java.text.SimpleDateFormat simpleDateFormat22 = net.ajaskey.common.Utils.sdf;
    dateTime20.setSdf(simpleDateFormat22);
    net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime(
        "JanuaryJanuaryJanuary                                                                                               52.00Januaryhi!January",
        simpleDateFormat3, simpleDateFormat22);
    net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("2", simpleDateFormat3);
    java.lang.String str26 = dateTime25.getMonth();
    org.junit.Assert.assertNotNull(simpleDateFormat8);
    org.junit.Assert.assertNotNull(simpleDateFormat10);
    org.junit.Assert.assertNotNull(simpleDateFormat11);
    org.junit.Assert.assertNotNull(simpleDateFormat14);
    org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat22);
    org.junit.Assert.assertEquals("'" + str26 + "' != '" + "UNKNOWN" + "'", str26, "UNKNOWN");
  }

  @Test
  public void test895() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test895");
    java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readTextFile("hi!", false);
    java.lang.String str3 = net.ajaskey.common.TextUtils.toString(strList2);
    java.lang.String str4 = net.ajaskey.common.TextUtils.toString(strList2);
    java.lang.String str5 = net.ajaskey.common.TextUtils.toString(strList2);
    java.lang.String str6 = net.ajaskey.common.TextUtils.toString(strList2);
    org.junit.Assert.assertNotNull(strList2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
    org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
  }

  @Test
  public void test896() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test896");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) 2);
    java.text.SimpleDateFormat simpleDateFormat2 = dateTime1.getSdf();
    net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    java.text.SimpleDateFormat simpleDateFormat8 = null;
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double12 = dateTime9.getDeltaYears(dateTime11);
    boolean boolean13 = dateTime6.isLessThan(dateTime11);
    int int14 = dateTime6.getHour();
    long long15 = dateTime1.getDeltaDays(dateTime6);
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int18 = dateTime17.getHour();
    int int19 = dateTime17.getDayOfMonth();
    int int20 = dateTime17.getYear();
    net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(dateTime17);
    java.lang.String str22 = dateTime17.format();
    boolean boolean23 = dateTime1.isGreaterThan(dateTime17);
    java.text.SimpleDateFormat simpleDateFormat27 = null;
    java.text.SimpleDateFormat simpleDateFormat28 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat27, simpleDateFormat28);
    net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat28);
    net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime("         14", simpleDateFormat28);
    boolean boolean32 = net.ajaskey.common.Utils.sameDate(dateTime17, dateTime31);
    net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime(100L);
    double double39 = dateTime36.getDeltaYears(dateTime38);
    java.text.SimpleDateFormat simpleDateFormat40 = dateTime36.getSdf();
    net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime(100L);
    double double47 = dateTime44.getDeltaYears(dateTime46);
    boolean boolean48 = dateTime46.isWeekday();
    net.ajaskey.common.DateTime dateTime51 = dateTime46.parse("31-Dec-1969", "January");
    net.ajaskey.common.DateTime dateTime52 = net.ajaskey.common.DateTime.copy(dateTime46);
    boolean boolean53 = dateTime36.sameDate(dateTime52);
    net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int56 = dateTime55.getDayOfWeek();
    int int57 = dateTime52.getYears(dateTime55);
    java.lang.String str58 = dateTime55.toString();
    net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime(100L);
    double double65 = dateTime62.getDeltaYears(dateTime64);
    boolean boolean66 = dateTime64.isWeekday();
    java.util.Date date67 = dateTime64.getTime();
    net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime(date67);
    net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime(date67);
    dateTime55.set(date67);
    long long71 = dateTime17.getDeltaDays(dateTime55);
    org.junit.Assert.assertNull(simpleDateFormat2);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
    org.junit.Assert.assertTrue("'" + long15 + "' != '" + 719795L + "'", long15 == 719795L);
    org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
    org.junit.Assert.assertTrue("'" + int19 + "' != '" + 31 + "'", int19 == 31);
    org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1969 + "'", int20 == 1969);
    org.junit.Assert.assertEquals("'" + str22 + "' != '" + "BAD-DATE-FORMAT" + "'", str22, "BAD-DATE-FORMAT");
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    org.junit.Assert.assertNotNull(simpleDateFormat28);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-1972.041095890411d) + "'", double39 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat40);
    org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-1972.041095890411d) + "'", double47 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    org.junit.Assert.assertNull(dateTime51);
    org.junit.Assert.assertNotNull(dateTime52);
    org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    org.junit.Assert.assertTrue("'" + int56 + "' != '" + 4 + "'", int56 == 4);
    org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
    org.junit.Assert.assertEquals("'" + str58 + "' != '" + "31-Dec-1969" + "'", str58, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-1972.041095890411d) + "'", double65 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
    org.junit.Assert.assertNotNull(date67);
    org.junit.Assert.assertEquals(date67.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertTrue("'" + long71 + "' != '" + 0L + "'", long71 == 0L);
  }

  @Test
  public void test897() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test897");
    net.ajaskey.common.DateTime dateTime0 = null;
    java.text.SimpleDateFormat simpleDateFormat2 = null;
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat2);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    boolean boolean7 = dateTime3.isWeekday();
    java.lang.String str8 = dateTime3.getDay();
    net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(100L);
    double double15 = dateTime12.getDeltaYears(dateTime14);
    java.text.SimpleDateFormat simpleDateFormat16 = dateTime12.getSdf();
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(100L);
    double double23 = dateTime20.getDeltaYears(dateTime22);
    boolean boolean24 = dateTime22.isWeekday();
    net.ajaskey.common.DateTime dateTime27 = dateTime22.parse("31-Dec-1969", "January");
    net.ajaskey.common.DateTime dateTime28 = net.ajaskey.common.DateTime.copy(dateTime22);
    boolean boolean29 = dateTime12.sameDate(dateTime28);
    boolean boolean30 = dateTime3.isEqual(dateTime12);
    java.text.SimpleDateFormat simpleDateFormat32 = null;
    net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat32);
    net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double36 = dateTime33.getDeltaYears(dateTime35);
    boolean boolean37 = dateTime33.isWeekday();
    net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime(100L);
    int int40 = dateTime39.getMs();
    java.lang.String str41 = dateTime39.toString();
    int int42 = dateTime39.getMs();
    java.util.Calendar calendar43 = dateTime39.getCal();
    dateTime33.set(calendar43);
    boolean boolean45 = dateTime3.isLessThanOrEqual(dateTime33);
    boolean boolean46 = net.ajaskey.common.Utils.sameDate(dateTime0, dateTime33);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UNKNOWN" + "'", str8, "UNKNOWN");
    org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-1972.041095890411d) + "'", double15 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat16);
    org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-1972.041095890411d) + "'", double23 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    org.junit.Assert.assertNull(dateTime27);
    org.junit.Assert.assertNotNull(dateTime28);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
    org.junit.Assert.assertEquals("'" + str41 + "' != '" + "31-Dec-1969" + "'", str41, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
    org.junit.Assert.assertNotNull(calendar43);
    org.junit.Assert.assertEquals(calendar43.toString(),
        "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
  }

  @Test
  public void test898() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test898");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    java.text.SimpleDateFormat simpleDateFormat8 = null;
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double12 = dateTime9.getDeltaYears(dateTime11);
    boolean boolean13 = dateTime9.isWeekday();
    boolean boolean14 = dateTime3.sameDate(dateTime9);
    java.text.SimpleDateFormat simpleDateFormat16 = null;
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double20 = dateTime17.getDeltaYears(dateTime19);
    net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean25 = dateTime19.isEqual(dateTime24);
    dateTime3.set(dateTime24);
    java.text.SimpleDateFormat simpleDateFormat28 = null;
    net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat28);
    net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double32 = dateTime29.getDeltaYears(dateTime31);
    net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean37 = dateTime31.isEqual(dateTime36);
    java.util.Calendar calendar38 = dateTime31.getCal();
    java.lang.String str39 = dateTime31.toFullString();
    int int40 = dateTime31.getHour();
    boolean boolean41 = net.ajaskey.common.Utils.sameDate(dateTime3, dateTime31);
    net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(3, 100, 10);
    long long46 = dateTime31.getDeltaMilliSeconds(dateTime45);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    org.junit.Assert.assertNotNull(calendar38);
    org.junit.Assert.assertEquals(calendar38.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str39, "Wed 31-Dec-1969 17:00:00");
    org.junit.Assert.assertTrue("'" + int40 + "' != '" + 5 + "'", int40 == 5);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-61809015384287L) + "'", long46 == (-61809015384287L));
  }

  @Test
  public void test899() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test899");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    int int2 = dateTime1.getMs();
    net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
    double double9 = dateTime6.getDeltaYears(dateTime8);
    java.text.SimpleDateFormat simpleDateFormat10 = dateTime6.getSdf();
    boolean boolean11 = dateTime1.isLessThanOrEqual(dateTime6);
    java.lang.String str12 = dateTime1.getDay();
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime();
    java.text.SimpleDateFormat simpleDateFormat15 = null;
    net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat15);
    net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double19 = dateTime16.getDeltaYears(dateTime18);
    int int20 = dateTime18.getDayOfYear();
    boolean boolean21 = dateTime13.isLessThan(dateTime18);
    java.text.SimpleDateFormat simpleDateFormat25 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat27 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat28 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime("", simpleDateFormat27, simpleDateFormat28);
    net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat25,
        simpleDateFormat28);
    java.text.SimpleDateFormat simpleDateFormat32 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat33 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime("", simpleDateFormat32, simpleDateFormat33);
    net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("", simpleDateFormat28, simpleDateFormat33);
    java.text.SimpleDateFormat simpleDateFormat38 = null;
    java.text.SimpleDateFormat simpleDateFormat39 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat38, simpleDateFormat39);
    net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat39);
    net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime("Fri 31-Dec-0001 17:00:00", simpleDateFormat28, simpleDateFormat39);
    net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime((long) 2);
    java.text.SimpleDateFormat simpleDateFormat45 = dateTime44.getSdf();
    net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime(100L);
    int int48 = dateTime47.getMs();
    net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime(100L);
    double double55 = dateTime52.getDeltaYears(dateTime54);
    java.text.SimpleDateFormat simpleDateFormat56 = dateTime52.getSdf();
    boolean boolean57 = dateTime47.isLessThanOrEqual(dateTime52);
    java.lang.String str58 = dateTime47.getDay();
    java.text.SimpleDateFormat simpleDateFormat62 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat64 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat65 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime("", simpleDateFormat64, simpleDateFormat65);
    net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat62,
        simpleDateFormat65);
    java.text.SimpleDateFormat simpleDateFormat69 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat70 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime("", simpleDateFormat69, simpleDateFormat70);
    net.ajaskey.common.DateTime dateTime72 = new net.ajaskey.common.DateTime("", simpleDateFormat65, simpleDateFormat70);
    java.text.SimpleDateFormat simpleDateFormat75 = null;
    java.text.SimpleDateFormat simpleDateFormat76 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat75, simpleDateFormat76);
    net.ajaskey.common.DateTime dateTime78 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat76);
    net.ajaskey.common.DateTime dateTime79 = new net.ajaskey.common.DateTime("Fri 31-Dec-0001 17:00:00", simpleDateFormat65, simpleDateFormat76);
    dateTime47.setSdf(simpleDateFormat76);
    double double81 = dateTime44.getDeltaYears(dateTime47);
    boolean boolean82 = dateTime42.isLessThanOrEqual(dateTime47);
    long long83 = dateTime18.getDeltaDays(dateTime47);
    java.text.SimpleDateFormat simpleDateFormat86 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat88 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat89 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime90 = new net.ajaskey.common.DateTime("", simpleDateFormat88, simpleDateFormat89);
    net.ajaskey.common.DateTime dateTime91 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat86,
        simpleDateFormat89);
    java.text.SimpleDateFormat simpleDateFormat92 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime93 = new net.ajaskey.common.DateTime("", simpleDateFormat89, simpleDateFormat92);
    dateTime18.setSdf(simpleDateFormat89);
    long long95 = dateTime1.getDeltaDays(dateTime18);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Wednesday" + "'", str12, "Wednesday");
    org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
    org.junit.Assert.assertTrue("'" + int20 + "' != '" + 365 + "'", int20 == 365);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    org.junit.Assert.assertNotNull(simpleDateFormat25);
    org.junit.Assert.assertNotNull(simpleDateFormat27);
    org.junit.Assert.assertNotNull(simpleDateFormat28);
    org.junit.Assert.assertNotNull(simpleDateFormat32);
    org.junit.Assert.assertNotNull(simpleDateFormat33);
    org.junit.Assert.assertNotNull(simpleDateFormat39);
    org.junit.Assert.assertNull(simpleDateFormat45);
    org.junit.Assert.assertTrue("'" + int48 + "' != '" + 100 + "'", int48 == 100);
    org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-1972.041095890411d) + "'", double55 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat56);
    org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Wednesday" + "'", str58, "Wednesday");
    org.junit.Assert.assertNotNull(simpleDateFormat62);
    org.junit.Assert.assertNotNull(simpleDateFormat64);
    org.junit.Assert.assertNotNull(simpleDateFormat65);
    org.junit.Assert.assertNotNull(simpleDateFormat69);
    org.junit.Assert.assertNotNull(simpleDateFormat70);
    org.junit.Assert.assertNotNull(simpleDateFormat76);
    org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    org.junit.Assert.assertTrue("'" + long83 + "' != '" + 0L + "'", long83 == 0L);
    org.junit.Assert.assertNotNull(simpleDateFormat86);
    org.junit.Assert.assertNotNull(simpleDateFormat88);
    org.junit.Assert.assertNotNull(simpleDateFormat89);
    org.junit.Assert.assertNotNull(simpleDateFormat92);
    org.junit.Assert.assertTrue("'" + long95 + "' != '" + 0L + "'", long95 == 0L);
  }

  @Test
  public void test900() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test900");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(13, (int) (short) -1, 7);
  }

  @Test
  public void test901() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test901");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    int int2 = dateTime1.getMs();
    net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
    double double9 = dateTime6.getDeltaYears(dateTime8);
    java.text.SimpleDateFormat simpleDateFormat10 = dateTime6.getSdf();
    boolean boolean11 = dateTime1.isLessThanOrEqual(dateTime6);
    net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(100L);
    double double18 = dateTime15.getDeltaYears(dateTime17);
    java.text.SimpleDateFormat simpleDateFormat20 = null;
    net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat20);
    net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double24 = dateTime21.getDeltaYears(dateTime23);
    dateTime23.set(0, 12, 0);
    boolean boolean29 = net.ajaskey.common.Utils.sameMonth(dateTime15, dateTime23);
    int int30 = dateTime1.getYears(dateTime15);
    net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int33 = dateTime32.getHour();
    int int34 = dateTime32.getDayOfMonth();
    int int35 = dateTime32.getYear();
    net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime(dateTime32);
    net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime(100L);
    double double43 = dateTime40.getDeltaYears(dateTime42);
    java.text.SimpleDateFormat simpleDateFormat45 = null;
    net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat45);
    net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double49 = dateTime46.getDeltaYears(dateTime48);
    boolean boolean50 = dateTime46.isWeekday();
    boolean boolean51 = dateTime40.sameDate(dateTime46);
    java.text.SimpleDateFormat simpleDateFormat53 = null;
    net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat53);
    net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double57 = dateTime54.getDeltaYears(dateTime56);
    net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean62 = dateTime56.isEqual(dateTime61);
    dateTime40.set(dateTime61);
    net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double66 = dateTime61.getDeltaYears(dateTime65);
    java.text.SimpleDateFormat simpleDateFormat68 = null;
    net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat68);
    net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double72 = dateTime69.getDeltaYears(dateTime71);
    boolean boolean73 = dateTime69.isWeekday();
    net.ajaskey.common.DateTime dateTime75 = new net.ajaskey.common.DateTime(100L);
    int int76 = dateTime75.getMs();
    java.lang.String str77 = dateTime75.toString();
    int int78 = dateTime75.getMs();
    java.util.Calendar calendar79 = dateTime75.getCal();
    dateTime69.set(calendar79);
    dateTime61.set(calendar79);
    dateTime36.set(calendar79);
    java.text.SimpleDateFormat simpleDateFormat83 = net.ajaskey.common.Utils.sdf;
    dateTime36.setSdf(simpleDateFormat83);
    double double85 = dateTime15.getDeltaYears(dateTime36);
    java.lang.Class<?> wildcardClass86 = dateTime15.getClass();
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1972.041095890411d) + "'", double18 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1968) + "'", int30 == (-1968));
    org.junit.Assert.assertTrue("'" + int33 + "' != '" + 5 + "'", int33 == 5);
    org.junit.Assert.assertTrue("'" + int34 + "' != '" + 31 + "'", int34 == 31);
    org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1969 + "'", int35 == 1969);
    org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-1972.041095890411d) + "'", double43 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-1972.041095890411d) + "'", double66 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    org.junit.Assert.assertTrue("'" + int76 + "' != '" + 100 + "'", int76 == 100);
    org.junit.Assert.assertEquals("'" + str77 + "' != '" + "31-Dec-1969" + "'", str77, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int78 + "' != '" + 100 + "'", int78 == 100);
    org.junit.Assert.assertNotNull(calendar79);
    org.junit.Assert.assertEquals(calendar79.toString(),
        "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertNotNull(simpleDateFormat83);
    org.junit.Assert.assertTrue("'" + double85 + "' != '" + (-1972.041095890411d) + "'", double85 == (-1972.041095890411d));
    org.junit.Assert.assertNotNull(wildcardClass86);
  }

  @Test
  public void test902() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test902");
    java.text.SimpleDateFormat simpleDateFormat1 = null;
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
    net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double5 = dateTime2.getDeltaYears(dateTime4);
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean10 = dateTime4.isEqual(dateTime9);
    java.text.SimpleDateFormat simpleDateFormat12 = null;
    java.text.SimpleDateFormat simpleDateFormat13 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat12, simpleDateFormat13);
    net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime(100L);
    double double21 = dateTime18.getDeltaYears(dateTime20);
    boolean boolean22 = dateTime20.isWeekday();
    java.util.Date date23 = dateTime20.getTime();
    java.lang.String str24 = dateTime20.toString();
    net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(100L);
    int int27 = dateTime26.getMs();
    net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime(100L);
    double double34 = dateTime31.getDeltaYears(dateTime33);
    java.text.SimpleDateFormat simpleDateFormat35 = dateTime31.getSdf();
    boolean boolean36 = dateTime26.isLessThanOrEqual(dateTime31);
    boolean boolean37 = dateTime20.isLessThan(dateTime31);
    java.lang.String str38 = dateTime20.toString();
    long long39 = dateTime14.getDeltaMilliSeconds(dateTime20);
    net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(100L);
    double double46 = dateTime43.getDeltaYears(dateTime45);
    boolean boolean47 = dateTime45.isWeekday();
    java.util.Date date48 = dateTime45.getTime();
    int int49 = dateTime45.getMinute();
    boolean boolean50 = dateTime14.sameDate(dateTime45);
    int int51 = dateTime4.getYears(dateTime45);
    int int52 = dateTime45.getDayOfWeek();
    java.lang.String str53 = dateTime45.toString();
    net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime((long) 2);
    java.text.SimpleDateFormat simpleDateFormat56 = dateTime55.getSdf();
    net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    java.text.SimpleDateFormat simpleDateFormat62 = null;
    net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat62);
    net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double66 = dateTime63.getDeltaYears(dateTime65);
    boolean boolean67 = dateTime60.isLessThan(dateTime65);
    int int68 = dateTime60.getHour();
    long long69 = dateTime55.getDeltaDays(dateTime60);
    java.lang.String str70 = dateTime55.toString();
    int int71 = dateTime55.getYear();
    boolean boolean72 = dateTime45.isLessThanOrEqual(dateTime55);
    net.ajaskey.common.DateTime dateTime74 = new net.ajaskey.common.DateTime(100L);
    int int75 = dateTime74.getMs();
    java.lang.String str76 = dateTime74.toString();
    net.ajaskey.common.DateTime dateTime78 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int79 = dateTime78.getHour();
    int int80 = dateTime78.getDayOfMonth();
    dateTime74.set(dateTime78);
    int int82 = dateTime78.getMs();
    int int83 = dateTime55.getYears(dateTime78);
    int int84 = dateTime78.getYear();
    org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertNotNull(simpleDateFormat13);
    org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-1972.041095890411d) + "'", double21 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    org.junit.Assert.assertNotNull(date23);
    org.junit.Assert.assertEquals(date23.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str24 + "' != '" + "31-Dec-1969" + "'", str24, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
    org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-1972.041095890411d) + "'", double34 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat35);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    org.junit.Assert.assertEquals("'" + str38 + "' != '" + "31-Dec-1969" + "'", str38, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
    org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-1972.041095890411d) + "'", double46 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    org.junit.Assert.assertNotNull(date48);
    org.junit.Assert.assertEquals(date48.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
    org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
    org.junit.Assert.assertTrue("'" + int52 + "' != '" + 4 + "'", int52 == 4);
    org.junit.Assert.assertEquals("'" + str53 + "' != '" + "31-Dec-1969" + "'", str53, "31-Dec-1969");
    org.junit.Assert.assertNull(simpleDateFormat56);
    org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
    org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2 + "'", int68 == 2);
    org.junit.Assert.assertTrue("'" + long69 + "' != '" + 719795L + "'", long69 == 719795L);
    org.junit.Assert.assertEquals("'" + str70 + "' != '" + "31-Dec-1969" + "'", str70, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1969 + "'", int71 == 1969);
    org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    org.junit.Assert.assertTrue("'" + int75 + "' != '" + 100 + "'", int75 == 100);
    org.junit.Assert.assertEquals("'" + str76 + "' != '" + "31-Dec-1969" + "'", str76, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int79 + "' != '" + 5 + "'", int79 == 5);
    org.junit.Assert.assertTrue("'" + int80 + "' != '" + 31 + "'", int80 == 31);
    org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
    org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
    org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1969 + "'", int84 == 1969);
  }

  @Test
  public void test903() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test903");
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("31-Dec-1969", "Thu 10-Apr-0002 14:03:14");
    java.util.Date date3 = dateTime2.getTime();
    java.lang.String str5 = dateTime2.format("10-Apr-0002");
    java.text.SimpleDateFormat simpleDateFormat7 = null;
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat7);
    net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double11 = dateTime8.getDeltaYears(dateTime10);
    boolean boolean12 = dateTime8.isWeekday();
    net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(100L);
    int int15 = dateTime14.getMs();
    java.lang.String str16 = dateTime14.toString();
    int int17 = dateTime14.getMs();
    java.util.Calendar calendar18 = dateTime14.getCal();
    dateTime8.set(calendar18);
    dateTime2.set(calendar18);
    int int21 = dateTime2.getYear();
    org.junit.Assert.assertNull(date3);
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "BAD-DATE-FORMAT" + "'", str5, "BAD-DATE-FORMAT");
    org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
    org.junit.Assert.assertEquals("'" + str16 + "' != '" + "31-Dec-1969" + "'", str16, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
    org.junit.Assert.assertNotNull(calendar18);
    org.junit.Assert.assertEquals(calendar18.toString(),
        "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1969 + "'", int21 == 1969);
  }

  @Test
  public void test904() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test904");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    boolean boolean7 = dateTime5.isWeekday();
    java.util.Date date8 = dateTime5.getTime();
    int int9 = dateTime5.getMinute();
    int int10 = dateTime5.getDayOfYear();
    net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(100L);
    double double17 = dateTime14.getDeltaYears(dateTime16);
    java.text.SimpleDateFormat simpleDateFormat18 = dateTime14.getSdf();
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime(100L);
    double double25 = dateTime22.getDeltaYears(dateTime24);
    boolean boolean26 = dateTime24.isWeekday();
    net.ajaskey.common.DateTime dateTime29 = dateTime24.parse("31-Dec-1969", "January");
    net.ajaskey.common.DateTime dateTime30 = net.ajaskey.common.DateTime.copy(dateTime24);
    boolean boolean31 = dateTime14.sameDate(dateTime30);
    net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int34 = dateTime33.getDayOfWeek();
    int int35 = dateTime30.getYears(dateTime33);
    net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(100L);
    int int38 = dateTime37.getMs();
    java.lang.String str39 = dateTime37.toString();
    net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(100L);
    double double46 = dateTime43.getDeltaYears(dateTime45);
    java.text.SimpleDateFormat simpleDateFormat48 = null;
    net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat48);
    net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double52 = dateTime49.getDeltaYears(dateTime51);
    boolean boolean53 = dateTime49.isWeekday();
    boolean boolean54 = dateTime43.sameDate(dateTime49);
    java.text.SimpleDateFormat simpleDateFormat56 = null;
    net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat56);
    net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double60 = dateTime57.getDeltaYears(dateTime59);
    net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean65 = dateTime59.isEqual(dateTime64);
    dateTime43.set(dateTime64);
    boolean boolean67 = net.ajaskey.common.Utils.sameDate(dateTime37, dateTime43);
    long long68 = dateTime30.getDeltaMilliSeconds(dateTime43);
    boolean boolean69 = dateTime5.isGreaterThanOrEqual(dateTime43);
    java.text.SimpleDateFormat simpleDateFormat70 = dateTime5.getSdf();
    java.text.SimpleDateFormat simpleDateFormat74 = null;
    java.text.SimpleDateFormat simpleDateFormat75 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime76 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat74, simpleDateFormat75);
    net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat75);
    net.ajaskey.common.DateTime dateTime79 = new net.ajaskey.common.DateTime(0L);
    int int80 = dateTime79.getMs();
    java.text.SimpleDateFormat simpleDateFormat82 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat84 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat85 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime86 = new net.ajaskey.common.DateTime("", simpleDateFormat84, simpleDateFormat85);
    net.ajaskey.common.DateTime dateTime87 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat82,
        simpleDateFormat85);
    dateTime79.setSdf(simpleDateFormat85);
    net.ajaskey.common.DateTime dateTime89 = new net.ajaskey.common.DateTime("UNKNOWN", simpleDateFormat75, simpleDateFormat85);
    net.ajaskey.common.DateTime dateTime91 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int92 = dateTime91.getHour();
    int int93 = dateTime91.getDayOfMonth();
    int int94 = dateTime91.getYear();
    java.util.Calendar calendar95 = dateTime91.getCal();
    dateTime89.set(calendar95);
    dateTime5.set(calendar95);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertNotNull(date8);
    org.junit.Assert.assertEquals(date8.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    org.junit.Assert.assertTrue("'" + int10 + "' != '" + 365 + "'", int10 == 365);
    org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-1972.041095890411d) + "'", double17 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat18);
    org.junit.Assert.assertTrue("'" + double25 + "' != '" + (-1972.041095890411d) + "'", double25 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    org.junit.Assert.assertNull(dateTime29);
    org.junit.Assert.assertNotNull(dateTime30);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    org.junit.Assert.assertTrue("'" + int34 + "' != '" + 4 + "'", int34 == 4);
    org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
    org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
    org.junit.Assert.assertEquals("'" + str39 + "' != '" + "31-Dec-1969" + "'", str39, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-1972.041095890411d) + "'", double46 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long68 + "' != '" + (-62190298584252L) + "'", long68 == (-62190298584252L));
    org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
    org.junit.Assert.assertNull(simpleDateFormat70);
    org.junit.Assert.assertNotNull(simpleDateFormat75);
    org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
    org.junit.Assert.assertNotNull(simpleDateFormat82);
    org.junit.Assert.assertNotNull(simpleDateFormat84);
    org.junit.Assert.assertNotNull(simpleDateFormat85);
    org.junit.Assert.assertTrue("'" + int92 + "' != '" + 5 + "'", int92 == 5);
    org.junit.Assert.assertTrue("'" + int93 + "' != '" + 31 + "'", int93 == 31);
    org.junit.Assert.assertTrue("'" + int94 + "' != '" + 1969 + "'", int94 == 1969);
    org.junit.Assert.assertNotNull(calendar95);
    org.junit.Assert.assertEquals(calendar95.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
  }

  @Test
  public void test905() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test905");
    net.ajaskey.common.DateTime dateTime0 = new net.ajaskey.common.DateTime();
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int3 = dateTime2.getHour();
    int int4 = dateTime2.getDayOfMonth();
    java.lang.String str5 = dateTime2.getDay();
    java.text.SimpleDateFormat simpleDateFormat7 = null;
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat7);
    net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double11 = dateTime8.getDeltaYears(dateTime10);
    int int12 = dateTime10.getDayOfYear();
    java.lang.String str13 = dateTime10.format();
    int int14 = dateTime2.getYears(dateTime10);
    long long15 = dateTime0.getDeltaDays(dateTime2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 5 + "'", int3 == 5);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 31 + "'", int4 == 31);
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Wednesday" + "'", str5, "Wednesday");
    org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
    org.junit.Assert.assertTrue("'" + int12 + "' != '" + 365 + "'", int12 == 365);
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "BAD-DATE-FORMAT" + "'", str13, "BAD-DATE-FORMAT");
    org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    org.junit.Assert.assertTrue("'" + long15 + "' != '" + 18438L + "'", long15 == 18438L);
  }

  @Test
  public void test906() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test906");
    java.util.zip.ZipOutputStream zipOutputStream1 = null;
    // The following exception was thrown during execution in test generation
    try {
      net.ajaskey.common.Utils.writeToZipFile("Wed 02-May-0014 14:03:28", zipOutputStream1);
      org.junit.Assert.fail(
          "Expected exception of type java.io.FileNotFoundException; message: Wed 02-May-0014 14:03:28 (The filename, directory name, or volume label syntax is incorrect)");
    }
    catch (java.io.FileNotFoundException e) {
      // Expected exception.
    }
  }

  @Test
  public void test907() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test907");
    java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat6 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat7 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime("", simpleDateFormat6, simpleDateFormat7);
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat4, simpleDateFormat7);
    net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat4);
    java.text.SimpleDateFormat simpleDateFormat14 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat16 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat17 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime("", simpleDateFormat16, simpleDateFormat17);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat14,
        simpleDateFormat17);
    java.text.SimpleDateFormat simpleDateFormat20 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("", simpleDateFormat17, simpleDateFormat20);
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat20);
    net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat4, simpleDateFormat20);
    java.text.SimpleDateFormat simpleDateFormat28 = null;
    java.text.SimpleDateFormat simpleDateFormat29 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat28, simpleDateFormat29);
    net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat29);
    net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat29);
    net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat29);
    net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime("", simpleDateFormat20, simpleDateFormat29);
    net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime(100L);
    double double41 = dateTime38.getDeltaYears(dateTime40);
    boolean boolean42 = dateTime40.isWeekday();
    net.ajaskey.common.DateTime dateTime45 = dateTime40.parse("31-Dec-1969", "January");
    net.ajaskey.common.DateTime dateTime46 = net.ajaskey.common.DateTime.copy(dateTime40);
    dateTime46.set((int) ' ', 1970, (int) (short) -1);
    net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int53 = dateTime52.getHour();
    int int54 = dateTime52.getDayOfMonth();
    int int55 = dateTime52.getYear();
    java.util.Calendar calendar56 = dateTime52.getCal();
    int int57 = dateTime52.getYear();
    java.util.Date date58 = dateTime52.getTime();
    dateTime46.set(date58);
    net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime(date58);
    dateTime34.set(date58);
    net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime(date58);
    org.junit.Assert.assertNotNull(simpleDateFormat4);
    org.junit.Assert.assertNotNull(simpleDateFormat6);
    org.junit.Assert.assertNotNull(simpleDateFormat7);
    org.junit.Assert.assertNotNull(simpleDateFormat14);
    org.junit.Assert.assertNotNull(simpleDateFormat16);
    org.junit.Assert.assertNotNull(simpleDateFormat17);
    org.junit.Assert.assertNotNull(simpleDateFormat20);
    org.junit.Assert.assertNotNull(simpleDateFormat29);
    org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-1972.041095890411d) + "'", double41 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    org.junit.Assert.assertNull(dateTime45);
    org.junit.Assert.assertNotNull(dateTime46);
    org.junit.Assert.assertTrue("'" + int53 + "' != '" + 5 + "'", int53 == 5);
    org.junit.Assert.assertTrue("'" + int54 + "' != '" + 31 + "'", int54 == 31);
    org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1969 + "'", int55 == 1969);
    org.junit.Assert.assertNotNull(calendar56);
    org.junit.Assert.assertEquals(calendar56.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1969 + "'", int57 == 1969);
    org.junit.Assert.assertNotNull(date58);
    org.junit.Assert.assertEquals(date58.toString(), "Wed Dec 31 17:00:00 MST 1969");
  }

  @Test
  public void test908() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test908");
    java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readTextFile("hi!", false);
    net.ajaskey.common.TextUtils.print(strList2);
    net.ajaskey.common.TextUtils.print(strList2);
    org.junit.Assert.assertNotNull(strList2);
  }

  @Test
  public void test909() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test909");
    net.ajaskey.common.DateTime dateTime0 = null;
    net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime(13, (int) (short) 1, 10);
    boolean boolean5 = net.ajaskey.common.Utils.sameMonth(dateTime0, dateTime4);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
  }

  @Test
  public void test910() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test910");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    java.text.SimpleDateFormat simpleDateFormat5 = null;
    net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat5);
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double9 = dateTime6.getDeltaYears(dateTime8);
    boolean boolean10 = dateTime3.isLessThan(dateTime8);
    int int11 = dateTime3.getHour();
    net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(100L);
    double double18 = dateTime15.getDeltaYears(dateTime17);
    java.text.SimpleDateFormat simpleDateFormat20 = null;
    net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat20);
    net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double24 = dateTime21.getDeltaYears(dateTime23);
    boolean boolean25 = dateTime21.isWeekday();
    boolean boolean26 = dateTime15.sameDate(dateTime21);
    java.text.SimpleDateFormat simpleDateFormat28 = null;
    net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat28);
    net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double32 = dateTime29.getDeltaYears(dateTime31);
    net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean37 = dateTime31.isEqual(dateTime36);
    dateTime15.set(dateTime36);
    boolean boolean39 = net.ajaskey.common.Utils.sameDate(dateTime3, dateTime36);
    dateTime36.add((-1), (int) (short) -1);
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
    org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1972.041095890411d) + "'", double18 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
  }

  @Test
  public void test911() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test911");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    int int2 = dateTime1.getMs();
    java.text.SimpleDateFormat simpleDateFormat3 = net.ajaskey.common.Utils.sdf;
    dateTime1.setSdf(simpleDateFormat3);
    int int5 = dateTime1.getDayOfWeek();
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
    double double12 = dateTime9.getDeltaYears(dateTime11);
    java.util.Calendar calendar13 = dateTime9.getCal();
    dateTime1.set(calendar13);
    java.text.SimpleDateFormat simpleDateFormat16 = null;
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double20 = dateTime17.getDeltaYears(dateTime19);
    net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean25 = dateTime19.isEqual(dateTime24);
    java.util.Calendar calendar26 = dateTime19.getCal();
    net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(calendar26);
    dateTime1.set(calendar26);
    int int29 = dateTime1.getDayOfYear();
    int int30 = dateTime1.getMinute();
    java.lang.String str31 = dateTime1.toFullString();
    dateTime1.add(31, 50);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat3);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 4 + "'", int5 == 4);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1972.041095890411d) + "'", double12 == (-1972.041095890411d));
    org.junit.Assert.assertNotNull(calendar13);
// flaky:         org.junit.Assert.assertEquals(calendar13.toString(), "java.util.GregorianCalendar[time=-62190298584027,areFieldsSet=true,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=3,SECOND=35,MILLISECOND=973,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertNotNull(calendar26);
    org.junit.Assert.assertEquals(calendar26.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + int29 + "' != '" + 365 + "'", int29 == 365);
    org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
    org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str31, "Wed 31-Dec-1969 17:00:00");
  }

  @Test
  public void test912() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test912");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    java.text.SimpleDateFormat simpleDateFormat5 = null;
    net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat5);
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double9 = dateTime6.getDeltaYears(dateTime8);
    boolean boolean10 = dateTime3.isLessThan(dateTime8);
    int int11 = dateTime3.getHour();
    int int12 = dateTime3.getYear();
    int int13 = dateTime3.getHour();
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
    org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
    org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
  }

  @Test
  public void test913() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test913");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    int int7 = dateTime3.getDayOfWeek();
    int int8 = dateTime3.getHour();
    net.ajaskey.common.DateTime dateTime10 = dateTime3.parse("     100");
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 5 + "'", int7 == 5);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
    org.junit.Assert.assertNull(dateTime10);
  }

  @Test
  public void test914() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test914");
    java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readTextFile("Invalid fmt", true);
    java.lang.String str3 = net.ajaskey.common.TextUtils.toString(strList2);
    net.ajaskey.common.TextUtils.print(strList2);
    org.junit.Assert.assertNotNull(strList2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
  }

  @Test
  public void test915() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test915");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    dateTime1.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str6 = dateTime1.getMonth();
    java.text.SimpleDateFormat simpleDateFormat8 = null;
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double12 = dateTime9.getDeltaYears(dateTime11);
    boolean boolean13 = dateTime1.isLessThan(dateTime9);
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(100L);
    double double20 = dateTime17.getDeltaYears(dateTime19);
    net.ajaskey.common.DateTime dateTime21 = null;
    long long22 = dateTime17.getDeltaDays(dateTime21);
    boolean boolean23 = dateTime9.isLessThanOrEqual(dateTime17);
    java.lang.String str24 = dateTime9.format();
    java.lang.String str25 = dateTime9.format();
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "January" + "'", str6, "January");
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-1972.041095890411d) + "'", double20 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    org.junit.Assert.assertEquals("'" + str24 + "' != '" + "BAD-DATE-FORMAT" + "'", str24, "BAD-DATE-FORMAT");
    org.junit.Assert.assertEquals("'" + str25 + "' != '" + "BAD-DATE-FORMAT" + "'", str25, "BAD-DATE-FORMAT");
  }

  @Test
  public void test916() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test916");
    java.lang.String str2 = net.ajaskey.common.Utils.fmt((double) 31, 1970);
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Invalid fmt" + "'", str2, "Invalid fmt");
  }

  @Test
  public void test917() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test917");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    boolean boolean7 = dateTime5.isWeekday();
    net.ajaskey.common.DateTime dateTime10 = dateTime5.parse("31-Dec-1969", "January");
    int int11 = dateTime5.getMs();
    int int12 = dateTime5.getHour();
    int int13 = dateTime5.getDayOfYear();
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertNull(dateTime10);
    org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
    org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
    org.junit.Assert.assertTrue("'" + int13 + "' != '" + 365 + "'", int13 == 365);
  }

  @Test
  public void test918() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test918");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int2 = dateTime1.getHour();
    int int3 = dateTime1.getDayOfMonth();
    int int4 = dateTime1.getYear();
    java.util.Calendar calendar5 = dateTime1.getCal();
    int int6 = dateTime1.getYear();
    java.util.Date date7 = dateTime1.getTime();
    int int8 = dateTime1.getHour();
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 5 + "'", int2 == 5);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 31 + "'", int3 == 31);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1969 + "'", int4 == 1969);
    org.junit.Assert.assertNotNull(calendar5);
    org.junit.Assert.assertEquals(calendar5.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1969 + "'", int6 == 1969);
    org.junit.Assert.assertNotNull(date7);
    org.junit.Assert.assertEquals(date7.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
  }

  @Test
  public void test919() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test919");
    java.text.SimpleDateFormat simpleDateFormat1 = null;
    java.text.SimpleDateFormat simpleDateFormat2 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat1, simpleDateFormat2);
    dateTime3.add((int) (byte) 10, 7);
    java.text.SimpleDateFormat simpleDateFormat8 = null;
    java.text.SimpleDateFormat simpleDateFormat9 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat8, simpleDateFormat9);
    net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(100L);
    double double17 = dateTime14.getDeltaYears(dateTime16);
    boolean boolean18 = dateTime16.isWeekday();
    java.util.Date date19 = dateTime16.getTime();
    java.lang.String str20 = dateTime16.toString();
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(100L);
    int int23 = dateTime22.getMs();
    net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(100L);
    double double30 = dateTime27.getDeltaYears(dateTime29);
    java.text.SimpleDateFormat simpleDateFormat31 = dateTime27.getSdf();
    boolean boolean32 = dateTime22.isLessThanOrEqual(dateTime27);
    boolean boolean33 = dateTime16.isLessThan(dateTime27);
    java.lang.String str34 = dateTime16.toString();
    long long35 = dateTime10.getDeltaMilliSeconds(dateTime16);
    int int36 = dateTime16.getDayOfWeek();
    dateTime16.set(3, 1967, 4);
    boolean boolean41 = dateTime3.isGreaterThan(dateTime16);
    org.junit.Assert.assertNotNull(simpleDateFormat2);
    org.junit.Assert.assertNotNull(simpleDateFormat9);
    org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-1972.041095890411d) + "'", double17 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    org.junit.Assert.assertNotNull(date19);
    org.junit.Assert.assertEquals(date19.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "31-Dec-1969" + "'", str20, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
    org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-1972.041095890411d) + "'", double30 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat31);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    org.junit.Assert.assertEquals("'" + str34 + "' != '" + "31-Dec-1969" + "'", str34, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
    org.junit.Assert.assertTrue("'" + int36 + "' != '" + 4 + "'", int36 == 4);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
  }

  @Test
  public void test920() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test920");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((-62190298587649L));
  }

  @Test
  public void test921() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test921");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int2 = dateTime1.getHour();
    int int3 = dateTime1.getDayOfMonth();
    int int4 = dateTime1.getYear();
    java.util.Calendar calendar5 = dateTime1.getCal();
    int int6 = dateTime1.getYear();
    java.util.Date date7 = dateTime1.getTime();
    java.lang.String str8 = dateTime1.getMonth();
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 5 + "'", int2 == 5);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 31 + "'", int3 == 31);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1969 + "'", int4 == 1969);
    org.junit.Assert.assertNotNull(calendar5);
    org.junit.Assert.assertEquals(calendar5.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1969 + "'", int6 == 1969);
    org.junit.Assert.assertNotNull(date7);
    org.junit.Assert.assertEquals(date7.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str8 + "' != '" + "December" + "'", str8, "December");
  }

  @Test
  public void test922() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test922");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) 'a', (int) (short) 1, 10);
    net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(100L);
    double double10 = dateTime7.getDeltaYears(dateTime9);
    java.util.Date date11 = dateTime7.getTime();
    net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(date11);
    dateTime3.set(date11);
    int int14 = dateTime3.getYear();
    org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1972.041095890411d) + "'", double10 == (-1972.041095890411d));
    org.junit.Assert.assertNotNull(date11);
// flaky:         org.junit.Assert.assertEquals(date11.toString(), "Thu Apr 10 14:03:36 MST 2");
    org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
  }

  @Test
  public void test923() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test923");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    java.util.Date date7 = dateTime3.getTime();
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(date7);
    net.ajaskey.common.DateTime dateTime10 = dateTime8.parse("");
    net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(100L);
    double double17 = dateTime14.getDeltaYears(dateTime16);
    java.text.SimpleDateFormat simpleDateFormat19 = null;
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat19);
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double23 = dateTime20.getDeltaYears(dateTime22);
    boolean boolean24 = dateTime20.isWeekday();
    boolean boolean25 = dateTime14.sameDate(dateTime20);
    net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(0L);
    boolean boolean28 = dateTime20.isGreaterThanOrEqual(dateTime27);
    net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime(100L);
    dateTime30.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str35 = dateTime30.getMonth();
    java.text.SimpleDateFormat simpleDateFormat37 = null;
    net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat37);
    net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double41 = dateTime38.getDeltaYears(dateTime40);
    boolean boolean42 = dateTime30.isLessThan(dateTime38);
    net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime(100L);
    double double49 = dateTime46.getDeltaYears(dateTime48);
    net.ajaskey.common.DateTime dateTime50 = null;
    long long51 = dateTime46.getDeltaDays(dateTime50);
    boolean boolean52 = dateTime38.isLessThanOrEqual(dateTime46);
    java.lang.String str53 = dateTime38.format();
    boolean boolean54 = dateTime20.isGreaterThan(dateTime38);
    boolean boolean55 = net.ajaskey.common.Utils.sameMonth(dateTime8, dateTime38);
    dateTime38.add(1967, (int) (short) 10);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertNotNull(date7);
// flaky:         org.junit.Assert.assertEquals(date7.toString(), "Thu Apr 10 14:03:36 MST 2");
    org.junit.Assert.assertNull(dateTime10);
    org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-1972.041095890411d) + "'", double17 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    org.junit.Assert.assertEquals("'" + str35 + "' != '" + "January" + "'", str35, "January");
    org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-1972.041095890411d) + "'", double49 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
    org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    org.junit.Assert.assertEquals("'" + str53 + "' != '" + "BAD-DATE-FORMAT" + "'", str53, "BAD-DATE-FORMAT");
    org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
  }

  @Test
  public void test924() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test924");
    java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readGzipFile("      719,795", true);
    org.junit.Assert.assertNull(strList2);
  }

  @Test
  public void test925() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test925");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    java.text.SimpleDateFormat simpleDateFormat7 = dateTime3.getSdf();
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(dateTime3);
    java.text.SimpleDateFormat simpleDateFormat10 = null;
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat10);
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double14 = dateTime11.getDeltaYears(dateTime13);
    boolean boolean15 = dateTime11.isWeekday();
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(100L);
    int int18 = dateTime17.getMs();
    java.lang.String str19 = dateTime17.toString();
    int int20 = dateTime17.getMs();
    java.util.Calendar calendar21 = dateTime17.getCal();
    dateTime11.set(calendar21);
    net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime(dateTime11);
    boolean boolean24 = dateTime3.isEqual(dateTime23);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat7);
    org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
    org.junit.Assert.assertEquals("'" + str19 + "' != '" + "31-Dec-1969" + "'", str19, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
    org.junit.Assert.assertNotNull(calendar21);
    org.junit.Assert.assertEquals(calendar21.toString(),
        "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
  }

  @Test
  public void test926() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test926");
    net.ajaskey.common.Utils.TAB = "Thu 10-Apr-0002 14:03:35";
  }

  @Test
  public void test927() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test927");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    dateTime1.set((int) (byte) 100, (-1), (int) '#');
    dateTime1.setFirstWorkDay();
    java.lang.String str7 = dateTime1.toString();
    org.junit.Assert.assertEquals("'" + str7 + "' != '" + "06-Jan-0100" + "'", str7, "06-Jan-0100");
  }

  @Test
  public void test928() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test928");
    java.text.SimpleDateFormat simpleDateFormat1 = null;
    java.text.SimpleDateFormat simpleDateFormat2 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat1, simpleDateFormat2);
    net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(100L);
    double double10 = dateTime7.getDeltaYears(dateTime9);
    boolean boolean11 = dateTime9.isWeekday();
    java.util.Date date12 = dateTime9.getTime();
    java.lang.String str13 = dateTime9.toString();
    net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(100L);
    int int16 = dateTime15.getMs();
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(100L);
    double double23 = dateTime20.getDeltaYears(dateTime22);
    java.text.SimpleDateFormat simpleDateFormat24 = dateTime20.getSdf();
    boolean boolean25 = dateTime15.isLessThanOrEqual(dateTime20);
    boolean boolean26 = dateTime9.isLessThan(dateTime20);
    java.lang.String str27 = dateTime9.toString();
    long long28 = dateTime3.getDeltaMilliSeconds(dateTime9);
    net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime(100L);
    double double35 = dateTime32.getDeltaYears(dateTime34);
    boolean boolean36 = dateTime34.isWeekday();
    java.util.Date date37 = dateTime34.getTime();
    int int38 = dateTime34.getMinute();
    boolean boolean39 = dateTime3.sameDate(dateTime34);
    net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(100L);
    double double46 = dateTime43.getDeltaYears(dateTime45);
    boolean boolean47 = dateTime45.isWeekday();
    net.ajaskey.common.DateTime dateTime50 = dateTime45.parse("31-Dec-1969", "January");
    java.util.Calendar calendar51 = dateTime45.getCal();
    dateTime3.set(calendar51);
    dateTime3.setFirstWorkDay();
    org.junit.Assert.assertNotNull(simpleDateFormat2);
    org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1972.041095890411d) + "'", double10 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    org.junit.Assert.assertNotNull(date12);
    org.junit.Assert.assertEquals(date12.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "31-Dec-1969" + "'", str13, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
    org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-1972.041095890411d) + "'", double23 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat24);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "31-Dec-1969" + "'", str27, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
    org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-1972.041095890411d) + "'", double35 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    org.junit.Assert.assertNotNull(date37);
    org.junit.Assert.assertEquals(date37.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-1972.041095890411d) + "'", double46 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    org.junit.Assert.assertNull(dateTime50);
    org.junit.Assert.assertNotNull(calendar51);
    org.junit.Assert.assertEquals(calendar51.toString(),
        "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
  }

  @Test
  public void test929() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test929");
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("365.00", "");
    net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime(100L);
    int int5 = dateTime4.getMs();
    java.lang.String str6 = dateTime4.toString();
    int int7 = dateTime4.getMs();
    java.util.Calendar calendar8 = dateTime4.getCal();
    net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(100L);
    double double15 = dateTime12.getDeltaYears(dateTime14);
    boolean boolean16 = dateTime14.isWeekday();
    net.ajaskey.common.DateTime dateTime19 = dateTime14.parse("31-Dec-1969", "January");
    net.ajaskey.common.DateTime dateTime20 = net.ajaskey.common.DateTime.copy(dateTime14);
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(100L);
    dateTime22.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str27 = dateTime22.getMonth();
    int int28 = dateTime22.getMs();
    java.lang.String str30 = dateTime22
        .format("                                                                                               52.00");
    net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime(100L);
    dateTime32.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str37 = dateTime32.getMonth();
    long long38 = dateTime22.getDeltaDays(dateTime32);
    boolean boolean39 = dateTime20.isGreaterThan(dateTime32);
    int int40 = dateTime4.getYears(dateTime32);
    net.ajaskey.common.DateTime dateTime41 = null;
    boolean boolean42 = dateTime32.isEqual(dateTime41);
    java.util.Calendar calendar43 = dateTime32.getCal();
    boolean boolean44 = dateTime2.isGreaterThanOrEqual(dateTime32);
    int int45 = dateTime32.getSecond();
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "31-Dec-1969" + "'", str6, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
    org.junit.Assert.assertNotNull(calendar8);
    org.junit.Assert.assertEquals(calendar8.toString(),
        "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-1972.041095890411d) + "'", double15 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    org.junit.Assert.assertNull(dateTime19);
    org.junit.Assert.assertNotNull(dateTime20);
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "January" + "'", str27, "January");
    org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
    org.junit.Assert.assertEquals(
        "'" + str30 + "' != '" + "                                                                                               52.00" + "'", str30,
        "                                                                                               52.00");
    org.junit.Assert.assertEquals("'" + str37 + "' != '" + "January" + "'", str37, "January");
    org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1870) + "'", int40 == (-1870));
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    org.junit.Assert.assertNotNull(calendar43);
    org.junit.Assert.assertEquals(calendar43.toString(),
        "java.util.GregorianCalendar[time=-59011286399900,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=100,MONTH=0,WEEK_OF_YEAR=1,WEEK_OF_MONTH=1,DAY_OF_MONTH=4,DAY_OF_YEAR=4,DAY_OF_WEEK=7,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
  }

  @Test
  public void test930() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test930");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    java.text.SimpleDateFormat simpleDateFormat8 = null;
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double12 = dateTime9.getDeltaYears(dateTime11);
    boolean boolean13 = dateTime9.isWeekday();
    boolean boolean14 = dateTime3.sameDate(dateTime9);
    int int15 = dateTime9.getDayOfMonth();
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    java.text.SimpleDateFormat simpleDateFormat21 = null;
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat21);
    net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double25 = dateTime22.getDeltaYears(dateTime24);
    boolean boolean26 = dateTime19.isLessThan(dateTime24);
    int int27 = dateTime19.getHour();
    net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime(100L);
    double double34 = dateTime31.getDeltaYears(dateTime33);
    int int35 = dateTime31.getHour();
    net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime(100L);
    double double42 = dateTime39.getDeltaYears(dateTime41);
    boolean boolean43 = dateTime41.isWeekday();
    java.util.Date date44 = dateTime41.getTime();
    java.lang.String str45 = dateTime41.toString();
    net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime(100L);
    int int48 = dateTime47.getMs();
    net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime(100L);
    double double55 = dateTime52.getDeltaYears(dateTime54);
    java.text.SimpleDateFormat simpleDateFormat56 = dateTime52.getSdf();
    boolean boolean57 = dateTime47.isLessThanOrEqual(dateTime52);
    boolean boolean58 = dateTime41.isLessThan(dateTime52);
    java.lang.String str59 = dateTime41.toString();
    boolean boolean60 = dateTime31.sameDate(dateTime41);
    int int61 = dateTime19.getYears(dateTime31);
    long long62 = dateTime9.getDeltaDays(dateTime31);
    int int63 = dateTime9.getDayOfYear();
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
    org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-1972.041095890411d) + "'", double34 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
    org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-1972.041095890411d) + "'", double42 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    org.junit.Assert.assertNotNull(date44);
    org.junit.Assert.assertEquals(date44.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str45 + "' != '" + "31-Dec-1969" + "'", str45, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int48 + "' != '" + 100 + "'", int48 == 100);
    org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-1972.041095890411d) + "'", double55 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat56);
    org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    org.junit.Assert.assertEquals("'" + str59 + "' != '" + "31-Dec-1969" + "'", str59, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
    org.junit.Assert.assertTrue("'" + long62 + "' != '" + 0L + "'", long62 == 0L);
    org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
  }

  @Test
  public void test931() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test931");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    dateTime1.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str6 = dateTime1.getMonth();
    java.text.SimpleDateFormat simpleDateFormat8 = null;
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double12 = dateTime9.getDeltaYears(dateTime11);
    boolean boolean13 = dateTime1.isLessThan(dateTime9);
    net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(10L);
    int int16 = dateTime15.getSecond();
    long long17 = dateTime9.getDeltaMilliSeconds(dateTime15);
    net.ajaskey.common.DateTime dateTime20 = dateTime15.parse("Thu 10-Apr-0002 14:03:13", "Wed 02-May-0014 14:03:29");
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int23 = dateTime22.getHour();
    boolean boolean24 = net.ajaskey.common.Utils.sameDate(dateTime15, dateTime22);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "January" + "'", str6, "January");
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
    org.junit.Assert.assertNull(dateTime20);
    org.junit.Assert.assertTrue("'" + int23 + "' != '" + 5 + "'", int23 == 5);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
  }

  @Test
  public void test932() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test932");
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime((long) 1);
    net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
    double double9 = dateTime6.getDeltaYears(dateTime8);
    boolean boolean10 = dateTime8.isWeekday();
    java.util.Date date11 = dateTime8.getTime();
    java.lang.String str12 = dateTime8.toString();
    net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(100L);
    int int15 = dateTime14.getMs();
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(100L);
    double double22 = dateTime19.getDeltaYears(dateTime21);
    java.text.SimpleDateFormat simpleDateFormat23 = dateTime19.getSdf();
    boolean boolean24 = dateTime14.isLessThanOrEqual(dateTime19);
    boolean boolean25 = dateTime8.isLessThan(dateTime19);
    dateTime2.set(dateTime8);
    int int27 = dateTime8.getDayOfYear();
    int int28 = dateTime8.getMs();
    java.text.SimpleDateFormat simpleDateFormat32 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat34 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat35 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime("", simpleDateFormat34, simpleDateFormat35);
    net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat32,
        simpleDateFormat35);
    java.text.SimpleDateFormat simpleDateFormat38 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime("", simpleDateFormat35, simpleDateFormat38);
    java.text.SimpleDateFormat simpleDateFormat41 = null;
    java.text.SimpleDateFormat simpleDateFormat42 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat41, simpleDateFormat42);
    java.lang.String str44 = dateTime43.getDay();
    java.lang.String str45 = dateTime43.getMonth();
    java.text.SimpleDateFormat simpleDateFormat48 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat50 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat51 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime("", simpleDateFormat50, simpleDateFormat51);
    net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat48,
        simpleDateFormat51);
    net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat48);
    dateTime43.setSdf(simpleDateFormat48);
    net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime("97", simpleDateFormat38, simpleDateFormat48);
    dateTime8.setSdf(simpleDateFormat38);
    net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime(100L);
    double double64 = dateTime61.getDeltaYears(dateTime63);
    java.text.SimpleDateFormat simpleDateFormat66 = null;
    net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat66);
    net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double70 = dateTime67.getDeltaYears(dateTime69);
    boolean boolean71 = dateTime67.isWeekday();
    boolean boolean72 = dateTime61.sameDate(dateTime67);
    net.ajaskey.common.DateTime dateTime74 = new net.ajaskey.common.DateTime(100L);
    int int75 = dateTime74.getMs();
    java.text.SimpleDateFormat simpleDateFormat76 = net.ajaskey.common.Utils.sdf;
    dateTime74.setSdf(simpleDateFormat76);
    long long78 = dateTime61.getDeltaDays(dateTime74);
    java.text.SimpleDateFormat simpleDateFormat79 = dateTime74.getSdf();
    net.ajaskey.common.DateTime dateTime81 = new net.ajaskey.common.DateTime(100L);
    int int82 = dateTime81.getMs();
    java.text.SimpleDateFormat simpleDateFormat83 = net.ajaskey.common.Utils.sdf;
    dateTime81.setSdf(simpleDateFormat83);
    dateTime74.setSdf(simpleDateFormat83);
    net.ajaskey.common.DateTime dateTime86 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat38, simpleDateFormat83);
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    org.junit.Assert.assertNotNull(date11);
    org.junit.Assert.assertEquals(date11.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "31-Dec-1969" + "'", str12, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
    org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-1972.041095890411d) + "'", double22 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat23);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertTrue("'" + int27 + "' != '" + 365 + "'", int27 == 365);
    org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat32);
    org.junit.Assert.assertNotNull(simpleDateFormat34);
    org.junit.Assert.assertNotNull(simpleDateFormat35);
    org.junit.Assert.assertNotNull(simpleDateFormat38);
    org.junit.Assert.assertNotNull(simpleDateFormat42);
    org.junit.Assert.assertEquals("'" + str44 + "' != '" + "UNKNOWN" + "'", str44, "UNKNOWN");
    org.junit.Assert.assertEquals("'" + str45 + "' != '" + "UNKNOWN" + "'", str45, "UNKNOWN");
    org.junit.Assert.assertNotNull(simpleDateFormat48);
    org.junit.Assert.assertNotNull(simpleDateFormat50);
    org.junit.Assert.assertNotNull(simpleDateFormat51);
    org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-1972.041095890411d) + "'", double64 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    org.junit.Assert.assertTrue("'" + int75 + "' != '" + 100 + "'", int75 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat76);
    org.junit.Assert.assertTrue("'" + long78 + "' != '" + (-719795L) + "'", long78 == (-719795L));
    org.junit.Assert.assertNotNull(simpleDateFormat79);
    org.junit.Assert.assertTrue("'" + int82 + "' != '" + 100 + "'", int82 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat83);
  }

  @Test
  public void test933() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test933");
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("31-Dec-1969", "Thu 10-Apr-0002 14:03:14");
    java.text.SimpleDateFormat simpleDateFormat5 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat7 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat8 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("", simpleDateFormat7, simpleDateFormat8);
    net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat5, simpleDateFormat8);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat5);
    java.lang.String str12 = dateTime11.getDay();
    dateTime11.set((int) (byte) -1, (int) (byte) 1, 10);
    boolean boolean17 = net.ajaskey.common.Utils.sameMonth(dateTime2, dateTime11);
    int int18 = dateTime2.getDayOfWeek();
    org.junit.Assert.assertNotNull(simpleDateFormat5);
    org.junit.Assert.assertNotNull(simpleDateFormat7);
    org.junit.Assert.assertNotNull(simpleDateFormat8);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UNKNOWN" + "'", str12, "UNKNOWN");
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
  }

  @Test
  public void test934() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test934");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    java.text.SimpleDateFormat simpleDateFormat8 = null;
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double12 = dateTime9.getDeltaYears(dateTime11);
    boolean boolean13 = dateTime9.isWeekday();
    boolean boolean14 = dateTime3.sameDate(dateTime9);
    java.lang.String str15 = dateTime9.format();
    java.lang.String str16 = dateTime9.toString();
    java.text.SimpleDateFormat simpleDateFormat18 = null;
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat18);
    net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double22 = dateTime19.getDeltaYears(dateTime21);
    boolean boolean23 = dateTime19.isWeekday();
    net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime(100L);
    int int26 = dateTime25.getMs();
    java.lang.String str27 = dateTime25.toString();
    int int28 = dateTime25.getMs();
    java.util.Calendar calendar29 = dateTime25.getCal();
    dateTime19.set(calendar29);
    java.text.SimpleDateFormat simpleDateFormat31 = dateTime19.getSdf();
    boolean boolean32 = dateTime19.isWeekday();
    boolean boolean33 = net.ajaskey.common.Utils.sameMonth(dateTime9, dateTime19);
    java.lang.String str34 = dateTime19.getMonth();
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "BAD-DATE-FORMAT" + "'", str15, "BAD-DATE-FORMAT");
    org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "31-Dec-1969" + "'", str27, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
    org.junit.Assert.assertNotNull(calendar29);
    org.junit.Assert.assertEquals(calendar29.toString(),
        "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertNull(simpleDateFormat31);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    org.junit.Assert.assertEquals("'" + str34 + "' != '" + "December" + "'", str34, "December");
  }

  @Test
  public void test935() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test935");
    net.ajaskey.common.DateTime dateTime0 = null;
    java.text.SimpleDateFormat simpleDateFormat2 = null;
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat2);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean11 = dateTime5.isEqual(dateTime10);
    java.text.SimpleDateFormat simpleDateFormat13 = null;
    java.text.SimpleDateFormat simpleDateFormat14 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat13, simpleDateFormat14);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(100L);
    double double22 = dateTime19.getDeltaYears(dateTime21);
    boolean boolean23 = dateTime21.isWeekday();
    java.util.Date date24 = dateTime21.getTime();
    java.lang.String str25 = dateTime21.toString();
    net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(100L);
    int int28 = dateTime27.getMs();
    net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime(100L);
    double double35 = dateTime32.getDeltaYears(dateTime34);
    java.text.SimpleDateFormat simpleDateFormat36 = dateTime32.getSdf();
    boolean boolean37 = dateTime27.isLessThanOrEqual(dateTime32);
    boolean boolean38 = dateTime21.isLessThan(dateTime32);
    java.lang.String str39 = dateTime21.toString();
    long long40 = dateTime15.getDeltaMilliSeconds(dateTime21);
    net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime(100L);
    double double47 = dateTime44.getDeltaYears(dateTime46);
    boolean boolean48 = dateTime46.isWeekday();
    java.util.Date date49 = dateTime46.getTime();
    int int50 = dateTime46.getMinute();
    boolean boolean51 = dateTime15.sameDate(dateTime46);
    int int52 = dateTime5.getYears(dateTime46);
    int int53 = dateTime46.getDayOfWeek();
    java.lang.String str54 = dateTime46.toString();
    int int55 = dateTime46.getMs();
    net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime(100L);
    int int58 = dateTime57.getMs();
    java.text.SimpleDateFormat simpleDateFormat59 = net.ajaskey.common.Utils.sdf;
    dateTime57.setSdf(simpleDateFormat59);
    int int61 = dateTime57.getDayOfWeek();
    net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime(100L);
    double double68 = dateTime65.getDeltaYears(dateTime67);
    java.util.Calendar calendar69 = dateTime65.getCal();
    dateTime57.set(calendar69);
    java.text.SimpleDateFormat simpleDateFormat72 = null;
    net.ajaskey.common.DateTime dateTime73 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat72);
    net.ajaskey.common.DateTime dateTime75 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double76 = dateTime73.getDeltaYears(dateTime75);
    net.ajaskey.common.DateTime dateTime80 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean81 = dateTime75.isEqual(dateTime80);
    java.util.Calendar calendar82 = dateTime75.getCal();
    net.ajaskey.common.DateTime dateTime83 = new net.ajaskey.common.DateTime(calendar82);
    dateTime57.set(calendar82);
    int int85 = dateTime57.getDayOfYear();
    boolean boolean86 = dateTime46.isGreaterThan(dateTime57);
    boolean boolean87 = net.ajaskey.common.Utils.sameDate(dateTime0, dateTime57);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertNotNull(simpleDateFormat14);
    org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-1972.041095890411d) + "'", double22 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    org.junit.Assert.assertNotNull(date24);
    org.junit.Assert.assertEquals(date24.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str25 + "' != '" + "31-Dec-1969" + "'", str25, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
    org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-1972.041095890411d) + "'", double35 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat36);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    org.junit.Assert.assertEquals("'" + str39 + "' != '" + "31-Dec-1969" + "'", str39, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
    org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-1972.041095890411d) + "'", double47 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    org.junit.Assert.assertNotNull(date49);
    org.junit.Assert.assertEquals(date49.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
    org.junit.Assert.assertTrue("'" + int53 + "' != '" + 4 + "'", int53 == 4);
    org.junit.Assert.assertEquals("'" + str54 + "' != '" + "31-Dec-1969" + "'", str54, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
    org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat59);
    org.junit.Assert.assertTrue("'" + int61 + "' != '" + 4 + "'", int61 == 4);
    org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-1972.041095890411d) + "'", double68 == (-1972.041095890411d));
    org.junit.Assert.assertNotNull(calendar69);
// flaky:         org.junit.Assert.assertEquals(calendar69.toString(), "java.util.GregorianCalendar[time=-62190298583605,areFieldsSet=true,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=3,SECOND=36,MILLISECOND=395,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    org.junit.Assert.assertNotNull(calendar82);
    org.junit.Assert.assertEquals(calendar82.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + int85 + "' != '" + 365 + "'", int85 == 365);
    org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
  }

  @Test
  public void test936() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test936");
    java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat6 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat7 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime("", simpleDateFormat6, simpleDateFormat7);
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat4, simpleDateFormat7);
    net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat4);
    java.text.SimpleDateFormat simpleDateFormat11 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime("", simpleDateFormat4, simpleDateFormat11);
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("          1.00", simpleDateFormat11);
    org.junit.Assert.assertNotNull(simpleDateFormat4);
    org.junit.Assert.assertNotNull(simpleDateFormat6);
    org.junit.Assert.assertNotNull(simpleDateFormat7);
    org.junit.Assert.assertNotNull(simpleDateFormat11);
  }

  @Test
  public void test937() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test937");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((-1264464000000L));
    dateTime1.setFirstWorkDay();
  }

  @Test
  public void test938() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test938");
    java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readGzipFile(
        "                                                                                                                                                                                                                                                                                                                                                                           13",
        true);
    org.junit.Assert.assertNull(strList2);
  }

  @Test
  public void test939() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test939");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    int int2 = dateTime1.getMs();
    java.lang.String str3 = dateTime1.toString();
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int6 = dateTime5.getHour();
    int int7 = dateTime5.getDayOfMonth();
    dateTime1.set(dateTime5);
    net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(100L);
    double double15 = dateTime12.getDeltaYears(dateTime14);
    boolean boolean16 = dateTime14.isWeekday();
    java.util.Date date17 = dateTime14.getTime();
    java.lang.String str18 = dateTime14.toString();
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(3, (int) '4', (int) (byte) 0);
    boolean boolean23 = dateTime14.isGreaterThan(dateTime22);
    boolean boolean24 = net.ajaskey.common.Utils.sameMonth(dateTime1, dateTime22);
    int int25 = dateTime22.getHour();
    java.util.Date date26 = dateTime22.getTime();
    net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(date26);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "31-Dec-1969" + "'", str3, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 31 + "'", int7 == 31);
    org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-1972.041095890411d) + "'", double15 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    org.junit.Assert.assertNotNull(date17);
    org.junit.Assert.assertEquals(date17.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str18 + "' != '" + "31-Dec-1969" + "'", str18, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
    org.junit.Assert.assertNotNull(date26);
// flaky:         org.junit.Assert.assertEquals(date26.toString(), "Sat Apr 30 14:03:36 MST 7");
  }

  @Test
  public void test940() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test940");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    int int2 = dateTime1.getMs();
    java.lang.String str3 = dateTime1.toString();
    int int4 = dateTime1.getMs();
    java.util.Calendar calendar5 = dateTime1.getCal();
    net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime(dateTime1);
    java.util.Calendar calendar7 = dateTime1.getCal();
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(100L);
    int int10 = dateTime9.getMs();
    java.text.SimpleDateFormat simpleDateFormat11 = net.ajaskey.common.Utils.sdf;
    dateTime9.setSdf(simpleDateFormat11);
    java.lang.String str13 = dateTime9.toFullString();
    net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(100L);
    int int16 = dateTime15.getMs();
    java.text.SimpleDateFormat simpleDateFormat17 = net.ajaskey.common.Utils.sdf;
    dateTime15.setSdf(simpleDateFormat17);
    java.lang.String str19 = dateTime15.toFullString();
    java.lang.String str20 = dateTime15.format();
    int int21 = dateTime9.getYears(dateTime15);
    boolean boolean22 = dateTime1.sameDate(dateTime9);
    net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(100L);
    double double29 = dateTime26.getDeltaYears(dateTime28);
    boolean boolean30 = dateTime28.isWeekday();
    net.ajaskey.common.DateTime dateTime33 = dateTime28.parse("31-Dec-1969", "January");
    net.ajaskey.common.DateTime dateTime34 = net.ajaskey.common.DateTime.copy(dateTime28);
    dateTime34.set((int) ' ', 1970, (int) (short) -1);
    net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int41 = dateTime40.getHour();
    int int42 = dateTime40.getDayOfMonth();
    int int43 = dateTime40.getYear();
    java.util.Calendar calendar44 = dateTime40.getCal();
    int int45 = dateTime40.getYear();
    java.util.Date date46 = dateTime40.getTime();
    dateTime34.set(date46);
    net.ajaskey.common.DateTime dateTime48 = net.ajaskey.common.DateTime.copy(dateTime34);
    boolean boolean49 = dateTime9.isEqual(dateTime48);
    java.lang.String str50 = dateTime9.toFullString();
    java.lang.String str51 = dateTime9.toString();
    net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime(100L);
    double double58 = dateTime55.getDeltaYears(dateTime57);
    java.text.SimpleDateFormat simpleDateFormat60 = null;
    net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat60);
    net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double64 = dateTime61.getDeltaYears(dateTime63);
    dateTime63.set(0, 12, 0);
    boolean boolean69 = net.ajaskey.common.Utils.sameMonth(dateTime55, dateTime63);
    int int70 = dateTime63.getDayOfWeek();
    int int71 = dateTime9.getYears(dateTime63);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "31-Dec-1969" + "'", str3, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
    org.junit.Assert.assertNotNull(calendar5);
    org.junit.Assert.assertEquals(calendar5.toString(),
        "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertNotNull(calendar7);
    org.junit.Assert.assertEquals(calendar7.toString(),
        "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat11);
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str13, "Wed 31-Dec-1969 17:00:00");
    org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat17);
    org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str19, "Wed 31-Dec-1969 17:00:00");
    org.junit.Assert.assertEquals("'" + str20 + "' != '" + "31-Dec-1969" + "'", str20, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-1972.041095890411d) + "'", double29 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    org.junit.Assert.assertNull(dateTime33);
    org.junit.Assert.assertNotNull(dateTime34);
    org.junit.Assert.assertTrue("'" + int41 + "' != '" + 5 + "'", int41 == 5);
    org.junit.Assert.assertTrue("'" + int42 + "' != '" + 31 + "'", int42 == 31);
    org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1969 + "'", int43 == 1969);
    org.junit.Assert.assertNotNull(calendar44);
    org.junit.Assert.assertEquals(calendar44.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1969 + "'", int45 == 1969);
    org.junit.Assert.assertNotNull(date46);
    org.junit.Assert.assertEquals(date46.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertNotNull(dateTime48);
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str50, "Wed 31-Dec-1969 17:00:00");
    org.junit.Assert.assertEquals("'" + str51 + "' != '" + "31-Dec-1969" + "'", str51, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-1972.041095890411d) + "'", double58 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    org.junit.Assert.assertTrue("'" + int70 + "' != '" + 6 + "'", int70 == 6);
    org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1968) + "'", int71 == (-1968));
  }

  @Test
  public void test941() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test941");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) 2);
    java.text.SimpleDateFormat simpleDateFormat2 = dateTime1.getSdf();
    net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    java.text.SimpleDateFormat simpleDateFormat8 = null;
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double12 = dateTime9.getDeltaYears(dateTime11);
    boolean boolean13 = dateTime6.isLessThan(dateTime11);
    int int14 = dateTime6.getHour();
    long long15 = dateTime1.getDeltaDays(dateTime6);
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int18 = dateTime17.getHour();
    int int19 = dateTime17.getDayOfMonth();
    int int20 = dateTime17.getYear();
    net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(dateTime17);
    java.lang.String str22 = dateTime17.format();
    boolean boolean23 = dateTime1.isGreaterThan(dateTime17);
    java.text.SimpleDateFormat simpleDateFormat26 = null;
    java.text.SimpleDateFormat simpleDateFormat27 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat26, simpleDateFormat27);
    net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat27);
    java.text.SimpleDateFormat simpleDateFormat31 = null;
    net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat31);
    net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double35 = dateTime32.getDeltaYears(dateTime34);
    boolean boolean36 = dateTime32.isWeekday();
    net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime(100L);
    int int39 = dateTime38.getMs();
    java.lang.String str40 = dateTime38.toString();
    int int41 = dateTime38.getMs();
    java.util.Calendar calendar42 = dateTime38.getCal();
    dateTime32.set(calendar42);
    dateTime29.set(calendar42);
    net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(calendar42);
    dateTime1.set(calendar42);
    net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime(calendar42);
    net.ajaskey.common.DateTime dateTime49 = dateTime47
        .parse("                                                                                               10.00");
    org.junit.Assert.assertNull(simpleDateFormat2);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
    org.junit.Assert.assertTrue("'" + long15 + "' != '" + 719795L + "'", long15 == 719795L);
    org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
    org.junit.Assert.assertTrue("'" + int19 + "' != '" + 31 + "'", int19 == 31);
    org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1969 + "'", int20 == 1969);
    org.junit.Assert.assertEquals("'" + str22 + "' != '" + "BAD-DATE-FORMAT" + "'", str22, "BAD-DATE-FORMAT");
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    org.junit.Assert.assertNotNull(simpleDateFormat27);
    org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
    org.junit.Assert.assertEquals("'" + str40 + "' != '" + "31-Dec-1969" + "'", str40, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
    org.junit.Assert.assertNotNull(calendar42);
    org.junit.Assert.assertEquals(calendar42.toString(),
        "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertNull(dateTime49);
  }

  @Test
  public void test942() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test942");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    boolean boolean7 = dateTime5.isWeekday();
    java.util.Date date8 = dateTime5.getTime();
    java.lang.String str9 = dateTime5.toString();
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(3, (int) '4', (int) (byte) 0);
    boolean boolean14 = dateTime5.isGreaterThan(dateTime13);
    java.text.SimpleDateFormat simpleDateFormat16 = null;
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double20 = dateTime17.getDeltaYears(dateTime19);
    net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean25 = dateTime19.isEqual(dateTime24);
    java.util.Calendar calendar26 = dateTime19.getCal();
    net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(calendar26);
    net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(calendar26);
    boolean boolean29 = dateTime5.isLessThan(dateTime28);
    dateTime5.add((int) 'a', 4);
    net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime(100L);
    int int37 = dateTime36.getMs();
    java.text.SimpleDateFormat simpleDateFormat38 = net.ajaskey.common.Utils.sdf;
    dateTime36.setSdf(simpleDateFormat38);
    int int40 = dateTime36.getDayOfWeek();
    net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime(100L);
    double double47 = dateTime44.getDeltaYears(dateTime46);
    java.util.Calendar calendar48 = dateTime44.getCal();
    dateTime36.set(calendar48);
    java.text.SimpleDateFormat simpleDateFormat51 = null;
    net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat51);
    net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double55 = dateTime52.getDeltaYears(dateTime54);
    net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean60 = dateTime54.isEqual(dateTime59);
    java.util.Calendar calendar61 = dateTime54.getCal();
    net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime(calendar61);
    dateTime36.set(calendar61);
    java.text.SimpleDateFormat simpleDateFormat66 = null;
    java.text.SimpleDateFormat simpleDateFormat67 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat66, simpleDateFormat67);
    net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat67);
    dateTime36.setSdf(simpleDateFormat67);
    java.text.SimpleDateFormat simpleDateFormat74 = null;
    java.text.SimpleDateFormat simpleDateFormat75 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime76 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat74, simpleDateFormat75);
    net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat75);
    net.ajaskey.common.DateTime dateTime78 = new net.ajaskey.common.DateTime("         14", simpleDateFormat75);
    net.ajaskey.common.DateTime dateTime79 = new net.ajaskey.common.DateTime(
        "JanuaryThu 10-Apr-0002 14:03:11Thu 10-Apr-0002 14:03:11                                                                                               52.00Thu 10-Apr-0002 14:03:11hi!Thu 10-Apr-0002 14:03:11",
        simpleDateFormat67, simpleDateFormat75);
    net.ajaskey.common.DateTime dateTime80 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 14:03:14", simpleDateFormat75);
    dateTime5.setSdf(simpleDateFormat75);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertNotNull(date8);
    org.junit.Assert.assertEquals(date8.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "31-Dec-1969" + "'", str9, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertNotNull(calendar26);
    org.junit.Assert.assertEquals(calendar26.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat38);
    org.junit.Assert.assertTrue("'" + int40 + "' != '" + 4 + "'", int40 == 4);
    org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-1972.041095890411d) + "'", double47 == (-1972.041095890411d));
    org.junit.Assert.assertNotNull(calendar48);
// flaky:         org.junit.Assert.assertEquals(calendar48.toString(), "java.util.GregorianCalendar[time=-62190298583471,areFieldsSet=true,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=3,SECOND=36,MILLISECOND=529,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    org.junit.Assert.assertNotNull(calendar61);
    org.junit.Assert.assertEquals(calendar61.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertNotNull(simpleDateFormat67);
    org.junit.Assert.assertNotNull(simpleDateFormat75);
  }

  @Test
  public void test943() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test943");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    int int2 = dateTime1.getMs();
    java.lang.String str3 = dateTime1.toString();
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int6 = dateTime5.getHour();
    int int7 = dateTime5.getDayOfMonth();
    dateTime1.set(dateTime5);
    java.text.SimpleDateFormat simpleDateFormat11 = null;
    java.text.SimpleDateFormat simpleDateFormat12 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat11, simpleDateFormat12);
    net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat12);
    dateTime5.setSdf(simpleDateFormat12);
    java.text.SimpleDateFormat simpleDateFormat17 = null;
    net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat17);
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double21 = dateTime18.getDeltaYears(dateTime20);
    net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean26 = dateTime20.isEqual(dateTime25);
    java.util.Calendar calendar27 = dateTime20.getCal();
    java.lang.String str28 = dateTime20.toFullString();
    net.ajaskey.common.DateTime dateTime29 = net.ajaskey.common.DateTime.copy(dateTime20);
    boolean boolean30 = dateTime5.isGreaterThan(dateTime29);
    net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime(100L);
    double double37 = dateTime34.getDeltaYears(dateTime36);
    java.text.SimpleDateFormat simpleDateFormat39 = null;
    net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat39);
    net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double43 = dateTime40.getDeltaYears(dateTime42);
    boolean boolean44 = dateTime40.isWeekday();
    boolean boolean45 = dateTime34.sameDate(dateTime40);
    java.lang.String str46 = dateTime40.format();
    java.lang.String str47 = dateTime40.toString();
    java.text.SimpleDateFormat simpleDateFormat49 = null;
    net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat49);
    net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double53 = dateTime50.getDeltaYears(dateTime52);
    boolean boolean54 = dateTime50.isWeekday();
    net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime(100L);
    int int57 = dateTime56.getMs();
    java.lang.String str58 = dateTime56.toString();
    int int59 = dateTime56.getMs();
    java.util.Calendar calendar60 = dateTime56.getCal();
    dateTime50.set(calendar60);
    java.text.SimpleDateFormat simpleDateFormat62 = dateTime50.getSdf();
    boolean boolean63 = dateTime50.isWeekday();
    boolean boolean64 = net.ajaskey.common.Utils.sameMonth(dateTime40, dateTime50);
    java.lang.String str65 = dateTime50.getDay();
    boolean boolean66 = net.ajaskey.common.Utils.sameMonth(dateTime29, dateTime50);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "31-Dec-1969" + "'", str3, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 31 + "'", int7 == 31);
    org.junit.Assert.assertNotNull(simpleDateFormat12);
    org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertNotNull(calendar27);
    org.junit.Assert.assertEquals(calendar27.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str28, "Wed 31-Dec-1969 17:00:00");
    org.junit.Assert.assertNotNull(dateTime29);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-1972.041095890411d) + "'", double37 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    org.junit.Assert.assertEquals("'" + str46 + "' != '" + "BAD-DATE-FORMAT" + "'", str46, "BAD-DATE-FORMAT");
    org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
    org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
    org.junit.Assert.assertEquals("'" + str58 + "' != '" + "31-Dec-1969" + "'", str58, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int59 + "' != '" + 100 + "'", int59 == 100);
    org.junit.Assert.assertNotNull(calendar60);
    org.junit.Assert.assertEquals(calendar60.toString(),
        "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertNull(simpleDateFormat62);
    org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Wednesday" + "'", str65, "Wednesday");
    org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
  }

  @Test
  public void test944() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test944");
    java.lang.String str1 = net.ajaskey.common.Utils.getFromUrl("      719,795");
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
  }

  @Test
  public void test945() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test945");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    int int2 = dateTime1.getMs();
    java.text.SimpleDateFormat simpleDateFormat3 = net.ajaskey.common.Utils.sdf;
    dateTime1.setSdf(simpleDateFormat3);
    int int5 = dateTime1.getDayOfWeek();
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
    double double12 = dateTime9.getDeltaYears(dateTime11);
    java.util.Calendar calendar13 = dateTime9.getCal();
    dateTime1.set(calendar13);
    java.text.SimpleDateFormat simpleDateFormat16 = null;
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double20 = dateTime17.getDeltaYears(dateTime19);
    net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean25 = dateTime19.isEqual(dateTime24);
    java.util.Calendar calendar26 = dateTime19.getCal();
    net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(calendar26);
    dateTime1.set(calendar26);
    java.text.SimpleDateFormat simpleDateFormat31 = null;
    java.text.SimpleDateFormat simpleDateFormat32 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat31, simpleDateFormat32);
    net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat32);
    dateTime1.setSdf(simpleDateFormat32);
    net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime(100L);
    double double42 = dateTime39.getDeltaYears(dateTime41);
    java.text.SimpleDateFormat simpleDateFormat43 = dateTime39.getSdf();
    net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime(100L);
    double double50 = dateTime47.getDeltaYears(dateTime49);
    boolean boolean51 = dateTime49.isWeekday();
    net.ajaskey.common.DateTime dateTime54 = dateTime49.parse("31-Dec-1969", "January");
    net.ajaskey.common.DateTime dateTime55 = net.ajaskey.common.DateTime.copy(dateTime49);
    boolean boolean56 = dateTime39.sameDate(dateTime55);
    net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int59 = dateTime58.getDayOfWeek();
    int int60 = dateTime55.getYears(dateTime58);
    boolean boolean61 = dateTime1.isGreaterThan(dateTime55);
    java.text.SimpleDateFormat simpleDateFormat63 = null;
    java.text.SimpleDateFormat simpleDateFormat64 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat63, simpleDateFormat64);
    net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime(100L);
    double double72 = dateTime69.getDeltaYears(dateTime71);
    boolean boolean73 = dateTime71.isWeekday();
    java.util.Date date74 = dateTime71.getTime();
    java.lang.String str75 = dateTime71.toString();
    net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime(100L);
    int int78 = dateTime77.getMs();
    net.ajaskey.common.DateTime dateTime82 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime84 = new net.ajaskey.common.DateTime(100L);
    double double85 = dateTime82.getDeltaYears(dateTime84);
    java.text.SimpleDateFormat simpleDateFormat86 = dateTime82.getSdf();
    boolean boolean87 = dateTime77.isLessThanOrEqual(dateTime82);
    boolean boolean88 = dateTime71.isLessThan(dateTime82);
    java.lang.String str89 = dateTime71.toString();
    long long90 = dateTime65.getDeltaMilliSeconds(dateTime71);
    int int91 = dateTime71.getDayOfWeek();
    boolean boolean92 = net.ajaskey.common.Utils.sameDate(dateTime1, dateTime71);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat3);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 4 + "'", int5 == 4);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1972.041095890411d) + "'", double12 == (-1972.041095890411d));
    org.junit.Assert.assertNotNull(calendar13);
// flaky:         org.junit.Assert.assertEquals(calendar13.toString(), "java.util.GregorianCalendar[time=-62190298583411,areFieldsSet=true,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=3,SECOND=36,MILLISECOND=589,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertNotNull(calendar26);
    org.junit.Assert.assertEquals(calendar26.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertNotNull(simpleDateFormat32);
    org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-1972.041095890411d) + "'", double42 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat43);
    org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-1972.041095890411d) + "'", double50 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    org.junit.Assert.assertNull(dateTime54);
    org.junit.Assert.assertNotNull(dateTime55);
    org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    org.junit.Assert.assertTrue("'" + int59 + "' != '" + 4 + "'", int59 == 4);
    org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
    org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    org.junit.Assert.assertNotNull(simpleDateFormat64);
    org.junit.Assert.assertTrue("'" + double72 + "' != '" + (-1972.041095890411d) + "'", double72 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    org.junit.Assert.assertNotNull(date74);
    org.junit.Assert.assertEquals(date74.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str75 + "' != '" + "31-Dec-1969" + "'", str75, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int78 + "' != '" + 100 + "'", int78 == 100);
    org.junit.Assert.assertTrue("'" + double85 + "' != '" + (-1972.041095890411d) + "'", double85 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat86);
    org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    org.junit.Assert.assertEquals("'" + str89 + "' != '" + "31-Dec-1969" + "'", str89, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + long90 + "' != '" + 0L + "'", long90 == 0L);
    org.junit.Assert.assertTrue("'" + int91 + "' != '" + 4 + "'", int91 == 4);
    org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
  }

  @Test
  public void test946() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test946");
    java.text.SimpleDateFormat simpleDateFormat4 = null;
    java.text.SimpleDateFormat simpleDateFormat5 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat4, simpleDateFormat5);
    net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat5);
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime("         14", simpleDateFormat5);
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("      -62,190,298,597,820", simpleDateFormat5);
    org.junit.Assert.assertNotNull(simpleDateFormat5);
  }

  @Test
  public void test947() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test947");
    java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readTextFile("           365", false);
    java.lang.String str3 = net.ajaskey.common.TextUtils.toString(strList2);
    org.junit.Assert.assertNotNull(strList2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
  }

  @Test
  public void test948() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test948");
    java.text.SimpleDateFormat simpleDateFormat5 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat7 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat8 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("", simpleDateFormat7, simpleDateFormat8);
    net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat5, simpleDateFormat8);
    java.text.SimpleDateFormat simpleDateFormat12 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat13 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime("", simpleDateFormat12, simpleDateFormat13);
    net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime("", simpleDateFormat8, simpleDateFormat13);
    java.text.SimpleDateFormat simpleDateFormat18 = null;
    java.text.SimpleDateFormat simpleDateFormat19 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat18, simpleDateFormat19);
    net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat19);
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime("Fri 31-Dec-0001 17:00:00", simpleDateFormat8, simpleDateFormat19);
    net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime("      0.00", simpleDateFormat8);
    net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("365.00", simpleDateFormat8);
    net.ajaskey.common.DateTime dateTime27 = dateTime24
        .parse("                                                                                 -62,190,298,606,387", "Thu 10-Apr-0002 14:03:23");
    // The following exception was thrown during execution in test generation
    try {
      int int28 = dateTime27.getDayOfWeek();
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
    }
    catch (java.lang.NullPointerException e) {
      // Expected exception.
    }
    org.junit.Assert.assertNotNull(simpleDateFormat5);
    org.junit.Assert.assertNotNull(simpleDateFormat7);
    org.junit.Assert.assertNotNull(simpleDateFormat8);
    org.junit.Assert.assertNotNull(simpleDateFormat12);
    org.junit.Assert.assertNotNull(simpleDateFormat13);
    org.junit.Assert.assertNotNull(simpleDateFormat19);
    org.junit.Assert.assertNull(dateTime27);
  }

  @Test
  public void test949() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test949");
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime(
        "UNKNOWNJanuary31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969JanuaryJanuary31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969hi!January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969JanuaryJanuary31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969Wed 31-Dec-1969 17:00:00January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969       10.00January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        "Thursday");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(dateTime2);
  }

  @Test
  public void test950() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test950");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    boolean boolean7 = dateTime5.isWeekday();
    boolean boolean8 = dateTime5.isWeekday();
    net.ajaskey.common.DateTime dateTime10 = dateTime5.parse("Wednesday");
    java.util.Calendar calendar11 = dateTime5.getCal();
    java.lang.String str12 = dateTime5.format();
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    org.junit.Assert.assertNull(dateTime10);
    org.junit.Assert.assertNotNull(calendar11);
    org.junit.Assert.assertEquals(calendar11.toString(),
        "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "BAD-DATE-FORMAT" + "'", str12, "BAD-DATE-FORMAT");
  }

  @Test
  public void test951() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test951");
    java.text.SimpleDateFormat simpleDateFormat5 = null;
    java.text.SimpleDateFormat simpleDateFormat6 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat5, simpleDateFormat6);
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat6);
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("Fri 31-Dec-0001 17:00:00", simpleDateFormat6);
    java.text.SimpleDateFormat simpleDateFormat11 = null;
    java.text.SimpleDateFormat simpleDateFormat16 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat18 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat19 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("", simpleDateFormat18, simpleDateFormat19);
    net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat16,
        simpleDateFormat19);
    java.text.SimpleDateFormat simpleDateFormat22 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime("", simpleDateFormat19, simpleDateFormat22);
    net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat22);
    net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime(
        "                                                                                                                                                                                                                                                                                                                                                                        35.00",
        simpleDateFormat22);
    net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(" 97.00", simpleDateFormat11, simpleDateFormat22);
    net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime("Wed 02-May-0014 14:03:29", simpleDateFormat6, simpleDateFormat11);
    net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(
        "January         52         52                                                                                               52.00         52hi!         52",
        simpleDateFormat6);
    org.junit.Assert.assertNotNull(simpleDateFormat6);
    org.junit.Assert.assertNotNull(simpleDateFormat16);
    org.junit.Assert.assertNotNull(simpleDateFormat18);
    org.junit.Assert.assertNotNull(simpleDateFormat19);
    org.junit.Assert.assertNotNull(simpleDateFormat22);
  }

  @Test
  public void test952() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test952");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    dateTime1.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str6 = dateTime1.getMonth();
    java.text.SimpleDateFormat simpleDateFormat8 = null;
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double12 = dateTime9.getDeltaYears(dateTime11);
    boolean boolean13 = dateTime1.isLessThan(dateTime9);
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(100L);
    double double20 = dateTime17.getDeltaYears(dateTime19);
    net.ajaskey.common.DateTime dateTime21 = null;
    long long22 = dateTime17.getDeltaDays(dateTime21);
    boolean boolean23 = dateTime9.isLessThanOrEqual(dateTime17);
    net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(100L);
    double double30 = dateTime27.getDeltaYears(dateTime29);
    int int31 = dateTime27.getHour();
    boolean boolean32 = net.ajaskey.common.Utils.sameMonth(dateTime17, dateTime27);
    net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime(dateTime17);
    net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime(dateTime33);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "January" + "'", str6, "January");
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-1972.041095890411d) + "'", double20 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-1972.041095890411d) + "'", double30 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
  }

  @Test
  public void test954() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test954");
    java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat6 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat7 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime("", simpleDateFormat6, simpleDateFormat7);
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat4, simpleDateFormat7);
    java.text.SimpleDateFormat simpleDateFormat10 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime("", simpleDateFormat7, simpleDateFormat10);
    java.text.SimpleDateFormat simpleDateFormat13 = null;
    java.text.SimpleDateFormat simpleDateFormat14 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat13, simpleDateFormat14);
    java.lang.String str16 = dateTime15.getDay();
    java.lang.String str17 = dateTime15.getMonth();
    java.text.SimpleDateFormat simpleDateFormat20 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat22 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat23 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("", simpleDateFormat22, simpleDateFormat23);
    net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat20,
        simpleDateFormat23);
    net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat20);
    dateTime15.setSdf(simpleDateFormat20);
    net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime("97", simpleDateFormat10, simpleDateFormat20);
    java.text.SimpleDateFormat simpleDateFormat29 = null;
    net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 14:03:31", simpleDateFormat10, simpleDateFormat29);
    org.junit.Assert.assertNotNull(simpleDateFormat4);
    org.junit.Assert.assertNotNull(simpleDateFormat6);
    org.junit.Assert.assertNotNull(simpleDateFormat7);
    org.junit.Assert.assertNotNull(simpleDateFormat10);
    org.junit.Assert.assertNotNull(simpleDateFormat14);
    org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UNKNOWN" + "'", str16, "UNKNOWN");
    org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UNKNOWN" + "'", str17, "UNKNOWN");
    org.junit.Assert.assertNotNull(simpleDateFormat20);
    org.junit.Assert.assertNotNull(simpleDateFormat22);
    org.junit.Assert.assertNotNull(simpleDateFormat23);
  }

  @Test
  public void test955() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test955");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    dateTime1.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str6 = dateTime1.getMonth();
    java.text.SimpleDateFormat simpleDateFormat8 = null;
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double12 = dateTime9.getDeltaYears(dateTime11);
    boolean boolean13 = dateTime1.isLessThan(dateTime9);
    java.lang.String str14 = dateTime1.format();
    net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(100L);
    int int17 = dateTime16.getMs();
    java.text.SimpleDateFormat simpleDateFormat18 = net.ajaskey.common.Utils.sdf;
    dateTime16.setSdf(simpleDateFormat18);
    int int20 = dateTime16.getDayOfWeek();
    net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(100L);
    double double27 = dateTime24.getDeltaYears(dateTime26);
    java.util.Calendar calendar28 = dateTime24.getCal();
    dateTime16.set(calendar28);
    java.text.SimpleDateFormat simpleDateFormat31 = null;
    net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat31);
    net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double35 = dateTime32.getDeltaYears(dateTime34);
    net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean40 = dateTime34.isEqual(dateTime39);
    java.util.Calendar calendar41 = dateTime34.getCal();
    net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime(calendar41);
    dateTime16.set(calendar41);
    int int44 = dateTime1.getYears(dateTime16);
    dateTime16.add(0, 365);
    org.junit.Assert.assertEquals("'" + str6 + "' != '" + "January" + "'", str6, "January");
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    org.junit.Assert.assertEquals("'" + str14 + "' != '" + "BAD-DATE-FORMAT" + "'", str14, "BAD-DATE-FORMAT");
    org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat18);
    org.junit.Assert.assertTrue("'" + int20 + "' != '" + 4 + "'", int20 == 4);
    org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-1972.041095890411d) + "'", double27 == (-1972.041095890411d));
    org.junit.Assert.assertNotNull(calendar28);
// flaky:         org.junit.Assert.assertEquals(calendar28.toString(), "java.util.GregorianCalendar[time=-62190298583267,areFieldsSet=true,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=3,SECOND=36,MILLISECOND=733,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    org.junit.Assert.assertNotNull(calendar41);
    org.junit.Assert.assertEquals(calendar41.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1869 + "'", int44 == 1869);
  }

  @Test
  public void test956() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test956");
    java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readTextFile("UNKNOWN", false);
    net.ajaskey.common.TextUtils.print(strList2);
    org.junit.Assert.assertNotNull(strList2);
  }

  @Test
  public void test957() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test957");
    java.lang.String str2 = net.ajaskey.common.Utils.fmt((double) (-62190298587649L), 1967);
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Invalid fmt" + "'", str2, "Invalid fmt");
  }

  @Test
  public void test958() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test958");
    java.text.SimpleDateFormat simpleDateFormat1 = null;
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
    net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double5 = dateTime2.getDeltaYears(dateTime4);
    boolean boolean6 = dateTime2.isWeekday();
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
    int int9 = dateTime8.getMs();
    java.lang.String str10 = dateTime8.toString();
    int int11 = dateTime8.getMs();
    java.util.Calendar calendar12 = dateTime8.getCal();
    dateTime2.set(calendar12);
    net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(dateTime2);
    net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(dateTime14);
    java.text.SimpleDateFormat simpleDateFormat16 = dateTime15.getSdf();
    int int17 = dateTime15.getDayOfMonth();
    org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
    org.junit.Assert.assertEquals("'" + str10 + "' != '" + "31-Dec-1969" + "'", str10, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
    org.junit.Assert.assertNotNull(calendar12);
    org.junit.Assert.assertEquals(calendar12.toString(),
        "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertNull(simpleDateFormat16);
    org.junit.Assert.assertTrue("'" + int17 + "' != '" + 31 + "'", int17 == 31);
  }

  @Test
  public void test959() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test959");
    java.text.SimpleDateFormat simpleDateFormat1 = null;
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
    net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double5 = dateTime2.getDeltaYears(dateTime4);
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean10 = dateTime4.isEqual(dateTime9);
    java.text.SimpleDateFormat simpleDateFormat12 = null;
    java.text.SimpleDateFormat simpleDateFormat13 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat12, simpleDateFormat13);
    net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime(100L);
    double double21 = dateTime18.getDeltaYears(dateTime20);
    boolean boolean22 = dateTime20.isWeekday();
    java.util.Date date23 = dateTime20.getTime();
    java.lang.String str24 = dateTime20.toString();
    net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(100L);
    int int27 = dateTime26.getMs();
    net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime(100L);
    double double34 = dateTime31.getDeltaYears(dateTime33);
    java.text.SimpleDateFormat simpleDateFormat35 = dateTime31.getSdf();
    boolean boolean36 = dateTime26.isLessThanOrEqual(dateTime31);
    boolean boolean37 = dateTime20.isLessThan(dateTime31);
    java.lang.String str38 = dateTime20.toString();
    long long39 = dateTime14.getDeltaMilliSeconds(dateTime20);
    net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(100L);
    double double46 = dateTime43.getDeltaYears(dateTime45);
    boolean boolean47 = dateTime45.isWeekday();
    java.util.Date date48 = dateTime45.getTime();
    int int49 = dateTime45.getMinute();
    boolean boolean50 = dateTime14.sameDate(dateTime45);
    int int51 = dateTime4.getYears(dateTime45);
    int int52 = dateTime45.getDayOfWeek();
    java.lang.String str53 = dateTime45.toString();
    net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime(dateTime45);
    int int55 = dateTime54.getDayOfWeek();
    org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertNotNull(simpleDateFormat13);
    org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-1972.041095890411d) + "'", double21 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    org.junit.Assert.assertNotNull(date23);
    org.junit.Assert.assertEquals(date23.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str24 + "' != '" + "31-Dec-1969" + "'", str24, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
    org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-1972.041095890411d) + "'", double34 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat35);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    org.junit.Assert.assertEquals("'" + str38 + "' != '" + "31-Dec-1969" + "'", str38, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
    org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-1972.041095890411d) + "'", double46 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    org.junit.Assert.assertNotNull(date48);
    org.junit.Assert.assertEquals(date48.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
    org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
    org.junit.Assert.assertTrue("'" + int52 + "' != '" + 4 + "'", int52 == 4);
    org.junit.Assert.assertEquals("'" + str53 + "' != '" + "31-Dec-1969" + "'", str53, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int55 + "' != '" + 4 + "'", int55 == 4);
  }

  @Test
  public void test960() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test960");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    boolean boolean7 = dateTime5.isWeekday();
    java.util.Date date8 = dateTime5.getTime();
    java.lang.String str9 = dateTime5.toString();
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(3, (int) '4', (int) (byte) 0);
    boolean boolean14 = dateTime5.isGreaterThan(dateTime13);
    java.text.SimpleDateFormat simpleDateFormat16 = null;
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
    net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double20 = dateTime17.getDeltaYears(dateTime19);
    net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean25 = dateTime19.isEqual(dateTime24);
    java.util.Calendar calendar26 = dateTime19.getCal();
    net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(calendar26);
    net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(calendar26);
    boolean boolean29 = dateTime5.isLessThan(dateTime28);
    java.text.SimpleDateFormat simpleDateFormat31 = null;
    net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat31);
    net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double35 = dateTime32.getDeltaYears(dateTime34);
    boolean boolean36 = dateTime32.isWeekday();
    java.lang.String str37 = dateTime32.getDay();
    java.util.Calendar calendar38 = dateTime32.getCal();
    boolean boolean39 = dateTime5.isLessThan(dateTime32);
    net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime(dateTime32);
    java.util.Date date41 = dateTime32.getTime();
    net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime(100L);
    int int44 = dateTime43.getMs();
    java.lang.String str45 = dateTime43.toString();
    int int46 = dateTime43.getMs();
    java.util.Calendar calendar47 = dateTime43.getCal();
    dateTime32.set(calendar47);
    net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime(calendar47);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    org.junit.Assert.assertNotNull(date8);
    org.junit.Assert.assertEquals(date8.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "31-Dec-1969" + "'", str9, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertNotNull(calendar26);
    org.junit.Assert.assertEquals(calendar26.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    org.junit.Assert.assertEquals("'" + str37 + "' != '" + "UNKNOWN" + "'", str37, "UNKNOWN");
    org.junit.Assert.assertNull(calendar38);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    org.junit.Assert.assertNull(date41);
    org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
    org.junit.Assert.assertEquals("'" + str45 + "' != '" + "31-Dec-1969" + "'", str45, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
    org.junit.Assert.assertNotNull(calendar47);
    org.junit.Assert.assertEquals(calendar47.toString(),
        "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
  }

  @Test
  public void test961() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test961");
    java.text.SimpleDateFormat simpleDateFormat1 = null;
    java.text.SimpleDateFormat simpleDateFormat2 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat1, simpleDateFormat2);
    net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(100L);
    double double10 = dateTime7.getDeltaYears(dateTime9);
    boolean boolean11 = dateTime9.isWeekday();
    java.util.Date date12 = dateTime9.getTime();
    java.lang.String str13 = dateTime9.toString();
    net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(100L);
    int int16 = dateTime15.getMs();
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(100L);
    double double23 = dateTime20.getDeltaYears(dateTime22);
    java.text.SimpleDateFormat simpleDateFormat24 = dateTime20.getSdf();
    boolean boolean25 = dateTime15.isLessThanOrEqual(dateTime20);
    boolean boolean26 = dateTime9.isLessThan(dateTime20);
    java.lang.String str27 = dateTime9.toString();
    long long28 = dateTime3.getDeltaMilliSeconds(dateTime9);
    java.lang.String str29 = dateTime9.getDay();
    int int30 = dateTime9.getSecond();
    net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime(100L);
    int int33 = dateTime32.getMs();
    java.text.SimpleDateFormat simpleDateFormat34 = net.ajaskey.common.Utils.sdf;
    dateTime32.setSdf(simpleDateFormat34);
    int int36 = dateTime32.getDayOfWeek();
    boolean boolean37 = net.ajaskey.common.Utils.sameMonth(dateTime9, dateTime32);
    net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime(100L);
    double double44 = dateTime41.getDeltaYears(dateTime43);
    java.text.SimpleDateFormat simpleDateFormat46 = null;
    net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat46);
    net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double50 = dateTime47.getDeltaYears(dateTime49);
    net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean55 = dateTime49.isEqual(dateTime54);
    int int56 = dateTime49.getDayOfWeek();
    dateTime43.set(dateTime49);
    int int58 = dateTime9.getYears(dateTime43);
    org.junit.Assert.assertNotNull(simpleDateFormat2);
    org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1972.041095890411d) + "'", double10 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    org.junit.Assert.assertNotNull(date12);
    org.junit.Assert.assertEquals(date12.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "31-Dec-1969" + "'", str13, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
    org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-1972.041095890411d) + "'", double23 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat24);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "31-Dec-1969" + "'", str27, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
    org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Wednesday" + "'", str29, "Wednesday");
    org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
    org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat34);
    org.junit.Assert.assertTrue("'" + int36 + "' != '" + 4 + "'", int36 == 4);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-1972.041095890411d) + "'", double44 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    org.junit.Assert.assertTrue("'" + int56 + "' != '" + 4 + "'", int56 == 4);
    org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
  }

  @Test
  public void test962() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test962");
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime(100L);
    int int3 = dateTime2.getMs();
    java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdf;
    dateTime2.setSdf(simpleDateFormat4);
    net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 14:03:11", simpleDateFormat4);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat4);
  }

  @Test
  public void test963() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test963");
    java.text.SimpleDateFormat simpleDateFormat1 = null;
    java.text.SimpleDateFormat simpleDateFormat2 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat1, simpleDateFormat2);
    net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(100L);
    double double10 = dateTime7.getDeltaYears(dateTime9);
    boolean boolean11 = dateTime9.isWeekday();
    java.util.Date date12 = dateTime9.getTime();
    java.lang.String str13 = dateTime9.toString();
    net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(100L);
    int int16 = dateTime15.getMs();
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(100L);
    double double23 = dateTime20.getDeltaYears(dateTime22);
    java.text.SimpleDateFormat simpleDateFormat24 = dateTime20.getSdf();
    boolean boolean25 = dateTime15.isLessThanOrEqual(dateTime20);
    boolean boolean26 = dateTime9.isLessThan(dateTime20);
    java.lang.String str27 = dateTime9.toString();
    long long28 = dateTime3.getDeltaMilliSeconds(dateTime9);
    int int29 = dateTime9.getDayOfWeek();
    int int30 = dateTime9.getMinute();
    org.junit.Assert.assertNotNull(simpleDateFormat2);
    org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1972.041095890411d) + "'", double10 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    org.junit.Assert.assertNotNull(date12);
    org.junit.Assert.assertEquals(date12.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "31-Dec-1969" + "'", str13, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
    org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-1972.041095890411d) + "'", double23 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat24);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "31-Dec-1969" + "'", str27, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
    org.junit.Assert.assertTrue("'" + int29 + "' != '" + 4 + "'", int29 == 4);
    org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
  }

  @Test
  public void test964() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test964");
    java.lang.String str1 = net.ajaskey.common.Utils.getFromUrl(" 7");
    org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
  }

  @Test
  public void test965() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test965");
    java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readGzipFile("Thu 10-Apr-0002 14:03:23", true);
    org.junit.Assert.assertNull(strList2);
  }

  @Test
  public void test966() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test966");
    net.ajaskey.common.DateTime dateTime0 = null;
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(dateTime0);
    java.text.SimpleDateFormat simpleDateFormat3 = null;
    java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat3, simpleDateFormat4);
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
    double double12 = dateTime9.getDeltaYears(dateTime11);
    boolean boolean13 = dateTime11.isWeekday();
    java.util.Date date14 = dateTime11.getTime();
    java.lang.String str15 = dateTime11.toString();
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(100L);
    int int18 = dateTime17.getMs();
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime(100L);
    double double25 = dateTime22.getDeltaYears(dateTime24);
    java.text.SimpleDateFormat simpleDateFormat26 = dateTime22.getSdf();
    boolean boolean27 = dateTime17.isLessThanOrEqual(dateTime22);
    boolean boolean28 = dateTime11.isLessThan(dateTime22);
    java.lang.String str29 = dateTime11.toString();
    long long30 = dateTime5.getDeltaMilliSeconds(dateTime11);
    int int31 = dateTime11.getDayOfWeek();
    boolean boolean32 = net.ajaskey.common.Utils.sameDate(dateTime0, dateTime11);
    net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime(100L);
    int int35 = dateTime34.getMs();
    net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime(100L);
    double double42 = dateTime39.getDeltaYears(dateTime41);
    java.text.SimpleDateFormat simpleDateFormat43 = dateTime39.getSdf();
    boolean boolean44 = dateTime34.isLessThanOrEqual(dateTime39);
    dateTime39.setFirstWorkDay();
    boolean boolean46 = dateTime11.isGreaterThan(dateTime39);
    java.lang.String str47 = dateTime39.format();
    java.lang.String str48 = dateTime39.getMonth();
    org.junit.Assert.assertNotNull(simpleDateFormat4);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1972.041095890411d) + "'", double12 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    org.junit.Assert.assertNotNull(date14);
    org.junit.Assert.assertEquals(date14.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str15 + "' != '" + "31-Dec-1969" + "'", str15, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
    org.junit.Assert.assertTrue("'" + double25 + "' != '" + (-1972.041095890411d) + "'", double25 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat26);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    org.junit.Assert.assertEquals("'" + str29 + "' != '" + "31-Dec-1969" + "'", str29, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
    org.junit.Assert.assertTrue("'" + int31 + "' != '" + 4 + "'", int31 == 4);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
    org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-1972.041095890411d) + "'", double42 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat43);
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    org.junit.Assert.assertEquals("'" + str47 + "' != '" + "BAD-DATE-FORMAT" + "'", str47, "BAD-DATE-FORMAT");
    org.junit.Assert.assertEquals("'" + str48 + "' != '" + "April" + "'", str48, "April");
  }

  @Test
  public void test967() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test967");
    java.text.SimpleDateFormat simpleDateFormat1 = null;
    java.text.SimpleDateFormat simpleDateFormat2 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat1, simpleDateFormat2);
    net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(100L);
    double double10 = dateTime7.getDeltaYears(dateTime9);
    boolean boolean11 = dateTime9.isWeekday();
    java.util.Date date12 = dateTime9.getTime();
    java.lang.String str13 = dateTime9.toString();
    net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(100L);
    int int16 = dateTime15.getMs();
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(100L);
    double double23 = dateTime20.getDeltaYears(dateTime22);
    java.text.SimpleDateFormat simpleDateFormat24 = dateTime20.getSdf();
    boolean boolean25 = dateTime15.isLessThanOrEqual(dateTime20);
    boolean boolean26 = dateTime9.isLessThan(dateTime20);
    java.lang.String str27 = dateTime9.toString();
    long long28 = dateTime3.getDeltaMilliSeconds(dateTime9);
    net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime(100L);
    double double35 = dateTime32.getDeltaYears(dateTime34);
    boolean boolean36 = dateTime34.isWeekday();
    java.util.Date date37 = dateTime34.getTime();
    int int38 = dateTime34.getMinute();
    boolean boolean39 = dateTime3.sameDate(dateTime34);
    net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int42 = dateTime41.getHour();
    int int43 = dateTime41.getDayOfMonth();
    int int44 = dateTime41.getYear();
    net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(dateTime41);
    boolean boolean46 = net.ajaskey.common.Utils.sameDate(dateTime34, dateTime41);
    dateTime41.setFirstWorkDay();
    org.junit.Assert.assertNotNull(simpleDateFormat2);
    org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1972.041095890411d) + "'", double10 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    org.junit.Assert.assertNotNull(date12);
    org.junit.Assert.assertEquals(date12.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "31-Dec-1969" + "'", str13, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
    org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-1972.041095890411d) + "'", double23 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat24);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "31-Dec-1969" + "'", str27, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
    org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-1972.041095890411d) + "'", double35 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    org.junit.Assert.assertNotNull(date37);
    org.junit.Assert.assertEquals(date37.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    org.junit.Assert.assertTrue("'" + int42 + "' != '" + 5 + "'", int42 == 5);
    org.junit.Assert.assertTrue("'" + int43 + "' != '" + 31 + "'", int43 == 31);
    org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1969 + "'", int44 == 1969);
    org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
  }

  @Test
  public void test968() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test968");
    java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readTextFile("Thu 10-Apr-0002 14:03:16", true);
    java.lang.String str3 = net.ajaskey.common.TextUtils.toString(strList2);
    org.junit.Assert.assertNotNull(strList2);
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
  }

  @Test
  public void test969() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test969");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    int int2 = dateTime1.getMs();
    net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
    double double9 = dateTime6.getDeltaYears(dateTime8);
    java.text.SimpleDateFormat simpleDateFormat10 = dateTime6.getSdf();
    boolean boolean11 = dateTime1.isLessThanOrEqual(dateTime6);
    java.lang.String str12 = dateTime1.getDay();
    java.text.SimpleDateFormat simpleDateFormat16 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat18 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat19 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("", simpleDateFormat18, simpleDateFormat19);
    net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat16,
        simpleDateFormat19);
    java.text.SimpleDateFormat simpleDateFormat23 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat24 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("", simpleDateFormat23, simpleDateFormat24);
    net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime("", simpleDateFormat19, simpleDateFormat24);
    java.text.SimpleDateFormat simpleDateFormat29 = null;
    java.text.SimpleDateFormat simpleDateFormat30 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat29, simpleDateFormat30);
    net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat30);
    net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime("Fri 31-Dec-0001 17:00:00", simpleDateFormat19, simpleDateFormat30);
    dateTime1.setSdf(simpleDateFormat30);
    java.text.SimpleDateFormat simpleDateFormat36 = null;
    net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat36);
    net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double40 = dateTime37.getDeltaYears(dateTime39);
    boolean boolean41 = dateTime37.isWeekday();
    java.lang.String str42 = dateTime37.getDay();
    java.util.Calendar calendar43 = dateTime37.getCal();
    java.text.SimpleDateFormat simpleDateFormat45 = null;
    java.text.SimpleDateFormat simpleDateFormat46 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat45, simpleDateFormat46);
    int int48 = dateTime47.getDayOfMonth();
    boolean boolean49 = dateTime47.isWeekday();
    java.lang.String str50 = dateTime47.toFullString();
    net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime(100L);
    dateTime52.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str57 = dateTime52.getMonth();
    java.lang.String str58 = dateTime52.format();
    int int59 = dateTime47.getYears(dateTime52);
    boolean boolean60 = net.ajaskey.common.Utils.sameMonth(dateTime37, dateTime52);
    net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime(100L);
    int int63 = dateTime62.getMs();
    java.text.SimpleDateFormat simpleDateFormat64 = net.ajaskey.common.Utils.sdf;
    dateTime62.setSdf(simpleDateFormat64);
    int int66 = dateTime62.getDayOfWeek();
    net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime72 = new net.ajaskey.common.DateTime(100L);
    double double73 = dateTime70.getDeltaYears(dateTime72);
    java.util.Calendar calendar74 = dateTime70.getCal();
    dateTime62.set(calendar74);
    net.ajaskey.common.DateTime dateTime79 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime81 = new net.ajaskey.common.DateTime(100L);
    double double82 = dateTime79.getDeltaYears(dateTime81);
    boolean boolean83 = dateTime81.isWeekday();
    java.util.Date date84 = dateTime81.getTime();
    dateTime62.set(date84);
    net.ajaskey.common.DateTime dateTime86 = new net.ajaskey.common.DateTime(date84);
    dateTime52.set(date84);
    dateTime1.set(date84);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Wednesday" + "'", str12, "Wednesday");
    org.junit.Assert.assertNotNull(simpleDateFormat16);
    org.junit.Assert.assertNotNull(simpleDateFormat18);
    org.junit.Assert.assertNotNull(simpleDateFormat19);
    org.junit.Assert.assertNotNull(simpleDateFormat23);
    org.junit.Assert.assertNotNull(simpleDateFormat24);
    org.junit.Assert.assertNotNull(simpleDateFormat30);
    org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    org.junit.Assert.assertEquals("'" + str42 + "' != '" + "UNKNOWN" + "'", str42, "UNKNOWN");
    org.junit.Assert.assertNull(calendar43);
    org.junit.Assert.assertNotNull(simpleDateFormat46);
    org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Invalid Time" + "'", str50, "Invalid Time");
    org.junit.Assert.assertEquals("'" + str57 + "' != '" + "January" + "'", str57, "January");
    org.junit.Assert.assertEquals("'" + str58 + "' != '" + "BAD-DATE-FORMAT" + "'", str58, "BAD-DATE-FORMAT");
    org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
    org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    org.junit.Assert.assertTrue("'" + int63 + "' != '" + 100 + "'", int63 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat64);
    org.junit.Assert.assertTrue("'" + int66 + "' != '" + 4 + "'", int66 == 4);
    org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-1972.041095890411d) + "'", double73 == (-1972.041095890411d));
    org.junit.Assert.assertNotNull(calendar74);
// flaky:         org.junit.Assert.assertEquals(calendar74.toString(), "java.util.GregorianCalendar[time=-62190298583048,areFieldsSet=true,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=3,SECOND=36,MILLISECOND=952,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-1972.041095890411d) + "'", double82 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    org.junit.Assert.assertNotNull(date84);
    org.junit.Assert.assertEquals(date84.toString(), "Wed Dec 31 17:00:00 MST 1969");
  }

  @Test
  public void test971() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test971");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    java.text.SimpleDateFormat simpleDateFormat7 = dateTime3.getSdf();
    java.util.Date date8 = null;
    dateTime3.set(date8);
    net.ajaskey.common.DateTime dateTime12 = dateTime3.parse(
        "                                                                                                   7",
        "                                                                                                   7");
    int int13 = dateTime12.getYear();
    dateTime12.set(9, (int) '4', (int) (byte) -1);
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("1", "Thu 10-Apr-0002 14:03:13");
    net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) 10, (int) (byte) -1, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime25 = net.ajaskey.common.DateTime.copy(dateTime24);
    boolean boolean26 = net.ajaskey.common.Utils.sameMonth(dateTime20, dateTime25);
    double double27 = dateTime12.getDeltaYears(dateTime25);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat7);
    org.junit.Assert.assertNotNull(dateTime12);
    org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1970 + "'", int13 == 1970);
    org.junit.Assert.assertNotNull(dateTime25);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertTrue("'" + double27 + "' != '" + 3.136986301369863d + "'", double27 == 3.136986301369863d);
  }

  @Test
  public void test972() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test972");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((-98L));
  }

  @Test
  public void test973() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test973");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int2 = dateTime1.getHour();
    int int3 = dateTime1.getDayOfMonth();
    int int4 = dateTime1.getYear();
    java.util.Calendar calendar5 = dateTime1.getCal();
    int int6 = dateTime1.getYear();
    java.util.Date date7 = dateTime1.getTime();
    java.text.SimpleDateFormat simpleDateFormat9 = null;
    net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat9);
    net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double13 = dateTime10.getDeltaYears(dateTime12);
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean18 = dateTime12.isEqual(dateTime17);
    java.text.SimpleDateFormat simpleDateFormat20 = null;
    java.text.SimpleDateFormat simpleDateFormat21 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat20, simpleDateFormat21);
    net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(100L);
    double double29 = dateTime26.getDeltaYears(dateTime28);
    boolean boolean30 = dateTime28.isWeekday();
    java.util.Date date31 = dateTime28.getTime();
    java.lang.String str32 = dateTime28.toString();
    net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime(100L);
    int int35 = dateTime34.getMs();
    net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime(100L);
    double double42 = dateTime39.getDeltaYears(dateTime41);
    java.text.SimpleDateFormat simpleDateFormat43 = dateTime39.getSdf();
    boolean boolean44 = dateTime34.isLessThanOrEqual(dateTime39);
    boolean boolean45 = dateTime28.isLessThan(dateTime39);
    java.lang.String str46 = dateTime28.toString();
    long long47 = dateTime22.getDeltaMilliSeconds(dateTime28);
    net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime(100L);
    double double54 = dateTime51.getDeltaYears(dateTime53);
    boolean boolean55 = dateTime53.isWeekday();
    java.util.Date date56 = dateTime53.getTime();
    int int57 = dateTime53.getMinute();
    boolean boolean58 = dateTime22.sameDate(dateTime53);
    int int59 = dateTime12.getYears(dateTime53);
    int int60 = dateTime53.getHour();
    net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime(0L);
    int int63 = dateTime62.getMs();
    java.text.SimpleDateFormat simpleDateFormat65 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat67 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat68 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime("", simpleDateFormat67, simpleDateFormat68);
    net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat65,
        simpleDateFormat68);
    dateTime62.setSdf(simpleDateFormat68);
    dateTime53.setSdf(simpleDateFormat68);
    boolean boolean73 = dateTime1.isLessThan(dateTime53);
    net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime79 = new net.ajaskey.common.DateTime(100L);
    double double80 = dateTime77.getDeltaYears(dateTime79);
    boolean boolean81 = dateTime79.isWeekday();
    java.util.Date date82 = dateTime79.getTime();
    java.lang.String str83 = dateTime79.toString();
    boolean boolean84 = dateTime53.isLessThanOrEqual(dateTime79);
    int int85 = dateTime79.getSecond();
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 5 + "'", int2 == 5);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 31 + "'", int3 == 31);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1969 + "'", int4 == 1969);
    org.junit.Assert.assertNotNull(calendar5);
    org.junit.Assert.assertEquals(calendar5.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1969 + "'", int6 == 1969);
    org.junit.Assert.assertNotNull(date7);
    org.junit.Assert.assertEquals(date7.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    org.junit.Assert.assertNotNull(simpleDateFormat21);
    org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-1972.041095890411d) + "'", double29 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    org.junit.Assert.assertNotNull(date31);
    org.junit.Assert.assertEquals(date31.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str32 + "' != '" + "31-Dec-1969" + "'", str32, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
    org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-1972.041095890411d) + "'", double42 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat43);
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    org.junit.Assert.assertEquals("'" + str46 + "' != '" + "31-Dec-1969" + "'", str46, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
    org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-1972.041095890411d) + "'", double54 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    org.junit.Assert.assertNotNull(date56);
    org.junit.Assert.assertEquals(date56.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
    org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
    org.junit.Assert.assertTrue("'" + int60 + "' != '" + 5 + "'", int60 == 5);
    org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
    org.junit.Assert.assertNotNull(simpleDateFormat65);
    org.junit.Assert.assertNotNull(simpleDateFormat67);
    org.junit.Assert.assertNotNull(simpleDateFormat68);
    org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    org.junit.Assert.assertTrue("'" + double80 + "' != '" + (-1972.041095890411d) + "'", double80 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    org.junit.Assert.assertNotNull(date82);
    org.junit.Assert.assertEquals(date82.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str83 + "' != '" + "31-Dec-1969" + "'", str83, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
  }

  @Test
  public void test974() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test974");
    net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime(100L);
    int int5 = dateTime4.getMs();
    java.text.SimpleDateFormat simpleDateFormat6 = net.ajaskey.common.Utils.sdf;
    dateTime4.setSdf(simpleDateFormat6);
    int int8 = dateTime4.getDayOfWeek();
    net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(100L);
    double double15 = dateTime12.getDeltaYears(dateTime14);
    java.util.Calendar calendar16 = dateTime12.getCal();
    dateTime4.set(calendar16);
    java.text.SimpleDateFormat simpleDateFormat19 = null;
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat19);
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double23 = dateTime20.getDeltaYears(dateTime22);
    net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean28 = dateTime22.isEqual(dateTime27);
    java.util.Calendar calendar29 = dateTime22.getCal();
    net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime(calendar29);
    dateTime4.set(calendar29);
    java.text.SimpleDateFormat simpleDateFormat34 = null;
    java.text.SimpleDateFormat simpleDateFormat35 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat34, simpleDateFormat35);
    net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat35);
    dateTime4.setSdf(simpleDateFormat35);
    java.text.SimpleDateFormat simpleDateFormat42 = null;
    java.text.SimpleDateFormat simpleDateFormat43 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat42, simpleDateFormat43);
    net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat43);
    net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime("         14", simpleDateFormat43);
    net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime(
        "JanuaryThu 10-Apr-0002 14:03:11Thu 10-Apr-0002 14:03:11                                                                                               52.00Thu 10-Apr-0002 14:03:11hi!Thu 10-Apr-0002 14:03:11",
        simpleDateFormat35, simpleDateFormat43);
    net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 14:03:14", simpleDateFormat43);
    java.text.SimpleDateFormat simpleDateFormat52 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat54 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat55 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime("", simpleDateFormat54, simpleDateFormat55);
    net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime(
        "                                                                                               52.00", simpleDateFormat52,
        simpleDateFormat55);
    java.text.SimpleDateFormat simpleDateFormat59 = net.ajaskey.common.Utils.sdf;
    java.text.SimpleDateFormat simpleDateFormat60 = net.ajaskey.common.Utils.sdf;
    net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime("", simpleDateFormat59, simpleDateFormat60);
    net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime("", simpleDateFormat55, simpleDateFormat60);
    java.text.SimpleDateFormat simpleDateFormat65 = null;
    java.text.SimpleDateFormat simpleDateFormat66 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat65, simpleDateFormat66);
    net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat66);
    net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime("Fri 31-Dec-0001 17:00:00", simpleDateFormat55, simpleDateFormat66);
    net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat43, simpleDateFormat66);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat6);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 4 + "'", int8 == 4);
    org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-1972.041095890411d) + "'", double15 == (-1972.041095890411d));
    org.junit.Assert.assertNotNull(calendar16);
// flaky:         org.junit.Assert.assertEquals(calendar16.toString(), "java.util.GregorianCalendar[time=-62190298582950,areFieldsSet=true,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=3,SECOND=37,MILLISECOND=50,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    org.junit.Assert.assertNotNull(calendar29);
    org.junit.Assert.assertEquals(calendar29.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertNotNull(simpleDateFormat35);
    org.junit.Assert.assertNotNull(simpleDateFormat43);
    org.junit.Assert.assertNotNull(simpleDateFormat52);
    org.junit.Assert.assertNotNull(simpleDateFormat54);
    org.junit.Assert.assertNotNull(simpleDateFormat55);
    org.junit.Assert.assertNotNull(simpleDateFormat59);
    org.junit.Assert.assertNotNull(simpleDateFormat60);
    org.junit.Assert.assertNotNull(simpleDateFormat66);
  }

  @Test
  public void test975() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test975");
    java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils
        .readTextFile("                                                                                               2,020", false);
    net.ajaskey.common.TextUtils.print(strList2);
    net.ajaskey.common.TextUtils.print(strList2);
    org.junit.Assert.assertNotNull(strList2);
  }

  @Test
  public void test976() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test976");
    java.text.SimpleDateFormat simpleDateFormat1 = null;
    net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
    net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double5 = dateTime2.getDeltaYears(dateTime4);
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean10 = dateTime4.isEqual(dateTime9);
    int int11 = dateTime4.getDayOfWeek();
    java.lang.String str12 = dateTime4.format();
    dateTime4.setFirstWorkDay();
    java.util.Calendar calendar14 = dateTime4.getCal();
    org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    org.junit.Assert.assertTrue("'" + int11 + "' != '" + 4 + "'", int11 == 4);
    org.junit.Assert.assertEquals("'" + str12 + "' != '" + "BAD-DATE-FORMAT" + "'", str12, "BAD-DATE-FORMAT");
    org.junit.Assert.assertNotNull(calendar14);
    org.junit.Assert.assertEquals(calendar14.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
  }

  @Test
  public void test977() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test977");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) 1967);
    java.lang.String str3 = dateTime1.format("BAD-DATE-FORMAT");
    org.junit.Assert.assertEquals("'" + str3 + "' != '" + "BAD-DATE-FORMAT" + "'", str3, "BAD-DATE-FORMAT");
  }

  @Test
  public void test978() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test978");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
    int int2 = dateTime1.getMs();
    java.text.SimpleDateFormat simpleDateFormat3 = net.ajaskey.common.Utils.sdf;
    dateTime1.setSdf(simpleDateFormat3);
    java.lang.String str5 = dateTime1.toFullString();
    net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime(dateTime1);
    int int7 = dateTime1.getHour();
    java.util.Calendar calendar8 = dateTime1.getCal();
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat3);
    org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str5, "Wed 31-Dec-1969 17:00:00");
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 5 + "'", int7 == 5);
    org.junit.Assert.assertNotNull(calendar8);
    org.junit.Assert.assertEquals(calendar8.toString(),
        "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
  }

  @Test
  public void test979() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test979");
    net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int2 = dateTime1.getHour();
    int int3 = dateTime1.getDayOfYear();
    int int4 = dateTime1.getMs();
    int int5 = dateTime1.getDayOfWeek();
    net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime(100L);
    int int8 = dateTime7.getMs();
    java.lang.String str9 = dateTime7.toString();
    int int10 = dateTime7.getMs();
    java.util.Calendar calendar11 = dateTime7.getCal();
    net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(dateTime7);
    java.util.Calendar calendar13 = dateTime7.getCal();
    net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(100L);
    int int16 = dateTime15.getMs();
    java.text.SimpleDateFormat simpleDateFormat17 = net.ajaskey.common.Utils.sdf;
    dateTime15.setSdf(simpleDateFormat17);
    java.lang.String str19 = dateTime15.toFullString();
    net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(100L);
    int int22 = dateTime21.getMs();
    java.text.SimpleDateFormat simpleDateFormat23 = net.ajaskey.common.Utils.sdf;
    dateTime21.setSdf(simpleDateFormat23);
    java.lang.String str25 = dateTime21.toFullString();
    java.lang.String str26 = dateTime21.format();
    int int27 = dateTime15.getYears(dateTime21);
    boolean boolean28 = dateTime7.sameDate(dateTime15);
    net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime(100L);
    double double35 = dateTime32.getDeltaYears(dateTime34);
    boolean boolean36 = dateTime34.isWeekday();
    net.ajaskey.common.DateTime dateTime39 = dateTime34.parse("31-Dec-1969", "January");
    net.ajaskey.common.DateTime dateTime40 = net.ajaskey.common.DateTime.copy(dateTime34);
    dateTime40.set((int) ' ', 1970, (int) (short) -1);
    net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime((long) (short) 0);
    int int47 = dateTime46.getHour();
    int int48 = dateTime46.getDayOfMonth();
    int int49 = dateTime46.getYear();
    java.util.Calendar calendar50 = dateTime46.getCal();
    int int51 = dateTime46.getYear();
    java.util.Date date52 = dateTime46.getTime();
    dateTime40.set(date52);
    net.ajaskey.common.DateTime dateTime54 = net.ajaskey.common.DateTime.copy(dateTime40);
    boolean boolean55 = dateTime15.isEqual(dateTime54);
    long long56 = dateTime1.getDeltaDays(dateTime54);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 5 + "'", int2 == 5);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 365 + "'", int3 == 365);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 4 + "'", int5 == 4);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
    org.junit.Assert.assertEquals("'" + str9 + "' != '" + "31-Dec-1969" + "'", str9, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
    org.junit.Assert.assertNotNull(calendar11);
    org.junit.Assert.assertEquals(calendar11.toString(),
        "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertNotNull(calendar13);
    org.junit.Assert.assertEquals(calendar13.toString(),
        "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat17);
    org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str19, "Wed 31-Dec-1969 17:00:00");
    org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat23);
    org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str25, "Wed 31-Dec-1969 17:00:00");
    org.junit.Assert.assertEquals("'" + str26 + "' != '" + "31-Dec-1969" + "'", str26, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-1972.041095890411d) + "'", double35 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    org.junit.Assert.assertNull(dateTime39);
    org.junit.Assert.assertNotNull(dateTime40);
    org.junit.Assert.assertTrue("'" + int47 + "' != '" + 5 + "'", int47 == 5);
    org.junit.Assert.assertTrue("'" + int48 + "' != '" + 31 + "'", int48 == 31);
    org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1969 + "'", int49 == 1969);
    org.junit.Assert.assertNotNull(calendar50);
    org.junit.Assert.assertEquals(calendar50.toString(),
        "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1969 + "'", int51 == 1969);
    org.junit.Assert.assertNotNull(date52);
    org.junit.Assert.assertEquals(date52.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertNotNull(dateTime54);
    org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    org.junit.Assert.assertTrue("'" + long56 + "' != '" + 0L + "'", long56 == 0L);
  }

  @Test
  public void test980() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test980");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    java.text.SimpleDateFormat simpleDateFormat5 = null;
    net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat5);
    net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double9 = dateTime6.getDeltaYears(dateTime8);
    boolean boolean10 = dateTime3.isLessThan(dateTime8);
    int int11 = dateTime3.getHour();
    net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(100L);
    double double18 = dateTime15.getDeltaYears(dateTime17);
    int int19 = dateTime15.getHour();
    net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime(100L);
    double double26 = dateTime23.getDeltaYears(dateTime25);
    boolean boolean27 = dateTime25.isWeekday();
    java.util.Date date28 = dateTime25.getTime();
    java.lang.String str29 = dateTime25.toString();
    net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(100L);
    int int32 = dateTime31.getMs();
    net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime(100L);
    double double39 = dateTime36.getDeltaYears(dateTime38);
    java.text.SimpleDateFormat simpleDateFormat40 = dateTime36.getSdf();
    boolean boolean41 = dateTime31.isLessThanOrEqual(dateTime36);
    boolean boolean42 = dateTime25.isLessThan(dateTime36);
    java.lang.String str43 = dateTime25.toString();
    boolean boolean44 = dateTime15.sameDate(dateTime25);
    int int45 = dateTime3.getYears(dateTime15);
    boolean boolean46 = dateTime3.isWeekday();
    java.text.SimpleDateFormat simpleDateFormat48 = null;
    net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat48);
    net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double52 = dateTime49.getDeltaYears(dateTime51);
    net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    boolean boolean57 = dateTime51.isEqual(dateTime56);
    int int58 = dateTime51.getDayOfWeek();
    java.lang.String str59 = dateTime51.format();
    net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime(100L);
    dateTime61.set((int) (byte) 100, (-1), (int) '#');
    java.lang.String str66 = dateTime61.getMonth();
    java.text.SimpleDateFormat simpleDateFormat68 = null;
    net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat68);
    net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime((long) (short) 0);
    double double72 = dateTime69.getDeltaYears(dateTime71);
    boolean boolean73 = dateTime61.isLessThan(dateTime69);
    net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime79 = new net.ajaskey.common.DateTime(100L);
    double double80 = dateTime77.getDeltaYears(dateTime79);
    net.ajaskey.common.DateTime dateTime81 = null;
    long long82 = dateTime77.getDeltaDays(dateTime81);
    boolean boolean83 = dateTime69.isLessThanOrEqual(dateTime77);
    boolean boolean84 = dateTime51.isGreaterThanOrEqual(dateTime77);
    int int85 = dateTime3.getYears(dateTime51);
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
    org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1972.041095890411d) + "'", double18 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
    org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-1972.041095890411d) + "'", double26 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    org.junit.Assert.assertNotNull(date28);
    org.junit.Assert.assertEquals(date28.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str29 + "' != '" + "31-Dec-1969" + "'", str29, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
    org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-1972.041095890411d) + "'", double39 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat40);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    org.junit.Assert.assertEquals("'" + str43 + "' != '" + "31-Dec-1969" + "'", str43, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
    org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    org.junit.Assert.assertTrue("'" + int58 + "' != '" + 4 + "'", int58 == 4);
    org.junit.Assert.assertEquals("'" + str59 + "' != '" + "BAD-DATE-FORMAT" + "'", str59, "BAD-DATE-FORMAT");
    org.junit.Assert.assertEquals("'" + str66 + "' != '" + "January" + "'", str66, "January");
    org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
    org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    org.junit.Assert.assertTrue("'" + double80 + "' != '" + (-1972.041095890411d) + "'", double80 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + long82 + "' != '" + 0L + "'", long82 == 0L);
    org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1967 + "'", int85 == 1967);
  }

  @Test
  public void test981() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test981");
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
    double double6 = dateTime3.getDeltaYears(dateTime5);
    java.text.SimpleDateFormat simpleDateFormat7 = dateTime3.getSdf();
    net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(100L);
    double double14 = dateTime11.getDeltaYears(dateTime13);
    boolean boolean15 = dateTime13.isWeekday();
    net.ajaskey.common.DateTime dateTime18 = dateTime13.parse("31-Dec-1969", "January");
    net.ajaskey.common.DateTime dateTime19 = net.ajaskey.common.DateTime.copy(dateTime13);
    boolean boolean20 = dateTime3.sameDate(dateTime19);
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(100L);
    int int23 = dateTime22.getMs();
    net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(100L);
    double double30 = dateTime27.getDeltaYears(dateTime29);
    java.text.SimpleDateFormat simpleDateFormat31 = dateTime27.getSdf();
    boolean boolean32 = dateTime22.isLessThanOrEqual(dateTime27);
    java.lang.String str33 = dateTime22.getDay();
    boolean boolean34 = dateTime19.isLessThanOrEqual(dateTime22);
    net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime("         52",
        "                                                                                               52.00");
    java.lang.String str38 = dateTime37.toFullString();
    boolean boolean39 = dateTime19.isLessThan(dateTime37);
    net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(100L);
    double double46 = dateTime43.getDeltaYears(dateTime45);
    boolean boolean47 = dateTime45.isWeekday();
    java.util.Date date48 = dateTime45.getTime();
    java.lang.String str49 = dateTime45.toString();
    net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime((long) 2);
    java.text.SimpleDateFormat simpleDateFormat52 = dateTime51.getSdf();
    boolean boolean53 = dateTime45.sameDate(dateTime51);
    boolean boolean54 = net.ajaskey.common.Utils.sameDate(dateTime19, dateTime51);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat7);
    org.junit.Assert.assertTrue("'" + double14 + "' != '" + (-1972.041095890411d) + "'", double14 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    org.junit.Assert.assertNull(dateTime18);
    org.junit.Assert.assertNotNull(dateTime19);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
    org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-1972.041095890411d) + "'", double30 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat31);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Wednesday" + "'", str33, "Wednesday");
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Invalid Time" + "'", str38, "Invalid Time");
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-1972.041095890411d) + "'", double46 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    org.junit.Assert.assertNotNull(date48);
    org.junit.Assert.assertEquals(date48.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str49 + "' != '" + "31-Dec-1969" + "'", str49, "31-Dec-1969");
    org.junit.Assert.assertNull(simpleDateFormat52);
    org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
  }

  @Test
  public void test982() throws Throwable {
    if (debug) System.out.format("%n%s%n", "CommonTests1.test982");
    java.text.SimpleDateFormat simpleDateFormat1 = null;
    java.text.SimpleDateFormat simpleDateFormat2 = net.ajaskey.common.Utils.sdfFull;
    net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(
        "January31-Dec-196931-Dec-1969                                                                                               52.0031-Dec-1969hi!31-Dec-1969",
        simpleDateFormat1, simpleDateFormat2);
    net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(100L);
    double double10 = dateTime7.getDeltaYears(dateTime9);
    boolean boolean11 = dateTime9.isWeekday();
    java.util.Date date12 = dateTime9.getTime();
    java.lang.String str13 = dateTime9.toString();
    net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(100L);
    int int16 = dateTime15.getMs();
    net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
    net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(100L);
    double double23 = dateTime20.getDeltaYears(dateTime22);
    java.text.SimpleDateFormat simpleDateFormat24 = dateTime20.getSdf();
    boolean boolean25 = dateTime15.isLessThanOrEqual(dateTime20);
    boolean boolean26 = dateTime9.isLessThan(dateTime20);
    java.lang.String str27 = dateTime9.toString();
    long long28 = dateTime3.getDeltaMilliSeconds(dateTime9);
    java.lang.String str29 = dateTime9.getDay();
    int int30 = dateTime9.getSecond();
    net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime(100L);
    int int33 = dateTime32.getMs();
    java.text.SimpleDateFormat simpleDateFormat34 = net.ajaskey.common.Utils.sdf;
    dateTime32.setSdf(simpleDateFormat34);
    int int36 = dateTime32.getDayOfWeek();
    boolean boolean37 = net.ajaskey.common.Utils.sameMonth(dateTime9, dateTime32);
    java.lang.String str38 = dateTime32.format();
    org.junit.Assert.assertNotNull(simpleDateFormat2);
    org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1972.041095890411d) + "'", double10 == (-1972.041095890411d));
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    org.junit.Assert.assertNotNull(date12);
    org.junit.Assert.assertEquals(date12.toString(), "Wed Dec 31 17:00:00 MST 1969");
    org.junit.Assert.assertEquals("'" + str13 + "' != '" + "31-Dec-1969" + "'", str13, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
    org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-1972.041095890411d) + "'", double23 == (-1972.041095890411d));
    org.junit.Assert.assertNull(simpleDateFormat24);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    org.junit.Assert.assertEquals("'" + str27 + "' != '" + "31-Dec-1969" + "'", str27, "31-Dec-1969");
    org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
    org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Wednesday" + "'", str29, "Wednesday");
    org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
    org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
    org.junit.Assert.assertNotNull(simpleDateFormat34);
    org.junit.Assert.assertTrue("'" + int36 + "' != '" + 4 + "'", int36 == 4);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    org.junit.Assert.assertEquals("'" + str38 + "' != '" + "31-Dec-1969" + "'", str38, "31-Dec-1969");
  }
}
