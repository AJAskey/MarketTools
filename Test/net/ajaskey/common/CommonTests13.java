package net.ajaskey.common;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class CommonTests13 {

    public static boolean debug = false;

    @Test
    public void test6501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6501");
        java.util.zip.ZipOutputStream zipOutputStream1 = null;
        // The following exception was thrown during execution in test generation
        try {
            net.ajaskey.common.Utils.writeToZipFile("Thu 10-Apr-0002 10:44:47", zipOutputStream1);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: Thu 10-Apr-0002 10:44:47 (The filename, directory name, or volume label syntax is incorrect)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
    }

    @Test
    public void test6502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6502");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(431, 974, 314);
        java.lang.String str4 = dateTime3.format();
        java.text.SimpleDateFormat simpleDateFormat9 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat11 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat12 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("", simpleDateFormat11, simpleDateFormat12);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat9, simpleDateFormat12);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime("10-Apr-0002", simpleDateFormat12);
        java.text.SimpleDateFormat simpleDateFormat18 = null;
        java.text.SimpleDateFormat simpleDateFormat19 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("January", simpleDateFormat18, simpleDateFormat19);
        java.text.SimpleDateFormat simpleDateFormat23 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("January", simpleDateFormat23);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("", simpleDateFormat23);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime("", simpleDateFormat19, simpleDateFormat23);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime("January                                                                                               52.00                                                                                               52.00                                                                                               52.00                                                                                               52.00hi!                                                                                               52.00", simpleDateFormat12, simpleDateFormat23);
        java.text.SimpleDateFormat simpleDateFormat29 = null;
        java.text.SimpleDateFormat simpleDateFormat30 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime("January", simpleDateFormat29, simpleDateFormat30);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime("December", simpleDateFormat23, simpleDateFormat30);
        dateTime3.setSdf(simpleDateFormat30);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "BAD-DATE-FORMAT" + "'", str4, "BAD-DATE-FORMAT");
        org.junit.Assert.assertNotNull(simpleDateFormat9);
        org.junit.Assert.assertNotNull(simpleDateFormat11);
        org.junit.Assert.assertNotNull(simpleDateFormat12);
        org.junit.Assert.assertNotNull(simpleDateFormat19);
        org.junit.Assert.assertNotNull(simpleDateFormat23);
        org.junit.Assert.assertNotNull(simpleDateFormat30);
    }

    @Test
    public void test6503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6503");
        java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readTextFilefalse);
        java.lang.String str3 = net.ajaskey.common.TextUtils.toString(strList2);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
    }

    @Test
    public void test6504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6504");
        net.ajaskey.common.Utils
    }

    @Test
    public void test6505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6505");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        boolean boolean7 = dateTime5.isWeekday();
        java.util.Date date8 = dateTime5.getTime();
        int int9 = dateTime5.getDayOfWeek();
        java.lang.String str10 = dateTime5.toFullString();
        boolean boolean11 = dateTime5.isWeekday();
        java.lang.String str13 = dateTime5.format("");
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(7, 31, (int) (short) 1);
        long long18 = dateTime5.getDeltaDays(dateTime17);
        java.lang.String str19 = dateTime5.format();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(date8);
        org.junit.Assert.assertEquals(date8.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 4 + "'", int9 == 4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str10, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 716029L + "'", long18 == 716029L);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "BAD-DATE-FORMAT" + "'", str19, "BAD-DATE-FORMAT");
    }

    @Test
    public void test6506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6506");
        java.lang.String str2 = net.ajaskey.common.Utils.fmt((double) (-62190310452126L), 85);
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Invalid fmt" + "'", str2, "Invalid fmt");
    }

    @Test
    public void test6507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6507");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        long long6 = dateTime3.getDeltaDays(dateTime5);
        int int7 = dateTime3.getHour();
        dateTime3.add((int) (byte) 100, (int) (byte) 0);
        net.ajaskey.common.DateTime dateTime12 = dateTime3.parse("10-Apr-0002");
        boolean boolean13 = dateTime3.isWeekday();
        dateTime3.setFirstWorkDay();
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-719795L) + "'", long6 == (-719795L));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertNull(dateTime12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test6508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6508");
        java.text.SimpleDateFormat simpleDateFormat3 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime("", simpleDateFormat3, simpleDateFormat4);
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:42:54", simpleDateFormat3);
        java.text.SimpleDateFormat simpleDateFormat10 = null;
        java.text.SimpleDateFormat simpleDateFormat11 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime("January", simpleDateFormat10, simpleDateFormat11);
        java.text.SimpleDateFormat simpleDateFormat15 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("January", simpleDateFormat15);
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("", simpleDateFormat15);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime("", simpleDateFormat11, simpleDateFormat15);
        java.text.SimpleDateFormat simpleDateFormat23 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat25 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat26 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime("", simpleDateFormat25, simpleDateFormat26);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat23, simpleDateFormat26);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime("10-Apr-0002", simpleDateFormat26);
        java.text.SimpleDateFormat simpleDateFormat32 = null;
        java.text.SimpleDateFormat simpleDateFormat33 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime("January", simpleDateFormat32, simpleDateFormat33);
        java.text.SimpleDateFormat simpleDateFormat37 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime("January", simpleDateFormat37);
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime("", simpleDateFormat37);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime("", simpleDateFormat33, simpleDateFormat37);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime("January                                                                                               52.00                                                                                               52.00                                                                                               52.00                                                                                               52.00hi!                                                                                               52.00", simpleDateFormat26, simpleDateFormat37);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime(100L);
        double double48 = dateTime45.getDeltaYears(dateTime47);
        int int49 = dateTime45.getHour();
        dateTime45.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat54 = null;
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat54);
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double58 = dateTime55.getDeltaYears(dateTime57);
        boolean boolean59 = dateTime45.isEqual(dateTime57);
        java.text.SimpleDateFormat simpleDateFormat61 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat63 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat64 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime("", simpleDateFormat63, simpleDateFormat64);
        net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat61, simpleDateFormat64);
        dateTime45.setSdf(simpleDateFormat61);
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime("", simpleDateFormat26, simpleDateFormat61);
        net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime("   8.00", simpleDateFormat11, simpleDateFormat26);
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime("JanuaryBAD-DATE-FORMATBAD-DATE-FORMAT                                                                                               52.00BAD-DATE-FORMAThi!BAD-DATE-FORMAT", simpleDateFormat3, simpleDateFormat26);
        java.lang.String str71 = dateTime70.format();
        int int72 = dateTime70.getMs();
        org.junit.Assert.assertNotNull(simpleDateFormat3);
        org.junit.Assert.assertNotNull(simpleDateFormat4);
        org.junit.Assert.assertNotNull(simpleDateFormat11);
        org.junit.Assert.assertNotNull(simpleDateFormat15);
        org.junit.Assert.assertNotNull(simpleDateFormat23);
        org.junit.Assert.assertNotNull(simpleDateFormat25);
        org.junit.Assert.assertNotNull(simpleDateFormat26);
        org.junit.Assert.assertNotNull(simpleDateFormat33);
        org.junit.Assert.assertNotNull(simpleDateFormat37);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + (-1972.041095890411d) + "'", double48 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 10 + "'", int49 == 10);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(simpleDateFormat61);
        org.junit.Assert.assertNotNull(simpleDateFormat63);
        org.junit.Assert.assertNotNull(simpleDateFormat64);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "BAD-DATE-FORMAT" + "'", str71, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
    }

    @Test
    public void test6509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6509");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(1866, 845, 753);
        net.ajaskey.common.DateTime dateTime6 = dateTime3.parse("      42", "100");
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime(dateTime3);
        org.junit.Assert.assertNull(dateTime6);
    }

    @Test
    public void test6510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6510");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((-1870), 6, (int) (byte) 10);
        int int4 = dateTime3.getMs();
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime((int) (short) 1, 621, 81);
        boolean boolean9 = dateTime3.isGreaterThanOrEqual(dateTime8);
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 245 + "'", int4 == 245);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test6511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6511");
        java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readTextFile("                               1", false);
        net.ajaskey.common.TextUtils.print(strList2);
        org.junit.Assert.assertNotNull(strList2);
    }

    @Test
    public void test6512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6512");
        java.util.zip.ZipOutputStream zipOutputStream1 = null;
        // The following exception was thrown during execution in test generation
        try {
            net.ajaskey.common.Utils.writeToZipFile("Fri 11-Jan-0032 10:45:05", zipOutputStream1);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: Fri 11-Jan-0032 10:45:05 (The filename, directory name, or volume label syntax is incorrect)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
    }

    @Test
    public void test6513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6513");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (byte) 10, (int) (byte) 0, 2);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime(dateTime3);
        java.text.SimpleDateFormat simpleDateFormat5 = dateTime3.getSdf();
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime(dateTime3);
        org.junit.Assert.assertNull(simpleDateFormat5);
    }

    @Test
    public void test6514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6514");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        int int3 = dateTime2.getDayOfWeek();
        int int4 = dateTime2.getDayOfYear();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test6515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6515");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean10 = dateTime4.isEqual(dateTime9);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(100L);
        int int13 = dateTime12.getMs();
        boolean boolean14 = dateTime9.isGreaterThanOrEqual(dateTime12);
        java.text.SimpleDateFormat simpleDateFormat16 = null;
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double20 = dateTime17.getDeltaYears(dateTime19);
        boolean boolean21 = dateTime17.isWeekday();
        boolean boolean22 = dateTime12.isLessThanOrEqual(dateTime17);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime(100L);
        dateTime24.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean29 = dateTime24.isWeekday();
        boolean boolean30 = dateTime12.isGreaterThanOrEqual(dateTime24);
        int int31 = dateTime12.getSecond();
        java.text.SimpleDateFormat simpleDateFormat33 = null;
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat33);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double37 = dateTime34.getDeltaYears(dateTime36);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean42 = dateTime36.isEqual(dateTime41);
        java.util.Calendar calendar43 = dateTime36.getCal();
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime(calendar43);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(calendar43);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime(100L);
        int int48 = dateTime47.getMs();
        java.text.SimpleDateFormat simpleDateFormat49 = net.ajaskey.common.Utils.sdf;
        dateTime47.setSdf(simpleDateFormat49);
        long long51 = dateTime45.getDeltaDays(dateTime47);
        boolean boolean52 = dateTime12.sameDate(dateTime47);
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime(100L);
        double double59 = dateTime56.getDeltaYears(dateTime58);
        java.text.SimpleDateFormat simpleDateFormat60 = dateTime56.getSdf();
        int int61 = dateTime56.getMinute();
        int int62 = dateTime56.getDayOfYear();
        net.ajaskey.common.DateTime dateTime63 = null;
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime(dateTime63);
        dateTime64.set(42, 10, 10);
        java.util.Date date69 = dateTime64.getTime();
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime(date69);
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime(date69);
        java.lang.String str72 = dateTime71.getMonth();
        boolean boolean73 = dateTime56.sameDate(dateTime71);
        double double74 = dateTime12.getDeltaYears(dateTime71);
        java.text.SimpleDateFormat simpleDateFormat76 = null;
        net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat76);
        net.ajaskey.common.DateTime dateTime79 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double80 = dateTime77.getDeltaYears(dateTime79);
        boolean boolean81 = dateTime77.isWeekday();
        net.ajaskey.common.DateTime dateTime85 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long86 = dateTime77.getDeltaDays(dateTime85);
        net.ajaskey.common.DateTime dateTime87 = new net.ajaskey.common.DateTime(dateTime77);
        dateTime87.setFirstWorkDay();
        java.util.Date date89 = dateTime87.getTime();
        net.ajaskey.common.DateTime dateTime90 = new net.ajaskey.common.DateTime(date89);
        int int91 = dateTime90.getYear();
        boolean boolean92 = dateTime71.isEqual(dateTime90);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(calendar43);
        org.junit.Assert.assertEquals(calendar43.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 100 + "'", int48 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat49);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-1972.041095890411d) + "'", double59 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat60);
// flaky:         org.junit.Assert.assertTrue("'" + int61 + "' != '" + 47 + "'", int61 == 47);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        org.junit.Assert.assertNotNull(date69);
// flaky:         org.junit.Assert.assertEquals(date69.toString(), "Sat Nov 10 10:47:03 MST 42");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "November" + "'", str72, "November");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1928.4246575342465d + "'", double74 == 1928.4246575342465d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + 0L + "'", long86 == 0L);
        org.junit.Assert.assertNotNull(date89);
// flaky:         org.junit.Assert.assertEquals(date89.toString(), "Thu Jun 25 10:47:03 MDT 2020");
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 2020 + "'", int91 == 2020);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test6516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6516");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        java.text.SimpleDateFormat simpleDateFormat8 = null;
        java.text.SimpleDateFormat simpleDateFormat9 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("January", simpleDateFormat8, simpleDateFormat9);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime("Thursday", simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(dateTime11);
        boolean boolean13 = dateTime2.isEqual(dateTime11);
        java.text.SimpleDateFormat simpleDateFormat15 = null;
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat15);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double19 = dateTime16.getDeltaYears(dateTime18);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean24 = dateTime18.isEqual(dateTime23);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(100L);
        int int27 = dateTime26.getMs();
        boolean boolean28 = dateTime23.isGreaterThanOrEqual(dateTime26);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime(100L);
        dateTime30.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime(100L);
        double double41 = dateTime38.getDeltaYears(dateTime40);
        boolean boolean42 = dateTime40.isWeekday();
        java.util.Date date43 = dateTime40.getTime();
        dateTime30.set(dateTime40);
        boolean boolean45 = net.ajaskey.common.Utils.sameDate(dateTime23, dateTime30);
        dateTime23.add((int) '#', 6);
        int int49 = dateTime2.getYears(dateTime23);
        java.lang.String str50 = dateTime2.getDay();
        int int51 = dateTime2.getDayOfWeek();
        int int52 = dateTime2.getDayOfMonth();
        int int53 = dateTime2.getDayOfYear();
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime("BAD-DATE-FORMAT", "                                                                                               52.00");
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime("10-Apr-0002", "5.00");
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime(12, 42, (int) (byte) 1);
        java.util.Calendar calendar64 = dateTime63.getCal();
        boolean boolean65 = net.ajaskey.common.Utils.sameDate(dateTime59, dateTime63);
        boolean boolean66 = dateTime56.isLessThan(dateTime59);
        int int67 = dateTime59.getYear();
        java.util.Date date68 = dateTime59.getTime();
        net.ajaskey.common.DateTime dateTime72 = new net.ajaskey.common.DateTime(12, 42, (int) (byte) 1);
        boolean boolean73 = dateTime59.isLessThanOrEqual(dateTime72);
        dateTime2.set(dateTime72);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(simpleDateFormat9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-1972.041095890411d) + "'", double41 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(date43);
        org.junit.Assert.assertEquals(date43.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "UNKNOWN" + "'", str50, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(calendar64);
// flaky:         org.junit.Assert.assertEquals(calendar64.toString(), "java.util.GregorianCalendar[time=-61678303976658,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=15,MONTH=6,WEEK_OF_YEAR=27,WEEK_OF_MONTH=1,DAY_OF_MONTH=1,DAY_OF_YEAR=182,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=1,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=3,MILLISECOND=342,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNull(date68);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test6517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6517");
        net.ajaskey.common.Utils.sleep(29);
    }

    @Test
    public void test6518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6518");
        java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readTextFile("62,190,310,608,217.00", true);
        org.junit.Assert.assertNotNull(strList2);
    }

    @Test
    public void test6519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6519");
        net.ajaskey.common.Utils.sleep(86);
    }

    @Test
    public void test6520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6520");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean10 = dateTime4.isEqual(dateTime9);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(100L);
        double double17 = dateTime14.getDeltaYears(dateTime16);
        boolean boolean18 = dateTime16.isWeekday();
        int int19 = dateTime16.getDayOfYear();
        net.ajaskey.common.DateTime dateTime20 = dateTime4.copy(dateTime16);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(dateTime16);
        net.ajaskey.common.DateTime dateTime23 = dateTime16.parse("Thu 10-Apr-0002 10:43:00");
        java.text.SimpleDateFormat simpleDateFormat24 = dateTime16.getSdf();
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime("5.00", "     10");
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime(100L);
        double double34 = dateTime31.getDeltaYears(dateTime33);
        int int35 = dateTime31.getHour();
        java.text.SimpleDateFormat simpleDateFormat37 = null;
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat37);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double41 = dateTime38.getDeltaYears(dateTime40);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean46 = dateTime40.isEqual(dateTime45);
        java.util.Calendar calendar47 = dateTime40.getCal();
        dateTime31.set(calendar47);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime(calendar47);
        dateTime27.set(calendar47);
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime(100L);
        int int53 = dateTime52.getMs();
        java.lang.String str54 = dateTime52.toString();
        java.lang.String str56 = dateTime52.format("         1");
        net.ajaskey.common.DateTime dateTime57 = dateTime27.copy(dateTime52);
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime("BAD-DATE-FORMAT", "                                                                                               52.00");
        dateTime52.set(dateTime60);
        boolean boolean62 = net.ajaskey.common.Utils.sameMonth(dateTime16, dateTime52);
        int int63 = dateTime16.getDayOfYear();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-1972.041095890411d) + "'", double17 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 365 + "'", int19 == 365);
        org.junit.Assert.assertNotNull(dateTime20);
        org.junit.Assert.assertNull(dateTime23);
        org.junit.Assert.assertNull(simpleDateFormat24);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-1972.041095890411d) + "'", double34 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(calendar47);
        org.junit.Assert.assertEquals(calendar47.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 100 + "'", int53 == 100);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "31-Dec-1969" + "'", str54, "31-Dec-1969");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "         1" + "'", str56, "         1");
        org.junit.Assert.assertNotNull(dateTime57);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 365 + "'", int63 == 365);
    }

    @Test
    public void test6521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6521");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        java.util.Calendar calendar2 = dateTime1.getCal();
        java.text.SimpleDateFormat simpleDateFormat4 = null;
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat4);
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double8 = dateTime5.getDeltaYears(dateTime7);
        boolean boolean9 = dateTime5.isWeekday();
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long14 = dateTime5.getDeltaDays(dateTime13);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(dateTime5);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(100L);
        double double22 = dateTime19.getDeltaYears(dateTime21);
        boolean boolean23 = dateTime21.isWeekday();
        java.util.Date date24 = dateTime21.getTime();
        dateTime5.set(date24);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(100L);
        int int28 = dateTime27.getMs();
        java.lang.String str29 = dateTime27.toString();
        boolean boolean30 = dateTime5.isLessThanOrEqual(dateTime27);
        net.ajaskey.common.DateTime dateTime33 = dateTime5.parse("", "100.00");
        dateTime5.add((int) (short) 0, (int) (short) -1);
        double double37 = dateTime1.getDeltaYears(dateTime5);
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime(100L);
        int int40 = dateTime39.getMs();
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime(100L);
        double double47 = dateTime44.getDeltaYears(dateTime46);
        java.text.SimpleDateFormat simpleDateFormat48 = dateTime44.getSdf();
        boolean boolean49 = dateTime39.isLessThanOrEqual(dateTime44);
        int int50 = dateTime39.getDayOfMonth();
        boolean boolean51 = net.ajaskey.common.Utils.sameMonth(dateTime5, dateTime39);
        java.text.SimpleDateFormat simpleDateFormat53 = null;
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat53);
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double57 = dateTime54.getDeltaYears(dateTime56);
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean62 = dateTime56.isEqual(dateTime61);
        java.util.Calendar calendar63 = dateTime56.getCal();
        java.lang.String str64 = dateTime56.format();
        net.ajaskey.common.DateTime dateTime65 = null;
        long long66 = dateTime56.getDeltaDays(dateTime65);
        int int67 = dateTime56.getSecond();
        java.text.SimpleDateFormat simpleDateFormat69 = null;
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat69);
        net.ajaskey.common.DateTime dateTime72 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double73 = dateTime70.getDeltaYears(dateTime72);
        net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean78 = dateTime72.isEqual(dateTime77);
        boolean boolean79 = dateTime56.isGreaterThanOrEqual(dateTime77);
        java.text.SimpleDateFormat simpleDateFormat80 = dateTime77.getSdf();
        net.ajaskey.common.DateTime dateTime84 = new net.ajaskey.common.DateTime(1, (int) '4', 5);
        boolean boolean85 = dateTime77.sameDate(dateTime84);
        dateTime39.set(dateTime84);
        net.ajaskey.common.DateTime dateTime88 = new net.ajaskey.common.DateTime((long) 42);
        dateTime88.set((int) (short) 10, 510, (-1955));
        int int93 = dateTime84.getYears(dateTime88);
        org.junit.Assert.assertNotNull(calendar2);
        org.junit.Assert.assertEquals(calendar2.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-1972.041095890411d) + "'", double22 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(date24);
        org.junit.Assert.assertEquals(date24.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "31-Dec-1969" + "'", str29, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(dateTime33);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-1972.041095890411d) + "'", double47 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 31 + "'", int50 == 31);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(calendar63);
        org.junit.Assert.assertEquals(calendar63.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "BAD-DATE-FORMAT" + "'", str64, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 0L + "'", long66 == 0L);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNull(simpleDateFormat80);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 41 + "'", int93 == 41);
    }

    @Test
    public void test6522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6522");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) (short) 0);
        int int2 = dateTime1.getHour();
        int int3 = dateTime1.getSecond();
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        int int6 = dateTime5.getMs();
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(100L);
        double double13 = dateTime10.getDeltaYears(dateTime12);
        java.text.SimpleDateFormat simpleDateFormat14 = dateTime10.getSdf();
        boolean boolean15 = dateTime5.isLessThanOrEqual(dateTime10);
        java.text.SimpleDateFormat simpleDateFormat17 = null;
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat17);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double21 = dateTime18.getDeltaYears(dateTime20);
        boolean boolean22 = dateTime18.isWeekday();
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long27 = dateTime18.getDeltaDays(dateTime26);
        long long28 = dateTime5.getDeltaDays(dateTime26);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime(100L);
        dateTime30.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean35 = dateTime30.isWeekday();
        int int36 = dateTime5.getYears(dateTime30);
        java.text.SimpleDateFormat simpleDateFormat38 = null;
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat38);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double42 = dateTime39.getDeltaYears(dateTime41);
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean47 = dateTime41.isEqual(dateTime46);
        int int48 = dateTime41.getDayOfWeek();
        boolean boolean49 = dateTime30.isLessThan(dateTime41);
        long long50 = dateTime1.getDeltaMilliSeconds(dateTime30);
        dateTime1.add(13, 12);
        int int54 = dateTime1.getMinute();
        net.ajaskey.common.DateTime dateTime57 = dateTime1.parse("Thu 10-Apr-0002 10:43:21", "                                                                                                                                                                                                                                                          16");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 5 + "'", int2 == 5);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-1972.041095890411d) + "'", double13 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 719795L + "'", long28 == 719795L);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1870) + "'", int36 == (-1870));
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 4 + "'", int48 == 4);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-59011286399900L) + "'", long50 == (-59011286399900L));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNull(dateTime57);
    }

    @Test
    public void test6523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6523");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        dateTime1.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
        double double12 = dateTime9.getDeltaYears(dateTime11);
        boolean boolean13 = dateTime11.isWeekday();
        java.util.Date date14 = dateTime11.getTime();
        dateTime1.set(dateTime11);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat21 = null;
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat21);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double25 = dateTime22.getDeltaYears(dateTime24);
        boolean boolean26 = dateTime19.isLessThan(dateTime24);
        dateTime11.set(dateTime24);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime(100L);
        double double34 = dateTime31.getDeltaYears(dateTime33);
        long long35 = dateTime11.getDeltaMilliSeconds(dateTime33);
        java.util.Date date36 = null;
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(date36);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime(100L);
        double double44 = dateTime41.getDeltaYears(dateTime43);
        int int45 = dateTime41.getHour();
        java.text.SimpleDateFormat simpleDateFormat47 = null;
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat47);
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double51 = dateTime48.getDeltaYears(dateTime50);
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean56 = dateTime50.isEqual(dateTime55);
        java.util.Calendar calendar57 = dateTime50.getCal();
        dateTime41.set(calendar57);
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime(calendar57);
        net.ajaskey.common.DateTime dateTime60 = dateTime37.copy(dateTime59);
        boolean boolean61 = dateTime33.isLessThan(dateTime37);
        java.lang.String str63 = dateTime33.format
        java.lang.String str64 = dateTime33.getDay();
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1972.041095890411d) + "'", double12 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(date14);
        org.junit.Assert.assertEquals(date14.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-1972.041095890411d) + "'", double34 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 100L + "'", long35 == 100L);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-1972.041095890411d) + "'", double44 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 10 + "'", int45 == 10);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(calendar57);
        org.junit.Assert.assertEquals(calendar57.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(dateTime60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       51" + "'", str
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Wednesday" + "'", str64, "Wednesday");
    }

    @Test
    public void test6524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6524");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean10 = dateTime4.isEqual(dateTime9);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(100L);
        int int13 = dateTime12.getMs();
        boolean boolean14 = dateTime9.isGreaterThanOrEqual(dateTime12);
        java.text.SimpleDateFormat simpleDateFormat16 = null;
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double20 = dateTime17.getDeltaYears(dateTime19);
        boolean boolean21 = dateTime17.isWeekday();
        boolean boolean22 = dateTime12.isLessThanOrEqual(dateTime17);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime(100L);
        dateTime24.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean29 = dateTime24.isWeekday();
        boolean boolean30 = dateTime12.isGreaterThanOrEqual(dateTime24);
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime(100L);
        double double37 = dateTime34.getDeltaYears(dateTime36);
        java.text.SimpleDateFormat simpleDateFormat39 = null;
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat39);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double43 = dateTime40.getDeltaYears(dateTime42);
        boolean boolean44 = dateTime40.isWeekday();
        boolean boolean45 = dateTime34.sameDate(dateTime40);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime(100L);
        double double52 = dateTime49.getDeltaYears(dateTime51);
        java.text.SimpleDateFormat simpleDateFormat54 = null;
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat54);
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double58 = dateTime55.getDeltaYears(dateTime57);
        boolean boolean59 = dateTime55.isWeekday();
        boolean boolean60 = dateTime49.sameDate(dateTime55);
        java.text.SimpleDateFormat simpleDateFormat62 = null;
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat62);
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double66 = dateTime63.getDeltaYears(dateTime65);
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean71 = dateTime65.isEqual(dateTime70);
        dateTime49.set(dateTime70);
        long long73 = dateTime34.getDeltaMilliSeconds(dateTime70);
        net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat79 = null;
        net.ajaskey.common.DateTime dateTime80 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat79);
        boolean boolean81 = net.ajaskey.common.Utils.sameDate(dateTime77, dateTime80);
        boolean boolean82 = net.ajaskey.common.Utils.sameDate(dateTime34, dateTime80);
        dateTime24.set(dateTime80);
        int int84 = dateTime24.getMs();
        net.ajaskey.common.DateTime dateTime88 = new net.ajaskey.common.DateTime(12, 42, (int) (byte) 1);
        java.util.Calendar calendar89 = dateTime88.getCal();
        net.ajaskey.common.DateTime dateTime90 = new net.ajaskey.common.DateTime(calendar89);
        boolean boolean91 = dateTime24.isGreaterThanOrEqual(dateTime90);
        net.ajaskey.common.DateTime dateTime94 = dateTime90.parse("                                                                                                                                                                              525", "62,190,310,437,440                                                                                                                                                                                                                                                     ");
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-1972.041095890411d) + "'", double37 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-1972.041095890411d) + "'", double52 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long73 + "' != '" + 0L + "'", long73 == 0L);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 100 + "'", int84 == 100);
        org.junit.Assert.assertNotNull(calendar89);
// flaky:         org.junit.Assert.assertEquals(calendar89.toString(), "java.util.GregorianCalendar[time=-61678303976385,areFieldsSet=true,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=15,MONTH=6,WEEK_OF_YEAR=27,WEEK_OF_MONTH=1,DAY_OF_MONTH=1,DAY_OF_YEAR=182,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=1,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=3,MILLISECOND=615,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNull(dateTime94);
    }

    @Test
    public void test6525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6525");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        int int7 = dateTime3.getHour();
        java.text.SimpleDateFormat simpleDateFormat9 = null;
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat9);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double13 = dateTime10.getDeltaYears(dateTime12);
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean18 = dateTime12.isEqual(dateTime17);
        java.util.Calendar calendar19 = dateTime12.getCal();
        dateTime3.set(calendar19);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(calendar19);
        dateTime21.add(14, 2020);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime(100L);
        double double31 = dateTime28.getDeltaYears(dateTime30);
        boolean boolean32 = dateTime30.isWeekday();
        java.util.Date date33 = dateTime30.getTime();
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime(date33);
        java.text.SimpleDateFormat simpleDateFormat36 = null;
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat36);
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double40 = dateTime37.getDeltaYears(dateTime39);
        boolean boolean41 = dateTime37.isWeekday();
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long46 = dateTime37.getDeltaDays(dateTime45);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime(dateTime37);
        boolean boolean48 = dateTime34.isGreaterThan(dateTime37);
        java.lang.String str49 = dateTime37.getMonth();
        boolean boolean50 = dateTime21.sameDate(dateTime37);
        int int51 = dateTime21.getMinute();
        java.text.SimpleDateFormat simpleDateFormat53 = null;
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat53);
        dateTime54.set((int) ' ', 0, 11);
        boolean boolean59 = dateTime54.isWeekday();
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime(100L);
        int int62 = dateTime61.getMs();
        net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime(100L);
        double double69 = dateTime66.getDeltaYears(dateTime68);
        java.text.SimpleDateFormat simpleDateFormat70 = dateTime66.getSdf();
        boolean boolean71 = dateTime61.isLessThanOrEqual(dateTime66);
        java.util.Date date72 = dateTime66.getTime();
        dateTime54.set(date72);
        net.ajaskey.common.DateTime dateTime74 = new net.ajaskey.common.DateTime(date72);
        java.util.Date date75 = dateTime74.getTime();
        net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime(100L);
        int int78 = dateTime77.getMs();
        net.ajaskey.common.DateTime dateTime82 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime84 = new net.ajaskey.common.DateTime(100L);
        double double85 = dateTime82.getDeltaYears(dateTime84);
        java.text.SimpleDateFormat simpleDateFormat86 = dateTime82.getSdf();
        boolean boolean87 = dateTime77.isLessThanOrEqual(dateTime82);
        net.ajaskey.common.DateTime dateTime88 = new net.ajaskey.common.DateTime(dateTime77);
        dateTime88.add(0, (int) (short) 10);
        int int92 = dateTime74.getYears(dateTime88);
        net.ajaskey.common.DateTime dateTime94 = dateTime74.parse("                                                                                               52.00");
        boolean boolean95 = dateTime21.isEqual(dateTime94);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(calendar19);
        org.junit.Assert.assertEquals(calendar19.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-1972.041095890411d) + "'", double31 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(date33);
        org.junit.Assert.assertEquals(date33.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "UNKNOWN" + "'", str49, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-1972.041095890411d) + "'", double69 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(date72);
// flaky:         org.junit.Assert.assertEquals(date72.toString(), "Thu Apr 10 10:47:03 MST 2");
        org.junit.Assert.assertNotNull(date75);
// flaky:         org.junit.Assert.assertEquals(date75.toString(), "Thu Apr 10 10:47:03 MST 2");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 100 + "'", int78 == 100);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + (-1972.041095890411d) + "'", double85 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 1967 + "'", int92 == 1967);
        org.junit.Assert.assertNull(dateTime94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test6526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6526");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        java.lang.String str3 = dateTime1.toString();
        dateTime1.set(25, (-1), (int) (short) 10);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(100L);
        double double14 = dateTime11.getDeltaYears(dateTime13);
        boolean boolean15 = dateTime13.isWeekday();
        boolean boolean16 = net.ajaskey.common.Utils.sameMonth(dateTime1, dateTime13);
        int int17 = dateTime13.getHour();
        java.util.Calendar calendar18 = dateTime13.getCal();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "31-Dec-1969" + "'", str3, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + (-1972.041095890411d) + "'", double14 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 5 + "'", int17 == 5);
        org.junit.Assert.assertNotNull(calendar18);
        org.junit.Assert.assertEquals(calendar18.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    }

    @Test
    public void test6527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6527");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        dateTime1.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str6 = dateTime1.getMonth();
        int int7 = dateTime1.getMs();
        java.lang.String str9 = dateTime1.format("                                                                                               52.00");
        int int10 = dateTime1.getDayOfMonth();
        java.lang.String str12 = dateTime1.format(" 9");
        int int13 = dateTime1.getHour();
        int int14 = dateTime1.getHour();
        int int15 = dateTime1.getYear();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "January" + "'", str6, "January");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "                                                                                               52.00" + "'", str9, "                                                                                               52.00");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 4 + "'", int10 == 4);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + " 9" + "'", str12, " 9");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 5 + "'", int14 == 5);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
    }

    @Test
    public void test6528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6528");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("62,190,310,539,052", "             7");
        java.lang.String str4 = dateTime2.format("                                 365.00");
        int int5 = dateTime2.getDayOfWeek();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "BAD-DATE-FORMAT" + "'", str4, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
    }

    @Test
    public void test6529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6529");
        net.ajaskey.common.TextUtils.printline("Sat 22-May-0045 10:46:47");
    }

    @Test
    public void test6530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6530");
        net.ajaskey.common.Utils.makeDir("10-Dec-0024");
    }

    @Test
    public void test6531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6531");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("5.00", "     10");
        dateTime2.add((int) (short) 0, (int) 'a');
        int int6 = dateTime2.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        int int9 = dateTime8.getMs();
        int int10 = dateTime8.getHour();
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat16 = null;
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double20 = dateTime17.getDeltaYears(dateTime19);
        boolean boolean21 = dateTime14.isLessThan(dateTime19);
        java.lang.String str22 = dateTime19.toFullString();
        dateTime19.add(10, (int) (byte) -1);
        java.text.SimpleDateFormat simpleDateFormat27 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat29 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat30 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime("", simpleDateFormat29, simpleDateFormat30);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat27, simpleDateFormat30);
        boolean boolean33 = dateTime19.isGreaterThan(dateTime32);
        boolean boolean34 = dateTime8.isEqual(dateTime19);
        net.ajaskey.common.DateTime dateTime35 = null;
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime(dateTime35);
        dateTime36.set(42, 10, 10);
        java.util.Date date41 = dateTime36.getTime();
        net.ajaskey.common.DateTime dateTime42 = dateTime8.copy(dateTime36);
        net.ajaskey.common.DateTime dateTime43 = dateTime2.copy(dateTime8);
        java.text.SimpleDateFormat simpleDateFormat45 = null;
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat45);
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double49 = dateTime46.getDeltaYears(dateTime48);
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean54 = dateTime48.isEqual(dateTime53);
        java.util.Calendar calendar55 = dateTime48.getCal();
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime(1, (int) '4', 5);
        double double60 = dateTime48.getDeltaYears(dateTime59);
        double double61 = dateTime43.getDeltaYears(dateTime59);
        java.text.SimpleDateFormat simpleDateFormat62 = dateTime59.getSdf();
        int int63 = dateTime59.getMs();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str22, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertNotNull(simpleDateFormat27);
        org.junit.Assert.assertNotNull(simpleDateFormat29);
        org.junit.Assert.assertNotNull(simpleDateFormat30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(date41);
// flaky:         org.junit.Assert.assertEquals(date41.toString(), "Sat Nov 10 10:47:03 MST 42");
        org.junit.Assert.assertNotNull(dateTime42);
        org.junit.Assert.assertNotNull(dateTime43);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(calendar55);
        org.junit.Assert.assertEquals(calendar55.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1965.9671232876713d + "'", double60 == 1965.9671232876713d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1965.9671232876713d + "'", double61 == 1965.9671232876713d);
        org.junit.Assert.assertNull(simpleDateFormat62);
// flaky:         org.junit.Assert.assertTrue("'" + int63 + "' != '" + 723 + "'", int63 == 723);
    }

    @Test
    public void test6532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6532");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(264, 13, (int) 'a');
        int int4 = dateTime3.getHour();
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime(100L);
        long long11 = dateTime8.getDeltaDays(dateTime10);
        int int12 = dateTime8.getHour();
        int int13 = dateTime8.getSecond();
        boolean boolean14 = dateTime8.isNull();
        boolean boolean15 = dateTime3.sameDate(dateTime8);
        int int16 = dateTime3.getHour();
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((-1870), 1969, 1);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime("5.00", "     10");
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(100L);
        double double30 = dateTime27.getDeltaYears(dateTime29);
        int int31 = dateTime27.getHour();
        java.text.SimpleDateFormat simpleDateFormat33 = null;
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat33);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double37 = dateTime34.getDeltaYears(dateTime36);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean42 = dateTime36.isEqual(dateTime41);
        java.util.Calendar calendar43 = dateTime36.getCal();
        dateTime27.set(calendar43);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(calendar43);
        dateTime23.set(calendar43);
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime(100L);
        int int49 = dateTime48.getMs();
        java.lang.String str50 = dateTime48.toString();
        java.lang.String str52 = dateTime48.format("         1");
        net.ajaskey.common.DateTime dateTime53 = dateTime23.copy(dateTime48);
        int int54 = dateTime20.getYears(dateTime53);
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime(dateTime20);
        java.util.Date date56 = dateTime55.getTime();
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime(date56);
        dateTime3.set(date56);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 10 + "'", int4 == 10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-719795L) + "'", long11 == (-719795L));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3 + "'", int13 == 3);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10 + "'", int16 == 10);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-1972.041095890411d) + "'", double30 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10 + "'", int31 == 10);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(calendar43);
        org.junit.Assert.assertEquals(calendar43.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "31-Dec-1969" + "'", str50, "31-Dec-1969");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "         1" + "'", str52, "         1");
        org.junit.Assert.assertNotNull(dateTime53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 262 + "'", int54 == 262);
        org.junit.Assert.assertNotNull(date56);
// flaky:         org.junit.Assert.assertEquals(date56.toString(), "Wed Feb 01 10:47:03 MST 1707");
    }

    @Test
    public void test6533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6533");
        java.text.SimpleDateFormat simpleDateFormat2 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime("January", simpleDateFormat2);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime("", simpleDateFormat2);
        dateTime4.setFirstWorkDay();
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat11 = null;
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat11);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double15 = dateTime12.getDeltaYears(dateTime14);
        boolean boolean16 = dateTime9.isLessThan(dateTime14);
        java.lang.String str17 = dateTime14.toFullString();
        dateTime14.add(10, (int) (byte) -1);
        java.text.SimpleDateFormat simpleDateFormat22 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat24 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat25 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime("", simpleDateFormat24, simpleDateFormat25);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat22, simpleDateFormat25);
        boolean boolean28 = dateTime14.isGreaterThan(dateTime27);
        java.text.SimpleDateFormat simpleDateFormat30 = null;
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat30);
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double34 = dateTime31.getDeltaYears(dateTime33);
        boolean boolean35 = dateTime31.isWeekday();
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long40 = dateTime31.getDeltaDays(dateTime39);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime(dateTime31);
        boolean boolean42 = dateTime27.sameDate(dateTime31);
        boolean boolean43 = dateTime4.isGreaterThan(dateTime31);
        java.lang.String str44 = dateTime31.toFullString();
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime(100L);
        int int47 = dateTime46.getMs();
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime(100L);
        double double54 = dateTime51.getDeltaYears(dateTime53);
        java.text.SimpleDateFormat simpleDateFormat55 = dateTime51.getSdf();
        boolean boolean56 = dateTime46.isLessThanOrEqual(dateTime51);
        boolean boolean57 = dateTime46.isWeekday();
        java.util.Calendar calendar58 = dateTime46.getCal();
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime(calendar58);
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime("10-Apr-0002", "5.00");
        boolean boolean63 = dateTime59.isEqual(dateTime62);
        int int64 = dateTime31.getYears(dateTime62);
        int int65 = dateTime31.getDayOfWeek();
        org.junit.Assert.assertNotNull(simpleDateFormat2);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str17, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertNotNull(simpleDateFormat22);
        org.junit.Assert.assertNotNull(simpleDateFormat24);
        org.junit.Assert.assertNotNull(simpleDateFormat25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Invalid Time" + "'", str44, "Invalid Time");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-1972.041095890411d) + "'", double54 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(calendar58);
        org.junit.Assert.assertEquals(calendar58.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
    }

    @Test
    public void test6534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6534");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        java.text.SimpleDateFormat simpleDateFormat8 = null;
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double12 = dateTime9.getDeltaYears(dateTime11);
        boolean boolean13 = dateTime9.isWeekday();
        boolean boolean14 = dateTime3.sameDate(dateTime9);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime(100L);
        double double21 = dateTime18.getDeltaYears(dateTime20);
        int int22 = dateTime18.getHour();
        java.util.Calendar calendar23 = dateTime18.getCal();
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime(calendar23);
        int int25 = dateTime24.getYear();
        boolean boolean26 = net.ajaskey.common.Utils.sameMonth(dateTime3, dateTime24);
        java.lang.String str27 = dateTime3.toString();
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat34 = null;
        java.text.SimpleDateFormat simpleDateFormat35 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime("January", simpleDateFormat34, simpleDateFormat35);
        java.text.SimpleDateFormat simpleDateFormat39 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime("January", simpleDateFormat39);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime("", simpleDateFormat39);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime("", simpleDateFormat35, simpleDateFormat39);
        dateTime31.setSdf(simpleDateFormat35);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime((long) (short) 0);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime(100L);
        double double52 = dateTime49.getDeltaYears(dateTime51);
        int int53 = dateTime49.getHour();
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime();
        net.ajaskey.common.DateTime dateTime55 = null;
        boolean boolean56 = dateTime54.isGreaterThan(dateTime55);
        java.text.SimpleDateFormat simpleDateFormat58 = null;
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat58);
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double62 = dateTime59.getDeltaYears(dateTime61);
        net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean67 = dateTime61.isEqual(dateTime66);
        java.util.Calendar calendar68 = dateTime61.getCal();
        net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime(calendar68);
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime(calendar68);
        boolean boolean71 = dateTime54.isLessThan(dateTime70);
        boolean boolean72 = dateTime49.isLessThan(dateTime54);
        boolean boolean73 = dateTime45.isGreaterThan(dateTime54);
        boolean boolean74 = dateTime31.isGreaterThanOrEqual(dateTime54);
        boolean boolean75 = dateTime31.isNull();
        java.text.SimpleDateFormat simpleDateFormat77 = null;
        net.ajaskey.common.DateTime dateTime78 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat77);
        net.ajaskey.common.DateTime dateTime80 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double81 = dateTime78.getDeltaYears(dateTime80);
        net.ajaskey.common.DateTime dateTime85 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean86 = dateTime80.isEqual(dateTime85);
        java.util.Calendar calendar87 = dateTime80.getCal();
        net.ajaskey.common.DateTime dateTime88 = new net.ajaskey.common.DateTime(calendar87);
        net.ajaskey.common.DateTime dateTime89 = new net.ajaskey.common.DateTime(calendar87);
        net.ajaskey.common.DateTime dateTime91 = new net.ajaskey.common.DateTime(100L);
        int int92 = dateTime91.getMs();
        java.text.SimpleDateFormat simpleDateFormat93 = net.ajaskey.common.Utils.sdf;
        dateTime91.setSdf(simpleDateFormat93);
        long long95 = dateTime89.getDeltaDays(dateTime91);
        net.ajaskey.common.DateTime dateTime96 = dateTime31.copy(dateTime91);
        boolean boolean97 = dateTime3.isGreaterThanOrEqual(dateTime91);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-1972.041095890411d) + "'", double21 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 10 + "'", int22 == 10);
        org.junit.Assert.assertNotNull(calendar23);
// flaky:         org.junit.Assert.assertEquals(calendar23.toString(), "java.util.GregorianCalendar[time=-62190310376195,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=3,MILLISECOND=805,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "10-Apr-0002" + "'", str27, "10-Apr-0002");
        org.junit.Assert.assertNotNull(simpleDateFormat35);
        org.junit.Assert.assertNotNull(simpleDateFormat39);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-1972.041095890411d) + "'", double52 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 10 + "'", int53 == 10);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(calendar68);
        org.junit.Assert.assertEquals(calendar68.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(calendar87);
        org.junit.Assert.assertEquals(calendar87.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 100 + "'", int92 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat93);
        org.junit.Assert.assertTrue("'" + long95 + "' != '" + 0L + "'", long95 == 0L);
        org.junit.Assert.assertNotNull(dateTime96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test6535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6535");
        java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat6 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat7 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime("", simpleDateFormat6, simpleDateFormat7);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat4, simpleDateFormat7);
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("10-Apr-0002", simpleDateFormat7);
        java.text.SimpleDateFormat simpleDateFormat13 = null;
        java.text.SimpleDateFormat simpleDateFormat14 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime("January", simpleDateFormat13, simpleDateFormat14);
        java.text.SimpleDateFormat simpleDateFormat18 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime("January", simpleDateFormat18);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("", simpleDateFormat18);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("", simpleDateFormat14, simpleDateFormat18);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime("January                                                                                               52.00                                                                                               52.00                                                                                               52.00                                                                                               52.00hi!                                                                                               52.00", simpleDateFormat7, simpleDateFormat18);
        java.text.SimpleDateFormat simpleDateFormat24 = null;
        java.text.SimpleDateFormat simpleDateFormat25 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime("January", simpleDateFormat24, simpleDateFormat25);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime("December", simpleDateFormat18, simpleDateFormat25);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(100L);
        int int30 = dateTime29.getMs();
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime(100L);
        double double37 = dateTime34.getDeltaYears(dateTime36);
        java.text.SimpleDateFormat simpleDateFormat38 = dateTime34.getSdf();
        boolean boolean39 = dateTime29.isLessThanOrEqual(dateTime34);
        java.text.SimpleDateFormat simpleDateFormat41 = null;
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat41);
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double45 = dateTime42.getDeltaYears(dateTime44);
        boolean boolean46 = dateTime42.isWeekday();
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long51 = dateTime42.getDeltaDays(dateTime50);
        long long52 = dateTime29.getDeltaDays(dateTime50);
        java.lang.String str53 = dateTime50.toFullString();
        java.util.Calendar calendar54 = dateTime50.getCal();
        dateTime27.set(calendar54);
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime(calendar54);
        org.junit.Assert.assertNotNull(simpleDateFormat4);
        org.junit.Assert.assertNotNull(simpleDateFormat6);
        org.junit.Assert.assertNotNull(simpleDateFormat7);
        org.junit.Assert.assertNotNull(simpleDateFormat14);
        org.junit.Assert.assertNotNull(simpleDateFormat18);
        org.junit.Assert.assertNotNull(simpleDateFormat25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-1972.041095890411d) + "'", double37 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 719795L + "'", long52 == 719795L);
// flaky:         org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Thu 10-Apr-0002 10:47:03" + "'", str53, "Thu 10-Apr-0002 10:47:03");
        org.junit.Assert.assertNotNull(calendar54);
// flaky:         org.junit.Assert.assertEquals(calendar54.toString(), "java.util.GregorianCalendar[time=-62190310376152,areFieldsSet=true,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=3,MILLISECOND=848,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    }

    @Test
    public void test6536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6536");
        java.util.zip.ZipOutputStream zipOutputStream1 = null;
        // The following exception was thrown during execution in test generation
        try {
            net.ajaskey.common.Utils.writeToZipFile("                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    -62,190,310,414,584", zipOutputStream1);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     -62,190,310,414,584 (The filename, directory name, or volume label syntax is incorrect)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
    }

    @Test
    public void test6537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6537");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("5.00", "     10");
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        int int10 = dateTime6.getHour();
        java.text.SimpleDateFormat simpleDateFormat12 = null;
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat12);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double16 = dateTime13.getDeltaYears(dateTime15);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean21 = dateTime15.isEqual(dateTime20);
        java.util.Calendar calendar22 = dateTime15.getCal();
        dateTime6.set(calendar22);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime(calendar22);
        dateTime2.set(calendar22);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(calendar22);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(calendar22);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime(100L);
        double double34 = dateTime31.getDeltaYears(dateTime33);
        int int35 = dateTime31.getHour();
        dateTime31.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat40 = null;
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat40);
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double44 = dateTime41.getDeltaYears(dateTime43);
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean49 = dateTime43.isEqual(dateTime48);
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime(100L);
        int int52 = dateTime51.getMs();
        boolean boolean53 = dateTime48.isGreaterThanOrEqual(dateTime51);
        java.text.SimpleDateFormat simpleDateFormat55 = null;
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat55);
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double59 = dateTime56.getDeltaYears(dateTime58);
        boolean boolean60 = dateTime56.isWeekday();
        boolean boolean61 = dateTime51.isLessThanOrEqual(dateTime56);
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime(100L);
        dateTime63.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean68 = dateTime63.isWeekday();
        boolean boolean69 = dateTime51.isGreaterThanOrEqual(dateTime63);
        boolean boolean70 = dateTime31.sameDate(dateTime63);
        java.lang.String str71 = dateTime31.getDay();
        long long72 = dateTime27.getDeltaDays(dateTime31);
        java.lang.String str73 = dateTime31.toFullString();
        int int74 = dateTime31.getDayOfYear();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(calendar22);
        org.junit.Assert.assertEquals(calendar22.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-1972.041095890411d) + "'", double34 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 100 + "'", int52 == 100);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Thursday" + "'", str71, "Thursday");
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 719795L + "'", long72 == 719795L);
// flaky:         org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Thu 10-Apr-0002 10:47:03" + "'", str73, "Thu 10-Apr-0002 10:47:03");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 100 + "'", int74 == 100);
    }

    @Test
    public void test6538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6538");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) 256);
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(100L);
        int int4 = dateTime3.getMs();
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime(100L);
        double double11 = dateTime8.getDeltaYears(dateTime10);
        java.text.SimpleDateFormat simpleDateFormat12 = dateTime8.getSdf();
        boolean boolean13 = dateTime3.isLessThanOrEqual(dateTime8);
        java.text.SimpleDateFormat simpleDateFormat15 = null;
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat15);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double19 = dateTime16.getDeltaYears(dateTime18);
        boolean boolean20 = dateTime16.isWeekday();
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long25 = dateTime16.getDeltaDays(dateTime24);
        long long26 = dateTime3.getDeltaDays(dateTime24);
        java.lang.String str27 = dateTime24.toFullString();
        java.util.Calendar calendar28 = dateTime24.getCal();
        java.util.Calendar calendar29 = dateTime24.getCal();
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime(calendar29);
        int int31 = dateTime1.getYears(dateTime30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + (-1972.041095890411d) + "'", double11 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 719795L + "'", long26 == 719795L);
// flaky:         org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Thu 10-Apr-0002 10:47:03" + "'", str27, "Thu 10-Apr-0002 10:47:03");
        org.junit.Assert.assertNotNull(calendar28);
// flaky:         org.junit.Assert.assertEquals(calendar28.toString(), "java.util.GregorianCalendar[time=-62190310376100,areFieldsSet=true,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=3,MILLISECOND=900,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(calendar29);
// flaky:         org.junit.Assert.assertEquals(calendar29.toString(), "java.util.GregorianCalendar[time=-62190310376100,areFieldsSet=true,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=3,MILLISECOND=900,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1968) + "'", int31 == (-1968));
    }

    @Test
    public void test6539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6539");
        java.util.Map<java.lang.String, java.lang.Integer> strMap0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = net.ajaskey.common.Utils.findName(strMap0, (java.lang.Integer) 704);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test6540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6540");
        java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readTextFile("Thu 10-Apr-0002 10:42:55", true);
        net.ajaskey.common.TextUtils.print(strList2);
        java.lang.String str4 = net.ajaskey.common.TextUtils.toString(strList2);
        java.lang.String str5 = net.ajaskey.common.TextUtils.toString(strList2);
        net.ajaskey.common.TextUtils.print(strList2);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    }

    @Test
    public void test6541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6541");
        net.ajaskey.common.DateTime dateTime0 = null;
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(dateTime0);
        dateTime1.set(42, 10, 10);
        java.util.Date date6 = dateTime1.getTime();
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime(date6);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(date6);
        boolean boolean9 = dateTime8.isWeekday();
        dateTime8.setFirstWorkDay();
        int int11 = dateTime8.getMs();
        org.junit.Assert.assertNotNull(date6);
// flaky:         org.junit.Assert.assertEquals(date6.toString(), "Sat Nov 10 10:47:03 MST 42");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 956 + "'", int11 == 956);
    }

    @Test
    public void test6542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6542");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) 442);
    }

    @Test
    public void test6543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6543");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        java.text.SimpleDateFormat simpleDateFormat7 = dateTime3.getSdf();
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("5.00", "     10");
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("5.00", "     10");
        dateTime13.add((int) (short) 0, (int) 'a');
        int int17 = dateTime13.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(100L);
        int int20 = dateTime19.getMs();
        int int21 = dateTime19.getHour();
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat27 = null;
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat27);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double31 = dateTime28.getDeltaYears(dateTime30);
        boolean boolean32 = dateTime25.isLessThan(dateTime30);
        java.lang.String str33 = dateTime30.toFullString();
        dateTime30.add(10, (int) (byte) -1);
        java.text.SimpleDateFormat simpleDateFormat38 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat40 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat41 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime("", simpleDateFormat40, simpleDateFormat41);
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat38, simpleDateFormat41);
        boolean boolean44 = dateTime30.isGreaterThan(dateTime43);
        boolean boolean45 = dateTime19.isEqual(dateTime30);
        net.ajaskey.common.DateTime dateTime46 = null;
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime(dateTime46);
        dateTime47.set(42, 10, 10);
        java.util.Date date52 = dateTime47.getTime();
        net.ajaskey.common.DateTime dateTime53 = dateTime19.copy(dateTime47);
        net.ajaskey.common.DateTime dateTime54 = dateTime13.copy(dateTime19);
        boolean boolean55 = net.ajaskey.common.Utils.sameMonth(dateTime10, dateTime54);
        dateTime3.set(dateTime54);
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime(100L);
        dateTime58.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime(100L);
        double double69 = dateTime66.getDeltaYears(dateTime68);
        boolean boolean70 = dateTime68.isWeekday();
        java.util.Date date71 = dateTime68.getTime();
        dateTime58.set(dateTime68);
        int int73 = dateTime58.getYear();
        boolean boolean74 = dateTime3.isLessThan(dateTime58);
        net.ajaskey.common.DateTime dateTime78 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean79 = dateTime78.isNull();
        java.lang.String str80 = dateTime78.getDay();
        java.lang.String str81 = dateTime78.getMonth();
        java.lang.String str82 = dateTime78.getDay();
        java.lang.String str83 = dateTime78.toFullString();
        java.util.Calendar calendar84 = dateTime78.getCal();
        dateTime3.set(calendar84);
        boolean boolean86 = dateTime3.isWeekday();
        net.ajaskey.common.DateTime dateTime88 = dateTime3.parse
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat7);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 5 + "'", int21 == 5);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str33, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertNotNull(simpleDateFormat38);
        org.junit.Assert.assertNotNull(simpleDateFormat40);
        org.junit.Assert.assertNotNull(simpleDateFormat41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(date52);
// flaky:         org.junit.Assert.assertEquals(date52.toString(), "Sat Nov 10 10:47:04 MST 42");
        org.junit.Assert.assertNotNull(dateTime53);
        org.junit.Assert.assertNotNull(dateTime54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-1972.041095890411d) + "'", double69 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(date71);
        org.junit.Assert.assertEquals(date71.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1969 + "'", int73 == 1969);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "Thursday" + "'", str80, "Thursday");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "April" + "'", str81, "April");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "Thursday" + "'", str82, "Thursday");
// flaky:         org.junit.Assert.assertEquals("'" + str83 + "' != '" + "Thu 10-Apr-0002 10:47:04" + "'", str83, "Thu 10-Apr-0002 10:47:04");
        org.junit.Assert.assertNotNull(calendar84);
// flaky:         org.junit.Assert.assertEquals(calendar84.toString(), "java.util.GregorianCalendar[time=-62190310375997,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=4,MILLISECOND=3,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNull(dateTime88);
    }

    @Test
    public void test6544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6544");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        java.util.Date date7 = dateTime3.getTime();
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(date7);
        net.ajaskey.common.DateTime dateTime11 = dateTime8.parse("31-Dec-1969", "January");
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(100L);
        int int14 = dateTime13.getMs();
        java.lang.String str15 = dateTime13.toString();
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(100L);
        double double22 = dateTime19.getDeltaYears(dateTime21);
        int int23 = dateTime19.getHour();
        int int24 = dateTime19.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime(100L);
        double double31 = dateTime28.getDeltaYears(dateTime30);
        boolean boolean32 = dateTime30.isWeekday();
        boolean boolean33 = net.ajaskey.common.Utils.sameDate(dateTime19, dateTime30);
        boolean boolean34 = net.ajaskey.common.Utils.sameDate(dateTime13, dateTime19);
        dateTime8.set(dateTime19);
        java.util.Calendar calendar36 = dateTime19.getCal();
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(calendar36);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime("                                                                                              100", "100");
        boolean boolean41 = net.ajaskey.common.Utils.sameDate(dateTime37, dateTime40);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean46 = dateTime45.isNull();
        java.lang.String str47 = dateTime45.getDay();
        java.text.SimpleDateFormat simpleDateFormat48 = dateTime45.getSdf();
        int int49 = dateTime45.getHour();
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime(dateTime45);
        boolean boolean51 = dateTime50.isNull();
        java.text.SimpleDateFormat simpleDateFormat52 = dateTime50.getSdf();
        boolean boolean53 = dateTime37.isGreaterThan(dateTime50);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertNotNull(date7);
// flaky:         org.junit.Assert.assertEquals(date7.toString(), "Thu Apr 10 10:47:04 MST 2");
        org.junit.Assert.assertNull(dateTime11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "31-Dec-1969" + "'", str15, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-1972.041095890411d) + "'", double22 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-1972.041095890411d) + "'", double31 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(calendar36);
// flaky:         org.junit.Assert.assertEquals(calendar36.toString(), "java.util.GregorianCalendar[time=-62190310375815,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=4,MILLISECOND=185,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Thursday" + "'", str47, "Thursday");
        org.junit.Assert.assertNull(simpleDateFormat48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 10 + "'", int49 == 10);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(simpleDateFormat52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test6545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6545");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat5 = null;
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat5);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        boolean boolean10 = dateTime3.isLessThan(dateTime8);
        java.lang.String str11 = dateTime8.toFullString();
        int int12 = dateTime8.getSecond();
        int int13 = dateTime8.getDayOfWeek();
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(100L);
        int int16 = dateTime15.getMs();
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(100L);
        double double23 = dateTime20.getDeltaYears(dateTime22);
        java.text.SimpleDateFormat simpleDateFormat24 = dateTime20.getSdf();
        boolean boolean25 = dateTime15.isLessThanOrEqual(dateTime20);
        boolean boolean26 = dateTime15.isWeekday();
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((long) (short) 0);
        int int29 = dateTime28.getHour();
        int int30 = dateTime28.getSecond();
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime(100L);
        int int33 = dateTime32.getMs();
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime(100L);
        double double40 = dateTime37.getDeltaYears(dateTime39);
        java.text.SimpleDateFormat simpleDateFormat41 = dateTime37.getSdf();
        boolean boolean42 = dateTime32.isLessThanOrEqual(dateTime37);
        java.text.SimpleDateFormat simpleDateFormat44 = null;
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat44);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double48 = dateTime45.getDeltaYears(dateTime47);
        boolean boolean49 = dateTime45.isWeekday();
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long54 = dateTime45.getDeltaDays(dateTime53);
        long long55 = dateTime32.getDeltaDays(dateTime53);
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime(100L);
        dateTime57.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean62 = dateTime57.isWeekday();
        int int63 = dateTime32.getYears(dateTime57);
        java.text.SimpleDateFormat simpleDateFormat65 = null;
        net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat65);
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double69 = dateTime66.getDeltaYears(dateTime68);
        net.ajaskey.common.DateTime dateTime73 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean74 = dateTime68.isEqual(dateTime73);
        int int75 = dateTime68.getDayOfWeek();
        boolean boolean76 = dateTime57.isLessThan(dateTime68);
        long long77 = dateTime28.getDeltaMilliSeconds(dateTime57);
        dateTime28.add(13, 12);
        boolean boolean81 = dateTime15.isLessThanOrEqual(dateTime28);
        net.ajaskey.common.DateTime dateTime83 = new net.ajaskey.common.DateTime((-59011286399900L));
        net.ajaskey.common.DateTime dateTime85 = new net.ajaskey.common.DateTime(100L);
        int int86 = dateTime85.getMs();
        boolean boolean87 = dateTime85.isNull();
        java.util.Calendar calendar88 = dateTime85.getCal();
        int int89 = dateTime83.getYears(dateTime85);
        dateTime83.setFirstWorkDay();
        boolean boolean91 = dateTime15.isLessThan(dateTime83);
        boolean boolean92 = dateTime8.isLessThanOrEqual(dateTime83);
        net.ajaskey.common.DateTime dateTime94 = dateTime8.parse("January     0     0                                                                                               52.00     0hi!     0");
        // The following exception was thrown during execution in test generation
        try {
            java.util.Calendar calendar95 = dateTime94.getCal();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str11, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 4 + "'", int13 == 4);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-1972.041095890411d) + "'", double23 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 5 + "'", int29 == 5);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-1972.041095890411d) + "'", double40 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 0L + "'", long54 == 0L);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 719795L + "'", long55 == 719795L);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1870) + "'", int63 == (-1870));
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 4 + "'", int75 == 4);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + (-59011286399900L) + "'", long77 == (-59011286399900L));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 100 + "'", int86 == 100);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(calendar88);
        org.junit.Assert.assertEquals(calendar88.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1869 + "'", int89 == 1869);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNull(dateTime94);
    }

    @Test
    public void test6546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6546");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean10 = dateTime4.isEqual(dateTime9);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(100L);
        int int13 = dateTime12.getMs();
        boolean boolean14 = dateTime9.isGreaterThanOrEqual(dateTime12);
        java.text.SimpleDateFormat simpleDateFormat16 = null;
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double20 = dateTime17.getDeltaYears(dateTime19);
        boolean boolean21 = dateTime17.isWeekday();
        boolean boolean22 = dateTime12.isLessThanOrEqual(dateTime17);
        net.ajaskey.common.DateTime dateTime24 = dateTime17.parse("                                                                                                                                                                                                                                                                                                                                                                          100");
        dateTime17.setFirstWorkDay();
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime("5.00", "     10");
        java.text.SimpleDateFormat simpleDateFormat29 = dateTime28.getSdf();
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean34 = dateTime33.isNull();
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime();
        boolean boolean36 = dateTime33.sameDate(dateTime35);
        dateTime35.set(43, (int) (byte) 1, 12);
        double double41 = dateTime28.getDeltaYears(dateTime35);
        net.ajaskey.common.DateTime dateTime42 = dateTime17.copy(dateTime28);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(dateTime24);
        org.junit.Assert.assertNull(simpleDateFormat29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNull(dateTime42);
    }

    @Test
    public void test6547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6547");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(100L);
        int int4 = dateTime3.getMs();
        java.lang.String str5 = dateTime3.toString();
        java.text.SimpleDateFormat simpleDateFormat7 = null;
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat7);
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double11 = dateTime8.getDeltaYears(dateTime10);
        boolean boolean12 = dateTime8.isWeekday();
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long17 = dateTime8.getDeltaDays(dateTime16);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(dateTime8);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime(100L);
        double double25 = dateTime22.getDeltaYears(dateTime24);
        boolean boolean26 = dateTime24.isWeekday();
        java.util.Date date27 = dateTime24.getTime();
        dateTime8.set(date27);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime(100L);
        int int31 = dateTime30.getMs();
        java.lang.String str32 = dateTime30.toString();
        boolean boolean33 = dateTime8.isLessThanOrEqual(dateTime30);
        boolean boolean34 = dateTime3.isLessThanOrEqual(dateTime30);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime("January", "11");
        double double38 = dateTime3.getDeltaYears(dateTime37);
        java.text.SimpleDateFormat simpleDateFormat39 = dateTime3.getSdf();
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime("Wed 31-Dec-1969 17:00:00", simpleDateFormat39);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime("January                                 42                                 42                                                                                               52.00                                 42hi!                                 42", simpleDateFormat39);
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime("BAD-DATE-FORMAT", "                                                                                               52.00");
        int int45 = dateTime44.getMinute();
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime(100L);
        double double52 = dateTime49.getDeltaYears(dateTime51);
        boolean boolean53 = dateTime51.isWeekday();
        int int54 = dateTime51.getDayOfYear();
        boolean boolean55 = dateTime44.isEqual(dateTime51);
        int int56 = dateTime44.getMs();
        java.text.SimpleDateFormat simpleDateFormat58 = null;
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat58);
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double62 = dateTime59.getDeltaYears(dateTime61);
        net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean67 = dateTime61.isEqual(dateTime66);
        java.util.Calendar calendar68 = dateTime61.getCal();
        net.ajaskey.common.DateTime dateTime72 = new net.ajaskey.common.DateTime(1, (int) '4', 5);
        double double73 = dateTime61.getDeltaYears(dateTime72);
        java.lang.String str74 = dateTime72.format();
        dateTime72.setFirstWorkDay();
        dateTime44.set(dateTime72);
        int int77 = dateTime44.getDayOfWeek();
        boolean boolean78 = dateTime41.isEqual(dateTime44);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "31-Dec-1969" + "'", str5, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + (-1972.041095890411d) + "'", double25 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(date27);
        org.junit.Assert.assertEquals(date27.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 100 + "'", int31 == 100);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "31-Dec-1969" + "'", str32, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(simpleDateFormat39);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-1972.041095890411d) + "'", double52 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 365 + "'", int54 == 365);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(calendar68);
        org.junit.Assert.assertEquals(calendar68.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1965.9671232876713d + "'", double73 == 1965.9671232876713d);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "BAD-DATE-FORMAT" + "'", str74, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 3 + "'", int77 == 3);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test6548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6548");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        long long6 = dateTime3.getDeltaDays(dateTime5);
        int int7 = dateTime3.getHour();
        dateTime3.add((int) (byte) 100, (int) (byte) 0);
        net.ajaskey.common.DateTime dateTime12 = dateTime3.parse("10-Apr-0002");
        int int13 = dateTime3.getDayOfMonth();
        java.lang.String str14 = dateTime3.toString();
        java.text.SimpleDateFormat simpleDateFormat16 = null;
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat16);
        int int18 = dateTime17.getYear();
        java.text.SimpleDateFormat simpleDateFormat19 = dateTime17.getSdf();
        int int20 = dateTime17.getMs();
        boolean boolean21 = dateTime3.isEqual(dateTime17);
        java.text.SimpleDateFormat simpleDateFormat24 = null;
        java.text.SimpleDateFormat simpleDateFormat25 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime("January", simpleDateFormat24, simpleDateFormat25);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime("100.00", simpleDateFormat24);
        java.text.SimpleDateFormat simpleDateFormat29 = null;
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat29);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double33 = dateTime30.getDeltaYears(dateTime32);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean38 = dateTime32.isEqual(dateTime37);
        long long39 = dateTime27.getDeltaDays(dateTime37);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime("5.00", "     10");
        dateTime42.add((int) (short) 0, (int) 'a');
        int int46 = dateTime42.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime(100L);
        int int49 = dateTime48.getMs();
        int int50 = dateTime48.getHour();
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat56 = null;
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat56);
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double60 = dateTime57.getDeltaYears(dateTime59);
        boolean boolean61 = dateTime54.isLessThan(dateTime59);
        java.lang.String str62 = dateTime59.toFullString();
        dateTime59.add(10, (int) (byte) -1);
        java.text.SimpleDateFormat simpleDateFormat67 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat69 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat70 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime("", simpleDateFormat69, simpleDateFormat70);
        net.ajaskey.common.DateTime dateTime72 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat67, simpleDateFormat70);
        boolean boolean73 = dateTime59.isGreaterThan(dateTime72);
        boolean boolean74 = dateTime48.isEqual(dateTime59);
        net.ajaskey.common.DateTime dateTime75 = null;
        net.ajaskey.common.DateTime dateTime76 = new net.ajaskey.common.DateTime(dateTime75);
        dateTime76.set(42, 10, 10);
        java.util.Date date81 = dateTime76.getTime();
        net.ajaskey.common.DateTime dateTime82 = dateTime48.copy(dateTime76);
        net.ajaskey.common.DateTime dateTime83 = dateTime42.copy(dateTime48);
        net.ajaskey.common.DateTime dateTime85 = new net.ajaskey.common.DateTime((long) (byte) 100);
        net.ajaskey.common.DateTime dateTime89 = new net.ajaskey.common.DateTime(25, 1, 0);
        boolean boolean90 = net.ajaskey.common.Utils.sameMonth(dateTime85, dateTime89);
        boolean boolean91 = net.ajaskey.common.Utils.sameDate(dateTime42, dateTime85);
        net.ajaskey.common.DateTime dateTime92 = dateTime37.copy(dateTime42);
        boolean boolean93 = dateTime3.isLessThan(dateTime42);
        boolean boolean94 = dateTime3.isWeekday();
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-719795L) + "'", long6 == (-719795L));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertNull(dateTime12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10 + "'", int13 == 10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "10-Apr-0002" + "'", str14, "10-Apr-0002");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(simpleDateFormat19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(simpleDateFormat25);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 5 + "'", int50 == 5);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str62, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertNotNull(simpleDateFormat67);
        org.junit.Assert.assertNotNull(simpleDateFormat69);
        org.junit.Assert.assertNotNull(simpleDateFormat70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(date81);
// flaky:         org.junit.Assert.assertEquals(date81.toString(), "Sat Nov 10 10:47:04 MST 42");
        org.junit.Assert.assertNotNull(dateTime82);
        org.junit.Assert.assertNotNull(dateTime83);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNull(dateTime92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }

    @Test
    public void test6549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6549");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        dateTime1.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
        double double12 = dateTime9.getDeltaYears(dateTime11);
        boolean boolean13 = dateTime11.isWeekday();
        java.util.Date date14 = dateTime11.getTime();
        dateTime1.set(dateTime11);
        java.lang.String str16 = dateTime1.getDay();
        java.lang.Class<?> wildcardClass17 = dateTime1.getClass();
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1972.041095890411d) + "'", double12 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(date14);
        org.junit.Assert.assertEquals(date14.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Wednesday" + "'", str16, "Wednesday");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test6550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6550");
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime(100L);
        double double7 = dateTime4.getDeltaYears(dateTime6);
        int int8 = dateTime4.getHour();
        dateTime4.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat13 = null;
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat13);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double17 = dateTime14.getDeltaYears(dateTime16);
        boolean boolean18 = dateTime4.isEqual(dateTime16);
        java.text.SimpleDateFormat simpleDateFormat20 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat22 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat23 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("", simpleDateFormat22, simpleDateFormat23);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat20, simpleDateFormat23);
        dateTime4.setSdf(simpleDateFormat20);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat33 = null;
        java.text.SimpleDateFormat simpleDateFormat34 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("January", simpleDateFormat33, simpleDateFormat34);
        java.text.SimpleDateFormat simpleDateFormat38 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime("January", simpleDateFormat38);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime("", simpleDateFormat38);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime("", simpleDateFormat34, simpleDateFormat38);
        dateTime30.setSdf(simpleDateFormat34);
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime("December", simpleDateFormat20, simpleDateFormat34);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(100L);
        int int46 = dateTime45.getMs();
        java.text.SimpleDateFormat simpleDateFormat47 = net.ajaskey.common.Utils.sdf;
        dateTime45.setSdf(simpleDateFormat47);
        java.lang.String str49 = dateTime45.format();
        boolean boolean50 = dateTime43.isLessThanOrEqual(dateTime45);
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime(100L);
        double double57 = dateTime54.getDeltaYears(dateTime56);
        int int58 = dateTime54.getHour();
        dateTime54.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat63 = null;
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat63);
        net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double67 = dateTime64.getDeltaYears(dateTime66);
        boolean boolean68 = dateTime54.isEqual(dateTime66);
        java.lang.String str69 = dateTime66.toString();
        int int70 = dateTime66.getHour();
        dateTime66.add(2020, 2);
        long long74 = dateTime45.getDeltaMilliSeconds(dateTime66);
        java.lang.String str75 = dateTime45.toFullString();
        java.lang.String str76 = dateTime45.getDay();
        net.ajaskey.common.DateTime dateTime78 = dateTime45.parse("Thu 10-Apr-0002 10:45:05");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-1972.041095890411d) + "'", double7 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10 + "'", int8 == 10);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(simpleDateFormat20);
        org.junit.Assert.assertNotNull(simpleDateFormat22);
        org.junit.Assert.assertNotNull(simpleDateFormat23);
        org.junit.Assert.assertNotNull(simpleDateFormat34);
        org.junit.Assert.assertNotNull(simpleDateFormat38);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "31-Dec-1969" + "'", str49, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-1972.041095890411d) + "'", double57 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 10 + "'", int58 == 10);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "31-Dec-1969" + "'", str69, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 5 + "'", int70 == 5);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + (-100L) + "'", long74 == (-100L));
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str75, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "Wednesday" + "'", str76, "Wednesday");
        org.junit.Assert.assertNull(dateTime78);
    }

    @Test
    public void test6551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6551");
        java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readTextFile("Thu 10-Apr-0002 10:45:35", true);
        org.junit.Assert.assertNotNull(strList2);
    }

    @Test
    public void test6552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6552");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(49, 558, (int) (byte) -1);
        net.ajaskey.common.DateTime dateTime4 = null;
        net.ajaskey.common.DateTime dateTime5 = dateTime3.copy(dateTime4);
        org.junit.Assert.assertNull(dateTime5);
    }

    @Test
    public void test6553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6553");
        net.ajaskey.common.Utils.NL = "Wednesday";
    }

    @Test
    public void test6554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6554");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        java.text.SimpleDateFormat simpleDateFormat8 = null;
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double12 = dateTime9.getDeltaYears(dateTime11);
        boolean boolean13 = dateTime9.isWeekday();
        boolean boolean14 = dateTime3.sameDate(dateTime9);
        java.text.SimpleDateFormat simpleDateFormat16 = null;
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double20 = dateTime17.getDeltaYears(dateTime19);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean25 = dateTime19.isEqual(dateTime24);
        dateTime3.set(dateTime24);
        int int27 = dateTime24.getDayOfWeek();
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime();
        net.ajaskey.common.DateTime dateTime29 = null;
        boolean boolean30 = dateTime28.isGreaterThan(dateTime29);
        java.text.SimpleDateFormat simpleDateFormat32 = null;
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat32);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double36 = dateTime33.getDeltaYears(dateTime35);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean41 = dateTime35.isEqual(dateTime40);
        java.util.Calendar calendar42 = dateTime35.getCal();
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime(calendar42);
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime(calendar42);
        boolean boolean45 = dateTime28.isLessThan(dateTime44);
        long long46 = dateTime24.getDeltaDays(dateTime28);
        java.util.Date date47 = dateTime24.getTime();
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime(date47);
        dateTime48.setFirstWorkDay();
        java.text.SimpleDateFormat simpleDateFormat50 = dateTime48.getSdf();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 5 + "'", int27 == 5);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(calendar42);
        org.junit.Assert.assertEquals(calendar42.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-738233L) + "'", long46 == (-738233L));
        org.junit.Assert.assertNotNull(date47);
// flaky:         org.junit.Assert.assertEquals(date47.toString(), "Thu Apr 10 10:47:04 MST 2");
        org.junit.Assert.assertNull(simpleDateFormat50);
    }

    @Test
    public void test6555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6555");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(10, 5, 13);
        int int4 = dateTime3.getSecond();
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 4 + "'", int4 == 4);
    }

    @Test
    public void test6556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6556");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime(100L);
        int int3 = dateTime2.getMs();
        java.lang.String str4 = dateTime2.toString();
        java.text.SimpleDateFormat simpleDateFormat6 = null;
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat6);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double10 = dateTime7.getDeltaYears(dateTime9);
        boolean boolean11 = dateTime7.isWeekday();
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long16 = dateTime7.getDeltaDays(dateTime15);
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(dateTime7);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime(100L);
        double double24 = dateTime21.getDeltaYears(dateTime23);
        boolean boolean25 = dateTime23.isWeekday();
        java.util.Date date26 = dateTime23.getTime();
        dateTime7.set(date26);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(100L);
        int int30 = dateTime29.getMs();
        java.lang.String str31 = dateTime29.toString();
        boolean boolean32 = dateTime7.isLessThanOrEqual(dateTime29);
        boolean boolean33 = dateTime2.isLessThanOrEqual(dateTime29);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime("January", "11");
        double double37 = dateTime2.getDeltaYears(dateTime36);
        java.text.SimpleDateFormat simpleDateFormat38 = dateTime2.getSdf();
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime("Wed 31-Dec-1969 17:00:00", simpleDateFormat38);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime(100L);
        int int42 = dateTime41.getMs();
        boolean boolean43 = dateTime41.isNull();
        java.util.Calendar calendar44 = dateTime41.getCal();
        java.text.SimpleDateFormat simpleDateFormat45 = dateTime41.getSdf();
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime(53, 53, 12);
        boolean boolean50 = dateTime41.isLessThan(dateTime49);
        boolean boolean51 = dateTime39.isLessThan(dateTime41);
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime(100L);
        double double58 = dateTime55.getDeltaYears(dateTime57);
        int int59 = dateTime55.getHour();
        dateTime55.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat64 = null;
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat64);
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double68 = dateTime65.getDeltaYears(dateTime67);
        boolean boolean69 = dateTime55.isEqual(dateTime67);
        int int70 = dateTime55.getDayOfYear();
        boolean boolean71 = dateTime41.isEqual(dateTime55);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "31-Dec-1969" + "'", str4, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1972.041095890411d) + "'", double24 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(date26);
        org.junit.Assert.assertEquals(date26.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "31-Dec-1969" + "'", str31, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(simpleDateFormat38);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(calendar44);
        org.junit.Assert.assertEquals(calendar44.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNull(simpleDateFormat45);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-1972.041095890411d) + "'", double58 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 10 + "'", int59 == 10);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 100 + "'", int70 == 100);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test6557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6557");
        java.text.SimpleDateFormat simpleDateFormat5 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat6 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("", simpleDateFormat5, simpleDateFormat6);
        java.text.SimpleDateFormat simpleDateFormat9 = null;
        java.text.SimpleDateFormat simpleDateFormat10 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime("January", simpleDateFormat9, simpleDateFormat10);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat5, simpleDateFormat10);
        java.text.SimpleDateFormat simpleDateFormat15 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat16 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("", simpleDateFormat15, simpleDateFormat16);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(100L);
        int int20 = dateTime19.getMs();
        java.text.SimpleDateFormat simpleDateFormat21 = net.ajaskey.common.Utils.sdf;
        dateTime19.setSdf(simpleDateFormat21);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat16, simpleDateFormat21);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("                             100", simpleDateFormat10, simpleDateFormat16);
        java.text.SimpleDateFormat simpleDateFormat27 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat28 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime("", simpleDateFormat27, simpleDateFormat28);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:42:54", simpleDateFormat27);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime("5.00", simpleDateFormat10, simpleDateFormat27);
        java.text.SimpleDateFormat simpleDateFormat32 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat10, simpleDateFormat32);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime("10-Apr-0002", "    0");
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime(100L);
        dateTime42.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str47 = dateTime42.getMonth();
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime(100L);
        dateTime49.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str54 = dateTime49.getMonth();
        int int55 = dateTime49.getMs();
        net.ajaskey.common.DateTime dateTime56 = dateTime42.copy(dateTime49);
        dateTime40.set(dateTime42);
        dateTime40.setFirstWorkDay();
        boolean boolean59 = net.ajaskey.common.Utils.sameMonth(dateTime36, dateTime40);
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime(100L);
        dateTime61.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str66 = dateTime61.getMonth();
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime(100L);
        dateTime68.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str73 = dateTime68.getMonth();
        int int74 = dateTime68.getMs();
        net.ajaskey.common.DateTime dateTime75 = dateTime61.copy(dateTime68);
        boolean boolean76 = dateTime61.isWeekday();
        java.lang.String str77 = dateTime61.format();
        net.ajaskey.common.DateTime dateTime79 = new net.ajaskey.common.DateTime(100L);
        int int80 = dateTime79.getMs();
        net.ajaskey.common.DateTime dateTime84 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime86 = new net.ajaskey.common.DateTime(100L);
        double double87 = dateTime84.getDeltaYears(dateTime86);
        java.text.SimpleDateFormat simpleDateFormat88 = dateTime84.getSdf();
        boolean boolean89 = dateTime79.isLessThanOrEqual(dateTime84);
        int int90 = dateTime84.getDayOfYear();
        boolean boolean91 = dateTime84.isWeekday();
        boolean boolean92 = dateTime61.isLessThan(dateTime84);
        boolean boolean93 = net.ajaskey.common.Utils.sameMonth(dateTime36, dateTime84);
        int int94 = dateTime33.getYears(dateTime84);
        java.lang.String str96 = dateTime33.format("");
        org.junit.Assert.assertNotNull(simpleDateFormat5);
        org.junit.Assert.assertNotNull(simpleDateFormat6);
        org.junit.Assert.assertNotNull(simpleDateFormat10);
        org.junit.Assert.assertNotNull(simpleDateFormat15);
        org.junit.Assert.assertNotNull(simpleDateFormat16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat21);
        org.junit.Assert.assertNotNull(simpleDateFormat27);
        org.junit.Assert.assertNotNull(simpleDateFormat28);
        org.junit.Assert.assertNotNull(simpleDateFormat32);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "January" + "'", str47, "January");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "January" + "'", str54, "January");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
        org.junit.Assert.assertNotNull(dateTime56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "January" + "'", str66, "January");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "January" + "'", str73, "January");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 100 + "'", int74 == 100);
        org.junit.Assert.assertNotNull(dateTime75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "BAD-DATE-FORMAT" + "'", str77, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 100 + "'", int80 == 100);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-1972.041095890411d) + "'", double87 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 100 + "'", int90 == 100);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 0 + "'", int94 == 0);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "BAD-DATE-FORMAT" + "'", str96, "BAD-DATE-FORMAT");
    }

    @Test
    public void test6558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6558");
        java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readTextFile("Thu 10-Apr-0002 10:43:18", false);
        java.lang.String str3 = net.ajaskey.common.TextUtils.toString(strList2);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
    }

    @Test
    public void test6559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6559");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("             -62,190,310,593,948", "                0");
        java.lang.String str4 = dateTime2.format("Thu 10-Apr-0002 10:43:43");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "BAD-DATE-FORMAT" + "'", str4, "BAD-DATE-FORMAT");
    }

    @Test
    public void test6560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6560");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean10 = dateTime4.isEqual(dateTime9);
        java.util.Calendar calendar11 = dateTime4.getCal();
        net.ajaskey.common.DateTime dateTime12 = null;
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(dateTime12);
        java.lang.String str15 = dateTime13.format("     5.00");
        net.ajaskey.common.DateTime dateTime16 = null;
        long long17 = dateTime13.getDeltaDays(dateTime16);
        long long18 = dateTime4.getDeltaDays(dateTime13);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime(100L);
        double double25 = dateTime22.getDeltaYears(dateTime24);
        boolean boolean26 = dateTime24.isWeekday();
        java.util.Date date27 = dateTime24.getTime();
        java.text.SimpleDateFormat simpleDateFormat29 = null;
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat29);
        dateTime30.set((int) ' ', 0, 11);
        boolean boolean35 = dateTime30.isWeekday();
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(100L);
        dateTime37.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime(100L);
        double double48 = dateTime45.getDeltaYears(dateTime47);
        boolean boolean49 = dateTime47.isWeekday();
        java.util.Date date50 = dateTime47.getTime();
        dateTime37.set(dateTime47);
        boolean boolean52 = dateTime30.isEqual(dateTime47);
        boolean boolean53 = dateTime24.isLessThanOrEqual(dateTime47);
        boolean boolean54 = net.ajaskey.common.Utils.sameDate(dateTime4, dateTime24);
        java.text.SimpleDateFormat simpleDateFormat55 = dateTime24.getSdf();
        java.text.SimpleDateFormat simpleDateFormat58 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime("January", simpleDateFormat58);
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime("", simpleDateFormat58);
        dateTime60.setFirstWorkDay();
        int int62 = dateTime60.getDayOfMonth();
        java.lang.String str63 = dateTime60.format();
        boolean boolean64 = dateTime24.isLessThan(dateTime60);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(calendar11);
        org.junit.Assert.assertEquals(calendar11.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "     5.00" + "'", str15, "     5.00");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-18438L) + "'", long18 == (-18438L));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + (-1972.041095890411d) + "'", double25 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(date27);
        org.junit.Assert.assertEquals(date27.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + (-1972.041095890411d) + "'", double48 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(date50);
        org.junit.Assert.assertEquals(date50.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(simpleDateFormat55);
        org.junit.Assert.assertNotNull(simpleDateFormat58);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "BAD-DATE-FORMAT" + "'", str63, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test6561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6561");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        dateTime1.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str6 = dateTime1.getMonth();
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        dateTime8.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str13 = dateTime8.getMonth();
        int int14 = dateTime8.getMs();
        net.ajaskey.common.DateTime dateTime15 = dateTime1.copy(dateTime8);
        boolean boolean16 = dateTime1.isWeekday();
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(100L);
        double double23 = dateTime20.getDeltaYears(dateTime22);
        boolean boolean24 = dateTime22.isWeekday();
        boolean boolean25 = dateTime1.isGreaterThan(dateTime22);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(100L);
        dateTime27.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str32 = dateTime27.getMonth();
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime(100L);
        dateTime34.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str39 = dateTime34.getMonth();
        int int40 = dateTime34.getMs();
        net.ajaskey.common.DateTime dateTime41 = dateTime27.copy(dateTime34);
        java.lang.String str42 = dateTime34.toFullString();
        boolean boolean43 = net.ajaskey.common.Utils.sameDate(dateTime1, dateTime34);
        int int44 = dateTime34.getMs();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "January" + "'", str6, "January");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "January" + "'", str13, "January");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-1972.041095890411d) + "'", double23 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "January" + "'", str32, "January");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "January" + "'", str39, "January");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
        org.junit.Assert.assertNotNull(dateTime41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Sat 04-Jan-0100 17:00:00" + "'", str42, "Sat 04-Jan-0100 17:00:00");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
    }

    @Test
    public void test6562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6562");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        java.lang.String str3 = dateTime1.toString();
        dateTime1.set(25, (-1), (int) (short) 10);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(100L);
        double double14 = dateTime11.getDeltaYears(dateTime13);
        boolean boolean15 = dateTime13.isWeekday();
        boolean boolean16 = net.ajaskey.common.Utils.sameMonth(dateTime1, dateTime13);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((long) (short) 0);
        int int19 = dateTime18.getHour();
        boolean boolean20 = dateTime18.isNull();
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(dateTime18);
        boolean boolean22 = dateTime13.isGreaterThan(dateTime18);
        java.text.SimpleDateFormat simpleDateFormat23 = dateTime18.getSdf();
        java.text.SimpleDateFormat simpleDateFormat25 = null;
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat25);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double29 = dateTime26.getDeltaYears(dateTime28);
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean34 = dateTime28.isEqual(dateTime33);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime(100L);
        int int37 = dateTime36.getMs();
        boolean boolean38 = dateTime33.isGreaterThanOrEqual(dateTime36);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime(100L);
        int int41 = dateTime40.getMs();
        int int42 = dateTime40.getHour();
        java.text.SimpleDateFormat simpleDateFormat44 = null;
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat44);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double48 = dateTime45.getDeltaYears(dateTime47);
        boolean boolean49 = dateTime45.isWeekday();
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long54 = dateTime45.getDeltaDays(dateTime53);
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime(dateTime45);
        boolean boolean56 = dateTime40.isLessThanOrEqual(dateTime55);
        boolean boolean57 = net.ajaskey.common.Utils.sameDate(dateTime36, dateTime55);
        int int58 = dateTime55.getSecond();
        net.ajaskey.common.DateTime dateTime59 = null;
        boolean boolean60 = dateTime55.isLessThanOrEqual(dateTime59);
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime((int) '#', 43, 2);
        dateTime55.set(dateTime64);
        int int66 = dateTime55.getSecond();
        int int67 = dateTime18.getYears(dateTime55);
        int int68 = dateTime55.getDayOfMonth();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "31-Dec-1969" + "'", str3, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + (-1972.041095890411d) + "'", double14 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 5 + "'", int19 == 5);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(simpleDateFormat23);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 5 + "'", int42 == 5);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 0L + "'", long54 == 0L);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int58 + "' != '" + 4 + "'", int58 == 4);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int66 + "' != '" + 4 + "'", int66 == 4);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1932) + "'", int67 == (-1932));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2 + "'", int68 == 2);
    }

    @Test
    public void test6563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6563");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        dateTime1.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
        double double12 = dateTime9.getDeltaYears(dateTime11);
        boolean boolean13 = dateTime11.isWeekday();
        java.util.Date date14 = dateTime11.getTime();
        dateTime1.set(dateTime11);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(100L);
        double double22 = dateTime19.getDeltaYears(dateTime21);
        int int23 = dateTime19.getHour();
        java.text.SimpleDateFormat simpleDateFormat25 = null;
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat25);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double29 = dateTime26.getDeltaYears(dateTime28);
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean34 = dateTime28.isEqual(dateTime33);
        java.util.Calendar calendar35 = dateTime28.getCal();
        dateTime19.set(calendar35);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(calendar35);
        boolean boolean38 = dateTime11.isGreaterThan(dateTime37);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean43 = dateTime42.isNull();
        java.lang.String str44 = dateTime42.getDay();
        java.text.SimpleDateFormat simpleDateFormat45 = dateTime42.getSdf();
        int int46 = dateTime42.getHour();
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime(dateTime42);
        boolean boolean48 = dateTime11.isGreaterThan(dateTime47);
        int int49 = dateTime11.getSecond();
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime(100L);
        double double56 = dateTime53.getDeltaYears(dateTime55);
        java.text.SimpleDateFormat simpleDateFormat58 = null;
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat58);
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double62 = dateTime59.getDeltaYears(dateTime61);
        boolean boolean63 = dateTime59.isWeekday();
        boolean boolean64 = dateTime53.sameDate(dateTime59);
        java.text.SimpleDateFormat simpleDateFormat66 = null;
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat66);
        net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double70 = dateTime67.getDeltaYears(dateTime69);
        net.ajaskey.common.DateTime dateTime74 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean75 = dateTime69.isEqual(dateTime74);
        dateTime53.set(dateTime74);
        int int77 = dateTime74.getDayOfWeek();
        java.util.Date date78 = dateTime74.getTime();
        dateTime11.set(date78);
        net.ajaskey.common.DateTime dateTime81 = dateTime11.parse("Wednesday");
        dateTime11.add(631, 241);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1972.041095890411d) + "'", double12 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(date14);
        org.junit.Assert.assertEquals(date14.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-1972.041095890411d) + "'", double22 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(calendar35);
        org.junit.Assert.assertEquals(calendar35.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Thursday" + "'", str44, "Thursday");
        org.junit.Assert.assertNull(simpleDateFormat45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 10 + "'", int46 == 10);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-1972.041095890411d) + "'", double56 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 5 + "'", int77 == 5);
        org.junit.Assert.assertNotNull(date78);
// flaky:         org.junit.Assert.assertEquals(date78.toString(), "Thu Apr 10 10:47:04 MST 2");
        org.junit.Assert.assertNull(dateTime81);
    }

    @Test
    public void test6564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6564");
        net.ajaskey.common.Utils.makeDir
    }

    @Test
    public void test6565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6565");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat5 = null;
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat5);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean14 = dateTime8.isEqual(dateTime13);
        java.util.Calendar calendar15 = dateTime8.getCal();
        boolean boolean16 = dateTime3.isLessThan(dateTime8);
        dateTime3.setFirstWorkDay();
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime(100L);
        double double24 = dateTime21.getDeltaYears(dateTime23);
        java.text.SimpleDateFormat simpleDateFormat26 = null;
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat26);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double30 = dateTime27.getDeltaYears(dateTime29);
        boolean boolean31 = dateTime27.isWeekday();
        boolean boolean32 = dateTime21.sameDate(dateTime27);
        boolean boolean33 = dateTime3.sameDate(dateTime21);
        dateTime21.add(252, 2020);
        int int37 = dateTime21.getHour();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(calendar15);
        org.junit.Assert.assertEquals(calendar15.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1972.041095890411d) + "'", double24 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 10 + "'", int37 == 10);
    }

    @Test
    public void test6566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6566");
        java.lang.String str2 = net.ajaskey.common.Utils.ifmt(314, 52);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                                 314" + "'", str2, "                                                 314");
    }

    @Test
    public void test6567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6567");
        java.lang.String str2 = net.ajaskey.common.Utils.fmt((double) (-743866L), 53);
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Invalid fmt" + "'", str2, "Invalid fmt");
    }

    @Test
    public void test6568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6568");
        java.lang.String str1 = net.ajaskey.common.Utils.getFromUrl("                                                                                                                                                                                                                                                                                            26");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
    }

    @Test
    public void test6569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6569");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((-1593103421363L));
    }

    @Test
    public void test6570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6570");
        java.lang.String str2 = net.ajaskey.common.Utils.ifmt(269, 594);
        org.junit.Assert.assertEquals("'" + strstr
    }

    @Test
    public void test6571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6571");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        java.lang.String str3 = dateTime1.toString();
        int int4 = dateTime1.getDayOfYear();
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime(100L);
        dateTime6.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(100L);
        double double17 = dateTime14.getDeltaYears(dateTime16);
        boolean boolean18 = dateTime16.isWeekday();
        java.util.Date date19 = dateTime16.getTime();
        dateTime6.set(dateTime16);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat26 = null;
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat26);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double30 = dateTime27.getDeltaYears(dateTime29);
        boolean boolean31 = dateTime24.isLessThan(dateTime29);
        dateTime16.set(dateTime29);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime(100L);
        double double39 = dateTime36.getDeltaYears(dateTime38);
        long long40 = dateTime16.getDeltaMilliSeconds(dateTime38);
        java.util.Date date41 = null;
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime(date41);
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime(100L);
        double double49 = dateTime46.getDeltaYears(dateTime48);
        int int50 = dateTime46.getHour();
        java.text.SimpleDateFormat simpleDateFormat52 = null;
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat52);
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double56 = dateTime53.getDeltaYears(dateTime55);
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean61 = dateTime55.isEqual(dateTime60);
        java.util.Calendar calendar62 = dateTime55.getCal();
        dateTime46.set(calendar62);
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime(calendar62);
        net.ajaskey.common.DateTime dateTime65 = dateTime42.copy(dateTime64);
        boolean boolean66 = dateTime38.isLessThan(dateTime42);
        boolean boolean67 = net.ajaskey.common.Utils.sameMonth(dateTime1, dateTime42);
        java.lang.String str68 = dateTime42.toString();
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime(100L);
        dateTime70.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str75 = dateTime70.getMonth();
        int int76 = dateTime70.getMs();
        java.lang.String str78 = dateTime70.format("                                                                                               52.00");
        double double79 = dateTime42.getDeltaYears(dateTime70);
        int int80 = dateTime70.getDayOfMonth();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "31-Dec-1969" + "'", str3, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 365 + "'", int4 == 365);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-1972.041095890411d) + "'", double17 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(date19);
        org.junit.Assert.assertEquals(date19.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-1972.041095890411d) + "'", double39 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 100L + "'", long40 == 100L);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-1972.041095890411d) + "'", double49 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 10 + "'", int50 == 10);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(calendar62);
        org.junit.Assert.assertEquals(calendar62.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(dateTime65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "25-Jun-2020" + "'", str68, "25-Jun-2020");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "January" + "'", str75, "January");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 100 + "'", int76 == 100);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "                                                                                               52.00" + "'", str78, "                                                                                               52.00");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1921.7506849315068d + "'", double79 == 1921.7506849315068d);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 4 + "'", int80 == 4);
    }

    @Test
    public void test6572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6572");
        java.util.zip.ZipOutputStream zipOutputStream1 = null;
        // The following exception was thrown during execution in test generation
        try {
            net.ajaskey.common.Utils.writeToZipFile("                                                                                                0.00", zipOutputStream1);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:                                                                                                 0.00 (Access is denied)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
    }

    @Test
    public void test6573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6573");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(100L);
        double double13 = dateTime10.getDeltaYears(dateTime12);
        int int14 = dateTime10.getHour();
        int int15 = dateTime10.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(100L);
        double double22 = dateTime19.getDeltaYears(dateTime21);
        boolean boolean23 = dateTime21.isWeekday();
        boolean boolean24 = net.ajaskey.common.Utils.sameDate(dateTime10, dateTime21);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(100L);
        dateTime26.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime(100L);
        double double37 = dateTime34.getDeltaYears(dateTime36);
        boolean boolean38 = dateTime36.isWeekday();
        java.util.Date date39 = dateTime36.getTime();
        dateTime26.set(dateTime36);
        int int41 = dateTime26.getYear();
        boolean boolean42 = dateTime21.isGreaterThanOrEqual(dateTime26);
        boolean boolean43 = dateTime3.sameDate(dateTime21);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime(100L);
        double double50 = dateTime47.getDeltaYears(dateTime49);
        int int51 = dateTime47.getHour();
        java.text.SimpleDateFormat simpleDateFormat53 = null;
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat53);
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double57 = dateTime54.getDeltaYears(dateTime56);
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean62 = dateTime56.isEqual(dateTime61);
        java.util.Calendar calendar63 = dateTime56.getCal();
        dateTime47.set(calendar63);
        dateTime3.set(calendar63);
        java.text.SimpleDateFormat simpleDateFormat66 = dateTime3.getSdf();
        int int67 = dateTime3.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime(3, 0, 10);
        net.ajaskey.common.DateTime dateTime72 = dateTime3.copy(dateTime71);
        java.text.SimpleDateFormat simpleDateFormat74 = null;
        net.ajaskey.common.DateTime dateTime75 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat74);
        net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double78 = dateTime75.getDeltaYears(dateTime77);
        boolean boolean79 = dateTime77.isNull();
        java.lang.String str80 = dateTime77.format();
        dateTime77.setFirstWorkDay();
        net.ajaskey.common.DateTime dateTime85 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean86 = dateTime85.isNull();
        java.lang.String str87 = dateTime85.getDay();
        int int88 = dateTime85.getYear();
        long long89 = dateTime77.getDeltaDays(dateTime85);
        net.ajaskey.common.DateTime dateTime90 = dateTime72.copy(dateTime85);
        int int91 = dateTime85.getSecond();
        int int92 = dateTime85.getSecond();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-1972.041095890411d) + "'", double13 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-1972.041095890411d) + "'", double22 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-1972.041095890411d) + "'", double37 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(date39);
        org.junit.Assert.assertEquals(date39.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1969 + "'", int41 == 1969);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-1972.041095890411d) + "'", double50 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 10 + "'", int51 == 10);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(calendar63);
        org.junit.Assert.assertEquals(calendar63.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNull(simpleDateFormat66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 31 + "'", int67 == 31);
        org.junit.Assert.assertNotNull(dateTime72);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "BAD-DATE-FORMAT" + "'", str80, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "Thursday" + "'", str87, "Thursday");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 2 + "'", int88 == 2);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 719795L + "'", long89 == 719795L);
        org.junit.Assert.assertNotNull(dateTime90);
// flaky:         org.junit.Assert.assertTrue("'" + int91 + "' != '" + 4 + "'", int91 == 4);
// flaky:         org.junit.Assert.assertTrue("'" + int92 + "' != '" + 4 + "'", int92 == 4);
    }

    @Test
    public void test6574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6574");
        net.ajaskey.common.Utils.TAB = "Thu 25-Jun-2020 10:45:30";
    }

    @Test
    public void test6575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6575");
        java.lang.String[] strArray7 = new java.lang.String[] { "     5.00" };
        java.util.List<java.io.File> fileList8 = net.ajaskey.common.Utils.getDirTree("                                                 100", strArray7);
        java.util.List<java.io.File> fileList9 = net.ajaskey.common.Utils.getDirTree(" 9", strArray7);
        java.util.List<java.io.File> fileList10 = net.ajaskey.common.Utils.getDirTree("January                                 42                                 42                                                                                               52.00                                 42hi!                                 42", strArray7);
        java.util.List<java.io.File> fileList11 = net.ajaskey.common.Utils.getDirTree("1.00", strArray7);
        java.util.List<java.io.File> fileList12 = net.ajaskey.common.Utils.getDirTree("10-Nov-0042", strArray7);
        java.util.List<java.io.File> fileList13 = net.ajaskey.common.Utils.getDirTree("                                                   1,959", strArray7);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNull(fileList8);
        org.junit.Assert.assertNull(fileList9);
        org.junit.Assert.assertNull(fileList10);
        org.junit.Assert.assertNull(fileList11);
        org.junit.Assert.assertNull(fileList12);
        org.junit.Assert.assertNull(fileList13);
    }

    @Test
    public void test6576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6576");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat5 = null;
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat5);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        boolean boolean10 = dateTime3.isLessThan(dateTime8);
        dateTime8.set(3, 365, 0);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(100L);
        java.util.Calendar calendar17 = dateTime16.getCal();
        dateTime8.set(calendar17);
        java.lang.String str19 = dateTime8.getDay();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(calendar17);
        org.junit.Assert.assertEquals(calendar17.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Wednesday" + "'", str19, "Wednesday");
    }

    @Test
    public void test6577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6577");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        boolean boolean6 = dateTime2.isWeekday();
        java.lang.String str7 = dateTime2.format();
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(100L);
        double double14 = dateTime11.getDeltaYears(dateTime13);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime(100L);
        double double21 = dateTime18.getDeltaYears(dateTime20);
        int int22 = dateTime18.getHour();
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(100L);
        double double29 = dateTime26.getDeltaYears(dateTime28);
        int int30 = dateTime26.getHour();
        dateTime26.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat35 = null;
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat35);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double39 = dateTime36.getDeltaYears(dateTime38);
        boolean boolean40 = dateTime26.isEqual(dateTime38);
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat46 = null;
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat46);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double50 = dateTime47.getDeltaYears(dateTime49);
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean55 = dateTime49.isEqual(dateTime54);
        java.util.Calendar calendar56 = dateTime49.getCal();
        boolean boolean57 = dateTime44.isLessThan(dateTime49);
        dateTime44.setFirstWorkDay();
        boolean boolean59 = dateTime26.sameDate(dateTime44);
        dateTime18.set(dateTime26);
        java.text.SimpleDateFormat simpleDateFormat62 = null;
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat62);
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double66 = dateTime63.getDeltaYears(dateTime65);
        boolean boolean67 = dateTime63.isWeekday();
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long72 = dateTime63.getDeltaDays(dateTime71);
        boolean boolean73 = dateTime26.isLessThanOrEqual(dateTime63);
        int int74 = dateTime26.getYear();
        boolean boolean75 = dateTime13.isLessThan(dateTime26);
        java.lang.String str76 = dateTime26.toString();
        boolean boolean77 = dateTime2.isLessThanOrEqual(dateTime26);
        java.util.Calendar calendar78 = dateTime26.getCal();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "BAD-DATE-FORMAT" + "'", str7, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + (-1972.041095890411d) + "'", double14 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-1972.041095890411d) + "'", double21 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 10 + "'", int22 == 10);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-1972.041095890411d) + "'", double29 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(calendar56);
        org.junit.Assert.assertEquals(calendar56.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 0L + "'", long72 == 0L);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 2 + "'", int74 == 2);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "10-Apr-0002" + "'", str76, "10-Apr-0002");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(calendar78);
// flaky:         org.junit.Assert.assertEquals(calendar78.toString(), "java.util.GregorianCalendar[time=-62190310375189,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=4,MILLISECOND=811,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    }

    @Test
    public void test6578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6578");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime(100L);
        int int3 = dateTime2.getMs();
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(100L);
        double double10 = dateTime7.getDeltaYears(dateTime9);
        java.text.SimpleDateFormat simpleDateFormat11 = dateTime7.getSdf();
        boolean boolean12 = dateTime2.isLessThanOrEqual(dateTime7);
        int int13 = dateTime2.getMinute();
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(100L);
        double double20 = dateTime17.getDeltaYears(dateTime19);
        int int21 = dateTime17.getHour();
        dateTime17.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat26 = null;
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat26);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double30 = dateTime27.getDeltaYears(dateTime29);
        boolean boolean31 = dateTime17.isEqual(dateTime29);
        java.text.SimpleDateFormat simpleDateFormat33 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat35 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat36 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime("", simpleDateFormat35, simpleDateFormat36);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat33, simpleDateFormat36);
        dateTime17.setSdf(simpleDateFormat33);
        dateTime2.setSdf(simpleDateFormat33);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime("                                                                                                                                                                                                                                                       -68", simpleDateFormat33);
        net.ajaskey.common.DateTime dateTime42 = null;
        net.ajaskey.common.DateTime dateTime43 = dateTime41.copy(dateTime42);
        java.util.Calendar calendar44 = null;
        // The following exception was thrown during execution in test generation
        try {
            dateTime43.set(calendar44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1972.041095890411d) + "'", double10 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-1972.041095890411d) + "'", double20 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(simpleDateFormat33);
        org.junit.Assert.assertNotNull(simpleDateFormat35);
        org.junit.Assert.assertNotNull(simpleDateFormat36);
        org.junit.Assert.assertNull(dateTime43);
    }

    @Test
    public void test6579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6579");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        boolean boolean3 = dateTime1.isWeekday();
        int int4 = dateTime1.getHour();
        java.text.SimpleDateFormat simpleDateFormat6 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("January", simpleDateFormat6);
        dateTime1.setSdf(simpleDateFormat6);
        java.lang.String str9 = dateTime1.toFullString();
        java.lang.String str10 = dateTime1.toFullString();
        int int11 = dateTime1.getSecond();
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(100L);
        int int14 = dateTime13.getMs();
        java.lang.String str15 = dateTime13.toString();
        java.util.Date date16 = dateTime13.getTime();
        int int17 = dateTime13.getDayOfMonth();
        java.text.SimpleDateFormat simpleDateFormat20 = null;
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat20);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double24 = dateTime21.getDeltaYears(dateTime23);
        boolean boolean25 = dateTime21.isWeekday();
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long30 = dateTime21.getDeltaDays(dateTime29);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(dateTime21);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(100L);
        double double38 = dateTime35.getDeltaYears(dateTime37);
        boolean boolean39 = dateTime37.isWeekday();
        java.util.Date date40 = dateTime37.getTime();
        dateTime21.set(date40);
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime(100L);
        int int44 = dateTime43.getMs();
        java.lang.String str45 = dateTime43.toString();
        boolean boolean46 = dateTime21.isLessThanOrEqual(dateTime43);
        int int47 = dateTime21.getHour();
        int int48 = dateTime21.getYear();
        java.util.Calendar calendar49 = dateTime21.getCal();
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime(100L);
        int int52 = dateTime51.getMs();
        boolean boolean53 = dateTime51.isWeekday();
        int int54 = dateTime51.getHour();
        java.text.SimpleDateFormat simpleDateFormat56 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime("January", simpleDateFormat56);
        dateTime51.setSdf(simpleDateFormat56);
        dateTime21.setSdf(simpleDateFormat56);
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime("       -18,438", simpleDateFormat56);
        dateTime13.setSdf(simpleDateFormat56);
        boolean boolean62 = dateTime1.isLessThan(dateTime13);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertNotNull(simpleDateFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str9, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str10, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "31-Dec-1969" + "'", str15, "31-Dec-1969");
        org.junit.Assert.assertNotNull(date16);
        org.junit.Assert.assertEquals(date16.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 31 + "'", int17 == 31);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1972.041095890411d) + "'", double38 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(date40);
        org.junit.Assert.assertEquals(date40.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "31-Dec-1969" + "'", str45, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 5 + "'", int47 == 5);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1969 + "'", int48 == 1969);
        org.junit.Assert.assertNotNull(calendar49);
        org.junit.Assert.assertEquals(calendar49.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 100 + "'", int52 == 100);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 5 + "'", int54 == 5);
        org.junit.Assert.assertNotNull(simpleDateFormat56);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test6580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6580");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        java.util.Date date7 = dateTime3.getTime();
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(date7);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(date7);
        java.text.SimpleDateFormat simpleDateFormat14 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat15 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("", simpleDateFormat14, simpleDateFormat15);
        java.text.SimpleDateFormat simpleDateFormat18 = null;
        java.text.SimpleDateFormat simpleDateFormat19 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("January", simpleDateFormat18, simpleDateFormat19);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat14, simpleDateFormat19);
        java.text.SimpleDateFormat simpleDateFormat24 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat25 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime("", simpleDateFormat24, simpleDateFormat25);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(100L);
        int int29 = dateTime28.getMs();
        java.text.SimpleDateFormat simpleDateFormat30 = net.ajaskey.common.Utils.sdf;
        dateTime28.setSdf(simpleDateFormat30);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat25, simpleDateFormat30);
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime("                             100", simpleDateFormat19, simpleDateFormat25);
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:42:58", simpleDateFormat19);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime(100L);
        double double41 = dateTime38.getDeltaYears(dateTime40);
        int int42 = dateTime38.getHour();
        java.text.SimpleDateFormat simpleDateFormat44 = null;
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat44);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double48 = dateTime45.getDeltaYears(dateTime47);
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean53 = dateTime47.isEqual(dateTime52);
        java.util.Calendar calendar54 = dateTime47.getCal();
        java.lang.String str55 = dateTime47.format();
        net.ajaskey.common.DateTime dateTime56 = null;
        long long57 = dateTime47.getDeltaDays(dateTime56);
        int int58 = dateTime47.getSecond();
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime(100L);
        double double65 = dateTime62.getDeltaYears(dateTime64);
        java.text.SimpleDateFormat simpleDateFormat67 = null;
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat67);
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double71 = dateTime68.getDeltaYears(dateTime70);
        boolean boolean72 = dateTime68.isWeekday();
        boolean boolean73 = dateTime62.sameDate(dateTime68);
        int int74 = dateTime68.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime75 = dateTime47.copy(dateTime68);
        dateTime38.set(dateTime68);
        long long77 = dateTime34.getDeltaMilliSeconds(dateTime68);
        boolean boolean78 = dateTime9.isLessThanOrEqual(dateTime68);
        java.lang.String str79 = dateTime9.getDay();
        java.lang.String str81 = dateTime9.format("JanuaryBAD-DATE-FORMATBAD-DATE-FORMAT                                                                                               52.00BAD-DATE-FORMAThi!BAD-DATE-FORMAT");
        net.ajaskey.common.DateTime dateTime84 = new net.ajaskey.common.DateTime(100L);
        int int85 = dateTime84.getMs();
        java.text.SimpleDateFormat simpleDateFormat86 = net.ajaskey.common.Utils.sdf;
        dateTime84.setSdf(simpleDateFormat86);
        java.text.SimpleDateFormat simpleDateFormat88 = net.ajaskey.common.Utils.sdfFull;
        dateTime84.setSdf(simpleDateFormat88);
        net.ajaskey.common.DateTime dateTime90 = new net.ajaskey.common.DateTimesimpleDateFormat88);
        dateTime9.setSdf(simpleDateFormat88);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertNotNull(date7);
// flaky:         org.junit.Assert.assertEquals(date7.toString(), "Thu Apr 10 10:47:04 MST 2");
        org.junit.Assert.assertNotNull(simpleDateFormat14);
        org.junit.Assert.assertNotNull(simpleDateFormat15);
        org.junit.Assert.assertNotNull(simpleDateFormat19);
        org.junit.Assert.assertNotNull(simpleDateFormat24);
        org.junit.Assert.assertNotNull(simpleDateFormat25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat30);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-1972.041095890411d) + "'", double41 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10 + "'", int42 == 10);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(calendar54);
        org.junit.Assert.assertEquals(calendar54.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "BAD-DATE-FORMAT" + "'", str55, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 0L + "'", long57 == 0L);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-1972.041095890411d) + "'", double65 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNull(dateTime75);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 0L + "'", long77 == 0L);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "Thursday" + "'", str79, "Thursday");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "BAD-DATE-FORMAT" + "'", str81, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 100 + "'", int85 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat86);
        org.junit.Assert.assertNotNull(simpleDateFormat88);
    }

    @Test
    public void test6581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6581");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime(100L);
        int int3 = dateTime2.getMs();
        java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdf;
        dateTime2.setSdf(simpleDateFormat4);
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat4);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime((long) 53);
        boolean boolean9 = dateTime8.isWeekday();
        boolean boolean10 = dateTime6.sameDate(dateTime8);
        java.util.Date date11 = dateTime8.getTime();
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(date11);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(date11);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(date11);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(date11);
        org.junit.Assert.assertEquals(date11.toString(), "Wed Dec 31 17:00:00 MST 1969");
    }

    @Test
    public void test6582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6582");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("5.00", "     10");
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        int int10 = dateTime6.getHour();
        java.text.SimpleDateFormat simpleDateFormat12 = null;
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat12);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double16 = dateTime13.getDeltaYears(dateTime15);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean21 = dateTime15.isEqual(dateTime20);
        java.util.Calendar calendar22 = dateTime15.getCal();
        dateTime6.set(calendar22);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime(calendar22);
        dateTime2.set(calendar22);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(calendar22);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(calendar22);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime(100L);
        double double34 = dateTime31.getDeltaYears(dateTime33);
        int int35 = dateTime31.getHour();
        dateTime31.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat40 = null;
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat40);
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double44 = dateTime41.getDeltaYears(dateTime43);
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean49 = dateTime43.isEqual(dateTime48);
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime(100L);
        int int52 = dateTime51.getMs();
        boolean boolean53 = dateTime48.isGreaterThanOrEqual(dateTime51);
        java.text.SimpleDateFormat simpleDateFormat55 = null;
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat55);
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double59 = dateTime56.getDeltaYears(dateTime58);
        boolean boolean60 = dateTime56.isWeekday();
        boolean boolean61 = dateTime51.isLessThanOrEqual(dateTime56);
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime(100L);
        dateTime63.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean68 = dateTime63.isWeekday();
        boolean boolean69 = dateTime51.isGreaterThanOrEqual(dateTime63);
        boolean boolean70 = dateTime31.sameDate(dateTime63);
        java.lang.String str71 = dateTime31.getDay();
        long long72 = dateTime27.getDeltaDays(dateTime31);
        int int73 = dateTime31.getMinute();
        java.lang.Class<?> wildcardClass74 = dateTime31.getClass();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(calendar22);
        org.junit.Assert.assertEquals(calendar22.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-1972.041095890411d) + "'", double34 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 100 + "'", int52 == 100);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Thursday" + "'", str71, "Thursday");
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 719795L + "'", long72 == 719795L);
// flaky:         org.junit.Assert.assertTrue("'" + int73 + "' != '" + 47 + "'", int73 == 47);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test6583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6583");
        java.text.SimpleDateFormat simpleDateFormat1 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime3 = null;
        boolean boolean4 = dateTime2.isEqual(dateTime3);
        net.ajaskey.common.DateTime dateTime5 = null;
        int int6 = dateTime2.getYears(dateTime5);
        org.junit.Assert.assertNotNull(simpleDateFormat1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test6584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6584");
        java.lang.String str2 = net.ajaskey.common.Utils.lfmt((long) 17, 43);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                         17" + "'", str2, "                                         17");
    }

    @Test
    public void test6585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6585");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat5 = null;
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat5);
        boolean boolean7 = net.ajaskey.common.Utils.sameDate(dateTime3, dateTime6);
        java.lang.String str8 = dateTime3.toFullString();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Thu 10-Apr-0002 10:47:04" + "'", str8, "Thu 10-Apr-0002 10:47:04");
    }

    @Test
    public void test6586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6586");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) 42);
        java.lang.Class<?> wildcardClass2 = dateTime1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test6587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6587");
        java.text.SimpleDateFormat simpleDateFormat2 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat2);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        int int6 = dateTime5.getMs();
        java.lang.String str7 = dateTime5.toString();
        java.util.Date date8 = dateTime5.getTime();
        int int9 = dateTime5.getDayOfYear();
        java.text.SimpleDateFormat simpleDateFormat11 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat12 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("", simpleDateFormat11, simpleDateFormat12);
        dateTime5.setSdf(simpleDateFormat11);
        dateTime3.setSdf(simpleDateFormat11);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime(100L);
        double double25 = dateTime22.getDeltaYears(dateTime24);
        int int26 = dateTime22.getHour();
        dateTime22.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat31 = null;
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat31);
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double35 = dateTime32.getDeltaYears(dateTime34);
        boolean boolean36 = dateTime22.isEqual(dateTime34);
        java.text.SimpleDateFormat simpleDateFormat38 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat40 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat41 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime("", simpleDateFormat40, simpleDateFormat41);
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat38, simpleDateFormat41);
        dateTime22.setSdf(simpleDateFormat38);
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat51 = null;
        java.text.SimpleDateFormat simpleDateFormat52 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime("January", simpleDateFormat51, simpleDateFormat52);
        java.text.SimpleDateFormat simpleDateFormat56 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime("January", simpleDateFormat56);
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime("", simpleDateFormat56);
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime("", simpleDateFormat52, simpleDateFormat56);
        dateTime48.setSdf(simpleDateFormat52);
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime("December", simpleDateFormat38, simpleDateFormat52);
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime("5.00", simpleDateFormat52);
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime(100L);
        int int65 = dateTime64.getMs();
        java.text.SimpleDateFormat simpleDateFormat66 = net.ajaskey.common.Utils.sdf;
        dateTime64.setSdf(simpleDateFormat66);
        int int68 = dateTime64.getDayOfWeek();
        java.text.SimpleDateFormat simpleDateFormat69 = dateTime64.getSdf();
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime("Sat 04-Jan-0100 17:00:00", simpleDateFormat52, simpleDateFormat69);
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime("                             365", simpleDateFormat11, simpleDateFormat69);
        net.ajaskey.common.DateTime dateTime73 = dateTime71.parse("Thu 10-Apr-0002 10:44:37");
        org.junit.Assert.assertNotNull(simpleDateFormat2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "31-Dec-1969" + "'", str7, "31-Dec-1969");
        org.junit.Assert.assertNotNull(date8);
        org.junit.Assert.assertEquals(date8.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 365 + "'", int9 == 365);
        org.junit.Assert.assertNotNull(simpleDateFormat11);
        org.junit.Assert.assertNotNull(simpleDateFormat12);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + (-1972.041095890411d) + "'", double25 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 10 + "'", int26 == 10);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(simpleDateFormat38);
        org.junit.Assert.assertNotNull(simpleDateFormat40);
        org.junit.Assert.assertNotNull(simpleDateFormat41);
        org.junit.Assert.assertNotNull(simpleDateFormat52);
        org.junit.Assert.assertNotNull(simpleDateFormat56);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 100 + "'", int65 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 4 + "'", int68 == 4);
        org.junit.Assert.assertNotNull(simpleDateFormat69);
        org.junit.Assert.assertNull(dateTime73);
    }

    @Test
    public void test6588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6588");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(206, 546, 631);
    }

    @Test
    public void test6589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6589");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("10-Apr-0002", "5.00");
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime(12, 42, (int) (byte) 1);
        java.util.Calendar calendar7 = dateTime6.getCal();
        boolean boolean8 = net.ajaskey.common.Utils.sameDate(dateTime2, dateTime6);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        dateTime12.set(10, 7, 13);
        boolean boolean17 = dateTime2.isGreaterThanOrEqual(dateTime12);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:43:10", "   8.00");
        java.text.SimpleDateFormat simpleDateFormat22 = null;
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat22);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double26 = dateTime23.getDeltaYears(dateTime25);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean31 = dateTime25.isEqual(dateTime30);
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime(100L);
        int int34 = dateTime33.getMs();
        boolean boolean35 = dateTime30.isGreaterThanOrEqual(dateTime33);
        java.text.SimpleDateFormat simpleDateFormat37 = null;
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat37);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double41 = dateTime38.getDeltaYears(dateTime40);
        boolean boolean42 = dateTime38.isWeekday();
        boolean boolean43 = dateTime33.isLessThanOrEqual(dateTime38);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(100L);
        dateTime45.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean50 = dateTime45.isWeekday();
        boolean boolean51 = dateTime33.isGreaterThanOrEqual(dateTime45);
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean56 = dateTime33.isGreaterThanOrEqual(dateTime55);
        int int57 = dateTime20.getYears(dateTime33);
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime(100L);
        dateTime59.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime(100L);
        double double70 = dateTime67.getDeltaYears(dateTime69);
        boolean boolean71 = dateTime69.isWeekday();
        java.util.Date date72 = dateTime69.getTime();
        dateTime59.set(dateTime69);
        net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime79 = new net.ajaskey.common.DateTime(100L);
        double double80 = dateTime77.getDeltaYears(dateTime79);
        int int81 = dateTime77.getHour();
        java.text.SimpleDateFormat simpleDateFormat83 = null;
        net.ajaskey.common.DateTime dateTime84 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat83);
        net.ajaskey.common.DateTime dateTime86 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double87 = dateTime84.getDeltaYears(dateTime86);
        net.ajaskey.common.DateTime dateTime91 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean92 = dateTime86.isEqual(dateTime91);
        java.util.Calendar calendar93 = dateTime86.getCal();
        dateTime77.set(calendar93);
        net.ajaskey.common.DateTime dateTime95 = new net.ajaskey.common.DateTime(calendar93);
        boolean boolean96 = dateTime69.isGreaterThan(dateTime95);
        net.ajaskey.common.DateTime dateTime97 = dateTime33.copy(dateTime95);
        int int98 = dateTime95.getMinute();
        boolean boolean99 = dateTime2.isGreaterThan(dateTime95);
        org.junit.Assert.assertNotNull(calendar7);
// flaky:         org.junit.Assert.assertEquals(calendar7.toString(), "java.util.GregorianCalendar[time=-61678303974955,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=15,MONTH=6,WEEK_OF_YEAR=27,WEEK_OF_MONTH=1,DAY_OF_MONTH=1,DAY_OF_YEAR=182,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=1,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=5,MILLISECOND=45,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-1972.041095890411d) + "'", double70 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(date72);
        org.junit.Assert.assertEquals(date72.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + (-1972.041095890411d) + "'", double80 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 10 + "'", int81 == 10);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(calendar93);
        org.junit.Assert.assertEquals(calendar93.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertNotNull(dateTime97);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 0 + "'", int98 == 0);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test6590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6590");
        java.text.SimpleDateFormat simpleDateFormat3 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat5 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat6 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("", simpleDateFormat5, simpleDateFormat6);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat3, simpleDateFormat6);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat15 = null;
        java.text.SimpleDateFormat simpleDateFormat16 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("January", simpleDateFormat15, simpleDateFormat16);
        java.text.SimpleDateFormat simpleDateFormat20 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("January", simpleDateFormat20);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime("", simpleDateFormat20);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime("", simpleDateFormat16, simpleDateFormat20);
        dateTime12.setSdf(simpleDateFormat16);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("", simpleDateFormat6, simpleDateFormat16);
        java.text.SimpleDateFormat simpleDateFormat28 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat29 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime("", simpleDateFormat28, simpleDateFormat29);
        java.text.SimpleDateFormat simpleDateFormat33 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat34 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("", simpleDateFormat33, simpleDateFormat34);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(100L);
        int int38 = dateTime37.getMs();
        java.text.SimpleDateFormat simpleDateFormat39 = net.ajaskey.common.Utils.sdf;
        dateTime37.setSdf(simpleDateFormat39);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat34, simpleDateFormat39);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime("     0", simpleDateFormat29, simpleDateFormat39);
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:43:16", simpleDateFormat16, simpleDateFormat29);
        java.lang.String str44 = dateTime43.toString();
        org.junit.Assert.assertNotNull(simpleDateFormat3);
        org.junit.Assert.assertNotNull(simpleDateFormat5);
        org.junit.Assert.assertNotNull(simpleDateFormat6);
        org.junit.Assert.assertNotNull(simpleDateFormat16);
        org.junit.Assert.assertNotNull(simpleDateFormat20);
        org.junit.Assert.assertNotNull(simpleDateFormat28);
        org.junit.Assert.assertNotNull(simpleDateFormat29);
        org.junit.Assert.assertNotNull(simpleDateFormat33);
        org.junit.Assert.assertNotNull(simpleDateFormat34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat39);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "10-Apr-0002" + "'", str44, "10-Apr-0002");
    }

    @Test
    public void test6591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6591");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean4 = dateTime3.isNull();
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime(100L);
        dateTime6.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str11 = dateTime6.getMonth();
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(100L);
        dateTime13.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str18 = dateTime13.getMonth();
        int int19 = dateTime13.getMs();
        net.ajaskey.common.DateTime dateTime20 = dateTime6.copy(dateTime13);
        boolean boolean21 = dateTime3.isGreaterThanOrEqual(dateTime20);
        int int22 = dateTime20.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime(dateTime20);
        int int24 = dateTime20.getDayOfWeek();
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime((long) (short) 0);
        int int27 = dateTime26.getHour();
        int int28 = dateTime26.getSecond();
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(dateTime26);
        java.lang.String str30 = dateTime29.toString();
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime(100L);
        double double37 = dateTime34.getDeltaYears(dateTime36);
        boolean boolean38 = dateTime36.isWeekday();
        java.util.Date date39 = dateTime36.getTime();
        int int40 = dateTime36.getDayOfWeek();
        java.lang.String str41 = dateTime36.toFullString();
        boolean boolean42 = dateTime36.isWeekday();
        dateTime29.set(dateTime36);
        long long44 = dateTime20.getDeltaMilliSeconds(dateTime29);
        java.lang.String str45 = dateTime20.format();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "January" + "'", str11, "January");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "January" + "'", str18, "January");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        org.junit.Assert.assertNotNull(dateTime20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 4 + "'", int22 == 4);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 7 + "'", int24 == 7);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 5 + "'", int27 == 5);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "31-Dec-1969" + "'", str30, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-1972.041095890411d) + "'", double37 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(date39);
        org.junit.Assert.assertEquals(date39.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 4 + "'", int40 == 4);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str41, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 59011286400000L + "'", long44 == 59011286400000L);
// flaky:         org.junit.Assert.assertEquals("'" + str45 + "' != '" + "04-Jan-0100" + "'", str45, "04-Jan-0100");
    }

    @Test
    public void test6592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6592");
        java.text.SimpleDateFormat simpleDateFormat5 = null;
        java.text.SimpleDateFormat simpleDateFormat6 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("January", simpleDateFormat5, simpleDateFormat6);
        java.text.SimpleDateFormat simpleDateFormat10 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime("January", simpleDateFormat10);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime("", simpleDateFormat10);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("", simpleDateFormat6, simpleDateFormat10);
        java.text.SimpleDateFormat simpleDateFormat16 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat18 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat19 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("", simpleDateFormat18, simpleDateFormat19);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat16, simpleDateFormat19);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat28 = null;
        java.text.SimpleDateFormat simpleDateFormat29 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime("January", simpleDateFormat28, simpleDateFormat29);
        java.text.SimpleDateFormat simpleDateFormat33 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime("January", simpleDateFormat33);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("", simpleDateFormat33);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime("", simpleDateFormat29, simpleDateFormat33);
        dateTime25.setSdf(simpleDateFormat29);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime("", simpleDateFormat19, simpleDateFormat29);
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime("   -18,438", simpleDateFormat10, simpleDateFormat29);
        java.text.SimpleDateFormat simpleDateFormat44 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat45 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime("", simpleDateFormat44, simpleDateFormat45);
        java.text.SimpleDateFormat simpleDateFormat48 = null;
        java.text.SimpleDateFormat simpleDateFormat49 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime("January", simpleDateFormat48, simpleDateFormat49);
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat44, simpleDateFormat49);
        java.text.SimpleDateFormat simpleDateFormat54 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat55 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime("", simpleDateFormat54, simpleDateFormat55);
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime(100L);
        int int59 = dateTime58.getMs();
        java.text.SimpleDateFormat simpleDateFormat60 = net.ajaskey.common.Utils.sdf;
        dateTime58.setSdf(simpleDateFormat60);
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat55, simpleDateFormat60);
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime("                             100", simpleDateFormat49, simpleDateFormat55);
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime("11", simpleDateFormat49);
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime("10-Apr-0002", simpleDateFormat29, simpleDateFormat49);
        net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime("", simpleDateFormat29);
        net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:43:37", "   -18,438");
        boolean boolean70 = net.ajaskey.common.Utils.sameMonth(dateTime66, dateTime69);
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime(dateTime66);
        org.junit.Assert.assertNotNull(simpleDateFormat6);
        org.junit.Assert.assertNotNull(simpleDateFormat10);
        org.junit.Assert.assertNotNull(simpleDateFormat16);
        org.junit.Assert.assertNotNull(simpleDateFormat18);
        org.junit.Assert.assertNotNull(simpleDateFormat19);
        org.junit.Assert.assertNotNull(simpleDateFormat29);
        org.junit.Assert.assertNotNull(simpleDateFormat33);
        org.junit.Assert.assertNotNull(simpleDateFormat44);
        org.junit.Assert.assertNotNull(simpleDateFormat45);
        org.junit.Assert.assertNotNull(simpleDateFormat49);
        org.junit.Assert.assertNotNull(simpleDateFormat54);
        org.junit.Assert.assertNotNull(simpleDateFormat55);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 100 + "'", int59 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat60);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
    }

    @Test
    public void test6593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6593");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        dateTime1.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str6 = dateTime1.getMonth();
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        dateTime8.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str13 = dateTime8.getMonth();
        int int14 = dateTime8.getMs();
        net.ajaskey.common.DateTime dateTime15 = dateTime1.copy(dateTime8);
        boolean boolean16 = dateTime1.isWeekday();
        java.lang.String str17 = dateTime1.format();
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(100L);
        int int20 = dateTime19.getMs();
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(100L);
        double double27 = dateTime24.getDeltaYears(dateTime26);
        java.text.SimpleDateFormat simpleDateFormat28 = dateTime24.getSdf();
        boolean boolean29 = dateTime19.isLessThanOrEqual(dateTime24);
        int int30 = dateTime24.getDayOfYear();
        boolean boolean31 = dateTime24.isWeekday();
        boolean boolean32 = dateTime1.isLessThan(dateTime24);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime(100L);
        long long39 = dateTime36.getDeltaDays(dateTime38);
        int int40 = dateTime36.getHour();
        dateTime36.add((int) (byte) 100, (int) (byte) 0);
        net.ajaskey.common.DateTime dateTime45 = dateTime36.parse("10-Apr-0002");
        int int46 = dateTime36.getDayOfMonth();
        java.lang.String str47 = dateTime36.toString();
        java.text.SimpleDateFormat simpleDateFormat49 = null;
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat49);
        int int51 = dateTime50.getYear();
        java.text.SimpleDateFormat simpleDateFormat52 = dateTime50.getSdf();
        int int53 = dateTime50.getMs();
        boolean boolean54 = dateTime36.isEqual(dateTime50);
        boolean boolean55 = dateTime1.isEqual(dateTime50);
        dateTime50.set(350, 252, 348);
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime(100L);
        double double66 = dateTime63.getDeltaYears(dateTime65);
        int int67 = dateTime63.getHour();
        java.util.Calendar calendar68 = dateTime63.getCal();
        java.lang.String str70 = dateTime63.format("UNKNOWN");
        dateTime63.set(323, 442, 268);
        boolean boolean75 = dateTime50.isGreaterThanOrEqual(dateTime63);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "January" + "'", str6, "January");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "January" + "'", str13, "January");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "BAD-DATE-FORMAT" + "'", str17, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-1972.041095890411d) + "'", double27 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-719795L) + "'", long39 == (-719795L));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertNull(dateTime45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 10 + "'", int46 == 10);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "10-Apr-0002" + "'", str47, "10-Apr-0002");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNull(simpleDateFormat52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-1972.041095890411d) + "'", double66 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 10 + "'", int67 == 10);
        org.junit.Assert.assertNotNull(calendar68);
// flaky:         org.junit.Assert.assertEquals(calendar68.toString(), "java.util.GregorianCalendar[time=?,areFieldsSet=false,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=323,MONTH=442,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=268,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=5,MILLISECOND=140,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "BAD-DATE-FORMAT" + "'", str70, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test6594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6594");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((-68), 16, 15);
        int int4 = dateTime3.getYear();
        java.lang.String str5 = dateTime3.toString();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 68 + "'", int4 == 68);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "15-May-0068" + "'", str5, "15-May-0068");
    }

    @Test
    public void test6595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6595");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        boolean boolean3 = dateTime1.isWeekday();
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime((long) (short) 0);
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime(100L);
        int int8 = dateTime7.getMs();
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(100L);
        double double15 = dateTime12.getDeltaYears(dateTime14);
        java.text.SimpleDateFormat simpleDateFormat16 = dateTime12.getSdf();
        boolean boolean17 = dateTime7.isLessThanOrEqual(dateTime12);
        java.text.SimpleDateFormat simpleDateFormat19 = null;
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat19);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double23 = dateTime20.getDeltaYears(dateTime22);
        boolean boolean24 = dateTime20.isWeekday();
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long29 = dateTime20.getDeltaDays(dateTime28);
        long long30 = dateTime7.getDeltaDays(dateTime28);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime(100L);
        dateTime32.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean37 = dateTime32.isWeekday();
        int int38 = dateTime7.getYears(dateTime32);
        int int39 = dateTime7.getYear();
        java.util.Calendar calendar40 = dateTime7.getCal();
        net.ajaskey.common.DateTime dateTime41 = dateTime5.copy(dateTime7);
        boolean boolean42 = dateTime1.isGreaterThan(dateTime7);
        java.text.SimpleDateFormat simpleDateFormat44 = null;
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat44);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double48 = dateTime45.getDeltaYears(dateTime47);
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean53 = dateTime47.isEqual(dateTime52);
        java.lang.String str54 = dateTime52.getMonth();
        net.ajaskey.common.DateTime dateTime55 = dateTime7.copy(dateTime52);
        java.util.Date date56 = dateTime7.getTime();
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime(date56);
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime(date56);
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime(100L);
        int int62 = dateTime61.getMs();
        java.text.SimpleDateFormat simpleDateFormat63 = net.ajaskey.common.Utils.sdf;
        dateTime61.setSdf(simpleDateFormat63);
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat63);
        java.text.SimpleDateFormat simpleDateFormat67 = null;
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat67);
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double71 = dateTime68.getDeltaYears(dateTime70);
        boolean boolean72 = dateTime70.isNull();
        java.text.SimpleDateFormat simpleDateFormat74 = null;
        net.ajaskey.common.DateTime dateTime75 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat74);
        dateTime75.set((int) ' ', 0, 11);
        boolean boolean80 = dateTime70.isGreaterThanOrEqual(dateTime75);
        double double81 = dateTime65.getDeltaYears(dateTime70);
        java.text.SimpleDateFormat simpleDateFormat83 = null;
        net.ajaskey.common.DateTime dateTime84 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat83);
        net.ajaskey.common.DateTime dateTime86 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double87 = dateTime84.getDeltaYears(dateTime86);
        boolean boolean88 = dateTime86.isNull();
        boolean boolean89 = dateTime70.isGreaterThan(dateTime86);
        net.ajaskey.common.DateTime dateTime90 = new net.ajaskey.common.DateTime(dateTime70);
        int int91 = dateTime90.getDayOfMonth();
        int int92 = dateTime90.getMinute();
        net.ajaskey.common.DateTime dateTime93 = dateTime58.copy(dateTime90);
        net.ajaskey.common.DateTime dateTime94 = null;
        boolean boolean95 = net.ajaskey.common.Utils.sameMonth(dateTime93, dateTime94);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-1972.041095890411d) + "'", double15 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 719795L + "'", long30 == 719795L);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1870) + "'", int38 == (-1870));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1969 + "'", int39 == 1969);
        org.junit.Assert.assertNotNull(calendar40);
        org.junit.Assert.assertEquals(calendar40.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(dateTime41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "April" + "'", str54, "April");
        org.junit.Assert.assertNotNull(dateTime55);
        org.junit.Assert.assertNotNull(date56);
        org.junit.Assert.assertEquals(date56.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat63);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 31 + "'", int91 == 31);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertNotNull(dateTime93);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test6596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6596");
        java.lang.String str1 = net.ajaskey.common.Utils.getFromUrl("1,622");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
    }

    @Test
    public void test6597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6597");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean10 = dateTime4.isEqual(dateTime9);
        java.util.Calendar calendar11 = dateTime4.getCal();
        java.lang.String str12 = dateTime4.format();
        net.ajaskey.common.DateTime dateTime13 = null;
        long long14 = dateTime4.getDeltaDays(dateTime13);
        int int15 = dateTime4.getSecond();
        java.text.SimpleDateFormat simpleDateFormat17 = null;
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat17);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double21 = dateTime18.getDeltaYears(dateTime20);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean26 = dateTime20.isEqual(dateTime25);
        boolean boolean27 = dateTime4.isGreaterThanOrEqual(dateTime25);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((int) (byte) 10, (int) (byte) 0, 2);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime(dateTime31);
        int int33 = dateTime31.getSecond();
        boolean boolean34 = dateTime25.sameDate(dateTime31);
        java.lang.String str35 = dateTime25.toFullString();
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime(12, 42, (int) (byte) 1);
        java.util.Calendar calendar40 = dateTime39.getCal();
        dateTime25.set(calendar40);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat47 = null;
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat47);
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double51 = dateTime48.getDeltaYears(dateTime50);
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean56 = dateTime50.isEqual(dateTime55);
        java.util.Calendar calendar57 = dateTime50.getCal();
        boolean boolean58 = dateTime45.isLessThan(dateTime50);
        dateTime45.setFirstWorkDay();
        boolean boolean60 = dateTime25.sameDate(dateTime45);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(calendar11);
        org.junit.Assert.assertEquals(calendar11.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "BAD-DATE-FORMAT" + "'", str12, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int33 + "' != '" + 5 + "'", int33 == 5);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Thu 10-Apr-0002 10:47:05" + "'", str35, "Thu 10-Apr-0002 10:47:05");
        org.junit.Assert.assertNotNull(calendar40);
// flaky:         org.junit.Assert.assertEquals(calendar40.toString(), "java.util.GregorianCalendar[time=-61678303974777,areFieldsSet=true,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=15,MONTH=6,WEEK_OF_YEAR=27,WEEK_OF_MONTH=1,DAY_OF_MONTH=1,DAY_OF_YEAR=182,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=1,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=5,MILLISECOND=223,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(calendar57);
        org.junit.Assert.assertEquals(calendar57.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test6598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6598");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        boolean boolean3 = dateTime1.isNull();
        java.util.Calendar calendar4 = dateTime1.getCal();
        java.text.SimpleDateFormat simpleDateFormat5 = dateTime1.getSdf();
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(53, 53, 12);
        boolean boolean10 = dateTime1.isLessThan(dateTime9);
        int int11 = dateTime9.getSecond();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(calendar4);
        org.junit.Assert.assertEquals(calendar4.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNull(simpleDateFormat5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 5 + "'", int11 == 5);
    }

    @Test
    public void test6599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6599");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        java.lang.String str3 = dateTime1.toString();
        dateTime1.set(25, (-1), (int) (short) 10);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(100L);
        double double14 = dateTime11.getDeltaYears(dateTime13);
        boolean boolean15 = dateTime13.isWeekday();
        boolean boolean16 = net.ajaskey.common.Utils.sameMonth(dateTime1, dateTime13);
        int int17 = dateTime13.getHour();
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(100L);
        int int20 = dateTime19.getMs();
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(100L);
        double double27 = dateTime24.getDeltaYears(dateTime26);
        java.text.SimpleDateFormat simpleDateFormat28 = dateTime24.getSdf();
        boolean boolean29 = dateTime19.isLessThanOrEqual(dateTime24);
        java.text.SimpleDateFormat simpleDateFormat31 = null;
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat31);
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double35 = dateTime32.getDeltaYears(dateTime34);
        boolean boolean36 = dateTime32.isWeekday();
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long41 = dateTime32.getDeltaDays(dateTime40);
        long long42 = dateTime19.getDeltaDays(dateTime40);
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime(100L);
        dateTime44.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean49 = dateTime44.isWeekday();
        int int50 = dateTime19.getYears(dateTime44);
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime(100L);
        double double57 = dateTime54.getDeltaYears(dateTime56);
        int int58 = dateTime54.getHour();
        java.text.SimpleDateFormat simpleDateFormat60 = null;
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat60);
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double64 = dateTime61.getDeltaYears(dateTime63);
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean69 = dateTime63.isEqual(dateTime68);
        java.util.Calendar calendar70 = dateTime63.getCal();
        dateTime54.set(calendar70);
        dateTime19.set(calendar70);
        dateTime19.set(0, (int) (short) 0, 2);
        net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime(dateTime19);
        net.ajaskey.common.DateTime dateTime79 = dateTime19.parse("Thu 10-Apr-0002 10:43:04");
        boolean boolean80 = dateTime13.isLessThanOrEqual(dateTime79);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "31-Dec-1969" + "'", str3, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + (-1972.041095890411d) + "'", double14 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 5 + "'", int17 == 5);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-1972.041095890411d) + "'", double27 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 0L + "'", long41 == 0L);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 719795L + "'", long42 == 719795L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1870) + "'", int50 == (-1870));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-1972.041095890411d) + "'", double57 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 10 + "'", int58 == 10);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(calendar70);
        org.junit.Assert.assertEquals(calendar70.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNull(dateTime79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test6600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6600");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        int int3 = dateTime1.getHour();
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat9 = null;
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat9);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double13 = dateTime10.getDeltaYears(dateTime12);
        boolean boolean14 = dateTime7.isLessThan(dateTime12);
        java.lang.String str15 = dateTime12.toFullString();
        dateTime12.add(10, (int) (byte) -1);
        java.text.SimpleDateFormat simpleDateFormat20 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat22 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat23 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("", simpleDateFormat22, simpleDateFormat23);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat20, simpleDateFormat23);
        boolean boolean26 = dateTime12.isGreaterThan(dateTime25);
        boolean boolean27 = dateTime1.isEqual(dateTime12);
        net.ajaskey.common.DateTime dateTime28 = null;
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(dateTime28);
        dateTime29.set(42, 10, 10);
        java.util.Date date34 = dateTime29.getTime();
        net.ajaskey.common.DateTime dateTime35 = dateTime1.copy(dateTime29);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(100L);
        int int38 = dateTime37.getMs();
        int int39 = dateTime37.getHour();
        double double40 = dateTime29.getDeltaYears(dateTime37);
        java.text.SimpleDateFormat simpleDateFormat42 = null;
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat42);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double46 = dateTime43.getDeltaYears(dateTime45);
        boolean boolean47 = dateTime43.isWeekday();
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long52 = dateTime43.getDeltaDays(dateTime51);
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime(dateTime43);
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime(100L);
        double double60 = dateTime57.getDeltaYears(dateTime59);
        boolean boolean61 = dateTime59.isWeekday();
        java.util.Date date62 = dateTime59.getTime();
        dateTime43.set(date62);
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime(100L);
        int int66 = dateTime65.getMs();
        java.lang.String str67 = dateTime65.toString();
        boolean boolean68 = dateTime43.isLessThanOrEqual(dateTime65);
        int int69 = dateTime43.getHour();
        int int70 = dateTime43.getYear();
        java.util.Calendar calendar71 = dateTime43.getCal();
        java.lang.String str72 = dateTime43.getMonth();
        int int73 = dateTime29.getYears(dateTime43);
        int int74 = dateTime29.getDayOfMonth();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 5 + "'", int3 == 5);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str15, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertNotNull(simpleDateFormat20);
        org.junit.Assert.assertNotNull(simpleDateFormat22);
        org.junit.Assert.assertNotNull(simpleDateFormat23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(date34);
// flaky:         org.junit.Assert.assertEquals(date34.toString(), "Sat Nov 10 10:47:05 MST 42");
        org.junit.Assert.assertNotNull(dateTime35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 5 + "'", int39 == 5);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-1928.4246575342465d) + "'", double40 == (-1928.4246575342465d));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-1972.041095890411d) + "'", double60 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(date62);
        org.junit.Assert.assertEquals(date62.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "31-Dec-1969" + "'", str67, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 5 + "'", int69 == 5);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1969 + "'", int70 == 1969);
        org.junit.Assert.assertNotNull(calendar71);
        org.junit.Assert.assertEquals(calendar71.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "December" + "'", str72, "December");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1927 + "'", int73 == 1927);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 10 + "'", int74 == 10);
    }

    @Test
    public void test6601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6601");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        boolean boolean3 = dateTime1.isWeekday();
        int int4 = dateTime1.getHour();
        dateTime1.setFirstWorkDay();
        java.lang.String str6 = dateTime1.format();
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(62190310608217L);
        boolean boolean9 = dateTime1.isGreaterThanOrEqual(dateTime8);
        net.ajaskey.common.DateTime dateTime11 = dateTime1.parse("");
        java.lang.String str12 = dateTime1.toFullString();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "BAD-DATE-FORMAT" + "'", str6, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(dateTime11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str12, "Wed 31-Dec-1969 17:00:00");
    }

    @Test
    public void test6602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6602");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        java.text.SimpleDateFormat simpleDateFormat8 = null;
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double12 = dateTime9.getDeltaYears(dateTime11);
        boolean boolean13 = dateTime9.isWeekday();
        boolean boolean14 = dateTime3.sameDate(dateTime9);
        java.text.SimpleDateFormat simpleDateFormat16 = null;
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double20 = dateTime17.getDeltaYears(dateTime19);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean25 = dateTime19.isEqual(dateTime24);
        dateTime3.set(dateTime24);
        java.lang.String str27 = dateTime24.toString();
        net.ajaskey.common.DateTime dateTime28 = null;
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(dateTime28);
        boolean boolean30 = dateTime24.isGreaterThanOrEqual(dateTime29);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime(100L);
        int int33 = dateTime32.getMs();
        int int34 = dateTime32.getHour();
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat40 = null;
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat40);
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double44 = dateTime41.getDeltaYears(dateTime43);
        boolean boolean45 = dateTime38.isLessThan(dateTime43);
        java.lang.String str46 = dateTime43.toFullString();
        dateTime43.add(10, (int) (byte) -1);
        java.text.SimpleDateFormat simpleDateFormat51 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat53 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat54 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime("", simpleDateFormat53, simpleDateFormat54);
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat51, simpleDateFormat54);
        boolean boolean57 = dateTime43.isGreaterThan(dateTime56);
        boolean boolean58 = dateTime32.isEqual(dateTime43);
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.lang.String str63 = dateTime62.toFullString();
        dateTime62.add(7, 53);
        net.ajaskey.common.DateTime dateTime67 = dateTime32.copy(dateTime62);
        int int68 = dateTime67.getDayOfMonth();
        boolean boolean69 = dateTime29.isLessThanOrEqual(dateTime67);
        net.ajaskey.common.DateTime dateTime72 = new net.ajaskey.common.DateTime("                                                                                              100", "100");
        net.ajaskey.common.DateTime dateTime75 = new net.ajaskey.common.DateTime(100L);
        int int76 = dateTime75.getMs();
        java.text.SimpleDateFormat simpleDateFormat77 = net.ajaskey.common.Utils.sdf;
        dateTime75.setSdf(simpleDateFormat77);
        java.text.SimpleDateFormat simpleDateFormat79 = net.ajaskey.common.Utils.sdfFull;
        dateTime75.setSdf(simpleDateFormat79);
        net.ajaskey.common.DateTime dateTime81 = new net.ajaskey.common.DateTime("Mon 10-Apr-0002 00:00:00", simpleDateFormat79);
        dateTime72.setSdf(simpleDateFormat79);
        dateTime29.set(dateTime72);
        int int84 = dateTime29.getHour();
        int int85 = dateTime29.getDayOfWeek();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "10-Apr-0002" + "'", str27, "10-Apr-0002");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 5 + "'", int34 == 5);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str46, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertNotNull(simpleDateFormat51);
        org.junit.Assert.assertNotNull(simpleDateFormat53);
        org.junit.Assert.assertNotNull(simpleDateFormat54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Thu 10-Apr-0002 10:47:05" + "'", str63, "Thu 10-Apr-0002 10:47:05");
        org.junit.Assert.assertNotNull(dateTime67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 10 + "'", int68 == 10);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 100 + "'", int76 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat77);
        org.junit.Assert.assertNotNull(simpleDateFormat79);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 10 + "'", int84 == 10);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 5 + "'", int85 == 5);
    }

    @Test
    public void test6603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6603");
        java.util.Map<java.lang.String, java.lang.Integer> strMap0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = net.ajaskey.common.Utils.findName(strMap0, (java.lang.Integer) 841);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test6604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6604");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", "                              1,927");
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime(100L);
        int int5 = dateTime4.getMs();
        java.lang.String str6 = dateTime4.toString();
        dateTime4.set(25, (-1), (int) (short) 10);
        int int11 = dateTime4.getDayOfWeek();
        net.ajaskey.common.DateTime dateTime12 = dateTime2.copy(dateTime4);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(100L);
        dateTime14.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime(100L);
        double double25 = dateTime22.getDeltaYears(dateTime24);
        boolean boolean26 = dateTime24.isWeekday();
        java.util.Date date27 = dateTime24.getTime();
        dateTime14.set(dateTime24);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat34 = null;
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat34);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double38 = dateTime35.getDeltaYears(dateTime37);
        boolean boolean39 = dateTime32.isLessThan(dateTime37);
        dateTime24.set(dateTime37);
        java.lang.String str41 = dateTime37.getDay();
        java.text.SimpleDateFormat simpleDateFormat42 = dateTime37.getSdf();
        net.ajaskey.common.DateTime dateTime45 = dateTime37.parse("    0", "Invalid Time");
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime((long) (short) 0);
        int int48 = dateTime47.getHour();
        boolean boolean49 = dateTime47.isNull();
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime(dateTime47);
        net.ajaskey.common.DateTime dateTime51 = dateTime37.copy(dateTime50);
        long long52 = dateTime4.getDeltaDays(dateTime50);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "31-Dec-1969" + "'", str6, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(dateTime12);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + (-1972.041095890411d) + "'", double25 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(date27);
        org.junit.Assert.assertEquals(date27.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Wednesday" + "'", str41, "Wednesday");
        org.junit.Assert.assertNull(simpleDateFormat42);
        org.junit.Assert.assertNull(dateTime45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 5 + "'", int48 == 5);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(dateTime51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-710418L) + "'", long52 == (-710418L));
    }

    @Test
    public void test6605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6605");
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime(100L);
        double double8 = dateTime5.getDeltaYears(dateTime7);
        int int9 = dateTime5.getHour();
        dateTime5.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat14 = null;
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat14);
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double18 = dateTime15.getDeltaYears(dateTime17);
        boolean boolean19 = dateTime5.isEqual(dateTime17);
        java.text.SimpleDateFormat simpleDateFormat21 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat23 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat24 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("", simpleDateFormat23, simpleDateFormat24);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat21, simpleDateFormat24);
        dateTime5.setSdf(simpleDateFormat21);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat34 = null;
        java.text.SimpleDateFormat simpleDateFormat35 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime("January", simpleDateFormat34, simpleDateFormat35);
        java.text.SimpleDateFormat simpleDateFormat39 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime("January", simpleDateFormat39);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime("", simpleDateFormat39);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime("", simpleDateFormat35, simpleDateFormat39);
        dateTime31.setSdf(simpleDateFormat35);
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime("December", simpleDateFormat21, simpleDateFormat35);
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime(100L);
        int int47 = dateTime46.getMs();
        java.text.SimpleDateFormat simpleDateFormat48 = net.ajaskey.common.Utils.sdf;
        dateTime46.setSdf(simpleDateFormat48);
        int int50 = dateTime46.getDayOfWeek();
        java.text.SimpleDateFormat simpleDateFormat51 = dateTime46.getSdf();
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:43:00", simpleDateFormat35, simpleDateFormat51);
        dateTime52.set(32, 32, 1969);
        java.text.SimpleDateFormat simpleDateFormat58 = null;
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat58);
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double62 = dateTime59.getDeltaYears(dateTime61);
        net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean67 = dateTime61.isEqual(dateTime66);
        java.util.Calendar calendar68 = dateTime61.getCal();
        net.ajaskey.common.DateTime dateTime72 = new net.ajaskey.common.DateTime(1, (int) '4', 5);
        double double73 = dateTime61.getDeltaYears(dateTime72);
        net.ajaskey.common.DateTime dateTime74 = null;
        boolean boolean75 = dateTime72.isLessThanOrEqual(dateTime74);
        dateTime72.set(820, (int) (short) 10, 264);
        boolean boolean80 = net.ajaskey.common.Utils.sameMonth(dateTime52, dateTime72);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-1972.041095890411d) + "'", double8 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(simpleDateFormat21);
        org.junit.Assert.assertNotNull(simpleDateFormat23);
        org.junit.Assert.assertNotNull(simpleDateFormat24);
        org.junit.Assert.assertNotNull(simpleDateFormat35);
        org.junit.Assert.assertNotNull(simpleDateFormat39);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 4 + "'", int50 == 4);
        org.junit.Assert.assertNotNull(simpleDateFormat51);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(calendar68);
        org.junit.Assert.assertEquals(calendar68.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1965.9671232876713d + "'", double73 == 1965.9671232876713d);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test6606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6606");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        dateTime1.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str6 = dateTime1.getMonth();
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        dateTime8.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str13 = dateTime8.getMonth();
        int int14 = dateTime8.getMs();
        net.ajaskey.common.DateTime dateTime15 = dateTime1.copy(dateTime8);
        int int16 = dateTime8.getSecond();
        int int17 = dateTime8.getHour();
        java.lang.String str18 = dateTime8.toFullString();
        java.util.Date date19 = dateTime8.getTime();
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime(date19);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(100L);
        double double27 = dateTime24.getDeltaYears(dateTime26);
        java.text.SimpleDateFormat simpleDateFormat28 = dateTime24.getSdf();
        int int29 = dateTime24.getMinute();
        int int30 = dateTime24.getHour();
        dateTime20.set(dateTime24);
        int int32 = dateTime20.getHour();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "January" + "'", str6, "January");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "January" + "'", str13, "January");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 5 + "'", int17 == 5);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Sat 04-Jan-0100 17:00:00" + "'", str18, "Sat 04-Jan-0100 17:00:00");
        org.junit.Assert.assertNotNull(date19);
        org.junit.Assert.assertEquals(date19.toString(), "Sat Jan 04 17:00:00 MST 100");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-1972.041095890411d) + "'", double27 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat28);
// flaky:         org.junit.Assert.assertTrue("'" + int29 + "' != '" + 47 + "'", int29 == 47);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10 + "'", int32 == 10);
    }

    @Test
    public void test6607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6607");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:43:10", "   8.00");
        java.text.SimpleDateFormat simpleDateFormat4 = null;
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat4);
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double8 = dateTime5.getDeltaYears(dateTime7);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean13 = dateTime7.isEqual(dateTime12);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(100L);
        int int16 = dateTime15.getMs();
        boolean boolean17 = dateTime12.isGreaterThanOrEqual(dateTime15);
        java.text.SimpleDateFormat simpleDateFormat19 = null;
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat19);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double23 = dateTime20.getDeltaYears(dateTime22);
        boolean boolean24 = dateTime20.isWeekday();
        boolean boolean25 = dateTime15.isLessThanOrEqual(dateTime20);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(100L);
        dateTime27.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean32 = dateTime27.isWeekday();
        boolean boolean33 = dateTime15.isGreaterThanOrEqual(dateTime27);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean38 = dateTime15.isGreaterThanOrEqual(dateTime37);
        int int39 = dateTime2.getYears(dateTime15);
        int int40 = dateTime15.getDayOfMonth();
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 31 + "'", int40 == 31);
    }

    @Test
    public void test6608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6608");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) 1);
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(100L);
        int int4 = dateTime3.getMs();
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime(100L);
        double double11 = dateTime8.getDeltaYears(dateTime10);
        java.text.SimpleDateFormat simpleDateFormat12 = dateTime8.getSdf();
        boolean boolean13 = dateTime3.isLessThanOrEqual(dateTime8);
        java.text.SimpleDateFormat simpleDateFormat15 = null;
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat15);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double19 = dateTime16.getDeltaYears(dateTime18);
        boolean boolean20 = dateTime16.isWeekday();
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long25 = dateTime16.getDeltaDays(dateTime24);
        long long26 = dateTime3.getDeltaDays(dateTime24);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(100L);
        dateTime28.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean33 = dateTime28.isWeekday();
        int int34 = dateTime3.getYears(dateTime28);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime(100L);
        double double41 = dateTime38.getDeltaYears(dateTime40);
        int int42 = dateTime38.getHour();
        java.text.SimpleDateFormat simpleDateFormat44 = null;
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat44);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double48 = dateTime45.getDeltaYears(dateTime47);
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean53 = dateTime47.isEqual(dateTime52);
        java.util.Calendar calendar54 = dateTime47.getCal();
        dateTime38.set(calendar54);
        dateTime3.set(calendar54);
        dateTime3.set(0, (int) (short) 0, 2);
        long long61 = dateTime1.getDeltaDays(dateTime3);
        int int62 = dateTime3.getDayOfWeek();
        java.lang.String str63 = dateTime3.toFullString();
        boolean boolean64 = dateTime3.isNull();
        java.lang.String str65 = dateTime3.getMonth();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + (-1972.041095890411d) + "'", double11 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 719795L + "'", long26 == 719795L);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1870) + "'", int34 == (-1870));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-1972.041095890411d) + "'", double41 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10 + "'", int42 == 10);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(calendar54);
        org.junit.Assert.assertEquals(calendar54.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 719528L + "'", long61 == 719528L);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 6 + "'", int62 == 6);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Fri 02-Jan-0001 17:00:00" + "'", str63, "Fri 02-Jan-0001 17:00:00");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "January" + "'", str65, "January");
    }

    @Test
    public void test6609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6609");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        java.text.SimpleDateFormat simpleDateFormat10 = dateTime6.getSdf();
        boolean boolean11 = dateTime1.isLessThanOrEqual(dateTime6);
        int int12 = dateTime1.getMinute();
        int int13 = dateTime1.getMinute();
        int int14 = dateTime1.getDayOfYear();
        int int15 = dateTime1.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(100L);
        dateTime17.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(100L);
        double double28 = dateTime25.getDeltaYears(dateTime27);
        boolean boolean29 = dateTime27.isWeekday();
        java.util.Date date30 = dateTime27.getTime();
        dateTime17.set(dateTime27);
        int int32 = dateTime17.getYear();
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime(100L);
        int int35 = dateTime34.getMs();
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime(100L);
        double double42 = dateTime39.getDeltaYears(dateTime41);
        java.text.SimpleDateFormat simpleDateFormat43 = dateTime39.getSdf();
        boolean boolean44 = dateTime34.isLessThanOrEqual(dateTime39);
        boolean boolean45 = dateTime39.isWeekday();
        boolean boolean46 = dateTime39.isWeekday();
        boolean boolean47 = dateTime17.sameDate(dateTime39);
        java.util.Date date48 = null;
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime(date48);
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime(100L);
        double double56 = dateTime53.getDeltaYears(dateTime55);
        int int57 = dateTime53.getHour();
        java.text.SimpleDateFormat simpleDateFormat59 = null;
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat59);
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double63 = dateTime60.getDeltaYears(dateTime62);
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean68 = dateTime62.isEqual(dateTime67);
        java.util.Calendar calendar69 = dateTime62.getCal();
        dateTime53.set(calendar69);
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime(calendar69);
        net.ajaskey.common.DateTime dateTime72 = dateTime49.copy(dateTime71);
        net.ajaskey.common.DateTime dateTime76 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime78 = new net.ajaskey.common.DateTime(100L);
        double double79 = dateTime76.getDeltaYears(dateTime78);
        boolean boolean80 = dateTime78.isWeekday();
        int int81 = dateTime78.getDayOfYear();
        long long82 = dateTime72.getDeltaMilliSeconds(dateTime78);
        net.ajaskey.common.DateTime dateTime84 = new net.ajaskey.common.DateTime(100L);
        int int85 = dateTime84.getMs();
        java.lang.String str86 = dateTime84.toString();
        java.lang.String str88 = dateTime84.format("         1");
        long long89 = dateTime72.getDeltaDays(dateTime84);
        boolean boolean90 = net.ajaskey.common.Utils.sameMonth(dateTime17, dateTime72);
        java.lang.String str91 = dateTime72.getMonth();
        java.lang.String str93 = dateTime72.format("Thu 10-Apr-0002 10:43:10");
        boolean boolean94 = dateTime1.isEqual(dateTime72);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 365 + "'", int14 == 365);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 31 + "'", int15 == 31);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + (-1972.041095890411d) + "'", double28 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(date30);
        org.junit.Assert.assertEquals(date30.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1969 + "'", int32 == 1969);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-1972.041095890411d) + "'", double42 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-1972.041095890411d) + "'", double56 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 10 + "'", int57 == 10);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(calendar69);
        org.junit.Assert.assertEquals(calendar69.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(dateTime72);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + (-1972.041095890411d) + "'", double79 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 365 + "'", int81 == 365);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 100L + "'", long82 == 100L);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 100 + "'", int85 == 100);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "31-Dec-1969" + "'", str86, "31-Dec-1969");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "         1" + "'", str88, "         1");
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 0L + "'", long89 == 0L);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "December" + "'", str91, "December");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "BAD-DATE-FORMAT" + "'", str93, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }

    @Test
    public void test6610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6610");
        java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readTextFile("                                 32.00", false);
        org.junit.Assert.assertNotNull(strList2);
    }

    @Test
    public void test6611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6611");
        net.ajaskey.common.Utils.sleep(185);
    }

    @Test
    public void test6612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6612");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) (short) 100);
        java.lang.String str2 = dateTime1.toFullString();
        java.text.SimpleDateFormat simpleDateFormat5 = null;
        java.text.SimpleDateFormat simpleDateFormat6 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("January", simpleDateFormat5, simpleDateFormat6);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime("100.00", simpleDateFormat5);
        java.text.SimpleDateFormat simpleDateFormat10 = null;
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat10);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double14 = dateTime11.getDeltaYears(dateTime13);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean19 = dateTime13.isEqual(dateTime18);
        long long20 = dateTime8.getDeltaDays(dateTime18);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(dateTime8);
        java.text.SimpleDateFormat simpleDateFormat27 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat28 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime("", simpleDateFormat27, simpleDateFormat28);
        java.text.SimpleDateFormat simpleDateFormat31 = null;
        java.text.SimpleDateFormat simpleDateFormat32 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime("January", simpleDateFormat31, simpleDateFormat32);
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat27, simpleDateFormat32);
        java.text.SimpleDateFormat simpleDateFormat37 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat38 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime("", simpleDateFormat37, simpleDateFormat38);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime(100L);
        int int42 = dateTime41.getMs();
        java.text.SimpleDateFormat simpleDateFormat43 = net.ajaskey.common.Utils.sdf;
        dateTime41.setSdf(simpleDateFormat43);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat38, simpleDateFormat43);
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime("                             100", simpleDateFormat32, simpleDateFormat38);
        java.text.SimpleDateFormat simpleDateFormat49 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat50 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime("", simpleDateFormat49, simpleDateFormat50);
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:42:54", simpleDateFormat49);
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime("5.00", simpleDateFormat32, simpleDateFormat49);
        java.text.SimpleDateFormat simpleDateFormat54 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat32, simpleDateFormat54);
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime(12, 42, (int) (byte) 1);
        java.util.Calendar calendar60 = dateTime59.getCal();
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime(calendar60);
        long long62 = dateTime55.getDeltaMilliSeconds(dateTime61);
        int int63 = dateTime55.getHour();
        boolean boolean64 = dateTime8.isLessThan(dateTime55);
        boolean boolean65 = dateTime1.isLessThan(dateTime55);
        java.util.Calendar calendar66 = dateTime1.getCal();
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean71 = dateTime70.isNull();
        net.ajaskey.common.DateTime dateTime73 = new net.ajaskey.common.DateTime(100L);
        int int74 = dateTime73.getMs();
        boolean boolean75 = dateTime73.isNull();
        java.util.Calendar calendar76 = dateTime73.getCal();
        net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime(calendar76);
        net.ajaskey.common.DateTime dateTime78 = new net.ajaskey.common.DateTime(calendar76);
        dateTime70.set(calendar76);
        boolean boolean80 = net.ajaskey.common.Utils.sameMonth(dateTime1, dateTime70);
        dateTime1.set(275, (-1960), 861);
        java.util.Calendar calendar85 = dateTime1.getCal();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str2, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertNotNull(simpleDateFormat6);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertNotNull(simpleDateFormat27);
        org.junit.Assert.assertNotNull(simpleDateFormat28);
        org.junit.Assert.assertNotNull(simpleDateFormat32);
        org.junit.Assert.assertNotNull(simpleDateFormat37);
        org.junit.Assert.assertNotNull(simpleDateFormat38);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat43);
        org.junit.Assert.assertNotNull(simpleDateFormat49);
        org.junit.Assert.assertNotNull(simpleDateFormat50);
        org.junit.Assert.assertNotNull(simpleDateFormat54);
        org.junit.Assert.assertNotNull(calendar60);
// flaky:         org.junit.Assert.assertEquals(calendar60.toString(), "java.util.GregorianCalendar[time=-61678303974285,areFieldsSet=true,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=15,MONTH=6,WEEK_OF_YEAR=27,WEEK_OF_MONTH=1,DAY_OF_MONTH=1,DAY_OF_YEAR=182,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=1,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=5,MILLISECOND=715,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 0L + "'", long62 == 0L);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(calendar66);
        org.junit.Assert.assertEquals(calendar66.toString(), "java.util.GregorianCalendar[time=?,areFieldsSet=false,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=275,MONTH=-1960,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=861,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 100 + "'", int74 == 100);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(calendar76);
        org.junit.Assert.assertEquals(calendar76.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(calendar85);
        org.junit.Assert.assertEquals(calendar85.toString(), "java.util.GregorianCalendar[time=?,areFieldsSet=false,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=275,MONTH=-1960,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=861,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    }

    @Test
    public void test6613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6613");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat5 = null;
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat5);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        boolean boolean10 = dateTime3.isLessThan(dateTime8);
        java.lang.String str11 = dateTime8.toFullString();
        int int12 = dateTime8.getSecond();
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(dateTime8);
        java.lang.String str15 = dateTime8.format("Thu 10-Apr-0002 10:42:58");
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime("BAD-DATE-FORMAT", "                                                                                               52.00");
        dateTime18.set(43, 5, 238);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime(100L);
        dateTime24.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str29 = dateTime24.getMonth();
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(100L);
        dateTime31.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str36 = dateTime31.getMonth();
        int int37 = dateTime31.getMs();
        net.ajaskey.common.DateTime dateTime38 = dateTime24.copy(dateTime31);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime(100L);
        int int41 = dateTime40.getMs();
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime(100L);
        double double48 = dateTime45.getDeltaYears(dateTime47);
        java.text.SimpleDateFormat simpleDateFormat49 = dateTime45.getSdf();
        boolean boolean50 = dateTime40.isLessThanOrEqual(dateTime45);
        java.text.SimpleDateFormat simpleDateFormat52 = null;
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat52);
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double56 = dateTime53.getDeltaYears(dateTime55);
        boolean boolean57 = dateTime53.isWeekday();
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long62 = dateTime53.getDeltaDays(dateTime61);
        long long63 = dateTime40.getDeltaDays(dateTime61);
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat69 = null;
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat69);
        net.ajaskey.common.DateTime dateTime72 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double73 = dateTime70.getDeltaYears(dateTime72);
        net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean78 = dateTime72.isEqual(dateTime77);
        java.util.Calendar calendar79 = dateTime72.getCal();
        boolean boolean80 = dateTime67.isLessThan(dateTime72);
        boolean boolean81 = net.ajaskey.common.Utils.sameDate(dateTime40, dateTime67);
        boolean boolean82 = dateTime31.isEqual(dateTime40);
        int int83 = dateTime31.getHour();
        int int84 = dateTime18.getYears(dateTime31);
        boolean boolean85 = dateTime8.isGreaterThanOrEqual(dateTime31);
        java.lang.String str86 = dateTime31.toString();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str11, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "BAD-DATE-FORMAT" + "'", str15, "BAD-DATE-FORMAT");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "January" + "'", str29, "January");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "January" + "'", str36, "January");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        org.junit.Assert.assertNotNull(dateTime38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + (-1972.041095890411d) + "'", double48 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 0L + "'", long62 == 0L);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 719795L + "'", long63 == 719795L);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(calendar79);
        org.junit.Assert.assertEquals(calendar79.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 5 + "'", int83 == 5);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 55 + "'", int84 == 55);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "04-Jan-0100" + "'", str86, "04-Jan-0100");
    }

    @Test
    public void test6614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6614");
        java.lang.String str2 = net.ajaskey.common.Utils.lfmt((long) 733, 495);
        org.junit.Assert.assertEquals("'" + strstr
    }

    @Test
    public void test6615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6615");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean10 = dateTime4.isEqual(dateTime9);
        java.util.Calendar calendar11 = dateTime4.getCal();
        java.lang.String str12 = dateTime4.format();
        net.ajaskey.common.DateTime dateTime13 = null;
        long long14 = dateTime4.getDeltaDays(dateTime13);
        int int15 = dateTime4.getDayOfYear();
        java.lang.String str16 = dateTime4.toString();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(calendar11);
        org.junit.Assert.assertEquals(calendar11.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "BAD-DATE-FORMAT" + "'", str12, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 365 + "'", int15 == 365);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "31-Dec-1969" + "'", str16, "31-Dec-1969");
    }

    @Test
    public void test6616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6616");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean10 = dateTime4.isEqual(dateTime9);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(100L);
        int int13 = dateTime12.getMs();
        boolean boolean14 = dateTime9.isGreaterThanOrEqual(dateTime12);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(100L);
        dateTime16.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(100L);
        double double27 = dateTime24.getDeltaYears(dateTime26);
        boolean boolean28 = dateTime26.isWeekday();
        java.util.Date date29 = dateTime26.getTime();
        dateTime16.set(dateTime26);
        boolean boolean31 = net.ajaskey.common.Utils.sameDate(dateTime9, dateTime16);
        boolean boolean32 = dateTime9.isNull();
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime((int) '#', 43, 2);
        boolean boolean37 = dateTime9.sameDate(dateTime36);
        java.text.SimpleDateFormat simpleDateFormat39 = null;
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat39);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double43 = dateTime40.getDeltaYears(dateTime42);
        boolean boolean44 = dateTime40.isWeekday();
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long49 = dateTime40.getDeltaDays(dateTime48);
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime(dateTime40);
        dateTime50.setFirstWorkDay();
        java.util.Calendar calendar52 = dateTime50.getCal();
        dateTime36.set(calendar52);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-1972.041095890411d) + "'", double27 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(date29);
        org.junit.Assert.assertEquals(date29.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertNotNull(calendar52);
// flaky:         org.junit.Assert.assertEquals(calendar52.toString(), "java.util.GregorianCalendar[time=1593103625806,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2020,MONTH=5,WEEK_OF_YEAR=26,WEEK_OF_MONTH=4,DAY_OF_MONTH=25,DAY_OF_YEAR=177,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=4,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=5,MILLISECOND=806,ZONE_OFFSET=-25200000,DST_OFFSET=3600000]");
    }

    @Test
    public void test6617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6617");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        java.text.SimpleDateFormat simpleDateFormat10 = dateTime6.getSdf();
        boolean boolean11 = dateTime1.isLessThanOrEqual(dateTime6);
        java.text.SimpleDateFormat simpleDateFormat13 = null;
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat13);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double17 = dateTime14.getDeltaYears(dateTime16);
        boolean boolean18 = dateTime14.isWeekday();
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long23 = dateTime14.getDeltaDays(dateTime22);
        long long24 = dateTime1.getDeltaDays(dateTime22);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(100L);
        dateTime26.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean31 = dateTime26.isWeekday();
        int int32 = dateTime1.getYears(dateTime26);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime(100L);
        double double39 = dateTime36.getDeltaYears(dateTime38);
        int int40 = dateTime36.getHour();
        java.text.SimpleDateFormat simpleDateFormat42 = null;
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat42);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double46 = dateTime43.getDeltaYears(dateTime45);
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean51 = dateTime45.isEqual(dateTime50);
        java.util.Calendar calendar52 = dateTime45.getCal();
        dateTime36.set(calendar52);
        dateTime1.set(calendar52);
        java.text.SimpleDateFormat simpleDateFormat56 = null;
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat56);
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double60 = dateTime57.getDeltaYears(dateTime59);
        boolean boolean61 = dateTime57.isWeekday();
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long66 = dateTime57.getDeltaDays(dateTime65);
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime(dateTime57);
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime73 = new net.ajaskey.common.DateTime(100L);
        double double74 = dateTime71.getDeltaYears(dateTime73);
        boolean boolean75 = dateTime73.isWeekday();
        java.util.Date date76 = dateTime73.getTime();
        dateTime57.set(date76);
        net.ajaskey.common.DateTime dateTime79 = new net.ajaskey.common.DateTime(100L);
        int int80 = dateTime79.getMs();
        java.lang.String str81 = dateTime79.toString();
        boolean boolean82 = dateTime57.isLessThanOrEqual(dateTime79);
        java.text.SimpleDateFormat simpleDateFormat83 = dateTime57.getSdf();
        java.util.Calendar calendar84 = dateTime57.getCal();
        dateTime1.set(calendar84);
        net.ajaskey.common.DateTime dateTime86 = new net.ajaskey.common.DateTime(calendar84);
        net.ajaskey.common.DateTime dateTime87 = new net.ajaskey.common.DateTime(calendar84);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 719795L + "'", long24 == 719795L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1870) + "'", int32 == (-1870));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-1972.041095890411d) + "'", double39 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(calendar52);
        org.junit.Assert.assertEquals(calendar52.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 0L + "'", long66 == 0L);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-1972.041095890411d) + "'", double74 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(date76);
        org.junit.Assert.assertEquals(date76.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 100 + "'", int80 == 100);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "31-Dec-1969" + "'", str81, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(simpleDateFormat83);
        org.junit.Assert.assertNotNull(calendar84);
        org.junit.Assert.assertEquals(calendar84.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    }

    @Test
    public void test6618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6618");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        boolean boolean6 = dateTime2.isWeekday();
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long11 = dateTime2.getDeltaDays(dateTime10);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(dateTime2);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(100L);
        double double19 = dateTime16.getDeltaYears(dateTime18);
        boolean boolean20 = dateTime18.isWeekday();
        java.util.Date date21 = dateTime18.getTime();
        dateTime2.set(date21);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime(100L);
        int int25 = dateTime24.getMs();
        java.lang.String str26 = dateTime24.toString();
        boolean boolean27 = dateTime2.isLessThanOrEqual(dateTime24);
        int int28 = dateTime2.getHour();
        int int29 = dateTime2.getYear();
        java.util.Calendar calendar30 = dateTime2.getCal();
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime(100L);
        int int33 = dateTime32.getMs();
        boolean boolean34 = dateTime32.isWeekday();
        int int35 = dateTime32.getHour();
        java.text.SimpleDateFormat simpleDateFormat37 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime("January", simpleDateFormat37);
        dateTime32.setSdf(simpleDateFormat37);
        dateTime2.setSdf(simpleDateFormat37);
        java.lang.String str41 = dateTime2.format();
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime(100L);
        int int44 = dateTime43.getMs();
        boolean boolean45 = dateTime43.isWeekday();
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime(100L);
        int int48 = dateTime47.getMs();
        int int49 = dateTime47.getHour();
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat55 = null;
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat55);
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double59 = dateTime56.getDeltaYears(dateTime58);
        boolean boolean60 = dateTime53.isLessThan(dateTime58);
        java.lang.String str61 = dateTime58.toFullString();
        dateTime58.add(10, (int) (byte) -1);
        java.text.SimpleDateFormat simpleDateFormat66 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat68 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat69 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime("", simpleDateFormat68, simpleDateFormat69);
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat66, simpleDateFormat69);
        boolean boolean72 = dateTime58.isGreaterThan(dateTime71);
        boolean boolean73 = dateTime47.isEqual(dateTime58);
        net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.lang.String str78 = dateTime77.toFullString();
        dateTime77.add(7, 53);
        net.ajaskey.common.DateTime dateTime82 = dateTime47.copy(dateTime77);
        double double83 = dateTime43.getDeltaYears(dateTime82);
        long long84 = dateTime2.getDeltaDays(dateTime43);
        java.lang.String str85 = dateTime43.toString();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-1972.041095890411d) + "'", double19 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(date21);
        org.junit.Assert.assertEquals(date21.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "31-Dec-1969" + "'", str26, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 5 + "'", int28 == 5);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1969 + "'", int29 == 1969);
        org.junit.Assert.assertNotNull(calendar30);
        org.junit.Assert.assertEquals(calendar30.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 5 + "'", int35 == 5);
        org.junit.Assert.assertNotNull(simpleDateFormat37);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "31-Dec-1969" + "'", str41, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 100 + "'", int48 == 100);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 5 + "'", int49 == 5);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str61, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertNotNull(simpleDateFormat66);
        org.junit.Assert.assertNotNull(simpleDateFormat68);
        org.junit.Assert.assertNotNull(simpleDateFormat69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str78 + "' != '" + "Thu 10-Apr-0002 10:47:05" + "'", str78, "Thu 10-Apr-0002 10:47:05");
        org.junit.Assert.assertNotNull(dateTime82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1972.041095890411d + "'", double83 == 1972.041095890411d);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 0L + "'", long84 == 0L);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "31-Dec-1969" + "'", str85, "31-Dec-1969");
    }

    @Test
    public void test6619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6619");
        net.ajaskey.common.Utils.NL = "Thu 10-Apr-0002 10:45:33";
    }

    @Test
    public void test6620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6620");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) 594);
        java.util.Date date2 = dateTime1.getTime();
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        int int10 = dateTime6.getHour();
        dateTime6.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat15 = null;
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat15);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double19 = dateTime16.getDeltaYears(dateTime18);
        boolean boolean20 = dateTime6.isEqual(dateTime18);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat26 = null;
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat26);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double30 = dateTime27.getDeltaYears(dateTime29);
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean35 = dateTime29.isEqual(dateTime34);
        java.util.Calendar calendar36 = dateTime29.getCal();
        boolean boolean37 = dateTime24.isLessThan(dateTime29);
        dateTime24.setFirstWorkDay();
        boolean boolean39 = dateTime6.sameDate(dateTime24);
        net.ajaskey.common.DateTime dateTime40 = null;
        boolean boolean41 = net.ajaskey.common.Utils.sameMonth(dateTime6, dateTime40);
        java.lang.String str42 = dateTime6.getDay();
        int int43 = dateTime6.getHour();
        java.util.Date date44 = dateTime6.getTime();
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(date44);
        int int46 = dateTime45.getDayOfYear();
        long long47 = dateTime1.getDeltaMilliSeconds(dateTime45);
        org.junit.Assert.assertNotNull(date2);
        org.junit.Assert.assertEquals(date2.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(calendar36);
        org.junit.Assert.assertEquals(calendar36.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Thursday" + "'", str42, "Thursday");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 10 + "'", int43 == 10);
        org.junit.Assert.assertNotNull(date44);
// flaky:         org.junit.Assert.assertEquals(date44.toString(), "Thu Apr 10 10:47:05 MST 2");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
// flaky:         org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-62190310374713L) + "'", long47 == (-62190310374713L));
    }

    @Test
    public void test6621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6621");
        java.lang.String str2 = net.ajaskey.common.Utils.fmt((-50.515068493150686d), (-15));
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Invalid fmt" + "'", str2, "Invalid fmt");
    }

    @Test
    public void test6622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6622");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean10 = dateTime4.isEqual(dateTime9);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(100L);
        double double17 = dateTime14.getDeltaYears(dateTime16);
        boolean boolean18 = dateTime16.isWeekday();
        int int19 = dateTime16.getDayOfYear();
        net.ajaskey.common.DateTime dateTime20 = dateTime4.copy(dateTime16);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(dateTime16);
        net.ajaskey.common.DateTime dateTime23 = dateTime16.parse("Thu 10-Apr-0002 10:43:00");
        java.text.SimpleDateFormat simpleDateFormat24 = dateTime16.getSdf();
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime("5.00", "     10");
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime(100L);
        double double34 = dateTime31.getDeltaYears(dateTime33);
        int int35 = dateTime31.getHour();
        java.text.SimpleDateFormat simpleDateFormat37 = null;
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat37);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double41 = dateTime38.getDeltaYears(dateTime40);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean46 = dateTime40.isEqual(dateTime45);
        java.util.Calendar calendar47 = dateTime40.getCal();
        dateTime31.set(calendar47);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime(calendar47);
        dateTime27.set(calendar47);
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime(100L);
        int int53 = dateTime52.getMs();
        java.lang.String str54 = dateTime52.toString();
        java.lang.String str56 = dateTime52.format("         1");
        net.ajaskey.common.DateTime dateTime57 = dateTime27.copy(dateTime52);
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime("BAD-DATE-FORMAT", "                                                                                               52.00");
        dateTime52.set(dateTime60);
        boolean boolean62 = net.ajaskey.common.Utils.sameMonth(dateTime16, dateTime52);
        int int63 = dateTime16.getYear();
        int int64 = dateTime16.getMinute();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-1972.041095890411d) + "'", double17 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 365 + "'", int19 == 365);
        org.junit.Assert.assertNotNull(dateTime20);
        org.junit.Assert.assertNull(dateTime23);
        org.junit.Assert.assertNull(simpleDateFormat24);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-1972.041095890411d) + "'", double34 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(calendar47);
        org.junit.Assert.assertEquals(calendar47.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 100 + "'", int53 == 100);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "31-Dec-1969" + "'", str54, "31-Dec-1969");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "         1" + "'", str56, "         1");
        org.junit.Assert.assertNotNull(dateTime57);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1969 + "'", int63 == 1969);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
    }

    @Test
    public void test6623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6623");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        int int7 = dateTime3.getHour();
        dateTime3.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat12 = null;
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat12);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double16 = dateTime13.getDeltaYears(dateTime15);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean21 = dateTime15.isEqual(dateTime20);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime(100L);
        int int24 = dateTime23.getMs();
        boolean boolean25 = dateTime20.isGreaterThanOrEqual(dateTime23);
        java.text.SimpleDateFormat simpleDateFormat27 = null;
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat27);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double31 = dateTime28.getDeltaYears(dateTime30);
        boolean boolean32 = dateTime28.isWeekday();
        boolean boolean33 = dateTime23.isLessThanOrEqual(dateTime28);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime(100L);
        dateTime35.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean40 = dateTime35.isWeekday();
        boolean boolean41 = dateTime23.isGreaterThanOrEqual(dateTime35);
        boolean boolean42 = dateTime3.sameDate(dateTime35);
        java.lang.String str43 = dateTime3.getDay();
        java.lang.String str44 = dateTime3.getMonth();
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime(100L);
        double double51 = dateTime48.getDeltaYears(dateTime50);
        boolean boolean52 = dateTime50.isWeekday();
        java.util.Date date53 = dateTime50.getTime();
        dateTime50.add((int) (byte) 100, 33);
        int int57 = dateTime50.getMs();
        int int58 = dateTime50.getHour();
        dateTime3.set(dateTime50);
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime(2020, 941, 26);
        boolean boolean64 = dateTime50.isEqual(dateTime63);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Thursday" + "'", str43, "Thursday");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "April" + "'", str44, "April");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-1972.041095890411d) + "'", double51 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(date53);
        org.junit.Assert.assertEquals(date53.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 5 + "'", int58 == 5);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test6624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6624");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        boolean boolean6 = dateTime4.isNull();
        java.lang.String str7 = dateTime4.format();
        java.util.Calendar calendar8 = dateTime4.getCal();
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(calendar8);
        java.lang.String str10 = dateTime9.toString();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "BAD-DATE-FORMAT" + "'", str7, "BAD-DATE-FORMAT");
        org.junit.Assert.assertNotNull(calendar8);
        org.junit.Assert.assertEquals(calendar8.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "31-Dec-1969" + "'", str10, "31-Dec-1969");
    }

    @Test
    public void test6625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6625");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:44:30", "    -36,794");
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime(100L);
        dateTime4.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(100L);
        double double15 = dateTime12.getDeltaYears(dateTime14);
        boolean boolean16 = dateTime14.isWeekday();
        java.util.Date date17 = dateTime14.getTime();
        dateTime4.set(dateTime14);
        int int19 = dateTime4.getYear();
        boolean boolean20 = dateTime2.isEqual(dateTime4);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-1972.041095890411d) + "'", double15 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(date17);
        org.junit.Assert.assertEquals(date17.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1969 + "'", int19 == 1969);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test6626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6626");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean10 = dateTime4.isEqual(dateTime9);
        java.util.Calendar calendar11 = dateTime4.getCal();
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(calendar11);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(calendar11);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(100L);
        int int16 = dateTime15.getMs();
        java.text.SimpleDateFormat simpleDateFormat17 = net.ajaskey.common.Utils.sdf;
        dateTime15.setSdf(simpleDateFormat17);
        long long19 = dateTime13.getDeltaDays(dateTime15);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime(100L);
        double double26 = dateTime23.getDeltaYears(dateTime25);
        int int27 = dateTime23.getHour();
        java.text.SimpleDateFormat simpleDateFormat29 = null;
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat29);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double33 = dateTime30.getDeltaYears(dateTime32);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean38 = dateTime32.isEqual(dateTime37);
        java.util.Calendar calendar39 = dateTime32.getCal();
        dateTime23.set(calendar39);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime(calendar39);
        dateTime13.set(calendar39);
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime(calendar39);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(calendar11);
        org.junit.Assert.assertEquals(calendar11.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat17);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-1972.041095890411d) + "'", double26 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 10 + "'", int27 == 10);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(calendar39);
        org.junit.Assert.assertEquals(calendar39.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    }

    @Test
    public void test6627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6627");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        int int3 = dateTime1.getHour();
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat9 = null;
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat9);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double13 = dateTime10.getDeltaYears(dateTime12);
        boolean boolean14 = dateTime7.isLessThan(dateTime12);
        java.lang.String str15 = dateTime12.toFullString();
        dateTime12.add(10, (int) (byte) -1);
        java.text.SimpleDateFormat simpleDateFormat20 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat22 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat23 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("", simpleDateFormat22, simpleDateFormat23);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat20, simpleDateFormat23);
        boolean boolean26 = dateTime12.isGreaterThan(dateTime25);
        boolean boolean27 = dateTime1.isEqual(dateTime12);
        net.ajaskey.common.DateTime dateTime28 = null;
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(dateTime28);
        dateTime29.set(42, 10, 10);
        java.util.Date date34 = dateTime29.getTime();
        net.ajaskey.common.DateTime dateTime35 = dateTime1.copy(dateTime29);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(100L);
        int int38 = dateTime37.getMs();
        int int39 = dateTime37.getHour();
        double double40 = dateTime29.getDeltaYears(dateTime37);
        dateTime37.add(12, 53);
        dateTime37.add(0, 979);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 5 + "'", int3 == 5);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str15, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertNotNull(simpleDateFormat20);
        org.junit.Assert.assertNotNull(simpleDateFormat22);
        org.junit.Assert.assertNotNull(simpleDateFormat23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(date34);
// flaky:         org.junit.Assert.assertEquals(date34.toString(), "Sat Nov 10 10:47:06 MST 42");
        org.junit.Assert.assertNotNull(dateTime35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 5 + "'", int39 == 5);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-1928.4246575342465d) + "'", double40 == (-1928.4246575342465d));
    }

    @Test
    public void test6628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6628");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        dateTime1.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str6 = dateTime1.getMonth();
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        dateTime8.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str13 = dateTime8.getMonth();
        int int14 = dateTime8.getMs();
        net.ajaskey.common.DateTime dateTime15 = dateTime1.copy(dateTime8);
        boolean boolean16 = dateTime1.isWeekday();
        java.lang.String str17 = dateTime1.format();
        java.util.Date date18 = dateTime1.getTime();
        java.lang.String str19 = dateTime1.toString();
        boolean boolean20 = dateTime1.isWeekday();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "January" + "'", str6, "January");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "January" + "'", str13, "January");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "BAD-DATE-FORMAT" + "'", str17, "BAD-DATE-FORMAT");
        org.junit.Assert.assertNotNull(date18);
        org.junit.Assert.assertEquals(date18.toString(), "Sat Jan 04 17:00:00 MST 100");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "04-Jan-0100" + "'", str19, "04-Jan-0100");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test6629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6629");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        boolean boolean7 = dateTime5.isWeekday();
        java.util.Date date8 = dateTime5.getTime();
        net.ajaskey.common.DateTime dateTime9 = null;
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime(dateTime9);
        net.ajaskey.common.DateTime dateTime11 = dateTime5.copy(dateTime9);
        int int12 = dateTime5.getHour();
        java.lang.String str13 = dateTime5.toString();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(date8);
        org.junit.Assert.assertEquals(date8.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertNull(dateTime11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "31-Dec-1969" + "'", str13, "31-Dec-1969");
    }

    @Test
    public void test6630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6630");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.util.Calendar calendar4 = null;
        dateTime3.set(calendar4);
        java.text.SimpleDateFormat simpleDateFormat7 = null;
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat7);
        dateTime8.set((int) ' ', 0, 11);
        boolean boolean13 = dateTime8.isWeekday();
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(100L);
        int int16 = dateTime15.getMs();
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(100L);
        double double23 = dateTime20.getDeltaYears(dateTime22);
        java.text.SimpleDateFormat simpleDateFormat24 = dateTime20.getSdf();
        boolean boolean25 = dateTime15.isLessThanOrEqual(dateTime20);
        java.util.Date date26 = dateTime20.getTime();
        dateTime8.set(date26);
        long long28 = dateTime3.getDeltaMilliSeconds(dateTime8);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime(100L);
        int int31 = dateTime30.getMs();
        java.lang.String str32 = dateTime30.toString();
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime(100L);
        double double39 = dateTime36.getDeltaYears(dateTime38);
        int int40 = dateTime36.getHour();
        int int41 = dateTime36.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime(100L);
        double double48 = dateTime45.getDeltaYears(dateTime47);
        boolean boolean49 = dateTime47.isWeekday();
        boolean boolean50 = net.ajaskey.common.Utils.sameDate(dateTime36, dateTime47);
        boolean boolean51 = net.ajaskey.common.Utils.sameDate(dateTime30, dateTime36);
        net.ajaskey.common.DateTime dateTime52 = null;
        boolean boolean53 = dateTime36.isLessThanOrEqual(dateTime52);
        java.lang.String str54 = dateTime36.getDay();
        boolean boolean55 = dateTime8.isGreaterThanOrEqual(dateTime36);
        java.text.SimpleDateFormat simpleDateFormat57 = null;
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat57);
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double61 = dateTime58.getDeltaYears(dateTime60);
        java.text.SimpleDateFormat simpleDateFormat64 = null;
        java.text.SimpleDateFormat simpleDateFormat65 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime("January", simpleDateFormat64, simpleDateFormat65);
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime("Thursday", simpleDateFormat64);
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime(dateTime67);
        boolean boolean69 = dateTime58.isEqual(dateTime67);
        net.ajaskey.common.DateTime dateTime73 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime75 = new net.ajaskey.common.DateTime(100L);
        double double76 = dateTime73.getDeltaYears(dateTime75);
        int int77 = dateTime73.getHour();
        java.util.Calendar calendar78 = dateTime73.getCal();
        net.ajaskey.common.DateTime dateTime79 = new net.ajaskey.common.DateTime(calendar78);
        dateTime67.set(calendar78);
        int int81 = dateTime67.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime85 = new net.ajaskey.common.DateTime(1869, 0, 0);
        int int86 = dateTime85.getDayOfMonth();
        java.text.SimpleDateFormat simpleDateFormat87 = dateTime85.getSdf();
        int int88 = dateTime67.getYears(dateTime85);
        boolean boolean89 = dateTime8.sameDate(dateTime85);
        java.lang.String str90 = dateTime85.format();
        java.lang.String str91 = dateTime85.getDay();
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-1972.041095890411d) + "'", double23 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(date26);
// flaky:         org.junit.Assert.assertEquals(date26.toString(), "Thu Apr 10 10:47:06 MST 2");
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 100 + "'", int31 == 100);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "31-Dec-1969" + "'", str32, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-1972.041095890411d) + "'", double39 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 10 + "'", int41 == 10);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + (-1972.041095890411d) + "'", double48 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Thursday" + "'", str54, "Thursday");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(simpleDateFormat65);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-1972.041095890411d) + "'", double76 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 10 + "'", int77 == 10);
        org.junit.Assert.assertNotNull(calendar78);
// flaky:         org.junit.Assert.assertEquals(calendar78.toString(), "java.util.GregorianCalendar[time=-62190310373870,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=6,MILLISECOND=130,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 10 + "'", int81 == 10);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 31 + "'", int86 == 31);
        org.junit.Assert.assertNull(simpleDateFormat87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 1866 + "'", int88 == 1866);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "BAD-DATE-FORMAT" + "'", str90, "BAD-DATE-FORMAT");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "Thursday" + "'", str91, "Thursday");
    }

    @Test
    public void test6631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6631");
        java.lang.String str2 = net.ajaskey.common.Utils.lfmt((long) 97, (int) (short) 10);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "        97" + "'", str2, "        97");
    }

    @Test
    public void test6632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6632");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean10 = dateTime4.isEqual(dateTime9);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(100L);
        int int13 = dateTime12.getMs();
        boolean boolean14 = dateTime9.isGreaterThanOrEqual(dateTime12);
        java.text.SimpleDateFormat simpleDateFormat16 = null;
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double20 = dateTime17.getDeltaYears(dateTime19);
        boolean boolean21 = dateTime17.isWeekday();
        boolean boolean22 = dateTime12.isLessThanOrEqual(dateTime17);
        java.text.SimpleDateFormat simpleDateFormat24 = null;
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat24);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double28 = dateTime25.getDeltaYears(dateTime27);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean33 = dateTime27.isEqual(dateTime32);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime(100L);
        int int36 = dateTime35.getMs();
        boolean boolean37 = dateTime32.isGreaterThanOrEqual(dateTime35);
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime(100L);
        dateTime39.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime(100L);
        double double50 = dateTime47.getDeltaYears(dateTime49);
        boolean boolean51 = dateTime49.isWeekday();
        java.util.Date date52 = dateTime49.getTime();
        dateTime39.set(dateTime49);
        boolean boolean54 = net.ajaskey.common.Utils.sameDate(dateTime32, dateTime39);
        boolean boolean55 = dateTime12.isEqual(dateTime39);
        java.text.SimpleDateFormat simpleDateFormat56 = dateTime12.getSdf();
        int int57 = dateTime12.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat63 = null;
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat63);
        net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double67 = dateTime64.getDeltaYears(dateTime66);
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean72 = dateTime66.isEqual(dateTime71);
        java.util.Calendar calendar73 = dateTime66.getCal();
        boolean boolean74 = dateTime61.isLessThan(dateTime66);
        net.ajaskey.common.DateTime dateTime75 = null;
        boolean boolean76 = dateTime61.isEqual(dateTime75);
        java.text.SimpleDateFormat simpleDateFormat77 = dateTime61.getSdf();
        net.ajaskey.common.DateTime dateTime78 = null;
        net.ajaskey.common.DateTime dateTime79 = new net.ajaskey.common.DateTime(dateTime78);
        dateTime79.set(42, 10, 10);
        java.util.Date date84 = dateTime79.getTime();
        net.ajaskey.common.DateTime dateTime85 = new net.ajaskey.common.DateTime(date84);
        net.ajaskey.common.DateTime dateTime86 = new net.ajaskey.common.DateTime(date84);
        boolean boolean87 = dateTime86.isNull();
        boolean boolean88 = dateTime61.isGreaterThanOrEqual(dateTime86);
        boolean boolean89 = dateTime12.sameDate(dateTime61);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-1972.041095890411d) + "'", double50 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(date52);
        org.junit.Assert.assertEquals(date52.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(simpleDateFormat56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 31 + "'", int57 == 31);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(calendar73);
        org.junit.Assert.assertEquals(calendar73.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(simpleDateFormat77);
        org.junit.Assert.assertNotNull(date84);
// flaky:         org.junit.Assert.assertEquals(date84.toString(), "Sat Nov 10 10:47:06 MST 42");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test6633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6633");
        net.ajaskey.common.TextUtils.printline("Thu 10-Apr-0002 10:46:12");
    }

    @Test
    public void test6634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6634");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (byte) 0, 13, 9);
        dateTime6.add(310, 16);
        boolean boolean10 = dateTime6.isWeekday();
        boolean boolean11 = dateTime2.isLessThan(dateTime6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test6635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6635");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        dateTime1.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
        double double12 = dateTime9.getDeltaYears(dateTime11);
        boolean boolean13 = dateTime11.isWeekday();
        java.util.Date date14 = dateTime11.getTime();
        dateTime1.set(dateTime11);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(100L);
        double double22 = dateTime19.getDeltaYears(dateTime21);
        int int23 = dateTime19.getHour();
        java.text.SimpleDateFormat simpleDateFormat25 = null;
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat25);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double29 = dateTime26.getDeltaYears(dateTime28);
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean34 = dateTime28.isEqual(dateTime33);
        java.util.Calendar calendar35 = dateTime28.getCal();
        dateTime19.set(calendar35);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(calendar35);
        boolean boolean38 = dateTime11.isGreaterThan(dateTime37);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((long) (byte) 100);
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime(25, 1, 0);
        boolean boolean45 = net.ajaskey.common.Utils.sameMonth(dateTime40, dateTime44);
        int int46 = dateTime40.getSecond();
        boolean boolean47 = net.ajaskey.common.Utils.sameDate(dateTime37, dateTime40);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime(0L);
        int int50 = dateTime40.getYears(dateTime49);
        dateTime40.add(260, 26);
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime("5.00", "     10");
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime(100L);
        double double63 = dateTime60.getDeltaYears(dateTime62);
        int int64 = dateTime60.getHour();
        java.text.SimpleDateFormat simpleDateFormat66 = null;
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat66);
        net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double70 = dateTime67.getDeltaYears(dateTime69);
        net.ajaskey.common.DateTime dateTime74 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean75 = dateTime69.isEqual(dateTime74);
        java.util.Calendar calendar76 = dateTime69.getCal();
        dateTime60.set(calendar76);
        net.ajaskey.common.DateTime dateTime78 = new net.ajaskey.common.DateTime(calendar76);
        dateTime56.set(calendar76);
        net.ajaskey.common.DateTime dateTime81 = new net.ajaskey.common.DateTime(100L);
        int int82 = dateTime81.getMs();
        java.lang.String str83 = dateTime81.toString();
        java.lang.String str85 = dateTime81.format("         1");
        net.ajaskey.common.DateTime dateTime86 = dateTime56.copy(dateTime81);
        boolean boolean87 = dateTime56.isNull();
        int int88 = dateTime56.getDayOfWeek();
        java.util.Date date89 = dateTime56.getTime();
        net.ajaskey.common.DateTime dateTime90 = new net.ajaskey.common.DateTime(date89);
        net.ajaskey.common.DateTime dateTime91 = new net.ajaskey.common.DateTime(date89);
        dateTime40.set(date89);
        net.ajaskey.common.DateTime dateTime94 = dateTime40.parse("Thu 10-Apr-0002 10:43:59");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1972.041095890411d) + "'", double12 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(date14);
        org.junit.Assert.assertEquals(date14.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-1972.041095890411d) + "'", double22 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(calendar35);
        org.junit.Assert.assertEquals(calendar35.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-1972.041095890411d) + "'", double63 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 10 + "'", int64 == 10);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(calendar76);
        org.junit.Assert.assertEquals(calendar76.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 100 + "'", int82 == 100);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "31-Dec-1969" + "'", str83, "31-Dec-1969");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "         1" + "'", str85, "         1");
        org.junit.Assert.assertNotNull(dateTime86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 4 + "'", int88 == 4);
        org.junit.Assert.assertNotNull(date89);
        org.junit.Assert.assertEquals(date89.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertNull(dateTime94);
    }

    @Test
    public void test6636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6636");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("", "");
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:43:36", "                                                                                               52.00");
        long long6 = dateTime2.getDeltaMilliSeconds(dateTime5);
        java.text.SimpleDateFormat simpleDateFormat8 = null;
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double12 = dateTime9.getDeltaYears(dateTime11);
        boolean boolean13 = dateTime9.isWeekday();
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long18 = dateTime9.getDeltaDays(dateTime17);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(dateTime9);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime(100L);
        double double26 = dateTime23.getDeltaYears(dateTime25);
        boolean boolean27 = dateTime25.isWeekday();
        java.util.Date date28 = dateTime25.getTime();
        dateTime9.set(date28);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(100L);
        int int32 = dateTime31.getMs();
        java.lang.String str33 = dateTime31.toString();
        boolean boolean34 = dateTime9.isLessThanOrEqual(dateTime31);
        java.lang.String str36 = dateTime31.format("5.00");
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime(100L);
        double double43 = dateTime40.getDeltaYears(dateTime42);
        java.util.Date date44 = dateTime40.getTime();
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(date44);
        net.ajaskey.common.DateTime dateTime48 = dateTime45.parse("31-Dec-1969", "January");
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime(100L);
        int int51 = dateTime50.getMs();
        java.lang.String str52 = dateTime50.toString();
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime(100L);
        double double59 = dateTime56.getDeltaYears(dateTime58);
        int int60 = dateTime56.getHour();
        int int61 = dateTime56.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime(100L);
        double double68 = dateTime65.getDeltaYears(dateTime67);
        boolean boolean69 = dateTime67.isWeekday();
        boolean boolean70 = net.ajaskey.common.Utils.sameDate(dateTime56, dateTime67);
        boolean boolean71 = net.ajaskey.common.Utils.sameDate(dateTime50, dateTime56);
        dateTime45.set(dateTime56);
        java.util.Date date73 = dateTime45.getTime();
        net.ajaskey.common.DateTime dateTime74 = new net.ajaskey.common.DateTime(date73);
        dateTime31.set(date73);
        net.ajaskey.common.DateTime dateTime76 = dateTime2.copy(dateTime31);
        dateTime76.add(15, 841);
        dateTime76.set(19, 6, 487);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-1972.041095890411d) + "'", double26 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(date28);
        org.junit.Assert.assertEquals(date28.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "31-Dec-1969" + "'", str33, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "5.00" + "'", str36, "5.00");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-1972.041095890411d) + "'", double43 == (-1972.041095890411d));
        org.junit.Assert.assertNotNull(date44);
// flaky:         org.junit.Assert.assertEquals(date44.toString(), "Thu Apr 10 10:47:06 MST 2");
        org.junit.Assert.assertNull(dateTime48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 100 + "'", int51 == 100);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "31-Dec-1969" + "'", str52, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-1972.041095890411d) + "'", double59 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 10 + "'", int60 == 10);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 10 + "'", int61 == 10);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-1972.041095890411d) + "'", double68 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(date73);
// flaky:         org.junit.Assert.assertEquals(date73.toString(), "Thu Apr 10 10:47:06 MST 2");
        org.junit.Assert.assertNotNull(dateTime76);
    }

    @Test
    public void test6637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6637");
        net.ajaskey.common.Utils.sleep(342);
    }

    @Test
    public void test6638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6638");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        boolean boolean3 = dateTime1.isWeekday();
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime((long) (short) 0);
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime(100L);
        int int8 = dateTime7.getMs();
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(100L);
        double double15 = dateTime12.getDeltaYears(dateTime14);
        java.text.SimpleDateFormat simpleDateFormat16 = dateTime12.getSdf();
        boolean boolean17 = dateTime7.isLessThanOrEqual(dateTime12);
        java.text.SimpleDateFormat simpleDateFormat19 = null;
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat19);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double23 = dateTime20.getDeltaYears(dateTime22);
        boolean boolean24 = dateTime20.isWeekday();
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long29 = dateTime20.getDeltaDays(dateTime28);
        long long30 = dateTime7.getDeltaDays(dateTime28);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime(100L);
        dateTime32.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean37 = dateTime32.isWeekday();
        int int38 = dateTime7.getYears(dateTime32);
        int int39 = dateTime7.getYear();
        java.util.Calendar calendar40 = dateTime7.getCal();
        net.ajaskey.common.DateTime dateTime41 = dateTime5.copy(dateTime7);
        boolean boolean42 = dateTime1.isGreaterThan(dateTime7);
        java.text.SimpleDateFormat simpleDateFormat44 = null;
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat44);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double48 = dateTime45.getDeltaYears(dateTime47);
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean53 = dateTime47.isEqual(dateTime52);
        java.lang.String str54 = dateTime52.getMonth();
        net.ajaskey.common.DateTime dateTime55 = dateTime7.copy(dateTime52);
        java.util.Date date56 = dateTime7.getTime();
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime(date56);
        int int58 = dateTime57.getDayOfWeek();
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime(100L);
        int int61 = dateTime60.getMs();
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime(100L);
        double double68 = dateTime65.getDeltaYears(dateTime67);
        java.text.SimpleDateFormat simpleDateFormat69 = dateTime65.getSdf();
        boolean boolean70 = dateTime60.isLessThanOrEqual(dateTime65);
        boolean boolean71 = dateTime60.isWeekday();
        boolean boolean72 = dateTime57.sameDate(dateTime60);
        java.util.Date date73 = dateTime60.getTime();
        net.ajaskey.common.DateTime dateTime75 = new net.ajaskey.common.DateTime(100L);
        dateTime75.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str80 = dateTime75.getMonth();
        int int81 = dateTime75.getMs();
        java.lang.String str83 = dateTime75.format("                                                                                               52.00");
        int int84 = dateTime75.getDayOfMonth();
        java.lang.String str86 = dateTime75.format(" 9");
        int int87 = dateTime75.getHour();
        boolean boolean88 = dateTime60.isLessThanOrEqual(dateTime75);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-1972.041095890411d) + "'", double15 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 719795L + "'", long30 == 719795L);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1870) + "'", int38 == (-1870));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1969 + "'", int39 == 1969);
        org.junit.Assert.assertNotNull(calendar40);
        org.junit.Assert.assertEquals(calendar40.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(dateTime41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "April" + "'", str54, "April");
        org.junit.Assert.assertNotNull(dateTime55);
        org.junit.Assert.assertNotNull(date56);
        org.junit.Assert.assertEquals(date56.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 4 + "'", int58 == 4);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-1972.041095890411d) + "'", double68 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(date73);
        org.junit.Assert.assertEquals(date73.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "January" + "'", str80, "January");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 100 + "'", int81 == 100);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "                                                                                               52.00" + "'", str83, "                                                                                               52.00");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 4 + "'", int84 == 4);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + " 9" + "'", str86, " 9");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 5 + "'", int87 == 5);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test6639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6639");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean10 = dateTime4.isEqual(dateTime9);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(100L);
        int int13 = dateTime12.getMs();
        boolean boolean14 = dateTime9.isGreaterThanOrEqual(dateTime12);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(100L);
        dateTime16.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(100L);
        double double27 = dateTime24.getDeltaYears(dateTime26);
        boolean boolean28 = dateTime26.isWeekday();
        java.util.Date date29 = dateTime26.getTime();
        dateTime16.set(dateTime26);
        boolean boolean31 = net.ajaskey.common.Utils.sameDate(dateTime9, dateTime16);
        boolean boolean32 = dateTime9.isNull();
        java.text.SimpleDateFormat simpleDateFormat34 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat36 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat37 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime("", simpleDateFormat36, simpleDateFormat37);
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat34, simpleDateFormat37);
        dateTime9.setSdf(simpleDateFormat37);
        java.lang.String str41 = dateTime9.format();
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime(100L);
        double double48 = dateTime45.getDeltaYears(dateTime47);
        int int49 = dateTime45.getHour();
        dateTime45.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat54 = null;
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat54);
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double58 = dateTime55.getDeltaYears(dateTime57);
        boolean boolean59 = dateTime45.isEqual(dateTime57);
        java.lang.String str60 = dateTime45.toString();
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime(100L);
        int int63 = dateTime62.getMs();
        java.lang.String str64 = dateTime62.toString();
        net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime(100L);
        int int67 = dateTime66.getMs();
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime73 = new net.ajaskey.common.DateTime(100L);
        double double74 = dateTime71.getDeltaYears(dateTime73);
        java.text.SimpleDateFormat simpleDateFormat75 = dateTime71.getSdf();
        boolean boolean76 = dateTime66.isLessThanOrEqual(dateTime71);
        boolean boolean77 = dateTime66.isWeekday();
        java.util.Calendar calendar78 = dateTime66.getCal();
        dateTime62.set(calendar78);
        int int80 = dateTime62.getMs();
        int int81 = dateTime62.getSecond();
        int int82 = dateTime62.getDayOfWeek();
        net.ajaskey.common.DateTime dateTime83 = dateTime45.copy(dateTime62);
        boolean boolean84 = dateTime9.isGreaterThanOrEqual(dateTime83);
        net.ajaskey.common.DateTime dateTime85 = new net.ajaskey.common.DateTime(dateTime83);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-1972.041095890411d) + "'", double27 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(date29);
        org.junit.Assert.assertEquals(date29.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(simpleDateFormat34);
        org.junit.Assert.assertNotNull(simpleDateFormat36);
        org.junit.Assert.assertNotNull(simpleDateFormat37);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "10-Apr-0002" + "'", str41, "10-Apr-0002");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + (-1972.041095890411d) + "'", double48 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 10 + "'", int49 == 10);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "10-Apr-0002" + "'", str60, "10-Apr-0002");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 100 + "'", int63 == 100);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "31-Dec-1969" + "'", str64, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 100 + "'", int67 == 100);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-1972.041095890411d) + "'", double74 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(calendar78);
        org.junit.Assert.assertEquals(calendar78.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 100 + "'", int80 == 100);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 4 + "'", int82 == 4);
        org.junit.Assert.assertNotNull(dateTime83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test6640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6640");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean10 = dateTime4.isEqual(dateTime9);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(100L);
        int int13 = dateTime12.getMs();
        boolean boolean14 = dateTime9.isGreaterThanOrEqual(dateTime12);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(100L);
        dateTime16.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(100L);
        double double27 = dateTime24.getDeltaYears(dateTime26);
        boolean boolean28 = dateTime26.isWeekday();
        java.util.Date date29 = dateTime26.getTime();
        dateTime16.set(dateTime26);
        boolean boolean31 = net.ajaskey.common.Utils.sameDate(dateTime9, dateTime16);
        dateTime9.add((int) '#', 6);
        java.lang.String str35 = dateTime9.format();
        java.lang.Class<?> wildcardClass36 = dateTime9.getClass();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-1972.041095890411d) + "'", double27 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(date29);
        org.junit.Assert.assertEquals(date29.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "BAD-DATE-FORMAT" + "'", str35, "BAD-DATE-FORMAT");
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test6641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6641");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        int int7 = dateTime3.getHour();
        dateTime3.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat12 = null;
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat12);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double16 = dateTime13.getDeltaYears(dateTime15);
        boolean boolean17 = dateTime3.isEqual(dateTime15);
        int int18 = dateTime3.getMinute();
        dateTime3.setFirstWorkDay();
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(100L);
        int int22 = dateTime21.getMs();
        java.lang.String str23 = dateTime21.toString();
        dateTime21.set(25, (-1), (int) (short) 10);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat33 = null;
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat33);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double37 = dateTime34.getDeltaYears(dateTime36);
        boolean boolean38 = dateTime31.isLessThan(dateTime36);
        java.lang.String str39 = dateTime36.toFullString();
        dateTime36.add(10, (int) (byte) -1);
        java.text.SimpleDateFormat simpleDateFormat44 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat46 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat47 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime("", simpleDateFormat46, simpleDateFormat47);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat44, simpleDateFormat47);
        boolean boolean50 = dateTime36.isGreaterThan(dateTime49);
        net.ajaskey.common.DateTime dateTime53 = dateTime36.parse("                              10", "Mon 06-Jan-0100 17:00:00");
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime(100L);
        double double60 = dateTime57.getDeltaYears(dateTime59);
        int int61 = dateTime57.getHour();
        dateTime57.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat66 = null;
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat66);
        net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double70 = dateTime67.getDeltaYears(dateTime69);
        boolean boolean71 = dateTime57.isEqual(dateTime69);
        net.ajaskey.common.DateTime dateTime75 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat77 = null;
        net.ajaskey.common.DateTime dateTime78 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat77);
        net.ajaskey.common.DateTime dateTime80 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double81 = dateTime78.getDeltaYears(dateTime80);
        net.ajaskey.common.DateTime dateTime85 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean86 = dateTime80.isEqual(dateTime85);
        java.util.Calendar calendar87 = dateTime80.getCal();
        boolean boolean88 = dateTime75.isLessThan(dateTime80);
        dateTime75.setFirstWorkDay();
        boolean boolean90 = dateTime57.sameDate(dateTime75);
        int int91 = dateTime75.getYear();
        net.ajaskey.common.DateTime dateTime92 = dateTime36.copy(dateTime75);
        boolean boolean93 = dateTime21.isEqual(dateTime92);
        boolean boolean94 = dateTime3.sameDate(dateTime21);
        java.util.Calendar calendar95 = dateTime3.getCal();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 47 + "'", int18 == 47);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "31-Dec-1969" + "'", str23, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str39, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertNotNull(simpleDateFormat44);
        org.junit.Assert.assertNotNull(simpleDateFormat46);
        org.junit.Assert.assertNotNull(simpleDateFormat47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(dateTime53);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-1972.041095890411d) + "'", double60 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 10 + "'", int61 == 10);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(calendar87);
        org.junit.Assert.assertEquals(calendar87.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 2 + "'", int91 == 2);
        org.junit.Assert.assertNotNull(dateTime92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(calendar95);
// flaky:         org.junit.Assert.assertEquals(calendar95.toString(), "java.util.GregorianCalendar[time=-62190310373279,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=6,MILLISECOND=721,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    }

    @Test
    public void test6642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6642");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) 15);
        java.util.Date date2 = dateTime1.getTime();
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(dateTime1);
        org.junit.Assert.assertNotNull(date2);
        org.junit.Assert.assertEquals(date2.toString(), "Wed Dec 31 17:00:00 MST 1969");
    }

    @Test
    public void test6643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6643");
        net.ajaskey.common.Utils.makeDir("Thu 10-Apr-0002 10:46:47");
    }

    @Test
    public void test6644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6644");
        java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readTextFile("         1", true);
        java.lang.String str3 = net.ajaskey.common.TextUtils.toString(strList2);
        net.ajaskey.common.TextUtils.print(strList2);
        java.lang.String str5 = net.ajaskey.common.TextUtils.toString(strList2);
        java.lang.String str6 = net.ajaskey.common.TextUtils.toString(strList2);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }

    @Test
    public void test6645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6645");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        java.text.SimpleDateFormat simpleDateFormat10 = dateTime6.getSdf();
        boolean boolean11 = dateTime1.isLessThanOrEqual(dateTime6);
        java.text.SimpleDateFormat simpleDateFormat13 = null;
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat13);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double17 = dateTime14.getDeltaYears(dateTime16);
        boolean boolean18 = dateTime14.isWeekday();
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long23 = dateTime14.getDeltaDays(dateTime22);
        long long24 = dateTime1.getDeltaDays(dateTime22);
        java.lang.String str25 = dateTime22.toFullString();
        java.util.Calendar calendar26 = dateTime22.getCal();
        java.util.Calendar calendar27 = dateTime22.getCal();
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((long) (short) 0);
        int int30 = dateTime29.getHour();
        boolean boolean31 = dateTime29.isNull();
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime(dateTime29);
        boolean boolean33 = dateTime22.isLessThanOrEqual(dateTime29);
        java.text.SimpleDateFormat simpleDateFormat35 = null;
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat35);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double39 = dateTime36.getDeltaYears(dateTime38);
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean44 = dateTime38.isEqual(dateTime43);
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime(100L);
        int int47 = dateTime46.getMs();
        boolean boolean48 = dateTime43.isGreaterThanOrEqual(dateTime46);
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime(100L);
        dateTime50.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime(100L);
        double double61 = dateTime58.getDeltaYears(dateTime60);
        boolean boolean62 = dateTime60.isWeekday();
        java.util.Date date63 = dateTime60.getTime();
        dateTime50.set(dateTime60);
        boolean boolean65 = net.ajaskey.common.Utils.sameDate(dateTime43, dateTime50);
        int int66 = dateTime43.getDayOfYear();
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime73 = new net.ajaskey.common.DateTime(100L);
        long long74 = dateTime71.getDeltaDays(dateTime73);
        int int75 = dateTime71.getHour();
        dateTime71.add((int) (byte) 100, (int) (byte) 0);
        net.ajaskey.common.DateTime dateTime80 = dateTime71.parse("10-Apr-0002");
        int int81 = dateTime71.getDayOfMonth();
        java.text.SimpleDateFormat simpleDateFormat85 = null;
        java.text.SimpleDateFormat simpleDateFormat86 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime87 = new net.ajaskey.common.DateTime("January", simpleDateFormat85, simpleDateFormat86);
        java.text.SimpleDateFormat simpleDateFormat90 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime91 = new net.ajaskey.common.DateTime("January", simpleDateFormat90);
        net.ajaskey.common.DateTime dateTime92 = new net.ajaskey.common.DateTime("", simpleDateFormat90);
        net.ajaskey.common.DateTime dateTime93 = new net.ajaskey.common.DateTime("", simpleDateFormat86, simpleDateFormat90);
        net.ajaskey.common.DateTime dateTime94 = new net.ajaskey.common.DateTime("Wed 31-Dec-1969 17:00:00", simpleDateFormat90);
        dateTime71.setSdf(simpleDateFormat90);
        net.ajaskey.common.DateTime dateTime96 = new net.ajaskey.common.DateTime("                                                                                                                                                                                                                                                                      13", simpleDateFormat90);
        dateTime43.setSdf(simpleDateFormat90);
        dateTime22.setSdf(simpleDateFormat90);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 719795L + "'", long24 == 719795L);
// flaky:         org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Thu 10-Apr-0002 10:47:06" + "'", str25, "Thu 10-Apr-0002 10:47:06");
        org.junit.Assert.assertNotNull(calendar26);
// flaky:         org.junit.Assert.assertEquals(calendar26.toString(), "java.util.GregorianCalendar[time=-62190310373221,areFieldsSet=true,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=6,MILLISECOND=779,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(calendar27);
// flaky:         org.junit.Assert.assertEquals(calendar27.toString(), "java.util.GregorianCalendar[time=-62190310373221,areFieldsSet=true,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=6,MILLISECOND=779,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 5 + "'", int30 == 5);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-1972.041095890411d) + "'", double61 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(date63);
        org.junit.Assert.assertEquals(date63.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + (-719795L) + "'", long74 == (-719795L));
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 10 + "'", int75 == 10);
        org.junit.Assert.assertNull(dateTime80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 10 + "'", int81 == 10);
        org.junit.Assert.assertNotNull(simpleDateFormat86);
        org.junit.Assert.assertNotNull(simpleDateFormat90);
    }

    @Test
    public void test6646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6646");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(264, 13, (int) 'a');
        int int4 = dateTime3.getHour();
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("5.00", "     10");
        java.text.SimpleDateFormat simpleDateFormat8 = dateTime7.getSdf();
        java.text.SimpleDateFormat simpleDateFormat10 = null;
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat10);
        dateTime11.set((int) ' ', 0, 11);
        boolean boolean16 = dateTime11.isWeekday();
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(100L);
        int int19 = dateTime18.getMs();
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime(100L);
        double double26 = dateTime23.getDeltaYears(dateTime25);
        java.text.SimpleDateFormat simpleDateFormat27 = dateTime23.getSdf();
        boolean boolean28 = dateTime18.isLessThanOrEqual(dateTime23);
        java.util.Date date29 = dateTime23.getTime();
        dateTime11.set(date29);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(date29);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime(date29);
        dateTime7.set(date29);
        dateTime3.set(date29);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime(date29);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime(date29);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(dateTime36);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 10 + "'", int4 == 10);
        org.junit.Assert.assertNull(simpleDateFormat8);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-1972.041095890411d) + "'", double26 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(date29);
// flaky:         org.junit.Assert.assertEquals(date29.toString(), "Thu Apr 10 10:47:06 MST 2");
    }

    @Test
    public void test6647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6647");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        boolean boolean3 = dateTime1.isWeekday();
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime((long) (short) 0);
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime(100L);
        int int8 = dateTime7.getMs();
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(100L);
        double double15 = dateTime12.getDeltaYears(dateTime14);
        java.text.SimpleDateFormat simpleDateFormat16 = dateTime12.getSdf();
        boolean boolean17 = dateTime7.isLessThanOrEqual(dateTime12);
        java.text.SimpleDateFormat simpleDateFormat19 = null;
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat19);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double23 = dateTime20.getDeltaYears(dateTime22);
        boolean boolean24 = dateTime20.isWeekday();
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long29 = dateTime20.getDeltaDays(dateTime28);
        long long30 = dateTime7.getDeltaDays(dateTime28);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime(100L);
        dateTime32.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean37 = dateTime32.isWeekday();
        int int38 = dateTime7.getYears(dateTime32);
        int int39 = dateTime7.getYear();
        java.util.Calendar calendar40 = dateTime7.getCal();
        net.ajaskey.common.DateTime dateTime41 = dateTime5.copy(dateTime7);
        boolean boolean42 = dateTime1.isGreaterThan(dateTime7);
        java.text.SimpleDateFormat simpleDateFormat44 = null;
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat44);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double48 = dateTime45.getDeltaYears(dateTime47);
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean53 = dateTime47.isEqual(dateTime52);
        java.lang.String str54 = dateTime52.getMonth();
        net.ajaskey.common.DateTime dateTime55 = dateTime7.copy(dateTime52);
        java.text.SimpleDateFormat simpleDateFormat56 = dateTime7.getSdf();
        java.lang.String str57 = dateTime7.getDay();
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime(dateTime7);
        java.text.SimpleDateFormat simpleDateFormat59 = dateTime7.getSdf();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-1972.041095890411d) + "'", double15 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 719795L + "'", long30 == 719795L);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1870) + "'", int38 == (-1870));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1969 + "'", int39 == 1969);
        org.junit.Assert.assertNotNull(calendar40);
        org.junit.Assert.assertEquals(calendar40.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(dateTime41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "April" + "'", str54, "April");
        org.junit.Assert.assertNotNull(dateTime55);
        org.junit.Assert.assertNull(simpleDateFormat56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Wednesday" + "'", str57, "Wednesday");
        org.junit.Assert.assertNull(simpleDateFormat59);
    }

    @Test
    public void test6648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6648");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("                                                                                                                                               62,190,310,594,996", "");
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(" 9", "         1");
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime(100L);
        int int8 = dateTime7.getMs();
        boolean boolean9 = dateTime7.isWeekday();
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(100L);
        int int14 = dateTime13.getMs();
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime(100L);
        double double21 = dateTime18.getDeltaYears(dateTime20);
        java.text.SimpleDateFormat simpleDateFormat22 = dateTime18.getSdf();
        boolean boolean23 = dateTime13.isLessThanOrEqual(dateTime18);
        java.text.SimpleDateFormat simpleDateFormat25 = null;
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat25);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double29 = dateTime26.getDeltaYears(dateTime28);
        boolean boolean30 = dateTime26.isWeekday();
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long35 = dateTime26.getDeltaDays(dateTime34);
        long long36 = dateTime13.getDeltaDays(dateTime34);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime(100L);
        dateTime38.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean43 = dateTime38.isWeekday();
        int int44 = dateTime13.getYears(dateTime38);
        int int45 = dateTime13.getYear();
        java.util.Calendar calendar46 = dateTime13.getCal();
        net.ajaskey.common.DateTime dateTime47 = dateTime11.copy(dateTime13);
        boolean boolean48 = dateTime7.isGreaterThan(dateTime13);
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime(100L);
        double double55 = dateTime52.getDeltaYears(dateTime54);
        boolean boolean56 = dateTime54.isWeekday();
        java.util.Date date57 = dateTime54.getTime();
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime(date57);
        java.text.SimpleDateFormat simpleDateFormat60 = null;
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat60);
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double64 = dateTime61.getDeltaYears(dateTime63);
        boolean boolean65 = dateTime61.isWeekday();
        net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long70 = dateTime61.getDeltaDays(dateTime69);
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime(dateTime61);
        boolean boolean72 = dateTime58.isGreaterThan(dateTime61);
        boolean boolean73 = dateTime13.sameDate(dateTime58);
        java.lang.String str75 = dateTime58.format("January                                                                                               52.00                                                                                               52.00                                                                                               52.00                                                                                               52.00hi!                                                                                               52.00");
        java.util.Calendar calendar76 = dateTime58.getCal();
        dateTime5.set(calendar76);
        boolean boolean78 = dateTime2.isGreaterThanOrEqual(dateTime5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-1972.041095890411d) + "'", double21 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 719795L + "'", long36 == 719795L);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1870) + "'", int44 == (-1870));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1969 + "'", int45 == 1969);
        org.junit.Assert.assertNotNull(calendar46);
        org.junit.Assert.assertEquals(calendar46.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(dateTime47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-1972.041095890411d) + "'", double55 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(date57);
        org.junit.Assert.assertEquals(date57.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 0L + "'", long70 == 0L);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "BAD-DATE-FORMAT" + "'", str75, "BAD-DATE-FORMAT");
        org.junit.Assert.assertNotNull(calendar76);
        org.junit.Assert.assertEquals(calendar76.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test6649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6649");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        long long6 = dateTime3.getDeltaDays(dateTime5);
        java.text.SimpleDateFormat simpleDateFormat8 = null;
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double12 = dateTime9.getDeltaYears(dateTime11);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean17 = dateTime11.isEqual(dateTime16);
        java.util.Calendar calendar18 = dateTime11.getCal();
        java.lang.String str19 = dateTime11.format();
        net.ajaskey.common.DateTime dateTime20 = null;
        long long21 = dateTime11.getDeltaDays(dateTime20);
        int int22 = dateTime11.getSecond();
        java.text.SimpleDateFormat simpleDateFormat24 = null;
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat24);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double28 = dateTime25.getDeltaYears(dateTime27);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean33 = dateTime27.isEqual(dateTime32);
        boolean boolean34 = dateTime11.isGreaterThanOrEqual(dateTime32);
        boolean boolean35 = dateTime32.isNull();
        int int36 = dateTime32.getDayOfYear();
        int int37 = dateTime32.getHour();
        java.lang.String str39 = dateTime32.format("");
        boolean boolean40 = dateTime3.isGreaterThan(dateTime32);
        net.ajaskey.common.DateTime dateTime42 = dateTime3.parse("Sat 10-Nov-0042 10:45:00");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-719795L) + "'", long6 == (-719795L));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(calendar18);
        org.junit.Assert.assertEquals(calendar18.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "BAD-DATE-FORMAT" + "'", str19, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 10 + "'", int37 == 10);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(dateTime42);
    }

    @Test
    public void test6650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6650");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(219, 94, (int) (byte) 1);
    }

    @Test
    public void test6651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6651");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(286, 269, 365);
    }

    @Test
    public void test6652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6652");
        // The following exception was thrown during execution in test generation
        try {
            net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("Wed 12-Apr-0139 10:44:24", "Fri 11-Jan-0032 10:46:16");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal pattern character 'r'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test6653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6653");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (byte) 10, 260, (int) '4');
        int int4 = dateTime3.getSecond();
        dateTime3.setFirstWorkDay();
        java.text.SimpleDateFormat simpleDateFormat9 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("1,969.00", simpleDateFormat9);
        java.text.SimpleDateFormat simpleDateFormat14 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat15 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("", simpleDateFormat14, simpleDateFormat15);
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:42:54", simpleDateFormat14);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:43:09", simpleDateFormat14);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime("   -18,438", simpleDateFormat9, simpleDateFormat14);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime((long) (byte) 100);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime(25, 1, 0);
        boolean boolean26 = net.ajaskey.common.Utils.sameMonth(dateTime21, dateTime25);
        int int27 = dateTime21.getSecond();
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(100L);
        int int30 = dateTime29.getMs();
        java.text.SimpleDateFormat simpleDateFormat31 = net.ajaskey.common.Utils.sdf;
        dateTime29.setSdf(simpleDateFormat31);
        net.ajaskey.common.DateTime dateTime33 = dateTime21.copy(dateTime29);
        java.text.SimpleDateFormat simpleDateFormat34 = dateTime29.getSdf();
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTimesimpleDateFormat14, simpleDateFormat34);
        dateTime3.setSdf(simpleDateFormat34);
        java.lang.Class<?> wildcardClass37 = simpleDateFormat34.getClass();
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 6 + "'", int4 == 6);
        org.junit.Assert.assertNotNull(simpleDateFormat9);
        org.junit.Assert.assertNotNull(simpleDateFormat14);
        org.junit.Assert.assertNotNull(simpleDateFormat15);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat31);
        org.junit.Assert.assertNotNull(dateTime33);
        org.junit.Assert.assertNotNull(simpleDateFormat34);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test6654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6654");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(21, 207, 78);
    }

    @Test
    public void test6655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6655");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(25, 1, 0);
        boolean boolean6 = net.ajaskey.common.Utils.sameMonth(dateTime1, dateTime5);
        int int7 = dateTime1.getSecond();
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(100L);
        int int10 = dateTime9.getMs();
        java.text.SimpleDateFormat simpleDateFormat11 = net.ajaskey.common.Utils.sdf;
        dateTime9.setSdf(simpleDateFormat11);
        net.ajaskey.common.DateTime dateTime13 = dateTime1.copy(dateTime9);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(100L);
        int int16 = dateTime15.getMs();
        boolean boolean17 = dateTime15.isWeekday();
        java.util.Calendar calendar18 = dateTime15.getCal();
        dateTime9.set(calendar18);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime(calendar18);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(100L);
        double double27 = dateTime24.getDeltaYears(dateTime26);
        java.text.SimpleDateFormat simpleDateFormat28 = dateTime24.getSdf();
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime("5.00", "     10");
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime("5.00", "     10");
        dateTime34.add((int) (short) 0, (int) 'a');
        int int38 = dateTime34.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime(100L);
        int int41 = dateTime40.getMs();
        int int42 = dateTime40.getHour();
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat48 = null;
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat48);
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double52 = dateTime49.getDeltaYears(dateTime51);
        boolean boolean53 = dateTime46.isLessThan(dateTime51);
        java.lang.String str54 = dateTime51.toFullString();
        dateTime51.add(10, (int) (byte) -1);
        java.text.SimpleDateFormat simpleDateFormat59 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat61 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat62 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime("", simpleDateFormat61, simpleDateFormat62);
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat59, simpleDateFormat62);
        boolean boolean65 = dateTime51.isGreaterThan(dateTime64);
        boolean boolean66 = dateTime40.isEqual(dateTime51);
        net.ajaskey.common.DateTime dateTime67 = null;
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime(dateTime67);
        dateTime68.set(42, 10, 10);
        java.util.Date date73 = dateTime68.getTime();
        net.ajaskey.common.DateTime dateTime74 = dateTime40.copy(dateTime68);
        net.ajaskey.common.DateTime dateTime75 = dateTime34.copy(dateTime40);
        boolean boolean76 = net.ajaskey.common.Utils.sameMonth(dateTime31, dateTime75);
        dateTime24.set(dateTime75);
        dateTime24.set(0, (int) (short) 1, 15);
        int int82 = dateTime20.getYears(dateTime24);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat11);
        org.junit.Assert.assertNotNull(dateTime13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(calendar18);
        org.junit.Assert.assertEquals(calendar18.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-1972.041095890411d) + "'", double27 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat28);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 5 + "'", int42 == 5);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str54, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertNotNull(simpleDateFormat59);
        org.junit.Assert.assertNotNull(simpleDateFormat61);
        org.junit.Assert.assertNotNull(simpleDateFormat62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(date73);
// flaky:         org.junit.Assert.assertEquals(date73.toString(), "Sat Nov 10 10:47:07 MST 42");
        org.junit.Assert.assertNotNull(dateTime74);
        org.junit.Assert.assertNotNull(dateTime75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1969) + "'", int82 == (-1969));
    }

    @Test
    public void test6656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6656");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((-1945), 144, 87);
    }

    @Test
    public void test6657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6657");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean10 = dateTime4.isEqual(dateTime9);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(100L);
        int int13 = dateTime12.getMs();
        boolean boolean14 = dateTime9.isGreaterThanOrEqual(dateTime12);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime(100L);
        double double21 = dateTime18.getDeltaYears(dateTime20);
        java.util.Date date22 = dateTime18.getTime();
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime(date22);
        net.ajaskey.common.DateTime dateTime26 = dateTime23.parse("31-Dec-1969", "January");
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(100L);
        int int29 = dateTime28.getMs();
        java.lang.String str30 = dateTime28.toString();
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime(100L);
        double double37 = dateTime34.getDeltaYears(dateTime36);
        int int38 = dateTime34.getHour();
        int int39 = dateTime34.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(100L);
        double double46 = dateTime43.getDeltaYears(dateTime45);
        boolean boolean47 = dateTime45.isWeekday();
        boolean boolean48 = net.ajaskey.common.Utils.sameDate(dateTime34, dateTime45);
        boolean boolean49 = net.ajaskey.common.Utils.sameDate(dateTime28, dateTime34);
        dateTime23.set(dateTime34);
        java.util.Calendar calendar51 = dateTime34.getCal();
        dateTime9.set(calendar51);
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime(calendar51);
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime(100L);
        double double60 = dateTime57.getDeltaYears(dateTime59);
        java.util.Date date61 = dateTime57.getTime();
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime(date61);
        long long63 = dateTime53.getDeltaDays(dateTime62);
        int int64 = dateTime53.getDayOfWeek();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-1972.041095890411d) + "'", double21 == (-1972.041095890411d));
        org.junit.Assert.assertNotNull(date22);
// flaky:         org.junit.Assert.assertEquals(date22.toString(), "Thu Apr 10 10:47:07 MST 2");
        org.junit.Assert.assertNull(dateTime26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "31-Dec-1969" + "'", str30, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-1972.041095890411d) + "'", double37 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 10 + "'", int38 == 10);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 10 + "'", int39 == 10);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-1972.041095890411d) + "'", double46 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(calendar51);
// flaky:         org.junit.Assert.assertEquals(calendar51.toString(), "java.util.GregorianCalendar[time=-62190310372950,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=7,MILLISECOND=50,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-1972.041095890411d) + "'", double60 == (-1972.041095890411d));
        org.junit.Assert.assertNotNull(date61);
// flaky:         org.junit.Assert.assertEquals(date61.toString(), "Thu Apr 10 10:47:07 MST 2");
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 0L + "'", long63 == 0L);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 5 + "'", int64 == 5);
    }

    @Test
    public void test6658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6658");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.lang.String str4 = dateTime3.toFullString();
        int int5 = dateTime3.getHour();
        java.lang.String str6 = dateTime3.getDay();
        java.lang.String str7 = dateTime3.format();
        boolean boolean8 = dateTime3.isNull();
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Thu 10-Apr-0002 10:47:07" + "'", str4, "Thu 10-Apr-0002 10:47:07");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 10 + "'", int5 == 10);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Thursday" + "'", str6, "Thursday");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "BAD-DATE-FORMAT" + "'", str7, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test6659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6659");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        java.text.SimpleDateFormat simpleDateFormat10 = dateTime6.getSdf();
        boolean boolean11 = dateTime1.isLessThanOrEqual(dateTime6);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(dateTime1);
        dateTime12.add(0, (int) (short) 10);
        java.lang.String str16 = dateTime12.toFullString();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str16, "Wed 31-Dec-1969 17:00:00");
    }

    @Test
    public void test6660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6660");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:43:10", "   8.00");
        java.text.SimpleDateFormat simpleDateFormat4 = null;
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat4);
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double8 = dateTime5.getDeltaYears(dateTime7);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean13 = dateTime7.isEqual(dateTime12);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(100L);
        int int16 = dateTime15.getMs();
        boolean boolean17 = dateTime12.isGreaterThanOrEqual(dateTime15);
        java.text.SimpleDateFormat simpleDateFormat19 = null;
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat19);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double23 = dateTime20.getDeltaYears(dateTime22);
        boolean boolean24 = dateTime20.isWeekday();
        boolean boolean25 = dateTime15.isLessThanOrEqual(dateTime20);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(100L);
        dateTime27.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean32 = dateTime27.isWeekday();
        boolean boolean33 = dateTime15.isGreaterThanOrEqual(dateTime27);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean38 = dateTime15.isGreaterThanOrEqual(dateTime37);
        int int39 = dateTime2.getYears(dateTime15);
        java.lang.String str40 = dateTime2.toFullString();
        boolean boolean41 = dateTime2.isWeekday();
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Invalid Time" + "'", str40, "Invalid Time");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test6661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6661");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) 814);
    }

    @Test
    public void test6662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6662");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        dateTime2.set((int) ' ', 0, 11);
        boolean boolean7 = dateTime2.isWeekday();
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(100L);
        int int10 = dateTime9.getMs();
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(100L);
        double double17 = dateTime14.getDeltaYears(dateTime16);
        java.text.SimpleDateFormat simpleDateFormat18 = dateTime14.getSdf();
        boolean boolean19 = dateTime9.isLessThanOrEqual(dateTime14);
        java.util.Date date20 = dateTime14.getTime();
        dateTime2.set(date20);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(date20);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime(date20);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime(date20);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime(100L);
        double double31 = dateTime28.getDeltaYears(dateTime30);
        int int32 = dateTime28.getHour();
        java.text.SimpleDateFormat simpleDateFormat34 = null;
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat34);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double38 = dateTime35.getDeltaYears(dateTime37);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean43 = dateTime37.isEqual(dateTime42);
        java.util.Calendar calendar44 = dateTime37.getCal();
        dateTime28.set(calendar44);
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime(calendar44);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime(calendar44);
        boolean boolean48 = dateTime24.sameDate(dateTime47);
        int int49 = dateTime24.getMs();
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime(dateTime24);
        java.text.SimpleDateFormat simpleDateFormat52 = null;
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat52);
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double56 = dateTime53.getDeltaYears(dateTime55);
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean61 = dateTime55.isEqual(dateTime60);
        java.util.Calendar calendar62 = dateTime55.getCal();
        java.lang.String str63 = dateTime55.format();
        net.ajaskey.common.DateTime dateTime64 = null;
        long long65 = dateTime55.getDeltaDays(dateTime64);
        int int66 = dateTime55.getSecond();
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime72 = new net.ajaskey.common.DateTime(100L);
        double double73 = dateTime70.getDeltaYears(dateTime72);
        java.text.SimpleDateFormat simpleDateFormat75 = null;
        net.ajaskey.common.DateTime dateTime76 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat75);
        net.ajaskey.common.DateTime dateTime78 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double79 = dateTime76.getDeltaYears(dateTime78);
        boolean boolean80 = dateTime76.isWeekday();
        boolean boolean81 = dateTime70.sameDate(dateTime76);
        int int82 = dateTime76.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime83 = dateTime55.copy(dateTime76);
        java.util.Date date84 = dateTime55.getTime();
        java.util.Date date85 = dateTime55.getTime();
        net.ajaskey.common.DateTime dateTime86 = new net.ajaskey.common.DateTime(date85);
        dateTime24.set(date85);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-1972.041095890411d) + "'", double17 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(date20);
// flaky:         org.junit.Assert.assertEquals(date20.toString(), "Thu Apr 10 10:47:07 MST 2");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-1972.041095890411d) + "'", double31 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10 + "'", int32 == 10);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(calendar44);
        org.junit.Assert.assertEquals(calendar44.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + 145 + "'", int49 == 145);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(calendar62);
        org.junit.Assert.assertEquals(calendar62.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "BAD-DATE-FORMAT" + "'", str63, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 0L + "'", long65 == 0L);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-1972.041095890411d) + "'", double73 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertNull(dateTime83);
        org.junit.Assert.assertNotNull(date84);
        org.junit.Assert.assertEquals(date84.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertNotNull(date85);
        org.junit.Assert.assertEquals(date85.toString(), "Wed Dec 31 17:00:00 MST 1969");
    }

    @Test
    public void test6663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6663");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        dateTime2.set((int) ' ', 0, 11);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("5.00", "     10");
        dateTime9.add((int) (short) 0, (int) 'a');
        int int13 = dateTime9.getDayOfMonth();
        java.lang.String str14 = dateTime9.toString();
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime(100L);
        double double21 = dateTime18.getDeltaYears(dateTime20);
        int int22 = dateTime18.getHour();
        java.text.SimpleDateFormat simpleDateFormat24 = null;
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat24);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double28 = dateTime25.getDeltaYears(dateTime27);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean33 = dateTime27.isEqual(dateTime32);
        java.util.Calendar calendar34 = dateTime27.getCal();
        java.lang.String str35 = dateTime27.format();
        net.ajaskey.common.DateTime dateTime36 = null;
        long long37 = dateTime27.getDeltaDays(dateTime36);
        int int38 = dateTime27.getSecond();
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime(100L);
        double double45 = dateTime42.getDeltaYears(dateTime44);
        java.text.SimpleDateFormat simpleDateFormat47 = null;
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat47);
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double51 = dateTime48.getDeltaYears(dateTime50);
        boolean boolean52 = dateTime48.isWeekday();
        boolean boolean53 = dateTime42.sameDate(dateTime48);
        int int54 = dateTime48.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime55 = dateTime27.copy(dateTime48);
        dateTime18.set(dateTime48);
        boolean boolean57 = dateTime9.isGreaterThan(dateTime48);
        boolean boolean58 = net.ajaskey.common.Utils.sameDate(dateTime2, dateTime48);
        java.lang.Class<?> wildcardClass59 = dateTime48.getClass();
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-1972.041095890411d) + "'", double21 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 10 + "'", int22 == 10);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(calendar34);
        org.junit.Assert.assertEquals(calendar34.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "BAD-DATE-FORMAT" + "'", str35, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-1972.041095890411d) + "'", double45 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNull(dateTime55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test6664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6664");
        java.util.zip.ZipOutputStream zipOutputStream1 = null;
        // The following exception was thrown during execution in test generation
        try {
            net.ajaskey.common.Utils.writeToZipFile("                                             719,795", zipOutputStream1);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:                                              719,795 (The system cannot find the file specified)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
    }

    @Test
    public void test6665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6665");
        net.ajaskey.common.TextUtils.printline("                              10");
    }

    @Test
    public void test6666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6666");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("10-Apr-0002", "    0");
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        dateTime8.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str13 = dateTime8.getMonth();
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(100L);
        dateTime15.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str20 = dateTime15.getMonth();
        int int21 = dateTime15.getMs();
        net.ajaskey.common.DateTime dateTime22 = dateTime8.copy(dateTime15);
        dateTime6.set(dateTime8);
        dateTime6.setFirstWorkDay();
        boolean boolean25 = net.ajaskey.common.Utils.sameMonth(dateTime2, dateTime6);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(3, 0, 10);
        int int30 = dateTime29.getSecond();
        java.util.Date date31 = dateTime29.getTime();
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime(date31);
        dateTime2.set(date31);
        dateTime2.set(98, 41, 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "January" + "'", str13, "January");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "January" + "'", str20, "January");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        org.junit.Assert.assertNotNull(dateTime22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 7 + "'", int30 == 7);
        org.junit.Assert.assertNotNull(date31);
// flaky:         org.junit.Assert.assertEquals(date31.toString(), "Wed Jan 10 10:47:07 MST 3");
    }

    @Test
    public void test6667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6667");
        java.text.SimpleDateFormat simpleDateFormat2 = null;
        java.text.SimpleDateFormat simpleDateFormat3 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime("January", simpleDateFormat2, simpleDateFormat3);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime("100.00", simpleDateFormat2);
        java.lang.String str7 = dateTime5.format("");
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("5.00", "     10");
        boolean boolean11 = net.ajaskey.common.Utils.sameMonth(dateTime5, dateTime10);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(100L);
        boolean boolean14 = dateTime13.isWeekday();
        long long15 = dateTime5.getDeltaDays(dateTime13);
        java.lang.String str16 = dateTime13.getMonth();
        dateTime13.set(219, 439, (-1969));
        org.junit.Assert.assertNotNull(simpleDateFormat3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "BAD-DATE-FORMAT" + "'", str7, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "December" + "'", str16, "December");
    }

    @Test
    public void test6668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6668");
        java.lang.String str1 = net.ajaskey.common.Utils.getFromUrl("              26");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
    }

    @Test
    public void test6669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6669");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        dateTime5.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str10 = dateTime5.getMonth();
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(100L);
        dateTime12.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str17 = dateTime12.getMonth();
        int int18 = dateTime12.getMs();
        net.ajaskey.common.DateTime dateTime19 = dateTime5.copy(dateTime12);
        dateTime3.set(dateTime5);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(dateTime5);
        net.ajaskey.common.DateTime dateTime23 = dateTime21.parse("UNKNOWN");
        java.util.Date date24 = dateTime21.getTime();
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime(date24);
        java.lang.String str26 = dateTime25.toString();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "January" + "'", str10, "January");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "January" + "'", str17, "January");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        org.junit.Assert.assertNotNull(dateTime19);
        org.junit.Assert.assertNull(dateTime23);
        org.junit.Assert.assertNotNull(date24);
        org.junit.Assert.assertEquals(date24.toString(), "Sat Jan 04 17:00:00 MST 100");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "04-Jan-0100" + "'", str26, "04-Jan-0100");
    }

    @Test
    public void test6670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6670");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        java.text.SimpleDateFormat simpleDateFormat7 = dateTime3.getSdf();
        java.lang.String str8 = dateTime3.getMonth();
        int int9 = dateTime3.getYear();
        java.util.Date date10 = null;
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(date10);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(100L);
        double double18 = dateTime15.getDeltaYears(dateTime17);
        int int19 = dateTime15.getHour();
        java.text.SimpleDateFormat simpleDateFormat21 = null;
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat21);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double25 = dateTime22.getDeltaYears(dateTime24);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean30 = dateTime24.isEqual(dateTime29);
        java.util.Calendar calendar31 = dateTime24.getCal();
        dateTime15.set(calendar31);
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime(calendar31);
        net.ajaskey.common.DateTime dateTime34 = dateTime11.copy(dateTime33);
        java.text.SimpleDateFormat simpleDateFormat35 = dateTime33.getSdf();
        dateTime3.set(dateTime33);
        net.ajaskey.common.DateTime dateTime37 = null;
        long long38 = dateTime3.getDeltaDays(dateTime37);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime(0, 41, 31);
        boolean boolean43 = dateTime3.isGreaterThanOrEqual(dateTime42);
        java.lang.String str44 = dateTime42.getDay();
        java.util.Date date45 = dateTime42.getTime();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "April" + "'", str8, "April");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1972.041095890411d) + "'", double18 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(calendar31);
        org.junit.Assert.assertEquals(calendar31.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(dateTime34);
        org.junit.Assert.assertNull(simpleDateFormat35);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Sunday" + "'", str44, "Sunday");
        org.junit.Assert.assertNotNull(date45);
// flaky:         org.junit.Assert.assertEquals(date45.toString(), "Sun Jul 01 10:47:07 MST 3");
    }

    @Test
    public void test6671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6671");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("5.00", "     10");
        dateTime2.add((int) (short) 0, (int) 'a');
        int int6 = dateTime2.getDayOfMonth();
        int int7 = dateTime2.getDayOfWeek();
        int int8 = dateTime2.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(3, 0, 10);
        int int13 = dateTime12.getSecond();
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:43:10", "   8.00");
        long long17 = dateTime12.getDeltaDays(dateTime16);
        dateTime2.set(dateTime12);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime(100L);
        int int21 = dateTime20.getMs();
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(100L);
        double double28 = dateTime25.getDeltaYears(dateTime27);
        java.text.SimpleDateFormat simpleDateFormat29 = dateTime25.getSdf();
        boolean boolean30 = dateTime20.isLessThanOrEqual(dateTime25);
        java.text.SimpleDateFormat simpleDateFormat32 = null;
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat32);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double36 = dateTime33.getDeltaYears(dateTime35);
        boolean boolean37 = dateTime33.isWeekday();
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long42 = dateTime33.getDeltaDays(dateTime41);
        long long43 = dateTime20.getDeltaDays(dateTime41);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat49 = null;
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat49);
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double53 = dateTime50.getDeltaYears(dateTime52);
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean58 = dateTime52.isEqual(dateTime57);
        java.util.Calendar calendar59 = dateTime52.getCal();
        boolean boolean60 = dateTime47.isLessThan(dateTime52);
        boolean boolean61 = net.ajaskey.common.Utils.sameDate(dateTime20, dateTime47);
        int int62 = dateTime47.getMinute();
        boolean boolean63 = dateTime12.isLessThanOrEqual(dateTime47);
        boolean boolean64 = dateTime47.isNull();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 7 + "'", int13 == 7);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + (-1972.041095890411d) + "'", double28 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 719795L + "'", long43 == 719795L);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(calendar59);
        org.junit.Assert.assertEquals(calendar59.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int62 + "' != '" + 47 + "'", int62 == 47);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test6672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6672");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(100L);
        boolean boolean4 = dateTime3.isWeekday();
        java.lang.String str5 = dateTime3.getMonth();
        dateTime3.add(7, 10);
        java.text.SimpleDateFormat simpleDateFormat11 = null;
        java.text.SimpleDateFormat simpleDateFormat12 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("January", simpleDateFormat11, simpleDateFormat12);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime("100.00", simpleDateFormat11);
        java.text.SimpleDateFormat simpleDateFormat16 = null;
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double20 = dateTime17.getDeltaYears(dateTime19);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean25 = dateTime19.isEqual(dateTime24);
        long long26 = dateTime14.getDeltaDays(dateTime24);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(dateTime14);
        boolean boolean28 = dateTime3.isGreaterThan(dateTime14);
        boolean boolean29 = net.ajaskey.common.Utils.sameDate(dateTime1, dateTime3);
        net.ajaskey.common.DateTime dateTime30 = null;
        long long31 = dateTime1.getDeltaDays(dateTime30);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((int) '#', 25, 262);
        dateTime35.setFirstWorkDay();
        net.ajaskey.common.DateTime dateTime37 = dateTime1.copy(dateTime35);
        dateTime35.set(54, 311, 41);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "December" + "'", str5, "December");
        org.junit.Assert.assertNotNull(simpleDateFormat12);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertNotNull(dateTime37);
    }

    @Test
    public void test6673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6673");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(862, (int) (short) 1, 49);
    }

    @Test
    public void test6674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6674");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) 'a', 1869, (int) (byte) 0);
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(100L);
        double double10 = dateTime7.getDeltaYears(dateTime9);
        java.util.Date date11 = dateTime7.getTime();
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(date11);
        net.ajaskey.common.DateTime dateTime15 = dateTime12.parse("31-Dec-1969", "January");
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(100L);
        int int18 = dateTime17.getMs();
        java.lang.String str19 = dateTime17.toString();
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime(100L);
        double double26 = dateTime23.getDeltaYears(dateTime25);
        int int27 = dateTime23.getHour();
        int int28 = dateTime23.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime(100L);
        double double35 = dateTime32.getDeltaYears(dateTime34);
        boolean boolean36 = dateTime34.isWeekday();
        boolean boolean37 = net.ajaskey.common.Utils.sameDate(dateTime23, dateTime34);
        boolean boolean38 = net.ajaskey.common.Utils.sameDate(dateTime17, dateTime23);
        dateTime12.set(dateTime23);
        java.util.Calendar calendar40 = dateTime23.getCal();
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime(calendar40);
        boolean boolean42 = dateTime3.sameDate(dateTime41);
        java.util.Calendar calendar43 = dateTime3.getCal();
        java.util.Calendar calendar44 = dateTime3.getCal();
        java.lang.String str45 = dateTime3.format();
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1972.041095890411d) + "'", double10 == (-1972.041095890411d));
        org.junit.Assert.assertNotNull(date11);
// flaky:         org.junit.Assert.assertEquals(date11.toString(), "Thu Apr 10 10:47:07 MST 2");
        org.junit.Assert.assertNull(dateTime15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "31-Dec-1969" + "'", str19, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-1972.041095890411d) + "'", double26 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 10 + "'", int27 == 10);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 10 + "'", int28 == 10);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-1972.041095890411d) + "'", double35 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(calendar40);
// flaky:         org.junit.Assert.assertEquals(calendar40.toString(), "java.util.GregorianCalendar[time=-62190310372625,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=7,MILLISECOND=375,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(calendar43);
// flaky:         org.junit.Assert.assertEquals(calendar43.toString(), "java.util.GregorianCalendar[time=-54191225572626,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=252,MONTH=8,WEEK_OF_YEAR=40,WEEK_OF_MONTH=5,DAY_OF_MONTH=30,DAY_OF_YEAR=274,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=5,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=7,MILLISECOND=374,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(calendar44);
// flaky:         org.junit.Assert.assertEquals(calendar44.toString(), "java.util.GregorianCalendar[time=-54191225572626,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=252,MONTH=8,WEEK_OF_YEAR=40,WEEK_OF_MONTH=5,DAY_OF_MONTH=30,DAY_OF_YEAR=274,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=5,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=7,MILLISECOND=374,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "BAD-DATE-FORMAT" + "'", str45, "BAD-DATE-FORMAT");
    }

    @Test
    public void test6675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6675");
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        int int6 = dateTime5.getMs();
        java.text.SimpleDateFormat simpleDateFormat7 = net.ajaskey.common.Utils.sdf;
        dateTime5.setSdf(simpleDateFormat7);
        java.text.SimpleDateFormat simpleDateFormat11 = null;
        java.text.SimpleDateFormat simpleDateFormat12 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("January", simpleDateFormat11, simpleDateFormat12);
        java.text.SimpleDateFormat simpleDateFormat16 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("January", simpleDateFormat16);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime("", simpleDateFormat16);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime("", simpleDateFormat12, simpleDateFormat16);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("Thursday", simpleDateFormat7, simpleDateFormat16);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime(100L);
        int int24 = dateTime23.getMs();
        java.text.SimpleDateFormat simpleDateFormat25 = net.ajaskey.common.Utils.sdf;
        dateTime23.setSdf(simpleDateFormat25);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat25);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime("           6", simpleDateFormat16, simpleDateFormat25);
        java.text.SimpleDateFormat simpleDateFormat33 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat35 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat36 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime("", simpleDateFormat35, simpleDateFormat36);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat33, simpleDateFormat36);
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime("10-Apr-0002", simpleDateFormat36);
        java.text.SimpleDateFormat simpleDateFormat42 = null;
        java.text.SimpleDateFormat simpleDateFormat43 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime("January", simpleDateFormat42, simpleDateFormat43);
        java.text.SimpleDateFormat simpleDateFormat47 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime("January", simpleDateFormat47);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime("", simpleDateFormat47);
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime("", simpleDateFormat43, simpleDateFormat47);
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime("January                                                                                               52.00                                                                                               52.00                                                                                               52.00                                                                                               52.00hi!                                                                                               52.00", simpleDateFormat36, simpleDateFormat47);
        java.text.SimpleDateFormat simpleDateFormat53 = null;
        java.text.SimpleDateFormat simpleDateFormat54 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime("January", simpleDateFormat53, simpleDateFormat54);
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime("December", simpleDateFormat47, simpleDateFormat54);
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime("January          264          264                                                                                               52.00          264hi!          264", simpleDateFormat25, simpleDateFormat54);
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime("Fri 02-Jan-0001 17:00:00", simpleDateFormat25);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat7);
        org.junit.Assert.assertNotNull(simpleDateFormat12);
        org.junit.Assert.assertNotNull(simpleDateFormat16);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat25);
        org.junit.Assert.assertNotNull(simpleDateFormat33);
        org.junit.Assert.assertNotNull(simpleDateFormat35);
        org.junit.Assert.assertNotNull(simpleDateFormat36);
        org.junit.Assert.assertNotNull(simpleDateFormat43);
        org.junit.Assert.assertNotNull(simpleDateFormat47);
        org.junit.Assert.assertNotNull(simpleDateFormat54);
    }

    @Test
    public void test6676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6676");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        boolean boolean6 = dateTime2.isWeekday();
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long11 = dateTime2.getDeltaDays(dateTime10);
        int int12 = dateTime10.getYear();
        int int13 = dateTime10.getSecond();
        int int14 = dateTime10.getDayOfYear();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 7 + "'", int13 == 7);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
    }

    @Test
    public void test6677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6677");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(182, 881, 959);
        java.lang.String str5 = dateTime3.format("                                                                                                                                                                                                                                                                                                             1");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "                                                                                                                                                                                                                                                                                                             1" + "'", str5, "                                                                                                                                                                                                                                                                                                             1");
    }

    @Test
    public void test6678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6678");
        net.ajaskey.common.DateTime dateTime0 = null;
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(dateTime0);
        dateTime1.set(42, 10, 10);
        java.util.Date date6 = dateTime1.getTime();
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat12 = null;
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat12);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double16 = dateTime13.getDeltaYears(dateTime15);
        boolean boolean17 = dateTime10.isLessThan(dateTime15);
        java.lang.String str18 = dateTime15.toFullString();
        int int19 = dateTime15.getSecond();
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime(dateTime15);
        java.text.SimpleDateFormat simpleDateFormat22 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat23 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("", simpleDateFormat22, simpleDateFormat23);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime(100L);
        double double31 = dateTime28.getDeltaYears(dateTime30);
        int int32 = dateTime28.getHour();
        java.text.SimpleDateFormat simpleDateFormat34 = null;
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat34);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double38 = dateTime35.getDeltaYears(dateTime37);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean43 = dateTime37.isEqual(dateTime42);
        java.util.Calendar calendar44 = dateTime37.getCal();
        dateTime28.set(calendar44);
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime(calendar44);
        boolean boolean47 = dateTime24.isLessThan(dateTime46);
        double double48 = dateTime15.getDeltaYears(dateTime46);
        net.ajaskey.common.DateTime dateTime49 = dateTime1.copy(dateTime46);
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        dateTime53.add(2, 12);
        java.util.Date date57 = dateTime53.getTime();
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime(date57);
        dateTime46.set(date57);
        java.text.SimpleDateFormat simpleDateFormat60 = dateTime46.getSdf();
        boolean boolean61 = dateTime46.isNull();
        org.junit.Assert.assertNotNull(date6);
// flaky:         org.junit.Assert.assertEquals(date6.toString(), "Sat Nov 10 10:47:07 MST 42");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str18, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(simpleDateFormat22);
        org.junit.Assert.assertNotNull(simpleDateFormat23);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-1972.041095890411d) + "'", double31 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10 + "'", int32 == 10);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(calendar44);
        org.junit.Assert.assertEquals(calendar44.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(dateTime49);
        org.junit.Assert.assertNotNull(date57);
// flaky:         org.junit.Assert.assertEquals(date57.toString(), "Sat Apr 10 10:47:07 MST 1");
        org.junit.Assert.assertNull(simpleDateFormat60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test6679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6679");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        int int7 = dateTime3.getHour();
        dateTime3.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat12 = null;
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat12);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double16 = dateTime13.getDeltaYears(dateTime15);
        boolean boolean17 = dateTime3.isEqual(dateTime15);
        java.lang.String str18 = dateTime15.toString();
        java.util.Calendar calendar19 = dateTime15.getCal();
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime(calendar19);
        net.ajaskey.common.DateTime dateTime21 = null;
        boolean boolean22 = dateTime20.isGreaterThanOrEqual(dateTime21);
        java.lang.String str23 = dateTime20.getMonth();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "31-Dec-1969" + "'", str18, "31-Dec-1969");
        org.junit.Assert.assertNotNull(calendar19);
        org.junit.Assert.assertEquals(calendar19.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "December" + "'", str23, "December");
    }

    @Test
    public void test6680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6680");
        java.util.zip.ZipOutputStream zipOutputStream1 = null;
        // The following exception was thrown during execution in test generation
        try {
            net.ajaskey.common.Utils.writeToZipFile("          264", zipOutputStream1);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:           264 (Access is denied)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
    }

    @Test
    public void test6681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6681");
        java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readTextFile("                               36", false);
        net.ajaskey.common.TextUtils.print(strList2);
        java.lang.String str4 = net.ajaskey.common.TextUtils.toString(strList2);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
    }

    @Test
    public void test6682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6682");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) (-2019));
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(100L);
        int int4 = dateTime3.getMs();
        java.lang.String str5 = dateTime3.toString();
        dateTime3.set(25, (-1), (int) (short) 10);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(100L);
        double double16 = dateTime13.getDeltaYears(dateTime15);
        boolean boolean17 = dateTime15.isWeekday();
        boolean boolean18 = net.ajaskey.common.Utils.sameMonth(dateTime3, dateTime15);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat24 = null;
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat24);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double28 = dateTime25.getDeltaYears(dateTime27);
        boolean boolean29 = dateTime22.isLessThan(dateTime27);
        java.text.SimpleDateFormat simpleDateFormat31 = null;
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat31);
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double35 = dateTime32.getDeltaYears(dateTime34);
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean40 = dateTime34.isEqual(dateTime39);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime(100L);
        int int43 = dateTime42.getMs();
        boolean boolean44 = dateTime39.isGreaterThanOrEqual(dateTime42);
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime(100L);
        dateTime46.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime(100L);
        double double57 = dateTime54.getDeltaYears(dateTime56);
        boolean boolean58 = dateTime56.isWeekday();
        java.util.Date date59 = dateTime56.getTime();
        dateTime46.set(dateTime56);
        boolean boolean61 = net.ajaskey.common.Utils.sameDate(dateTime39, dateTime46);
        boolean boolean62 = dateTime39.isNull();
        double double63 = dateTime27.getDeltaYears(dateTime39);
        boolean boolean64 = dateTime3.isLessThan(dateTime27);
        boolean boolean65 = dateTime1.sameDate(dateTime27);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "31-Dec-1969" + "'", str5, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-1972.041095890411d) + "'", double16 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-1972.041095890411d) + "'", double57 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(date59);
        org.junit.Assert.assertEquals(date59.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1972.041095890411d + "'", double63 == 1972.041095890411d);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test6683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6683");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        java.lang.String str3 = dateTime1.toString();
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(100L);
        double double10 = dateTime7.getDeltaYears(dateTime9);
        int int11 = dateTime7.getHour();
        int int12 = dateTime7.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(100L);
        double double19 = dateTime16.getDeltaYears(dateTime18);
        boolean boolean20 = dateTime18.isWeekday();
        boolean boolean21 = net.ajaskey.common.Utils.sameDate(dateTime7, dateTime18);
        boolean boolean22 = net.ajaskey.common.Utils.sameDate(dateTime1, dateTime7);
        java.util.Date date23 = dateTime7.getTime();
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime(date23);
        java.lang.String str25 = dateTime24.toFullString();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "31-Dec-1969" + "'", str3, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1972.041095890411d) + "'", double10 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-1972.041095890411d) + "'", double19 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(date23);
// flaky:         org.junit.Assert.assertEquals(date23.toString(), "Thu Apr 10 10:47:07 MST 2");
// flaky:         org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Thu 10-Apr-0002 10:47:07" + "'", str25, "Thu 10-Apr-0002 10:47:07");
    }

    @Test
    public void test6684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6684");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(100L);
        double double13 = dateTime10.getDeltaYears(dateTime12);
        int int14 = dateTime10.getHour();
        int int15 = dateTime10.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(100L);
        double double22 = dateTime19.getDeltaYears(dateTime21);
        boolean boolean23 = dateTime21.isWeekday();
        boolean boolean24 = net.ajaskey.common.Utils.sameDate(dateTime10, dateTime21);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(100L);
        dateTime26.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime(100L);
        double double37 = dateTime34.getDeltaYears(dateTime36);
        boolean boolean38 = dateTime36.isWeekday();
        java.util.Date date39 = dateTime36.getTime();
        dateTime26.set(dateTime36);
        int int41 = dateTime26.getYear();
        boolean boolean42 = dateTime21.isGreaterThanOrEqual(dateTime26);
        boolean boolean43 = dateTime3.sameDate(dateTime21);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime(100L);
        double double50 = dateTime47.getDeltaYears(dateTime49);
        int int51 = dateTime47.getHour();
        java.text.SimpleDateFormat simpleDateFormat53 = null;
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat53);
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double57 = dateTime54.getDeltaYears(dateTime56);
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean62 = dateTime56.isEqual(dateTime61);
        java.util.Calendar calendar63 = dateTime56.getCal();
        dateTime47.set(calendar63);
        dateTime3.set(calendar63);
        java.text.SimpleDateFormat simpleDateFormat66 = dateTime3.getSdf();
        int int67 = dateTime3.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime(3, 0, 10);
        net.ajaskey.common.DateTime dateTime72 = dateTime3.copy(dateTime71);
        int int73 = dateTime3.getSecond();
        java.lang.String str74 = dateTime3.getDay();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-1972.041095890411d) + "'", double13 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-1972.041095890411d) + "'", double22 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-1972.041095890411d) + "'", double37 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(date39);
        org.junit.Assert.assertEquals(date39.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1969 + "'", int41 == 1969);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-1972.041095890411d) + "'", double50 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 10 + "'", int51 == 10);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(calendar63);
        org.junit.Assert.assertEquals(calendar63.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNull(simpleDateFormat66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 31 + "'", int67 == 31);
        org.junit.Assert.assertNotNull(dateTime72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Wednesday" + "'", str74, "Wednesday");
    }

    @Test
    public void test6685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6685");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        dateTime3.add(2, 12);
        java.util.Date date7 = dateTime3.getTime();
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(date7);
        dateTime8.setFirstWorkDay();
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(100L);
        long long16 = dateTime13.getDeltaDays(dateTime15);
        int int17 = dateTime13.getHour();
        java.lang.String str18 = dateTime13.getMonth();
        int int19 = dateTime8.getYears(dateTime13);
        java.lang.Class<?> wildcardClass20 = dateTime8.getClass();
        org.junit.Assert.assertNotNull(date7);
// flaky:         org.junit.Assert.assertEquals(date7.toString(), "Sat Apr 10 10:47:07 MST 1");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-719795L) + "'", long16 == (-719795L));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10 + "'", int17 == 10);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "April" + "'", str18, "April");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test6686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6686");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("5.00", "     10");
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        int int10 = dateTime6.getHour();
        java.text.SimpleDateFormat simpleDateFormat12 = null;
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat12);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double16 = dateTime13.getDeltaYears(dateTime15);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean21 = dateTime15.isEqual(dateTime20);
        java.util.Calendar calendar22 = dateTime15.getCal();
        dateTime6.set(calendar22);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime(calendar22);
        dateTime2.set(calendar22);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(calendar22);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(calendar22);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(calendar22);
        int int29 = dateTime28.getMinute();
        boolean boolean30 = dateTime28.isNull();
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((int) '#', 25, 262);
        dateTime34.setFirstWorkDay();
        int int36 = dateTime28.getYears(dateTime34);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(calendar22);
        org.junit.Assert.assertEquals(calendar22.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1933) + "'", int36 == (-1933));
    }

    @Test
    public void test6687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6687");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime("                                                                                              100", "100");
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime(100L);
        int int7 = dateTime6.getMs();
        java.text.SimpleDateFormat simpleDateFormat8 = net.ajaskey.common.Utils.sdf;
        dateTime6.setSdf(simpleDateFormat8);
        java.text.SimpleDateFormat simpleDateFormat10 = net.ajaskey.common.Utils.sdfFull;
        dateTime6.setSdf(simpleDateFormat10);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime("Mon 10-Apr-0002 00:00:00", simpleDateFormat10);
        dateTime3.setSdf(simpleDateFormat10);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime("                             365", simpleDateFormat10);
        java.lang.String str15 = dateTime14.toString();
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat8);
        org.junit.Assert.assertNotNull(simpleDateFormat10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test6688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6688");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        java.lang.String str3 = dateTime1.toString();
        java.util.Date date4 = dateTime1.getTime();
        int int5 = dateTime1.getDayOfYear();
        dateTime1.set((-1870), 10, (int) (short) 0);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(3, 0, 10);
        dateTime13.setFirstWorkDay();
        boolean boolean15 = dateTime1.isLessThan(dateTime13);
        java.lang.String str16 = dateTime13.toFullString();
        int int17 = dateTime13.getMs();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "31-Dec-1969" + "'", str3, "31-Dec-1969");
        org.junit.Assert.assertNotNull(date4);
        org.junit.Assert.assertEquals(date4.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 365 + "'", int5 == 365);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Wed 10-Jan-0003 10:47:07" + "'", str16, "Wed 10-Jan-0003 10:47:07");
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 608 + "'", int17 == 608);
    }

    @Test
    public void test6689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6689");
        java.text.SimpleDateFormat simpleDateFormat3 = null;
        java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime("January", simpleDateFormat3, simpleDateFormat4);
        java.text.SimpleDateFormat simpleDateFormat8 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("January", simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("", simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime("", simpleDateFormat4, simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((-59011286399900L));
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(100L);
        int int17 = dateTime16.getMs();
        boolean boolean18 = dateTime16.isNull();
        java.util.Calendar calendar19 = dateTime16.getCal();
        int int20 = dateTime14.getYears(dateTime16);
        java.lang.String str21 = dateTime14.toFullString();
        java.text.SimpleDateFormat simpleDateFormat27 = null;
        java.text.SimpleDateFormat simpleDateFormat28 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime("January", simpleDateFormat27, simpleDateFormat28);
        java.text.SimpleDateFormat simpleDateFormat32 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime("January", simpleDateFormat32);
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime("", simpleDateFormat32);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("", simpleDateFormat28, simpleDateFormat32);
        java.text.SimpleDateFormat simpleDateFormat38 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat40 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat41 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime("", simpleDateFormat40, simpleDateFormat41);
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat38, simpleDateFormat41);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat50 = null;
        java.text.SimpleDateFormat simpleDateFormat51 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime("January", simpleDateFormat50, simpleDateFormat51);
        java.text.SimpleDateFormat simpleDateFormat55 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime("January", simpleDateFormat55);
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime("", simpleDateFormat55);
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime("", simpleDateFormat51, simpleDateFormat55);
        dateTime47.setSdf(simpleDateFormat51);
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime("", simpleDateFormat41, simpleDateFormat51);
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime("   -18,438", simpleDateFormat32, simpleDateFormat51);
        java.text.SimpleDateFormat simpleDateFormat66 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat67 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime("", simpleDateFormat66, simpleDateFormat67);
        java.text.SimpleDateFormat simpleDateFormat70 = null;
        java.text.SimpleDateFormat simpleDateFormat71 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime72 = new net.ajaskey.common.DateTime("January", simpleDateFormat70, simpleDateFormat71);
        net.ajaskey.common.DateTime dateTime73 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat66, simpleDateFormat71);
        java.text.SimpleDateFormat simpleDateFormat76 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat77 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime78 = new net.ajaskey.common.DateTime("", simpleDateFormat76, simpleDateFormat77);
        net.ajaskey.common.DateTime dateTime80 = new net.ajaskey.common.DateTime(100L);
        int int81 = dateTime80.getMs();
        java.text.SimpleDateFormat simpleDateFormat82 = net.ajaskey.common.Utils.sdf;
        dateTime80.setSdf(simpleDateFormat82);
        net.ajaskey.common.DateTime dateTime84 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat77, simpleDateFormat82);
        net.ajaskey.common.DateTime dateTime85 = new net.ajaskey.common.DateTime("                             100", simpleDateFormat71, simpleDateFormat77);
        net.ajaskey.common.DateTime dateTime86 = new net.ajaskey.common.DateTime("11", simpleDateFormat71);
        net.ajaskey.common.DateTime dateTime87 = new net.ajaskey.common.DateTime("10-Apr-0002", simpleDateFormat51, simpleDateFormat71);
        net.ajaskey.common.DateTime dateTime88 = new net.ajaskey.common.DateTime("", simpleDateFormat51);
        dateTime14.setSdf(simpleDateFormat51);
        net.ajaskey.common.DateTime dateTime90 = new net.ajaskey.common.DateTime("Wed 12-Apr-0139 10:44:20", simpleDateFormat51);
        net.ajaskey.common.DateTime dateTime91 = new net.ajaskey.common.DateTime("                                                                                                0.00", simpleDateFormat4, simpleDateFormat51);
        org.junit.Assert.assertNotNull(simpleDateFormat4);
        org.junit.Assert.assertNotNull(simpleDateFormat8);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(calendar19);
        org.junit.Assert.assertEquals(calendar19.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1869 + "'", int20 == 1869);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Sat 04-Jan-0100 17:00:00" + "'", str21, "Sat 04-Jan-0100 17:00:00");
        org.junit.Assert.assertNotNull(simpleDateFormat28);
        org.junit.Assert.assertNotNull(simpleDateFormat32);
        org.junit.Assert.assertNotNull(simpleDateFormat38);
        org.junit.Assert.assertNotNull(simpleDateFormat40);
        org.junit.Assert.assertNotNull(simpleDateFormat41);
        org.junit.Assert.assertNotNull(simpleDateFormat51);
        org.junit.Assert.assertNotNull(simpleDateFormat55);
        org.junit.Assert.assertNotNull(simpleDateFormat66);
        org.junit.Assert.assertNotNull(simpleDateFormat67);
        org.junit.Assert.assertNotNull(simpleDateFormat71);
        org.junit.Assert.assertNotNull(simpleDateFormat76);
        org.junit.Assert.assertNotNull(simpleDateFormat77);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 100 + "'", int81 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat82);
    }

    @Test
    public void test6690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6690");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("5.00", "     10");
        dateTime2.add((int) (short) 0, (int) 'a');
        int int6 = dateTime2.getDayOfMonth();
        java.lang.String str7 = dateTime2.toString();
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(100L);
        double double14 = dateTime11.getDeltaYears(dateTime13);
        int int15 = dateTime11.getHour();
        java.text.SimpleDateFormat simpleDateFormat17 = null;
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat17);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double21 = dateTime18.getDeltaYears(dateTime20);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean26 = dateTime20.isEqual(dateTime25);
        java.util.Calendar calendar27 = dateTime20.getCal();
        java.lang.String str28 = dateTime20.format();
        net.ajaskey.common.DateTime dateTime29 = null;
        long long30 = dateTime20.getDeltaDays(dateTime29);
        int int31 = dateTime20.getSecond();
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(100L);
        double double38 = dateTime35.getDeltaYears(dateTime37);
        java.text.SimpleDateFormat simpleDateFormat40 = null;
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat40);
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double44 = dateTime41.getDeltaYears(dateTime43);
        boolean boolean45 = dateTime41.isWeekday();
        boolean boolean46 = dateTime35.sameDate(dateTime41);
        int int47 = dateTime41.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime48 = dateTime20.copy(dateTime41);
        dateTime11.set(dateTime41);
        boolean boolean50 = dateTime2.isGreaterThan(dateTime41);
        java.text.SimpleDateFormat simpleDateFormat53 = null;
        java.text.SimpleDateFormat simpleDateFormat54 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime("January", simpleDateFormat53, simpleDateFormat54);
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime("100.00", simpleDateFormat53);
        net.ajaskey.common.DateTime dateTime57 = dateTime41.copy(dateTime56);
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime("62,190,310,577,284.00", "33.00");
        dateTime60.set(15, 24, 36);
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime(1, (int) '4', 5);
        boolean boolean69 = dateTime60.isLessThanOrEqual(dateTime68);
        int int70 = dateTime41.getYears(dateTime68);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + (-1972.041095890411d) + "'", double14 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(calendar27);
        org.junit.Assert.assertEquals(calendar27.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "BAD-DATE-FORMAT" + "'", str28, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1972.041095890411d) + "'", double38 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(dateTime48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(simpleDateFormat54);
        org.junit.Assert.assertNull(dateTime57);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
    }

    @Test
    public void test6691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6691");
        java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readGzipFile("           35", true);
        org.junit.Assert.assertNull(strList2);
    }

    @Test
    public void test6692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6692");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        java.text.SimpleDateFormat simpleDateFormat10 = dateTime6.getSdf();
        boolean boolean11 = dateTime1.isLessThanOrEqual(dateTime6);
        boolean boolean12 = dateTime1.isWeekday();
        java.util.Calendar calendar13 = dateTime1.getCal();
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(calendar13);
        int int15 = dateTime14.getDayOfYear();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(calendar13);
        org.junit.Assert.assertEquals(calendar13.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 365 + "'", int15 == 365);
    }

    @Test
    public void test6693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6693");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(7, 31, (int) (short) 1);
        java.text.SimpleDateFormat simpleDateFormat6 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat7 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime("", simpleDateFormat6, simpleDateFormat7);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:42:54", simpleDateFormat6);
        java.text.SimpleDateFormat simpleDateFormat10 = null;
        dateTime9.setSdf(simpleDateFormat10);
        boolean boolean12 = net.ajaskey.common.Utils.sameMonth(dateTime3, dateTime9);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:43:10", "   8.00");
        java.text.SimpleDateFormat simpleDateFormat17 = null;
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat17);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double21 = dateTime18.getDeltaYears(dateTime20);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean26 = dateTime20.isEqual(dateTime25);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(100L);
        int int29 = dateTime28.getMs();
        boolean boolean30 = dateTime25.isGreaterThanOrEqual(dateTime28);
        java.text.SimpleDateFormat simpleDateFormat32 = null;
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat32);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double36 = dateTime33.getDeltaYears(dateTime35);
        boolean boolean37 = dateTime33.isWeekday();
        boolean boolean38 = dateTime28.isLessThanOrEqual(dateTime33);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime(100L);
        dateTime40.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean45 = dateTime40.isWeekday();
        boolean boolean46 = dateTime28.isGreaterThanOrEqual(dateTime40);
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean51 = dateTime28.isGreaterThanOrEqual(dateTime50);
        int int52 = dateTime15.getYears(dateTime28);
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime(100L);
        dateTime54.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime(100L);
        double double65 = dateTime62.getDeltaYears(dateTime64);
        boolean boolean66 = dateTime64.isWeekday();
        java.util.Date date67 = dateTime64.getTime();
        dateTime54.set(dateTime64);
        net.ajaskey.common.DateTime dateTime72 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime74 = new net.ajaskey.common.DateTime(100L);
        double double75 = dateTime72.getDeltaYears(dateTime74);
        int int76 = dateTime72.getHour();
        java.text.SimpleDateFormat simpleDateFormat78 = null;
        net.ajaskey.common.DateTime dateTime79 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat78);
        net.ajaskey.common.DateTime dateTime81 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double82 = dateTime79.getDeltaYears(dateTime81);
        net.ajaskey.common.DateTime dateTime86 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean87 = dateTime81.isEqual(dateTime86);
        java.util.Calendar calendar88 = dateTime81.getCal();
        dateTime72.set(calendar88);
        net.ajaskey.common.DateTime dateTime90 = new net.ajaskey.common.DateTime(calendar88);
        boolean boolean91 = dateTime64.isGreaterThan(dateTime90);
        net.ajaskey.common.DateTime dateTime92 = dateTime28.copy(dateTime90);
        int int93 = dateTime90.getMinute();
        long long94 = dateTime9.getDeltaMilliSeconds(dateTime90);
        org.junit.Assert.assertNotNull(simpleDateFormat6);
        org.junit.Assert.assertNotNull(simpleDateFormat7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-1972.041095890411d) + "'", double65 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(date67);
        org.junit.Assert.assertEquals(date67.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-1972.041095890411d) + "'", double75 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 10 + "'", int76 == 10);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(calendar88);
        org.junit.Assert.assertEquals(calendar88.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(dateTime92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertTrue("'" + long94 + "' != '" + 0L + "'", long94 == 0L);
    }

    @Test
    public void test6694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6694");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        boolean boolean6 = dateTime2.isWeekday();
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long11 = dateTime2.getDeltaDays(dateTime10);
        dateTime10.set((int) (short) -1, (int) (byte) 0, (int) ' ');
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(100L);
        double double22 = dateTime19.getDeltaYears(dateTime21);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(100L);
        double double29 = dateTime26.getDeltaYears(dateTime28);
        int int30 = dateTime26.getHour();
        int int31 = dateTime26.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(100L);
        double double38 = dateTime35.getDeltaYears(dateTime37);
        boolean boolean39 = dateTime37.isWeekday();
        boolean boolean40 = net.ajaskey.common.Utils.sameDate(dateTime26, dateTime37);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime(100L);
        dateTime42.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime(100L);
        double double53 = dateTime50.getDeltaYears(dateTime52);
        boolean boolean54 = dateTime52.isWeekday();
        java.util.Date date55 = dateTime52.getTime();
        dateTime42.set(dateTime52);
        int int57 = dateTime42.getYear();
        boolean boolean58 = dateTime37.isGreaterThanOrEqual(dateTime42);
        boolean boolean59 = dateTime19.sameDate(dateTime37);
        boolean boolean60 = dateTime10.isLessThanOrEqual(dateTime19);
        java.util.Date date61 = dateTime10.getTime();
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime(date61);
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime(date61);
        boolean boolean64 = dateTime63.isWeekday();
        dateTime63.setFirstWorkDay();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-1972.041095890411d) + "'", double22 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-1972.041095890411d) + "'", double29 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10 + "'", int31 == 10);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1972.041095890411d) + "'", double38 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-1972.041095890411d) + "'", double53 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(date55);
        org.junit.Assert.assertEquals(date55.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1969 + "'", int57 == 1969);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(date61);
// flaky:         org.junit.Assert.assertEquals(date61.toString(), "Wed Feb 01 10:47:07 MST 2");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    }

    @Test
    public void test6695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6695");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean10 = dateTime4.isEqual(dateTime9);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(100L);
        int int13 = dateTime12.getMs();
        boolean boolean14 = dateTime9.isGreaterThanOrEqual(dateTime12);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(100L);
        dateTime16.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(100L);
        double double27 = dateTime24.getDeltaYears(dateTime26);
        boolean boolean28 = dateTime26.isWeekday();
        java.util.Date date29 = dateTime26.getTime();
        dateTime16.set(dateTime26);
        boolean boolean31 = net.ajaskey.common.Utils.sameDate(dateTime9, dateTime16);
        boolean boolean32 = dateTime9.isNull();
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime((int) '#', 43, 2);
        boolean boolean37 = dateTime9.sameDate(dateTime36);
        java.text.SimpleDateFormat simpleDateFormat39 = null;
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat39);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double43 = dateTime40.getDeltaYears(dateTime42);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean48 = dateTime42.isEqual(dateTime47);
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime(100L);
        int int51 = dateTime50.getMs();
        boolean boolean52 = dateTime47.isGreaterThanOrEqual(dateTime50);
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime(100L);
        dateTime54.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime(100L);
        double double65 = dateTime62.getDeltaYears(dateTime64);
        boolean boolean66 = dateTime64.isWeekday();
        java.util.Date date67 = dateTime64.getTime();
        dateTime54.set(dateTime64);
        boolean boolean69 = net.ajaskey.common.Utils.sameDate(dateTime47, dateTime54);
        int int70 = dateTime47.getDayOfYear();
        dateTime47.set((int) 'a', 152, (int) (short) 100);
        double double75 = dateTime9.getDeltaYears(dateTime47);
        java.text.SimpleDateFormat simpleDateFormat77 = null;
        net.ajaskey.common.DateTime dateTime78 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat77);
        java.util.Calendar calendar79 = dateTime78.getCal();
        int int80 = dateTime78.getMinute();
        boolean boolean81 = dateTime9.sameDate(dateTime78);
        java.lang.String str82 = dateTime9.toString();
        java.lang.String str83 = dateTime9.getMonth();
        java.util.Calendar calendar84 = dateTime9.getCal();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-1972.041095890411d) + "'", double27 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(date29);
        org.junit.Assert.assertEquals(date29.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 100 + "'", int51 == 100);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-1972.041095890411d) + "'", double65 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(date67);
        org.junit.Assert.assertEquals(date67.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 100 + "'", int70 == 100);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 82.3890410958904d + "'", double75 == 82.3890410958904d);
        org.junit.Assert.assertNull(calendar79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "10-Apr-0002" + "'", str82, "10-Apr-0002");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "April" + "'", str83, "April");
        org.junit.Assert.assertNotNull(calendar84);
// flaky:         org.junit.Assert.assertEquals(calendar84.toString(), "java.util.GregorianCalendar[time=-62190310372254,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=7,MILLISECOND=746,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    }

    @Test
    public void test6696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6696");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(941, 459, 1969);
        java.lang.String str5 = dateTime3.format("");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    }

    @Test
    public void test6697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6697");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) (short) 0);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime("5.00", "     10");
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime(100L);
        double double11 = dateTime8.getDeltaYears(dateTime10);
        int int12 = dateTime8.getHour();
        java.text.SimpleDateFormat simpleDateFormat14 = null;
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat14);
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double18 = dateTime15.getDeltaYears(dateTime17);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean23 = dateTime17.isEqual(dateTime22);
        java.util.Calendar calendar24 = dateTime17.getCal();
        dateTime8.set(calendar24);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(calendar24);
        dateTime4.set(calendar24);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(100L);
        int int30 = dateTime29.getMs();
        java.lang.String str31 = dateTime29.toString();
        java.lang.String str33 = dateTime29.format("         1");
        net.ajaskey.common.DateTime dateTime34 = dateTime4.copy(dateTime29);
        int int35 = dateTime4.getMs();
        boolean boolean36 = dateTime4.isWeekday();
        boolean boolean37 = dateTime1.isLessThanOrEqual(dateTime4);
        java.util.Date date38 = null;
        dateTime4.set(date38);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + (-1972.041095890411d) + "'", double11 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(calendar24);
        org.junit.Assert.assertEquals(calendar24.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "31-Dec-1969" + "'", str31, "31-Dec-1969");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "         1" + "'", str33, "         1");
        org.junit.Assert.assertNotNull(dateTime34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test6698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6698");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        java.lang.String str3 = dateTime1.toString();
        int int4 = dateTime1.getDayOfYear();
        java.text.SimpleDateFormat simpleDateFormat6 = null;
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat6);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double10 = dateTime7.getDeltaYears(dateTime9);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean15 = dateTime9.isEqual(dateTime14);
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(100L);
        int int18 = dateTime17.getMs();
        boolean boolean19 = dateTime14.isGreaterThanOrEqual(dateTime17);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(100L);
        dateTime21.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(100L);
        double double32 = dateTime29.getDeltaYears(dateTime31);
        boolean boolean33 = dateTime31.isWeekday();
        java.util.Date date34 = dateTime31.getTime();
        dateTime21.set(dateTime31);
        boolean boolean36 = net.ajaskey.common.Utils.sameDate(dateTime14, dateTime21);
        dateTime14.add((int) '#', 6);
        boolean boolean40 = dateTime1.sameDate(dateTime14);
        java.text.SimpleDateFormat simpleDateFormat42 = null;
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat42);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double46 = dateTime43.getDeltaYears(dateTime45);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime(dateTime43);
        boolean boolean48 = dateTime14.sameDate(dateTime47);
        int int49 = dateTime47.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime(12, 42, (int) (byte) 1);
        java.util.Calendar calendar54 = dateTime53.getCal();
        int int55 = dateTime47.getYears(dateTime53);
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime("January", "100.00");
        int int59 = dateTime58.getDayOfWeek();
        double double60 = dateTime47.getDeltaYears(dateTime58);
        int int61 = dateTime58.getDayOfWeek();
        java.lang.String str62 = dateTime58.format();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "31-Dec-1969" + "'", str3, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 365 + "'", int4 == 365);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-1972.041095890411d) + "'", double32 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(date34);
        org.junit.Assert.assertEquals(date34.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 25 + "'", int49 == 25);
        org.junit.Assert.assertNotNull(calendar54);
// flaky:         org.junit.Assert.assertEquals(calendar54.toString(), "java.util.GregorianCalendar[time=-61678303972203,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=15,MONTH=6,WEEK_OF_YEAR=27,WEEK_OF_MONTH=1,DAY_OF_MONTH=1,DAY_OF_YEAR=182,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=1,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=7,MILLISECOND=797,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-2005) + "'", int55 == (-2005));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "BAD-DATE-FORMAT" + "'", str62, "BAD-DATE-FORMAT");
    }

    @Test
    public void test6699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6699");
        net.ajaskey.common.Utils.makeDir("    -36,794");
    }

    @Test
    public void test6700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6700");
        net.ajaskey.common.Utils.makeDir("Thu 10-Apr-0002 10:45:39");
    }

    @Test
    public void test6701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6701");
        net.ajaskey.common.Utils.TAB = "                                             719,795";
    }

    @Test
    public void test6702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6702");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        java.text.SimpleDateFormat simpleDateFormat10 = dateTime6.getSdf();
        boolean boolean11 = dateTime1.isLessThanOrEqual(dateTime6);
        int int12 = dateTime1.getMinute();
        java.lang.String str14 = dateTime1.format("Invalid Time");
        int int15 = dateTime1.getHour();
        java.util.Calendar calendar16 = dateTime1.getCal();
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime("5.00", "     10");
        java.text.SimpleDateFormat simpleDateFormat20 = dateTime19.getSdf();
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean25 = dateTime24.isNull();
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime();
        boolean boolean27 = dateTime24.sameDate(dateTime26);
        dateTime26.set(43, (int) (byte) 1, 12);
        double double32 = dateTime19.getDeltaYears(dateTime26);
        int int33 = dateTime19.getSecond();
        boolean boolean34 = net.ajaskey.common.Utils.sameMonth(dateTime1, dateTime19);
        net.ajaskey.common.DateTime dateTime36 = dateTime19.parse("                                                                                                                                                                                                                                                                                                   108");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "BAD-DATE-FORMAT" + "'", str14, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertNotNull(calendar16);
        org.junit.Assert.assertEquals(calendar16.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNull(simpleDateFormat20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(dateTime36);
    }

    @Test
    public void test6703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6703");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) 10);
        java.util.Calendar calendar2 = dateTime1.getCal();
        java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat5 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("", simpleDateFormat4, simpleDateFormat5);
        java.text.SimpleDateFormat simpleDateFormat8 = null;
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double12 = dateTime9.getDeltaYears(dateTime11);
        boolean boolean13 = dateTime11.isNull();
        boolean boolean14 = dateTime11.isWeekday();
        int int15 = dateTime11.getDayOfYear();
        boolean boolean16 = dateTime6.isGreaterThan(dateTime11);
        int int17 = dateTime6.getMs();
        boolean boolean18 = dateTime1.isGreaterThanOrEqual(dateTime6);
        java.lang.String str20 = dateTime6.format("Thu 10-Apr-0002 10:46:18");
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(dateTime6);
        org.junit.Assert.assertNotNull(calendar2);
        org.junit.Assert.assertEquals(calendar2.toString(), "java.util.GregorianCalendar[time=10,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=10,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(simpleDateFormat4);
        org.junit.Assert.assertNotNull(simpleDateFormat5);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 365 + "'", int15 == 365);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "BAD-DATE-FORMAT" + "'", str20, "BAD-DATE-FORMAT");
    }

    @Test
    public void test6704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6704");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) 53);
        boolean boolean2 = dateTime1.isWeekday();
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(dateTime1);
        int int4 = dateTime1.getDayOfYear();
        java.lang.String str5 = dateTime1.getDay();
        int int6 = dateTime1.getDayOfMonth();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 365 + "'", int4 == 365);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Wednesday" + "'", str5, "Wednesday");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 31 + "'", int6 == 31);
    }

    @Test
    public void test6705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6705");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat5 = null;
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat5);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        boolean boolean10 = dateTime3.isLessThan(dateTime8);
        java.lang.String str11 = dateTime8.toFullString();
        dateTime8.add(10, (int) (byte) -1);
        java.lang.String str15 = dateTime8.getDay();
        java.lang.String str16 = dateTime8.toFullString();
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(100L);
        double double23 = dateTime20.getDeltaYears(dateTime22);
        int int24 = dateTime20.getHour();
        java.text.SimpleDateFormat simpleDateFormat26 = null;
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat26);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double30 = dateTime27.getDeltaYears(dateTime29);
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean35 = dateTime29.isEqual(dateTime34);
        java.util.Calendar calendar36 = dateTime29.getCal();
        dateTime20.set(calendar36);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime(calendar36);
        dateTime38.add(14, 2020);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime(100L);
        double double48 = dateTime45.getDeltaYears(dateTime47);
        boolean boolean49 = dateTime47.isWeekday();
        java.util.Date date50 = dateTime47.getTime();
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime(date50);
        java.text.SimpleDateFormat simpleDateFormat53 = null;
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat53);
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double57 = dateTime54.getDeltaYears(dateTime56);
        boolean boolean58 = dateTime54.isWeekday();
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long63 = dateTime54.getDeltaDays(dateTime62);
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime(dateTime54);
        boolean boolean65 = dateTime51.isGreaterThan(dateTime54);
        java.lang.String str66 = dateTime54.getMonth();
        boolean boolean67 = dateTime38.sameDate(dateTime54);
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime73 = new net.ajaskey.common.DateTime(100L);
        double double74 = dateTime71.getDeltaYears(dateTime73);
        net.ajaskey.common.DateTime dateTime76 = new net.ajaskey.common.DateTime((long) (short) 0);
        int int77 = dateTime76.getHour();
        boolean boolean78 = net.ajaskey.common.Utils.sameDate(dateTime73, dateTime76);
        java.lang.String str79 = dateTime73.getDay();
        boolean boolean80 = dateTime38.isLessThan(dateTime73);
        int int81 = dateTime8.getYears(dateTime38);
        int int82 = dateTime8.getDayOfYear();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str11, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Wednesday" + "'", str15, "Wednesday");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str16, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-1972.041095890411d) + "'", double23 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(calendar36);
        org.junit.Assert.assertEquals(calendar36.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + (-1972.041095890411d) + "'", double48 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(date50);
        org.junit.Assert.assertEquals(date50.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 0L + "'", long63 == 0L);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "UNKNOWN" + "'", str66, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-1972.041095890411d) + "'", double74 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 5 + "'", int77 == 5);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "Wednesday" + "'", str79, "Wednesday");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 365 + "'", int82 == 365);
    }

    @Test
    public void test6706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6706");
        java.util.Map<java.lang.String, java.lang.Integer> strMap0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = net.ajaskey.common.Utils.findName(strMap0, (java.lang.Integer) 487);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test6707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6707");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(100L);
        int int4 = dateTime3.getMs();
        java.text.SimpleDateFormat simpleDateFormat5 = net.ajaskey.common.Utils.sdf;
        dateTime3.setSdf(simpleDateFormat5);
        java.text.SimpleDateFormat simpleDateFormat7 = net.ajaskey.common.Utils.sdfFull;
        dateTime3.setSdf(simpleDateFormat7);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("Mon 10-Apr-0002 00:00:00", simpleDateFormat7);
        java.text.SimpleDateFormat simpleDateFormat12 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("January", simpleDateFormat12);
        java.text.SimpleDateFormat simpleDateFormat18 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat19 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("", simpleDateFormat18, simpleDateFormat19);
        java.text.SimpleDateFormat simpleDateFormat22 = null;
        java.text.SimpleDateFormat simpleDateFormat23 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("January", simpleDateFormat22, simpleDateFormat23);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat18, simpleDateFormat23);
        java.text.SimpleDateFormat simpleDateFormat28 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat29 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime("", simpleDateFormat28, simpleDateFormat29);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime(100L);
        int int33 = dateTime32.getMs();
        java.text.SimpleDateFormat simpleDateFormat34 = net.ajaskey.common.Utils.sdf;
        dateTime32.setSdf(simpleDateFormat34);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat29, simpleDateFormat34);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime("                             100", simpleDateFormat23, simpleDateFormat29);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime("11", simpleDateFormat23);
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime("                                 32.00", simpleDateFormat12, simpleDateFormat23);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime("", simpleDateFormat7, simpleDateFormat12);
        java.util.Date date41 = dateTime40.getTime();
        int int42 = dateTime40.getSecond();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat5);
        org.junit.Assert.assertNotNull(simpleDateFormat7);
        org.junit.Assert.assertNotNull(simpleDateFormat12);
        org.junit.Assert.assertNotNull(simpleDateFormat18);
        org.junit.Assert.assertNotNull(simpleDateFormat19);
        org.junit.Assert.assertNotNull(simpleDateFormat23);
        org.junit.Assert.assertNotNull(simpleDateFormat28);
        org.junit.Assert.assertNotNull(simpleDateFormat29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat34);
        org.junit.Assert.assertNull(date41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
    }

    @Test
    public void test6708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6708");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean10 = dateTime4.isEqual(dateTime9);
        java.util.Calendar calendar11 = dateTime4.getCal();
        java.lang.String str12 = dateTime4.format();
        net.ajaskey.common.DateTime dateTime13 = null;
        long long14 = dateTime4.getDeltaDays(dateTime13);
        int int15 = dateTime4.getSecond();
        int int16 = dateTime4.getHour();
        dateTime4.set((int) (short) 1, 6, (int) (byte) 1);
        java.text.SimpleDateFormat simpleDateFormat22 = null;
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat22);
        java.util.Calendar calendar24 = dateTime23.getCal();
        int int25 = dateTime23.getMinute();
        dateTime4.set(dateTime23);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(100L);
        int int29 = dateTime28.getMs();
        java.lang.String str30 = dateTime28.toString();
        int int31 = dateTime28.getDayOfYear();
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime(100L);
        dateTime33.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime(100L);
        double double44 = dateTime41.getDeltaYears(dateTime43);
        boolean boolean45 = dateTime43.isWeekday();
        java.util.Date date46 = dateTime43.getTime();
        dateTime33.set(dateTime43);
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat53 = null;
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat53);
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double57 = dateTime54.getDeltaYears(dateTime56);
        boolean boolean58 = dateTime51.isLessThan(dateTime56);
        dateTime43.set(dateTime56);
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime(100L);
        double double66 = dateTime63.getDeltaYears(dateTime65);
        long long67 = dateTime43.getDeltaMilliSeconds(dateTime65);
        java.util.Date date68 = null;
        net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime(date68);
        net.ajaskey.common.DateTime dateTime73 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime75 = new net.ajaskey.common.DateTime(100L);
        double double76 = dateTime73.getDeltaYears(dateTime75);
        int int77 = dateTime73.getHour();
        java.text.SimpleDateFormat simpleDateFormat79 = null;
        net.ajaskey.common.DateTime dateTime80 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat79);
        net.ajaskey.common.DateTime dateTime82 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double83 = dateTime80.getDeltaYears(dateTime82);
        net.ajaskey.common.DateTime dateTime87 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean88 = dateTime82.isEqual(dateTime87);
        java.util.Calendar calendar89 = dateTime82.getCal();
        dateTime73.set(calendar89);
        net.ajaskey.common.DateTime dateTime91 = new net.ajaskey.common.DateTime(calendar89);
        net.ajaskey.common.DateTime dateTime92 = dateTime69.copy(dateTime91);
        boolean boolean93 = dateTime65.isLessThan(dateTime69);
        boolean boolean94 = net.ajaskey.common.Utils.sameMonth(dateTime28, dateTime69);
        int int95 = dateTime69.getDayOfYear();
        double double96 = dateTime23.getDeltaYears(dateTime69);
        java.lang.Class<?> wildcardClass97 = dateTime23.getClass();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(calendar11);
        org.junit.Assert.assertEquals(calendar11.toString(), "java.util.GregorianCalendar[time=?,areFieldsSet=false,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1,MONTH=6,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=1,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "BAD-DATE-FORMAT" + "'", str12, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 5 + "'", int16 == 5);
        org.junit.Assert.assertNull(calendar24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "31-Dec-1969" + "'", str30, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 365 + "'", int31 == 365);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-1972.041095890411d) + "'", double44 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(date46);
        org.junit.Assert.assertEquals(date46.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-1972.041095890411d) + "'", double66 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 100L + "'", long67 == 100L);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-1972.041095890411d) + "'", double76 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 10 + "'", int77 == 10);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(calendar89);
        org.junit.Assert.assertEquals(calendar89.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(dateTime92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 177 + "'", int95 == 177);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.0d + "'", double96 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test6709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6709");
        java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readGzipFile("                                         47", true);
        org.junit.Assert.assertNull(strList2);
    }

    @Test
    public void test6710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6710");
        java.lang.String str2 = net.ajaskey.common.Utils.fmt((double) 291, 0);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Invalid fmt" + "'", str2, "Invalid fmt");
    }

    @Test
    public void test6711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6711");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        long long6 = dateTime3.getDeltaDays(dateTime5);
        int int7 = dateTime3.getHour();
        dateTime3.add((int) (byte) 100, (int) (byte) 0);
        net.ajaskey.common.DateTime dateTime12 = dateTime3.parse("10-Apr-0002");
        int int13 = dateTime3.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(dateTime3);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(100L);
        dateTime16.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str21 = dateTime16.getMonth();
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime(100L);
        dateTime23.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str28 = dateTime23.getMonth();
        int int29 = dateTime23.getMs();
        net.ajaskey.common.DateTime dateTime30 = dateTime16.copy(dateTime23);
        int int31 = dateTime23.getSecond();
        int int32 = dateTime23.getHour();
        java.lang.String str33 = dateTime23.toFullString();
        java.util.Date date34 = dateTime23.getTime();
        dateTime23.set(431, 320, 47);
        int int39 = dateTime3.getYears(dateTime23);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-719795L) + "'", long6 == (-719795L));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertNull(dateTime12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10 + "'", int13 == 10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "January" + "'", str21, "January");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "January" + "'", str28, "January");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        org.junit.Assert.assertNotNull(dateTime30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 5 + "'", int32 == 5);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Sat 04-Jan-0100 17:00:00" + "'", str33, "Sat 04-Jan-0100 17:00:00");
        org.junit.Assert.assertNotNull(date34);
        org.junit.Assert.assertEquals(date34.toString(), "Sat Jan 04 17:00:00 MST 100");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 455 + "'", int39 == 455);
    }

    @Test
    public void test6712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6712");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        java.text.SimpleDateFormat simpleDateFormat10 = dateTime6.getSdf();
        boolean boolean11 = dateTime1.isLessThanOrEqual(dateTime6);
        java.text.SimpleDateFormat simpleDateFormat13 = null;
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat13);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double17 = dateTime14.getDeltaYears(dateTime16);
        boolean boolean18 = dateTime14.isWeekday();
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long23 = dateTime14.getDeltaDays(dateTime22);
        long long24 = dateTime1.getDeltaDays(dateTime22);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(100L);
        dateTime26.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean31 = dateTime26.isWeekday();
        int int32 = dateTime1.getYears(dateTime26);
        int int33 = dateTime1.getYear();
        java.lang.String str34 = dateTime1.format();
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime((long) (short) 0);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime(100L);
        int int39 = dateTime38.getMs();
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(100L);
        double double46 = dateTime43.getDeltaYears(dateTime45);
        java.text.SimpleDateFormat simpleDateFormat47 = dateTime43.getSdf();
        boolean boolean48 = dateTime38.isLessThanOrEqual(dateTime43);
        java.text.SimpleDateFormat simpleDateFormat50 = null;
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat50);
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double54 = dateTime51.getDeltaYears(dateTime53);
        boolean boolean55 = dateTime51.isWeekday();
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long60 = dateTime51.getDeltaDays(dateTime59);
        long long61 = dateTime38.getDeltaDays(dateTime59);
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime(100L);
        dateTime63.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean68 = dateTime63.isWeekday();
        int int69 = dateTime38.getYears(dateTime63);
        int int70 = dateTime38.getYear();
        java.util.Calendar calendar71 = dateTime38.getCal();
        net.ajaskey.common.DateTime dateTime72 = dateTime36.copy(dateTime38);
        java.lang.String str74 = dateTime36.format("                                                 100");
        boolean boolean75 = dateTime36.isWeekday();
        boolean boolean76 = net.ajaskey.common.Utils.sameDate(dateTime1, dateTime36);
        java.util.Calendar calendar77 = dateTime36.getCal();
        int int78 = dateTime36.getSecond();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 719795L + "'", long24 == 719795L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1870) + "'", int32 == (-1870));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1969 + "'", int33 == 1969);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "BAD-DATE-FORMAT" + "'", str34, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-1972.041095890411d) + "'", double46 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 719795L + "'", long61 == 719795L);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1870) + "'", int69 == (-1870));
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1969 + "'", int70 == 1969);
        org.junit.Assert.assertNotNull(calendar71);
        org.junit.Assert.assertEquals(calendar71.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(dateTime72);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "                                                 100" + "'", str74, "                                                 100");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(calendar77);
        org.junit.Assert.assertEquals(calendar77.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
    }

    @Test
    public void test6713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6713");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        boolean boolean6 = dateTime2.isWeekday();
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long11 = dateTime2.getDeltaDays(dateTime10);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(dateTime2);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(100L);
        double double19 = dateTime16.getDeltaYears(dateTime18);
        boolean boolean20 = dateTime18.isWeekday();
        java.util.Date date21 = dateTime18.getTime();
        dateTime2.set(date21);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime(100L);
        int int25 = dateTime24.getMs();
        java.lang.String str26 = dateTime24.toString();
        boolean boolean27 = dateTime2.isLessThanOrEqual(dateTime24);
        java.lang.String str29 = dateTime24.format("5.00");
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime(100L);
        double double36 = dateTime33.getDeltaYears(dateTime35);
        java.util.Date date37 = dateTime33.getTime();
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime(date37);
        net.ajaskey.common.DateTime dateTime41 = dateTime38.parse("31-Dec-1969", "January");
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime(100L);
        int int44 = dateTime43.getMs();
        java.lang.String str45 = dateTime43.toString();
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime(100L);
        double double52 = dateTime49.getDeltaYears(dateTime51);
        int int53 = dateTime49.getHour();
        int int54 = dateTime49.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime(100L);
        double double61 = dateTime58.getDeltaYears(dateTime60);
        boolean boolean62 = dateTime60.isWeekday();
        boolean boolean63 = net.ajaskey.common.Utils.sameDate(dateTime49, dateTime60);
        boolean boolean64 = net.ajaskey.common.Utils.sameDate(dateTime43, dateTime49);
        dateTime38.set(dateTime49);
        java.util.Date date66 = dateTime38.getTime();
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime(date66);
        dateTime24.set(date66);
        java.text.SimpleDateFormat simpleDateFormat69 = dateTime24.getSdf();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-1972.041095890411d) + "'", double19 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(date21);
        org.junit.Assert.assertEquals(date21.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "31-Dec-1969" + "'", str26, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "5.00" + "'", str29, "5.00");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-1972.041095890411d) + "'", double36 == (-1972.041095890411d));
        org.junit.Assert.assertNotNull(date37);
// flaky:         org.junit.Assert.assertEquals(date37.toString(), "Thu Apr 10 10:47:08 MST 2");
        org.junit.Assert.assertNull(dateTime41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "31-Dec-1969" + "'", str45, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-1972.041095890411d) + "'", double52 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 10 + "'", int53 == 10);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 10 + "'", int54 == 10);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-1972.041095890411d) + "'", double61 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(date66);
// flaky:         org.junit.Assert.assertEquals(date66.toString(), "Thu Apr 10 10:47:08 MST 2");
        org.junit.Assert.assertNotNull(simpleDateFormat69);
    }

    @Test
    public void test6714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6714");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean10 = dateTime4.isEqual(dateTime9);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(100L);
        int int13 = dateTime12.getMs();
        boolean boolean14 = dateTime9.isGreaterThanOrEqual(dateTime12);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime(100L);
        double double21 = dateTime18.getDeltaYears(dateTime20);
        java.util.Date date22 = dateTime18.getTime();
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime(date22);
        net.ajaskey.common.DateTime dateTime26 = dateTime23.parse("31-Dec-1969", "January");
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(100L);
        int int29 = dateTime28.getMs();
        java.lang.String str30 = dateTime28.toString();
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime(100L);
        double double37 = dateTime34.getDeltaYears(dateTime36);
        int int38 = dateTime34.getHour();
        int int39 = dateTime34.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(100L);
        double double46 = dateTime43.getDeltaYears(dateTime45);
        boolean boolean47 = dateTime45.isWeekday();
        boolean boolean48 = net.ajaskey.common.Utils.sameDate(dateTime34, dateTime45);
        boolean boolean49 = net.ajaskey.common.Utils.sameDate(dateTime28, dateTime34);
        dateTime23.set(dateTime34);
        java.util.Calendar calendar51 = dateTime34.getCal();
        dateTime9.set(calendar51);
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime(dateTime9);
        net.ajaskey.common.DateTime dateTime55 = dateTime53.parse("Invalid Time");
        dateTime53.setFirstWorkDay();
        boolean boolean57 = dateTime53.isWeekday();
        boolean boolean58 = dateTime53.isWeekday();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-1972.041095890411d) + "'", double21 == (-1972.041095890411d));
        org.junit.Assert.assertNotNull(date22);
// flaky:         org.junit.Assert.assertEquals(date22.toString(), "Thu Apr 10 10:47:08 MST 2");
        org.junit.Assert.assertNull(dateTime26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "31-Dec-1969" + "'", str30, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-1972.041095890411d) + "'", double37 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 10 + "'", int38 == 10);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 10 + "'", int39 == 10);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-1972.041095890411d) + "'", double46 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(calendar51);
// flaky:         org.junit.Assert.assertEquals(calendar51.toString(), "java.util.GregorianCalendar[time=-62190310371928,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=8,MILLISECOND=72,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNull(dateTime55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test6715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6715");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime(dateTime2);
        java.text.SimpleDateFormat simpleDateFormat7 = dateTime2.getSdf();
        java.text.SimpleDateFormat simpleDateFormat9 = null;
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat9);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double13 = dateTime10.getDeltaYears(dateTime12);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(dateTime10);
        int int15 = dateTime10.getDayOfYear();
        long long16 = dateTime2.getDeltaDays(dateTime10);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNull(simpleDateFormat7);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
    }

    @Test
    public void test6716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6716");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(53, (int) (byte) 100, 28);
        int int4 = dateTime3.getMinute();
        java.util.Calendar calendar5 = dateTime3.getCal();
        java.util.Date date6 = dateTime3.getTime();
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime(1969, (int) (byte) -1, 18);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(dateTime10);
        boolean boolean12 = net.ajaskey.common.Utils.sameMonth(dateTime3, dateTime11);
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 47 + "'", int4 == 47);
        org.junit.Assert.assertNotNull(calendar5);
// flaky:         org.junit.Assert.assertEquals(calendar5.toString(), "java.util.GregorianCalendar[time=-60229548771894,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=61,MONTH=4,WEEK_OF_YEAR=22,WEEK_OF_MONTH=5,DAY_OF_MONTH=28,DAY_OF_YEAR=148,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=4,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=8,MILLISECOND=106,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(date6);
// flaky:         org.junit.Assert.assertEquals(date6.toString(), "Thu May 28 10:47:08 MST 61");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test6717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6717");
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime(100L);
        double double7 = dateTime4.getDeltaYears(dateTime6);
        int int8 = dateTime4.getHour();
        dateTime4.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat13 = null;
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat13);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double17 = dateTime14.getDeltaYears(dateTime16);
        boolean boolean18 = dateTime4.isEqual(dateTime16);
        java.text.SimpleDateFormat simpleDateFormat20 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat22 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat23 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("", simpleDateFormat22, simpleDateFormat23);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat20, simpleDateFormat23);
        dateTime4.setSdf(simpleDateFormat20);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat33 = null;
        java.text.SimpleDateFormat simpleDateFormat34 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("January", simpleDateFormat33, simpleDateFormat34);
        java.text.SimpleDateFormat simpleDateFormat38 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime("January", simpleDateFormat38);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime("", simpleDateFormat38);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime("", simpleDateFormat34, simpleDateFormat38);
        dateTime30.setSdf(simpleDateFormat34);
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime("December", simpleDateFormat20, simpleDateFormat34);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(100L);
        int int46 = dateTime45.getMs();
        java.text.SimpleDateFormat simpleDateFormat47 = net.ajaskey.common.Utils.sdf;
        dateTime45.setSdf(simpleDateFormat47);
        java.lang.String str49 = dateTime45.format();
        boolean boolean50 = dateTime43.isLessThanOrEqual(dateTime45);
        int int51 = dateTime43.getMs();
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime(100L);
        int int55 = dateTime54.getMs();
        java.text.SimpleDateFormat simpleDateFormat56 = net.ajaskey.common.Utils.sdf;
        dateTime54.setSdf(simpleDateFormat56);
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat56);
        java.text.SimpleDateFormat simpleDateFormat60 = null;
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat60);
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double64 = dateTime61.getDeltaYears(dateTime63);
        boolean boolean65 = dateTime63.isNull();
        java.text.SimpleDateFormat simpleDateFormat67 = null;
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat67);
        dateTime68.set((int) ' ', 0, 11);
        boolean boolean73 = dateTime63.isGreaterThanOrEqual(dateTime68);
        double double74 = dateTime58.getDeltaYears(dateTime63);
        java.text.SimpleDateFormat simpleDateFormat76 = null;
        net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat76);
        net.ajaskey.common.DateTime dateTime79 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double80 = dateTime77.getDeltaYears(dateTime79);
        boolean boolean81 = dateTime79.isNull();
        boolean boolean82 = dateTime63.isGreaterThan(dateTime79);
        boolean boolean83 = dateTime43.isLessThanOrEqual(dateTime79);
        net.ajaskey.common.DateTime dateTime85 = new net.ajaskey.common.DateTime(100L);
        boolean boolean86 = dateTime85.isWeekday();
        java.lang.String str87 = dateTime85.toString();
        long long88 = dateTime43.getDeltaDays(dateTime85);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-1972.041095890411d) + "'", double7 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10 + "'", int8 == 10);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(simpleDateFormat20);
        org.junit.Assert.assertNotNull(simpleDateFormat22);
        org.junit.Assert.assertNotNull(simpleDateFormat23);
        org.junit.Assert.assertNotNull(simpleDateFormat34);
        org.junit.Assert.assertNotNull(simpleDateFormat38);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "31-Dec-1969" + "'", str49, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat56);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "31-Dec-1969" + "'", str87, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 0L + "'", long88 == 0L);
    }

    @Test
    public void test6718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6718");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(62190310463771L);
        boolean boolean2 = dateTime1.isNull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test6719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6719");
        net.ajaskey.common.DateTime dateTime0 = null;
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(dateTime0);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime(100L);
        int int5 = dateTime4.getMs();
        java.text.SimpleDateFormat simpleDateFormat6 = net.ajaskey.common.Utils.sdf;
        dateTime4.setSdf(simpleDateFormat6);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat6);
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime((long) 53);
        boolean boolean11 = dateTime10.isWeekday();
        boolean boolean12 = dateTime8.sameDate(dateTime10);
        java.util.Date date13 = dateTime10.getTime();
        java.text.SimpleDateFormat simpleDateFormat15 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("January", simpleDateFormat15);
        dateTime10.setSdf(simpleDateFormat15);
        net.ajaskey.common.DateTime dateTime18 = dateTime1.copy(dateTime10);
        net.ajaskey.common.DateTime dateTime20 = dateTime18.parse("                                                                                                                                                                                                                                                                                                                                                                                                                                                                         25");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(date13);
        org.junit.Assert.assertEquals(date13.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertNotNull(simpleDateFormat15);
        org.junit.Assert.assertNotNull(dateTime18);
        org.junit.Assert.assertNull(dateTime20);
    }

    @Test
    public void test6720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6720");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("5.00", "     10");
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        int int10 = dateTime6.getHour();
        java.text.SimpleDateFormat simpleDateFormat12 = null;
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat12);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double16 = dateTime13.getDeltaYears(dateTime15);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean21 = dateTime15.isEqual(dateTime20);
        java.util.Calendar calendar22 = dateTime15.getCal();
        dateTime6.set(calendar22);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime(calendar22);
        dateTime2.set(calendar22);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(100L);
        int int28 = dateTime27.getMs();
        java.lang.String str29 = dateTime27.toString();
        java.lang.String str31 = dateTime27.format("         1");
        net.ajaskey.common.DateTime dateTime32 = dateTime2.copy(dateTime27);
        int int33 = dateTime2.getMs();
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((long) (short) 0);
        int int36 = dateTime35.getHour();
        boolean boolean37 = dateTime35.isNull();
        boolean boolean38 = dateTime2.isEqual(dateTime35);
        java.lang.String str39 = dateTime2.getDay();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(calendar22);
        org.junit.Assert.assertEquals(calendar22.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "31-Dec-1969" + "'", str29, "31-Dec-1969");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "         1" + "'", str31, "         1");
        org.junit.Assert.assertNotNull(dateTime32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 5 + "'", int36 == 5);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Wednesday" + "'", str39, "Wednesday");
    }

    @Test
    public void test6721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6721");
        java.util.zip.ZipOutputStream zipOutputStream1 = null;
        // The following exception was thrown during execution in test generation
        try {
            net.ajaskey.common.Utils.writeToZipFile("                                                                              568", zipOutputStream1);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:                                                                               568 (The system cannot find the file specified)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
    }

    @Test
    public void test6722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6722");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        boolean boolean3 = dateTime1.isWeekday();
        int int4 = dateTime1.getHour();
        java.text.SimpleDateFormat simpleDateFormat6 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("January", simpleDateFormat6);
        dateTime1.setSdf(simpleDateFormat6);
        java.text.SimpleDateFormat simpleDateFormat9 = dateTime1.getSdf();
        java.lang.String str11 = dateTime1.format("Thursday");
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(100L);
        double double18 = dateTime15.getDeltaYears(dateTime17);
        int int19 = dateTime15.getHour();
        java.text.SimpleDateFormat simpleDateFormat21 = null;
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat21);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double25 = dateTime22.getDeltaYears(dateTime24);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean30 = dateTime24.isEqual(dateTime29);
        java.util.Calendar calendar31 = dateTime24.getCal();
        java.lang.String str32 = dateTime24.format();
        net.ajaskey.common.DateTime dateTime33 = null;
        long long34 = dateTime24.getDeltaDays(dateTime33);
        int int35 = dateTime24.getSecond();
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime(100L);
        double double42 = dateTime39.getDeltaYears(dateTime41);
        java.text.SimpleDateFormat simpleDateFormat44 = null;
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat44);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double48 = dateTime45.getDeltaYears(dateTime47);
        boolean boolean49 = dateTime45.isWeekday();
        boolean boolean50 = dateTime39.sameDate(dateTime45);
        int int51 = dateTime45.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime52 = dateTime24.copy(dateTime45);
        dateTime15.set(dateTime45);
        boolean boolean54 = dateTime1.isEqual(dateTime15);
        java.lang.String str55 = dateTime15.format();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertNotNull(simpleDateFormat6);
        org.junit.Assert.assertNotNull(simpleDateFormat9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "BAD-DATE-FORMAT" + "'", str11, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1972.041095890411d) + "'", double18 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(calendar31);
        org.junit.Assert.assertEquals(calendar31.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "BAD-DATE-FORMAT" + "'", str32, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-1972.041095890411d) + "'", double42 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNull(dateTime52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "BAD-DATE-FORMAT" + "'", str55, "BAD-DATE-FORMAT");
    }

    @Test
    public void test6723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6723");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("                                                                                              100", "100");
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        int int6 = dateTime5.getMs();
        java.text.SimpleDateFormat simpleDateFormat7 = net.ajaskey.common.Utils.sdf;
        dateTime5.setSdf(simpleDateFormat7);
        java.text.SimpleDateFormat simpleDateFormat9 = net.ajaskey.common.Utils.sdfFull;
        dateTime5.setSdf(simpleDateFormat9);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime("Mon 10-Apr-0002 00:00:00", simpleDateFormat9);
        dateTime2.setSdf(simpleDateFormat9);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(100L);
        net.ajaskey.common.DateTime dateTime17 = dateTime14.parse("", "");
        java.text.SimpleDateFormat simpleDateFormat19 = null;
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat19);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double23 = dateTime20.getDeltaYears(dateTime22);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean28 = dateTime22.isEqual(dateTime27);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime(100L);
        int int31 = dateTime30.getMs();
        boolean boolean32 = dateTime27.isGreaterThanOrEqual(dateTime30);
        java.text.SimpleDateFormat simpleDateFormat34 = null;
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat34);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double38 = dateTime35.getDeltaYears(dateTime37);
        boolean boolean39 = dateTime35.isWeekday();
        boolean boolean40 = dateTime30.isLessThanOrEqual(dateTime35);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime(100L);
        dateTime42.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean47 = dateTime42.isWeekday();
        boolean boolean48 = dateTime30.isGreaterThanOrEqual(dateTime42);
        net.ajaskey.common.DateTime dateTime49 = dateTime14.copy(dateTime30);
        dateTime2.set(dateTime14);
        java.text.SimpleDateFormat simpleDateFormat52 = null;
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat52);
        dateTime53.set((int) ' ', 0, 11);
        net.ajaskey.common.DateTime dateTime60 = dateTime53.parse("September", "                       25");
        int int61 = dateTime53.getDayOfMonth();
        boolean boolean62 = net.ajaskey.common.Utils.sameMonth(dateTime14, dateTime53);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat7);
        org.junit.Assert.assertNotNull(simpleDateFormat9);
        org.junit.Assert.assertNull(dateTime17);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 100 + "'", int31 == 100);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(dateTime49);
        org.junit.Assert.assertNull(dateTime60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 11 + "'", int61 == 11);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test6724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6724");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(12, 42, (int) (byte) 1);
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean8 = dateTime7.isNull();
        int int9 = dateTime7.getDayOfYear();
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(100L);
        long long20 = dateTime17.getDeltaDays(dateTime19);
        int int21 = dateTime17.getHour();
        dateTime17.add((int) (byte) 100, (int) (byte) 0);
        double double25 = dateTime13.getDeltaYears(dateTime17);
        boolean boolean26 = dateTime7.isLessThanOrEqual(dateTime13);
        boolean boolean27 = dateTime3.sameDate(dateTime13);
        net.ajaskey.common.DateTime dateTime29 = dateTime13.parse("Thu 10-Apr-0002 10:43:22");
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(100L);
        int int32 = dateTime31.getMs();
        java.text.SimpleDateFormat simpleDateFormat33 = net.ajaskey.common.Utils.sdf;
        dateTime31.setSdf(simpleDateFormat33);
        int int35 = dateTime31.getDayOfWeek();
        java.text.SimpleDateFormat simpleDateFormat37 = null;
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat37);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double41 = dateTime38.getDeltaYears(dateTime40);
        boolean boolean42 = dateTime38.isWeekday();
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long47 = dateTime38.getDeltaDays(dateTime46);
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime(dateTime38);
        boolean boolean49 = dateTime31.isGreaterThan(dateTime48);
        boolean boolean50 = dateTime13.isEqual(dateTime48);
        java.lang.String str52 = dateTime13.format("Thu 10-Apr-0002 10:43:35");
        int int53 = dateTime13.getHour();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-719795L) + "'", long20 == (-719795L));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(dateTime29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 4 + "'", int35 == 4);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "BAD-DATE-FORMAT" + "'", str52, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 10 + "'", int53 == 10);
    }

    @Test
    public void test6725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6725");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        int int7 = dateTime3.getHour();
        dateTime3.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat12 = null;
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat12);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double16 = dateTime13.getDeltaYears(dateTime15);
        boolean boolean17 = dateTime3.isEqual(dateTime15);
        java.lang.String str18 = dateTime15.toString();
        int int19 = dateTime15.getHour();
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat25 = null;
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat25);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double29 = dateTime26.getDeltaYears(dateTime28);
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean34 = dateTime28.isEqual(dateTime33);
        java.util.Calendar calendar35 = dateTime28.getCal();
        boolean boolean36 = dateTime23.isLessThan(dateTime28);
        int int37 = dateTime23.getDayOfYear();
        boolean boolean38 = dateTime15.isGreaterThanOrEqual(dateTime23);
        int int39 = dateTime15.getDayOfMonth();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "31-Dec-1969" + "'", str18, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 5 + "'", int19 == 5);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(calendar35);
        org.junit.Assert.assertEquals(calendar35.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 31 + "'", int39 == 31);
    }

    @Test
    public void test6726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6726");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.lang.String str4 = dateTime3.toFullString();
        dateTime3.add(7, 53);
        java.text.SimpleDateFormat simpleDateFormat11 = null;
        java.text.SimpleDateFormat simpleDateFormat12 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("January", simpleDateFormat11, simpleDateFormat12);
        java.text.SimpleDateFormat simpleDateFormat16 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("January", simpleDateFormat16);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime("", simpleDateFormat16);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime("", simpleDateFormat12, simpleDateFormat16);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("Wed 31-Dec-1969 17:00:00", simpleDateFormat16);
        dateTime3.setSdf(simpleDateFormat16);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime(100L);
        int int24 = dateTime23.getMs();
        boolean boolean25 = dateTime23.isWeekday();
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime((long) (short) 0);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(100L);
        int int30 = dateTime29.getMs();
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime(100L);
        double double37 = dateTime34.getDeltaYears(dateTime36);
        java.text.SimpleDateFormat simpleDateFormat38 = dateTime34.getSdf();
        boolean boolean39 = dateTime29.isLessThanOrEqual(dateTime34);
        java.text.SimpleDateFormat simpleDateFormat41 = null;
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat41);
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double45 = dateTime42.getDeltaYears(dateTime44);
        boolean boolean46 = dateTime42.isWeekday();
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long51 = dateTime42.getDeltaDays(dateTime50);
        long long52 = dateTime29.getDeltaDays(dateTime50);
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime(100L);
        dateTime54.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean59 = dateTime54.isWeekday();
        int int60 = dateTime29.getYears(dateTime54);
        int int61 = dateTime29.getYear();
        java.util.Calendar calendar62 = dateTime29.getCal();
        net.ajaskey.common.DateTime dateTime63 = dateTime27.copy(dateTime29);
        boolean boolean64 = dateTime23.isGreaterThan(dateTime29);
        java.text.SimpleDateFormat simpleDateFormat66 = null;
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat66);
        net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double70 = dateTime67.getDeltaYears(dateTime69);
        net.ajaskey.common.DateTime dateTime74 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean75 = dateTime69.isEqual(dateTime74);
        java.lang.String str76 = dateTime74.getMonth();
        net.ajaskey.common.DateTime dateTime77 = dateTime29.copy(dateTime74);
        java.util.Date date78 = dateTime29.getTime();
        long long79 = dateTime3.getDeltaDays(dateTime29);
        java.text.SimpleDateFormat simpleDateFormat80 = dateTime29.getSdf();
        dateTime29.add(5, 34);
        int int84 = dateTime29.getDayOfMonth();
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Thu 10-Apr-0002 10:47:08" + "'", str4, "Thu 10-Apr-0002 10:47:08");
        org.junit.Assert.assertNotNull(simpleDateFormat12);
        org.junit.Assert.assertNotNull(simpleDateFormat16);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-1972.041095890411d) + "'", double37 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 719795L + "'", long52 == 719795L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1870) + "'", int60 == (-1870));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1969 + "'", int61 == 1969);
        org.junit.Assert.assertNotNull(calendar62);
        org.junit.Assert.assertEquals(calendar62.toString(), "java.util.GregorianCalendar[time=2937600100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1970,MONTH=1,WEEK_OF_YEAR=6,WEEK_OF_MONTH=1,DAY_OF_MONTH=3,DAY_OF_YEAR=34,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(dateTime63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "April" + "'", str76, "April");
        org.junit.Assert.assertNotNull(dateTime77);
        org.junit.Assert.assertNotNull(date78);
        org.junit.Assert.assertEquals(date78.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + (-719795L) + "'", long79 == (-719795L));
        org.junit.Assert.assertNull(simpleDateFormat80);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 3 + "'", int84 == 3);
    }

    @Test
    public void test6727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6727");
        java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readTextFile("                                                                                                                                                                                                                                                  -59,011,286,399,903.00", false);
        net.ajaskey.common.TextUtils.print(strList2);
        java.lang.String str4 = net.ajaskey.common.TextUtils.toString(strList2);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
    }

    @Test
    public void test6728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6728");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("                                                                                                                                                                                                                                                     177", "                9");
    }

    @Test
    public void test6729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6729");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime(100L);
        double double8 = dateTime5.getDeltaYears(dateTime7);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(100L);
        double double15 = dateTime12.getDeltaYears(dateTime14);
        int int16 = dateTime12.getHour();
        int int17 = dateTime12.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime(100L);
        double double24 = dateTime21.getDeltaYears(dateTime23);
        boolean boolean25 = dateTime23.isWeekday();
        boolean boolean26 = net.ajaskey.common.Utils.sameDate(dateTime12, dateTime23);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(100L);
        dateTime28.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime(100L);
        double double39 = dateTime36.getDeltaYears(dateTime38);
        boolean boolean40 = dateTime38.isWeekday();
        java.util.Date date41 = dateTime38.getTime();
        dateTime28.set(dateTime38);
        int int43 = dateTime28.getYear();
        boolean boolean44 = dateTime23.isGreaterThanOrEqual(dateTime28);
        boolean boolean45 = dateTime5.sameDate(dateTime23);
        net.ajaskey.common.DateTime dateTime46 = dateTime1.copy(dateTime5);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:42:54", "                       25");
        boolean boolean50 = dateTime46.isGreaterThan(dateTime49);
        java.lang.String str51 = dateTime49.toFullString();
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-1972.041095890411d) + "'", double8 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-1972.041095890411d) + "'", double15 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10 + "'", int16 == 10);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10 + "'", int17 == 10);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1972.041095890411d) + "'", double24 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-1972.041095890411d) + "'", double39 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(date41);
        org.junit.Assert.assertEquals(date41.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1969 + "'", int43 == 1969);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(dateTime46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Invalid Time" + "'", str51, "Invalid Time");
    }

    @Test
    public void test6730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6730");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        java.text.SimpleDateFormat simpleDateFormat3 = net.ajaskey.common.Utils.sdf;
        dateTime1.setSdf(simpleDateFormat3);
        int int5 = dateTime1.getDayOfWeek();
        java.text.SimpleDateFormat simpleDateFormat6 = dateTime1.getSdf();
        int int7 = dateTime1.getMinute();
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat13 = null;
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat13);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double17 = dateTime14.getDeltaYears(dateTime16);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean22 = dateTime16.isEqual(dateTime21);
        java.util.Calendar calendar23 = dateTime16.getCal();
        boolean boolean24 = dateTime11.isLessThan(dateTime16);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime(100L);
        double double31 = dateTime28.getDeltaYears(dateTime30);
        int int32 = dateTime28.getHour();
        dateTime28.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat37 = null;
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat37);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double41 = dateTime38.getDeltaYears(dateTime40);
        boolean boolean42 = dateTime28.isEqual(dateTime40);
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat48 = null;
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat48);
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double52 = dateTime49.getDeltaYears(dateTime51);
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean57 = dateTime51.isEqual(dateTime56);
        java.util.Calendar calendar58 = dateTime51.getCal();
        boolean boolean59 = dateTime46.isLessThan(dateTime51);
        dateTime46.setFirstWorkDay();
        boolean boolean61 = dateTime28.sameDate(dateTime46);
        net.ajaskey.common.DateTime dateTime62 = null;
        boolean boolean63 = net.ajaskey.common.Utils.sameMonth(dateTime28, dateTime62);
        java.text.SimpleDateFormat simpleDateFormat64 = dateTime28.getSdf();
        long long65 = dateTime11.getDeltaMilliSeconds(dateTime28);
        net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime(35, 262, 0);
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime(dateTime69);
        boolean boolean71 = net.ajaskey.common.Utils.sameDate(dateTime28, dateTime70);
        int int72 = dateTime28.getYear();
        long long73 = dateTime1.getDeltaDays(dateTime28);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 4 + "'", int5 == 4);
        org.junit.Assert.assertNotNull(simpleDateFormat6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(calendar23);
        org.junit.Assert.assertEquals(calendar23.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-1972.041095890411d) + "'", double31 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10 + "'", int32 == 10);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(calendar58);
        org.junit.Assert.assertEquals(calendar58.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(simpleDateFormat64);
// flaky:         org.junit.Assert.assertTrue("'" + long65 + "' != '" + 0L + "'", long65 == 0L);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2 + "'", int72 == 2);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 719795L + "'", long73 == 719795L);
    }

    @Test
    public void test6731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6731");
        net.ajaskey.common.Utils.NL = "Thu 10-Apr-0002 10:46:31";
    }

    @Test
    public void test6732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6732");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("7", "                                                                                                                                                                                                                                                                                                             1");
    }

    @Test
    public void test6733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6733");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("                                             1", "                              10");
        java.util.Calendar calendar3 = dateTime2.getCal();
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((int) 'a', 1869, (int) (byte) 0);
        dateTime2.set(dateTime7);
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime((long) (short) 0);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(100L);
        double double17 = dateTime14.getDeltaYears(dateTime16);
        int int18 = dateTime14.getHour();
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime();
        net.ajaskey.common.DateTime dateTime20 = null;
        boolean boolean21 = dateTime19.isGreaterThan(dateTime20);
        java.text.SimpleDateFormat simpleDateFormat23 = null;
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat23);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double27 = dateTime24.getDeltaYears(dateTime26);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean32 = dateTime26.isEqual(dateTime31);
        java.util.Calendar calendar33 = dateTime26.getCal();
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime(calendar33);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime(calendar33);
        boolean boolean36 = dateTime19.isLessThan(dateTime35);
        boolean boolean37 = dateTime14.isLessThan(dateTime19);
        boolean boolean38 = dateTime10.isGreaterThan(dateTime19);
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime(25, 1, 0);
        java.text.SimpleDateFormat simpleDateFormat46 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat47 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime("", simpleDateFormat46, simpleDateFormat47);
        java.text.SimpleDateFormat simpleDateFormat51 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat52 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime("", simpleDateFormat51, simpleDateFormat52);
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime(100L);
        int int56 = dateTime55.getMs();
        java.text.SimpleDateFormat simpleDateFormat57 = net.ajaskey.common.Utils.sdf;
        dateTime55.setSdf(simpleDateFormat57);
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat52, simpleDateFormat57);
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime("     0", simpleDateFormat47, simpleDateFormat57);
        dateTime43.setSdf(simpleDateFormat47);
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime("January     0     0                                                                                               52.00     0hi!     0", simpleDateFormat47);
        boolean boolean63 = net.ajaskey.common.Utils.sameDate(dateTime10, dateTime62);
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime(12, 42, (int) (byte) 1);
        java.util.Calendar calendar68 = dateTime67.getCal();
        net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime(calendar68);
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime(calendar68);
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime(calendar68);
        dateTime62.set(calendar68);
        boolean boolean73 = dateTime2.isGreaterThanOrEqual(dateTime62);
        org.junit.Assert.assertNull(calendar3);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-1972.041095890411d) + "'", double17 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10 + "'", int18 == 10);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(calendar33);
        org.junit.Assert.assertEquals(calendar33.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(simpleDateFormat46);
        org.junit.Assert.assertNotNull(simpleDateFormat47);
        org.junit.Assert.assertNotNull(simpleDateFormat51);
        org.junit.Assert.assertNotNull(simpleDateFormat52);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat57);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(calendar68);
// flaky:         org.junit.Assert.assertEquals(calendar68.toString(), "java.util.GregorianCalendar[time=-61678303971609,areFieldsSet=true,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=15,MONTH=6,WEEK_OF_YEAR=27,WEEK_OF_MONTH=1,DAY_OF_MONTH=1,DAY_OF_YEAR=182,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=1,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=8,MILLISECOND=391,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test6734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6734");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(1869, 205, 1866);
        boolean boolean4 = dateTime3.isWeekday();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test6735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6735");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        java.text.SimpleDateFormat simpleDateFormat8 = null;
        java.text.SimpleDateFormat simpleDateFormat9 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("January", simpleDateFormat8, simpleDateFormat9);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime("Thursday", simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(dateTime11);
        boolean boolean13 = dateTime2.isEqual(dateTime11);
        boolean boolean14 = dateTime2.isNull();
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean19 = dateTime18.isNull();
        int int20 = dateTime18.getDayOfYear();
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime(100L);
        long long31 = dateTime28.getDeltaDays(dateTime30);
        int int32 = dateTime28.getHour();
        dateTime28.add((int) (byte) 100, (int) (byte) 0);
        double double36 = dateTime24.getDeltaYears(dateTime28);
        boolean boolean37 = dateTime18.isLessThanOrEqual(dateTime24);
        java.util.Calendar calendar38 = null;
        dateTime18.set(calendar38);
        net.ajaskey.common.DateTime dateTime42 = dateTime18.parse("    0", "          264");
        net.ajaskey.common.DateTime dateTime43 = null;
        long long44 = dateTime18.getDeltaMilliSeconds(dateTime43);
        boolean boolean45 = dateTime2.isLessThanOrEqual(dateTime43);
        java.lang.String str46 = dateTime2.format();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(simpleDateFormat9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-719795L) + "'", long31 == (-719795L));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10 + "'", int32 == 10);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(dateTime42);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "BAD-DATE-FORMAT" + "'", str46, "BAD-DATE-FORMAT");
    }

    @Test
    public void test6736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6736");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        boolean boolean3 = dateTime1.isWeekday();
        int int4 = dateTime1.getHour();
        java.text.SimpleDateFormat simpleDateFormat6 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("January", simpleDateFormat6);
        dateTime1.setSdf(simpleDateFormat6);
        java.text.SimpleDateFormat simpleDateFormat10 = null;
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat10);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double14 = dateTime11.getDeltaYears(dateTime13);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean19 = dateTime13.isEqual(dateTime18);
        java.util.Calendar calendar20 = dateTime13.getCal();
        java.lang.String str21 = dateTime13.format();
        net.ajaskey.common.DateTime dateTime22 = null;
        long long23 = dateTime13.getDeltaDays(dateTime22);
        int int24 = dateTime13.getSecond();
        java.text.SimpleDateFormat simpleDateFormat26 = null;
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat26);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double30 = dateTime27.getDeltaYears(dateTime29);
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean35 = dateTime29.isEqual(dateTime34);
        boolean boolean36 = dateTime13.isGreaterThanOrEqual(dateTime34);
        java.text.SimpleDateFormat simpleDateFormat37 = dateTime34.getSdf();
        java.lang.String str38 = dateTime34.getDay();
        long long39 = dateTime1.getDeltaMilliSeconds(dateTime34);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime(dateTime1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertNotNull(simpleDateFormat6);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(calendar20);
        org.junit.Assert.assertEquals(calendar20.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "BAD-DATE-FORMAT" + "'", str21, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(simpleDateFormat37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Thursday" + "'", str38, "Thursday");
// flaky:         org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-62190310371657L) + "'", long39 == (-62190310371657L));
    }

    @Test
    public void test6737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6737");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        java.text.SimpleDateFormat simpleDateFormat10 = dateTime6.getSdf();
        boolean boolean11 = dateTime1.isLessThanOrEqual(dateTime6);
        int int12 = dateTime1.getMinute();
        int int13 = dateTime1.getMinute();
        java.util.Calendar calendar14 = null;
        dateTime1.set(calendar14);
        java.text.SimpleDateFormat simpleDateFormat17 = null;
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat17);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double21 = dateTime18.getDeltaYears(dateTime20);
        boolean boolean22 = dateTime20.isNull();
        java.text.SimpleDateFormat simpleDateFormat24 = null;
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat24);
        dateTime25.set((int) ' ', 0, 11);
        boolean boolean30 = dateTime20.isGreaterThanOrEqual(dateTime25);
        java.lang.String str31 = dateTime20.toString();
        java.text.SimpleDateFormat simpleDateFormat33 = null;
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat33);
        boolean boolean35 = dateTime20.isGreaterThanOrEqual(dateTime34);
        dateTime1.set(dateTime20);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime(100L);
        int int39 = dateTime38.getMs();
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(100L);
        double double46 = dateTime43.getDeltaYears(dateTime45);
        java.text.SimpleDateFormat simpleDateFormat47 = dateTime43.getSdf();
        boolean boolean48 = dateTime38.isLessThanOrEqual(dateTime43);
        java.text.SimpleDateFormat simpleDateFormat50 = null;
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat50);
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double54 = dateTime51.getDeltaYears(dateTime53);
        boolean boolean55 = dateTime51.isWeekday();
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long60 = dateTime51.getDeltaDays(dateTime59);
        long long61 = dateTime38.getDeltaDays(dateTime59);
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime(100L);
        dateTime63.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime73 = new net.ajaskey.common.DateTime(100L);
        double double74 = dateTime71.getDeltaYears(dateTime73);
        boolean boolean75 = dateTime73.isWeekday();
        java.util.Date date76 = dateTime73.getTime();
        dateTime63.set(dateTime73);
        boolean boolean78 = dateTime38.isEqual(dateTime63);
        long long79 = dateTime1.getDeltaDays(dateTime38);
        net.ajaskey.common.DateTime dateTime80 = new net.ajaskey.common.DateTime(dateTime1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "31-Dec-1969" + "'", str31, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-1972.041095890411d) + "'", double46 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 719795L + "'", long61 == 719795L);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-1972.041095890411d) + "'", double74 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(date76);
        org.junit.Assert.assertEquals(date76.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 0L + "'", long79 == 0L);
    }

    @Test
    public void test6738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6738");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((-59011286399900L));
        int int2 = dateTime1.getSecond();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test6739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6739");
        java.text.SimpleDateFormat simpleDateFormat4 = null;
        java.text.SimpleDateFormat simpleDateFormat5 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("January", simpleDateFormat4, simpleDateFormat5);
        java.text.SimpleDateFormat simpleDateFormat9 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("January", simpleDateFormat9);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime("", simpleDateFormat9);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime("", simpleDateFormat5, simpleDateFormat9);
        java.text.SimpleDateFormat simpleDateFormat15 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat17 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat18 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime("", simpleDateFormat17, simpleDateFormat18);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat15, simpleDateFormat18);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat27 = null;
        java.text.SimpleDateFormat simpleDateFormat28 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime("January", simpleDateFormat27, simpleDateFormat28);
        java.text.SimpleDateFormat simpleDateFormat32 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime("January", simpleDateFormat32);
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime("", simpleDateFormat32);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("", simpleDateFormat28, simpleDateFormat32);
        dateTime24.setSdf(simpleDateFormat28);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime("", simpleDateFormat18, simpleDateFormat28);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime("   -18,438", simpleDateFormat9, simpleDateFormat28);
        java.text.SimpleDateFormat simpleDateFormat43 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat44 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime("", simpleDateFormat43, simpleDateFormat44);
        java.text.SimpleDateFormat simpleDateFormat47 = null;
        java.text.SimpleDateFormat simpleDateFormat48 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime("January", simpleDateFormat47, simpleDateFormat48);
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat43, simpleDateFormat48);
        java.text.SimpleDateFormat simpleDateFormat53 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat54 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime("", simpleDateFormat53, simpleDateFormat54);
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime(100L);
        int int58 = dateTime57.getMs();
        java.text.SimpleDateFormat simpleDateFormat59 = net.ajaskey.common.Utils.sdf;
        dateTime57.setSdf(simpleDateFormat59);
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat54, simpleDateFormat59);
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime("                             100", simpleDateFormat48, simpleDateFormat54);
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime("  53", simpleDateFormat54);
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTimesimpleDateFormat9, simpleDateFormat54);
        org.junit.Assert.assertNotNull(simpleDateFormat5);
        org.junit.Assert.assertNotNull(simpleDateFormat9);
        org.junit.Assert.assertNotNull(simpleDateFormat15);
        org.junit.Assert.assertNotNull(simpleDateFormat17);
        org.junit.Assert.assertNotNull(simpleDateFormat18);
        org.junit.Assert.assertNotNull(simpleDateFormat28);
        org.junit.Assert.assertNotNull(simpleDateFormat32);
        org.junit.Assert.assertNotNull(simpleDateFormat43);
        org.junit.Assert.assertNotNull(simpleDateFormat44);
        org.junit.Assert.assertNotNull(simpleDateFormat48);
        org.junit.Assert.assertNotNull(simpleDateFormat53);
        org.junit.Assert.assertNotNull(simpleDateFormat54);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat59);
    }

    @Test
    public void test6740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6740");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("          264", "                             100");
        int int3 = dateTime2.getDayOfWeek();
        int int4 = dateTime2.getYear();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test6741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6741");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        dateTime1.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str6 = dateTime1.getMonth();
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        dateTime8.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str13 = dateTime8.getMonth();
        int int14 = dateTime8.getMs();
        net.ajaskey.common.DateTime dateTime15 = dateTime1.copy(dateTime8);
        int int16 = dateTime8.getSecond();
        int int17 = dateTime8.getHour();
        java.lang.String str18 = dateTime8.toFullString();
        java.util.Date date19 = dateTime8.getTime();
        net.ajaskey.common.DateTime dateTime20 = null;
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(dateTime20);
        dateTime21.set(42, 10, 10);
        java.util.Date date26 = dateTime21.getTime();
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat32 = null;
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat32);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double36 = dateTime33.getDeltaYears(dateTime35);
        boolean boolean37 = dateTime30.isLessThan(dateTime35);
        java.lang.String str38 = dateTime35.toFullString();
        int int39 = dateTime35.getSecond();
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime(dateTime35);
        java.text.SimpleDateFormat simpleDateFormat42 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat43 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime("", simpleDateFormat42, simpleDateFormat43);
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime(100L);
        double double51 = dateTime48.getDeltaYears(dateTime50);
        int int52 = dateTime48.getHour();
        java.text.SimpleDateFormat simpleDateFormat54 = null;
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat54);
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double58 = dateTime55.getDeltaYears(dateTime57);
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean63 = dateTime57.isEqual(dateTime62);
        java.util.Calendar calendar64 = dateTime57.getCal();
        dateTime48.set(calendar64);
        net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime(calendar64);
        boolean boolean67 = dateTime44.isLessThan(dateTime66);
        double double68 = dateTime35.getDeltaYears(dateTime66);
        net.ajaskey.common.DateTime dateTime69 = dateTime21.copy(dateTime66);
        long long70 = dateTime8.getDeltaDays(dateTime69);
        int int71 = dateTime69.getDayOfMonth();
        int int72 = dateTime69.getDayOfMonth();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "January" + "'", str6, "January");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "January" + "'", str13, "January");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 5 + "'", int17 == 5);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Sat 04-Jan-0100 17:00:00" + "'", str18, "Sat 04-Jan-0100 17:00:00");
        org.junit.Assert.assertNotNull(date19);
        org.junit.Assert.assertEquals(date19.toString(), "Sat Jan 04 17:00:00 MST 100");
        org.junit.Assert.assertNotNull(date26);
// flaky:         org.junit.Assert.assertEquals(date26.toString(), "Sat Nov 10 10:47:08 MST 42");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str38, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(simpleDateFormat42);
        org.junit.Assert.assertNotNull(simpleDateFormat43);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-1972.041095890411d) + "'", double51 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 10 + "'", int52 == 10);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(calendar64);
        org.junit.Assert.assertEquals(calendar64.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(dateTime69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + (-683000L) + "'", long70 == (-683000L));
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 31 + "'", int71 == 31);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 31 + "'", int72 == 31);
    }

    @Test
    public void test6742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6742");
        java.text.SimpleDateFormat simpleDateFormat5 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("January", simpleDateFormat5);
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("", simpleDateFormat5);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat15 = null;
        java.text.SimpleDateFormat simpleDateFormat16 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("January", simpleDateFormat15, simpleDateFormat16);
        java.text.SimpleDateFormat simpleDateFormat20 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("January", simpleDateFormat20);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime("", simpleDateFormat20);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime("", simpleDateFormat16, simpleDateFormat20);
        dateTime12.setSdf(simpleDateFormat16);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("     5.00", simpleDateFormat16);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime("               313", simpleDateFormat5, simpleDateFormat16);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime("                                           43", simpleDateFormat5);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:46:02", simpleDateFormat5);
        org.junit.Assert.assertNotNull(simpleDateFormat5);
        org.junit.Assert.assertNotNull(simpleDateFormat16);
        org.junit.Assert.assertNotNull(simpleDateFormat20);
    }

    @Test
    public void test6743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6743");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        dateTime3.add(2, 12);
        java.util.Date date7 = dateTime3.getTime();
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(date7);
        dateTime8.setFirstWorkDay();
        java.text.SimpleDateFormat simpleDateFormat11 = null;
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat11);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double15 = dateTime12.getDeltaYears(dateTime14);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean20 = dateTime14.isEqual(dateTime19);
        java.util.Calendar calendar21 = dateTime14.getCal();
        java.lang.String str22 = dateTime14.format();
        net.ajaskey.common.DateTime dateTime23 = null;
        long long24 = dateTime14.getDeltaDays(dateTime23);
        int int25 = dateTime14.getSecond();
        java.text.SimpleDateFormat simpleDateFormat27 = null;
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat27);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double31 = dateTime28.getDeltaYears(dateTime30);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean36 = dateTime30.isEqual(dateTime35);
        boolean boolean37 = dateTime14.isGreaterThanOrEqual(dateTime35);
        java.text.SimpleDateFormat simpleDateFormat38 = dateTime35.getSdf();
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime("5.00", "     10");
        dateTime41.add((int) (short) 0, (int) 'a');
        int int45 = dateTime41.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime(100L);
        int int48 = dateTime47.getMs();
        int int49 = dateTime47.getHour();
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat55 = null;
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat55);
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double59 = dateTime56.getDeltaYears(dateTime58);
        boolean boolean60 = dateTime53.isLessThan(dateTime58);
        java.lang.String str61 = dateTime58.toFullString();
        dateTime58.add(10, (int) (byte) -1);
        java.text.SimpleDateFormat simpleDateFormat66 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat68 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat69 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime("", simpleDateFormat68, simpleDateFormat69);
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat66, simpleDateFormat69);
        boolean boolean72 = dateTime58.isGreaterThan(dateTime71);
        boolean boolean73 = dateTime47.isEqual(dateTime58);
        net.ajaskey.common.DateTime dateTime74 = null;
        net.ajaskey.common.DateTime dateTime75 = new net.ajaskey.common.DateTime(dateTime74);
        dateTime75.set(42, 10, 10);
        java.util.Date date80 = dateTime75.getTime();
        net.ajaskey.common.DateTime dateTime81 = dateTime47.copy(dateTime75);
        net.ajaskey.common.DateTime dateTime82 = dateTime41.copy(dateTime47);
        int int83 = dateTime82.getHour();
        int int84 = dateTime82.getDayOfYear();
        boolean boolean85 = dateTime35.isEqual(dateTime82);
        java.lang.String str86 = dateTime35.getMonth();
        boolean boolean87 = dateTime8.sameDate(dateTime35);
        org.junit.Assert.assertNotNull(date7);
// flaky:         org.junit.Assert.assertEquals(date7.toString(), "Sat Apr 10 10:47:08 MST 1");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(calendar21);
        org.junit.Assert.assertEquals(calendar21.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "BAD-DATE-FORMAT" + "'", str22, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(simpleDateFormat38);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 100 + "'", int48 == 100);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 5 + "'", int49 == 5);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str61, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertNotNull(simpleDateFormat66);
        org.junit.Assert.assertNotNull(simpleDateFormat68);
        org.junit.Assert.assertNotNull(simpleDateFormat69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(date80);
// flaky:         org.junit.Assert.assertEquals(date80.toString(), "Sat Nov 10 10:47:08 MST 42");
        org.junit.Assert.assertNotNull(dateTime81);
        org.junit.Assert.assertNotNull(dateTime82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 5 + "'", int83 == 5);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 365 + "'", int84 == 365);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "April" + "'", str86, "April");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test6744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6744");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        boolean boolean6 = dateTime2.isWeekday();
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long11 = dateTime2.getDeltaDays(dateTime10);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(dateTime2);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(100L);
        double double19 = dateTime16.getDeltaYears(dateTime18);
        boolean boolean20 = dateTime18.isWeekday();
        java.util.Date date21 = dateTime18.getTime();
        dateTime2.set(date21);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime(date21);
        java.lang.String str25 = dateTime23.format("62,190,310,608,217");
        dateTime23.setFirstWorkDay();
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((long) (short) 0);
        boolean boolean29 = dateTime23.isGreaterThan(dateTime28);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime
        java.lang.String str33 = dateTime32.toString();
        boolean boolean34 = dateTime28.isGreaterThanOrEqual(dateTime32);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-1972.041095890411d) + "'", double19 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(date21);
        org.junit.Assert.assertEquals(date21.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "62,190,310,608,217" + "'", str25, "62,190,310,608,217");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test6745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6745");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        int int7 = dateTime3.getHour();
        java.util.Calendar calendar8 = dateTime3.getCal();
        int int9 = dateTime3.getDayOfYear();
        dateTime3.set(881, (int) ' ', (int) (short) 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertNotNull(calendar8);
// flaky:         org.junit.Assert.assertEquals(calendar8.toString(), "java.util.GregorianCalendar[time=?,areFieldsSet=false,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=881,MONTH=32,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=0,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=8,MILLISECOND=634,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
    }

    @Test
    public void test6746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6746");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        boolean boolean3 = dateTime1.isNull();
        java.util.Calendar calendar4 = dateTime1.getCal();
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(calendar4);
        int int6 = dateTime5.getMs();
        net.ajaskey.common.DateTime dateTime7 = null;
        long long8 = dateTime5.getDeltaMilliSeconds(dateTime7);
        int int9 = dateTime5.getHour();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(calendar4);
        org.junit.Assert.assertEquals(calendar4.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 5 + "'", int9 == 5);
    }

    @Test
    public void test6747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6747");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        java.text.SimpleDateFormat simpleDateFormat10 = dateTime6.getSdf();
        boolean boolean11 = dateTime1.isLessThanOrEqual(dateTime6);
        boolean boolean12 = dateTime6.isWeekday();
        java.lang.String str13 = dateTime6.toString();
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(100L);
        int int16 = dateTime15.getMs();
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(100L);
        double double23 = dateTime20.getDeltaYears(dateTime22);
        java.text.SimpleDateFormat simpleDateFormat24 = dateTime20.getSdf();
        boolean boolean25 = dateTime15.isLessThanOrEqual(dateTime20);
        java.text.SimpleDateFormat simpleDateFormat27 = null;
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat27);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double31 = dateTime28.getDeltaYears(dateTime30);
        boolean boolean32 = dateTime28.isWeekday();
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long37 = dateTime28.getDeltaDays(dateTime36);
        long long38 = dateTime15.getDeltaDays(dateTime36);
        java.lang.String str39 = dateTime36.toFullString();
        java.util.Calendar calendar40 = dateTime36.getCal();
        boolean boolean41 = dateTime6.isLessThan(dateTime36);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime(dateTime36);
        java.lang.String str43 = dateTime36.toString();
        java.text.SimpleDateFormat simpleDateFormat45 = null;
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat45);
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double49 = dateTime46.getDeltaYears(dateTime48);
        java.text.SimpleDateFormat simpleDateFormat52 = null;
        java.text.SimpleDateFormat simpleDateFormat53 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime("January", simpleDateFormat52, simpleDateFormat53);
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime("Thursday", simpleDateFormat52);
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime(dateTime55);
        boolean boolean57 = dateTime46.isEqual(dateTime55);
        java.text.SimpleDateFormat simpleDateFormat59 = null;
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat59);
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double63 = dateTime60.getDeltaYears(dateTime62);
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean68 = dateTime62.isEqual(dateTime67);
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime(100L);
        int int71 = dateTime70.getMs();
        boolean boolean72 = dateTime67.isGreaterThanOrEqual(dateTime70);
        net.ajaskey.common.DateTime dateTime74 = new net.ajaskey.common.DateTime(100L);
        dateTime74.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime82 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime84 = new net.ajaskey.common.DateTime(100L);
        double double85 = dateTime82.getDeltaYears(dateTime84);
        boolean boolean86 = dateTime84.isWeekday();
        java.util.Date date87 = dateTime84.getTime();
        dateTime74.set(dateTime84);
        boolean boolean89 = net.ajaskey.common.Utils.sameDate(dateTime67, dateTime74);
        dateTime67.add((int) '#', 6);
        int int93 = dateTime46.getYears(dateTime67);
        boolean boolean94 = dateTime36.isGreaterThan(dateTime67);
        int int95 = dateTime67.getSecond();
        java.lang.String str96 = dateTime67.format();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "10-Apr-0002" + "'", str13, "10-Apr-0002");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-1972.041095890411d) + "'", double23 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 719795L + "'", long38 == 719795L);
// flaky:         org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Thu 10-Apr-0002 10:47:08" + "'", str39, "Thu 10-Apr-0002 10:47:08");
        org.junit.Assert.assertNotNull(calendar40);
// flaky:         org.junit.Assert.assertEquals(calendar40.toString(), "java.util.GregorianCalendar[time=-62190310371334,areFieldsSet=true,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=8,MILLISECOND=666,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "10-Apr-0002" + "'", str43, "10-Apr-0002");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(simpleDateFormat53);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 100 + "'", int71 == 100);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + (-1972.041095890411d) + "'", double85 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(date87);
        org.junit.Assert.assertEquals(date87.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int95 + "' != '" + 8 + "'", int95 == 8);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "BAD-DATE-FORMAT" + "'", str96, "BAD-DATE-FORMAT");
    }

    @Test
    public void test6748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6748");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean10 = dateTime4.isEqual(dateTime9);
        boolean boolean11 = dateTime4.isNull();
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        dateTime15.set(10, 7, 13);
        boolean boolean20 = dateTime4.isLessThan(dateTime15);
        java.text.SimpleDateFormat simpleDateFormat22 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat23 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("", simpleDateFormat22, simpleDateFormat23);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime(100L);
        double double31 = dateTime28.getDeltaYears(dateTime30);
        int int32 = dateTime28.getHour();
        java.text.SimpleDateFormat simpleDateFormat34 = null;
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat34);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double38 = dateTime35.getDeltaYears(dateTime37);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean43 = dateTime37.isEqual(dateTime42);
        java.util.Calendar calendar44 = dateTime37.getCal();
        dateTime28.set(calendar44);
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime(calendar44);
        boolean boolean47 = dateTime24.isLessThan(dateTime46);
        java.lang.String str48 = dateTime46.getMonth();
        int int49 = dateTime15.getYears(dateTime46);
        boolean boolean50 = dateTime15.isWeekday();
        java.text.SimpleDateFormat simpleDateFormat52 = null;
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat52);
        int int54 = dateTime53.getDayOfWeek();
        int int55 = dateTime53.getDayOfWeek();
        dateTime53.set(454, 857, 593);
        boolean boolean60 = dateTime15.isEqual(dateTime53);
        java.lang.String str61 = dateTime53.getMonth();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(simpleDateFormat22);
        org.junit.Assert.assertNotNull(simpleDateFormat23);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-1972.041095890411d) + "'", double31 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10 + "'", int32 == 10);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(calendar44);
        org.junit.Assert.assertEquals(calendar44.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "December" + "'", str48, "December");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1959 + "'", int49 == 1959);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "January" + "'", str61, "January");
    }

    @Test
    public void test6749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6749");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        java.text.SimpleDateFormat simpleDateFormat10 = dateTime6.getSdf();
        boolean boolean11 = dateTime1.isLessThanOrEqual(dateTime6);
        java.text.SimpleDateFormat simpleDateFormat13 = null;
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat13);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double17 = dateTime14.getDeltaYears(dateTime16);
        boolean boolean18 = dateTime14.isWeekday();
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long23 = dateTime14.getDeltaDays(dateTime22);
        long long24 = dateTime1.getDeltaDays(dateTime22);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(100L);
        dateTime26.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean31 = dateTime26.isWeekday();
        int int32 = dateTime1.getYears(dateTime26);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime(100L);
        double double39 = dateTime36.getDeltaYears(dateTime38);
        int int40 = dateTime36.getHour();
        java.text.SimpleDateFormat simpleDateFormat42 = null;
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat42);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double46 = dateTime43.getDeltaYears(dateTime45);
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean51 = dateTime45.isEqual(dateTime50);
        java.util.Calendar calendar52 = dateTime45.getCal();
        dateTime36.set(calendar52);
        dateTime1.set(calendar52);
        dateTime1.set(0, (int) (short) 0, 2);
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime(dateTime1);
        java.lang.String str60 = dateTime59.toString();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 719795L + "'", long24 == 719795L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1870) + "'", int32 == (-1870));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-1972.041095890411d) + "'", double39 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(calendar52);
        org.junit.Assert.assertEquals(calendar52.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "02-Jan-0001" + "'", str60, "02-Jan-0001");
    }

    @Test
    public void test6750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6750");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean10 = dateTime4.isEqual(dateTime9);
        java.util.Calendar calendar11 = dateTime4.getCal();
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(calendar11);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(calendar11);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(100L);
        int int16 = dateTime15.getMs();
        java.text.SimpleDateFormat simpleDateFormat17 = net.ajaskey.common.Utils.sdf;
        dateTime15.setSdf(simpleDateFormat17);
        long long19 = dateTime13.getDeltaDays(dateTime15);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime(100L);
        double double26 = dateTime23.getDeltaYears(dateTime25);
        int int27 = dateTime23.getHour();
        java.text.SimpleDateFormat simpleDateFormat29 = null;
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat29);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double33 = dateTime30.getDeltaYears(dateTime32);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean38 = dateTime32.isEqual(dateTime37);
        java.util.Calendar calendar39 = dateTime32.getCal();
        dateTime23.set(calendar39);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime(calendar39);
        dateTime13.set(calendar39);
        dateTime13.set(1866, 595, 274);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(calendar11);
        org.junit.Assert.assertEquals(calendar11.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat17);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-1972.041095890411d) + "'", double26 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 10 + "'", int27 == 10);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(calendar39);
        org.junit.Assert.assertEquals(calendar39.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    }

    @Test
    public void test6751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6751");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        java.text.SimpleDateFormat simpleDateFormat10 = dateTime6.getSdf();
        boolean boolean11 = dateTime1.isLessThanOrEqual(dateTime6);
        java.util.Date date12 = dateTime6.getTime();
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(date12);
        net.ajaskey.common.DateTime dateTime15 = dateTime13.parse(" 0");
        net.ajaskey.common.DateTime dateTime17 = dateTime13.parse("Thu 10-Apr-0002 10:43:12");
        java.text.SimpleDateFormat simpleDateFormat19 = null;
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("  53", simpleDateFormat19);
        net.ajaskey.common.DateTime dateTime21 = dateTime13.copy(dateTime20);
        dateTime13.add(137, 182);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(date12);
// flaky:         org.junit.Assert.assertEquals(date12.toString(), "Thu Apr 10 10:47:08 MST 2");
        org.junit.Assert.assertNull(dateTime15);
        org.junit.Assert.assertNull(dateTime17);
        org.junit.Assert.assertNull(dateTime21);
    }

    @Test
    public void test6752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6752");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) 39);
        java.util.Calendar calendar2 = dateTime1.getCal();
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        long long9 = dateTime6.getDeltaDays(dateTime8);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat16 = null;
        java.text.SimpleDateFormat simpleDateFormat17 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime("January", simpleDateFormat16, simpleDateFormat17);
        java.text.SimpleDateFormat simpleDateFormat21 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime("January", simpleDateFormat21);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime("", simpleDateFormat21);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("", simpleDateFormat17, simpleDateFormat21);
        dateTime13.setSdf(simpleDateFormat17);
        dateTime8.setSdf(simpleDateFormat17);
        java.util.Calendar calendar27 = dateTime8.getCal();
        dateTime1.set(calendar27);
        org.junit.Assert.assertNotNull(calendar2);
        org.junit.Assert.assertEquals(calendar2.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-719795L) + "'", long9 == (-719795L));
        org.junit.Assert.assertNotNull(simpleDateFormat17);
        org.junit.Assert.assertNotNull(simpleDateFormat21);
        org.junit.Assert.assertNotNull(calendar27);
        org.junit.Assert.assertEquals(calendar27.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    }

    @Test
    public void test6753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6753");
        java.text.SimpleDateFormat simpleDateFormat1 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat2 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime("", simpleDateFormat1, simpleDateFormat2);
        boolean boolean4 = dateTime3.isWeekday();
        net.ajaskey.common.DateTime dateTime5 = null;
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime(dateTime5);
        dateTime6.set(42, 10, 10);
        java.util.Date date11 = dateTime6.getTime();
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(date11);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(date11);
        boolean boolean14 = dateTime13.isWeekday();
        boolean boolean15 = net.ajaskey.common.Utils.sameDate(dateTime3, dateTime13);
        dateTime13.setFirstWorkDay();
        dateTime13.add(342, 26);
        org.junit.Assert.assertNotNull(simpleDateFormat1);
        org.junit.Assert.assertNotNull(simpleDateFormat2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(date11);
// flaky:         org.junit.Assert.assertEquals(date11.toString(), "Sat Nov 10 10:47:08 MST 42");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test6754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6754");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean10 = dateTime4.isEqual(dateTime9);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(100L);
        int int13 = dateTime12.getMs();
        boolean boolean14 = dateTime9.isGreaterThanOrEqual(dateTime12);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(100L);
        dateTime16.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(100L);
        double double27 = dateTime24.getDeltaYears(dateTime26);
        boolean boolean28 = dateTime26.isWeekday();
        java.util.Date date29 = dateTime26.getTime();
        dateTime16.set(dateTime26);
        boolean boolean31 = net.ajaskey.common.Utils.sameDate(dateTime9, dateTime16);
        int int32 = dateTime9.getDayOfYear();
        dateTime9.set(1969, 59, 1869);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-1972.041095890411d) + "'", double27 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(date29);
        org.junit.Assert.assertEquals(date29.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
    }

    @Test
    public void test6755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6755");
        java.lang.String[] strArray6 = new java.lang.String[] { "     5.00" };
        java.util.List<java.io.File> fileList7 = net.ajaskey.common.Utils.getDirTree("                                                 100", strArray6);
        java.util.List<java.io.File> fileList8 = net.ajaskey.common.Utils.getDirTree("Sat 04-Jan-0100 17:00:00", strArray6);
        java.util.List<java.io.File> fileList9 = net.ajaskey.common.Utils.getDirTree("January     0     0                                                                                               52.00     0hi!     0", strArray6);
        java.util.List<java.io.File> fileList10 = net.ajaskey.common.Utils.getDirTree("January             -62,190,310,593,948             -62,190,310,593,948                                                                                               52.00             -62,190,310,593,948hi!             -62,190,310,593,948", strArray6);
        java.util.List<java.io.File> fileList11 = net.ajaskey.common.Utils.getDirTree("Thu 25-Jun-2020 10:45:00", strArray6);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNull(fileList7);
        org.junit.Assert.assertNull(fileList8);
        org.junit.Assert.assertNull(fileList9);
        org.junit.Assert.assertNull(fileList10);
        org.junit.Assert.assertNull(fileList11);
    }

    @Test
    public void test6756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6756");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (byte) 0, 13, 9);
        int int4 = dateTime3.getMs();
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 884 + "'", int4 == 884);
    }

    @Test
    public void test6757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6757");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        dateTime1.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str6 = dateTime1.getMonth();
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        dateTime8.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str13 = dateTime8.getMonth();
        int int14 = dateTime8.getMs();
        net.ajaskey.common.DateTime dateTime15 = dateTime1.copy(dateTime8);
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(100L);
        int int18 = dateTime17.getMs();
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime(100L);
        double double25 = dateTime22.getDeltaYears(dateTime24);
        java.text.SimpleDateFormat simpleDateFormat26 = dateTime22.getSdf();
        boolean boolean27 = dateTime17.isLessThanOrEqual(dateTime22);
        java.text.SimpleDateFormat simpleDateFormat29 = null;
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat29);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double33 = dateTime30.getDeltaYears(dateTime32);
        boolean boolean34 = dateTime30.isWeekday();
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long39 = dateTime30.getDeltaDays(dateTime38);
        long long40 = dateTime17.getDeltaDays(dateTime38);
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat46 = null;
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat46);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double50 = dateTime47.getDeltaYears(dateTime49);
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean55 = dateTime49.isEqual(dateTime54);
        java.util.Calendar calendar56 = dateTime49.getCal();
        boolean boolean57 = dateTime44.isLessThan(dateTime49);
        boolean boolean58 = net.ajaskey.common.Utils.sameDate(dateTime17, dateTime44);
        boolean boolean59 = dateTime8.isEqual(dateTime17);
        int int60 = dateTime8.getHour();
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime((int) (byte) 1, 6, (int) (short) 1);
        boolean boolean65 = dateTime8.isEqual(dateTime64);
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime(" 9", "         1");
        boolean boolean69 = dateTime8.isGreaterThanOrEqual(dateTime68);
        java.lang.String str70 = dateTime8.toFullString();
        net.ajaskey.common.DateTime dateTime72 = dateTime8.parse("                                         643");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "January" + "'", str6, "January");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "January" + "'", str13, "January");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + (-1972.041095890411d) + "'", double25 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 719795L + "'", long40 == 719795L);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(calendar56);
        org.junit.Assert.assertEquals(calendar56.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 5 + "'", int60 == 5);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Sat 04-Jan-0100 17:00:00" + "'", str70, "Sat 04-Jan-0100 17:00:00");
        org.junit.Assert.assertNull(dateTime72);
    }

    @Test
    public void test6758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6758");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:42:54", "                       25");
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) 10);
        boolean boolean5 = dateTime2.isGreaterThan(dateTime4);
        boolean boolean6 = dateTime4.isWeekday();
        java.lang.String str7 = dateTime4.format();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "BAD-DATE-FORMAT" + "'", str7, "BAD-DATE-FORMAT");
    }

    @Test
    public void test6759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6759");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        dateTime1.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
        double double12 = dateTime9.getDeltaYears(dateTime11);
        boolean boolean13 = dateTime11.isWeekday();
        java.util.Date date14 = dateTime11.getTime();
        dateTime1.set(dateTime11);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(100L);
        double double22 = dateTime19.getDeltaYears(dateTime21);
        int int23 = dateTime19.getHour();
        java.text.SimpleDateFormat simpleDateFormat25 = null;
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat25);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double29 = dateTime26.getDeltaYears(dateTime28);
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean34 = dateTime28.isEqual(dateTime33);
        java.util.Calendar calendar35 = dateTime28.getCal();
        dateTime19.set(calendar35);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(calendar35);
        boolean boolean38 = dateTime11.isGreaterThan(dateTime37);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((long) (byte) 100);
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime(25, 1, 0);
        boolean boolean45 = net.ajaskey.common.Utils.sameMonth(dateTime40, dateTime44);
        int int46 = dateTime40.getSecond();
        boolean boolean47 = net.ajaskey.common.Utils.sameDate(dateTime37, dateTime40);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime(0L);
        int int50 = dateTime40.getYears(dateTime49);
        boolean boolean51 = dateTime49.isWeekday();
        int int52 = dateTime49.getDayOfYear();
        java.lang.String str53 = dateTime49.getDay();
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1972.041095890411d) + "'", double12 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(date14);
        org.junit.Assert.assertEquals(date14.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-1972.041095890411d) + "'", double22 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(calendar35);
        org.junit.Assert.assertEquals(calendar35.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 365 + "'", int52 == 365);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Wednesday" + "'", str53, "Wednesday");
    }

    @Test
    public void test6760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6760");
        java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readGzipFile("Thu 10-Apr-0002 10:44:48", false);
        org.junit.Assert.assertNull(strList2);
    }

    @Test
    public void test6761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6761");
        java.util.Map<java.lang.String, java.lang.Integer> strMap0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = net.ajaskey.common.Utils.findName(strMap0, (java.lang.Integer) 821);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test6762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6762");
        java.lang.String[] strArray9 = new java.lang.String[] { "     5.00" };
        java.util.List<java.io.File> fileList10 = net.ajaskey.common.Utils.getDirTree("                                                 100", strArray9);
        java.util.List<java.io.File> fileList11 = net.ajaskey.common.Utils.getDirTree("         1", strArray9);
        java.util.List<java.io.File> fileList12 = net.ajaskey.common.Utils.getDirTree("", strArray9);
        java.util.List<java.io.File> fileList13 = net.ajaskey.common.Utils.getDirTree(" 9", strArray9);
        java.util.List<java.io.File> fileList14 = net.ajaskey.common.Utils.getDirTree("                            0.00", strArray9);
        java.util.List<java.io.File> fileList15 = net.ajaskey.common.Utils.getDirTree("   24", strArray9);
        java.util.List<java.io.File> fileList16 = net.ajaskey.common.Utils.getDirTree("                    25", strArray9);
        java.util.List<java.io.File> fileList17 = net.ajaskey.common.Utils.getDirTree("Thu 10-Apr-0002 10:47:04", strArray9);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNull(fileList10);
        org.junit.Assert.assertNull(fileList11);
        org.junit.Assert.assertNull(fileList12);
        org.junit.Assert.assertNull(fileList13);
        org.junit.Assert.assertNull(fileList14);
        org.junit.Assert.assertNull(fileList15);
        org.junit.Assert.assertNull(fileList16);
        org.junit.Assert.assertNull(fileList17);
    }

    @Test
    public void test6763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6763");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        java.text.SimpleDateFormat simpleDateFormat10 = dateTime6.getSdf();
        boolean boolean11 = dateTime1.isLessThanOrEqual(dateTime6);
        java.text.SimpleDateFormat simpleDateFormat13 = null;
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat13);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double17 = dateTime14.getDeltaYears(dateTime16);
        boolean boolean18 = dateTime14.isWeekday();
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long23 = dateTime14.getDeltaDays(dateTime22);
        long long24 = dateTime1.getDeltaDays(dateTime22);
        java.lang.String str25 = dateTime22.toFullString();
        java.util.Calendar calendar26 = dateTime22.getCal();
        int int27 = dateTime22.getSecond();
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime("                                                                                                                                                                                                                                                                     252", "            32");
        boolean boolean31 = dateTime22.isEqual(dateTime30);
        java.lang.String str32 = dateTime30.format();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 719795L + "'", long24 == 719795L);
// flaky:         org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Thu 10-Apr-0002 10:47:08" + "'", str25, "Thu 10-Apr-0002 10:47:08");
        org.junit.Assert.assertNotNull(calendar26);
// flaky:         org.junit.Assert.assertEquals(calendar26.toString(), "java.util.GregorianCalendar[time=-62190310371005,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=8,MILLISECOND=995,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 8 + "'", int27 == 8);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "BAD-DATE-FORMAT" + "'", str32, "BAD-DATE-FORMAT");
    }

    @Test
    public void test6764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6764");
        java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readTextFile("Thu 25-Jun-2020 10:45:22", false);
        java.lang.String str3 = net.ajaskey.common.TextUtils.toString(strList2);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
    }

    @Test
    public void test6765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6765");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        java.text.SimpleDateFormat simpleDateFormat8 = null;
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double12 = dateTime9.getDeltaYears(dateTime11);
        boolean boolean13 = dateTime9.isWeekday();
        boolean boolean14 = dateTime3.sameDate(dateTime9);
        int int15 = dateTime9.getDayOfMonth();
        int int16 = dateTime9.getHour();
        java.text.SimpleDateFormat simpleDateFormat18 = null;
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat18);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double22 = dateTime19.getDeltaYears(dateTime21);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean27 = dateTime21.isEqual(dateTime26);
        java.lang.String str28 = dateTime26.getDay();
        boolean boolean29 = dateTime26.isWeekday();
        java.lang.String str30 = dateTime26.getMonth();
        boolean boolean31 = dateTime9.isLessThanOrEqual(dateTime26);
        java.lang.String str32 = dateTime9.toFullString();
        boolean boolean33 = dateTime9.isNull();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Thursday" + "'", str28, "Thursday");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "April" + "'", str30, "April");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Invalid Time" + "'", str32, "Invalid Time");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test6766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6766");
        java.text.SimpleDateFormat simpleDateFormat2 = null;
        java.text.SimpleDateFormat simpleDateFormat3 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime("January", simpleDateFormat2, simpleDateFormat3);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime("100.00", simpleDateFormat2);
        java.text.SimpleDateFormat simpleDateFormat7 = null;
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat7);
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double11 = dateTime8.getDeltaYears(dateTime10);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean16 = dateTime10.isEqual(dateTime15);
        long long17 = dateTime5.getDeltaDays(dateTime15);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(dateTime5);
        int int19 = dateTime5.getDayOfYear();
        java.lang.String str20 = dateTime5.toString();
        org.junit.Assert.assertNotNull(simpleDateFormat3);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
    }

    @Test
    public void test6767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6767");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime(100L);
        int int3 = dateTime2.getMs();
        java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdf;
        dateTime2.setSdf(simpleDateFormat4);
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat4);
        java.text.SimpleDateFormat simpleDateFormat8 = null;
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double12 = dateTime9.getDeltaYears(dateTime11);
        boolean boolean13 = dateTime11.isNull();
        java.text.SimpleDateFormat simpleDateFormat15 = null;
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat15);
        dateTime16.set((int) ' ', 0, 11);
        boolean boolean21 = dateTime11.isGreaterThanOrEqual(dateTime16);
        double double22 = dateTime6.getDeltaYears(dateTime11);
        java.text.SimpleDateFormat simpleDateFormat24 = null;
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat24);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double28 = dateTime25.getDeltaYears(dateTime27);
        boolean boolean29 = dateTime27.isNull();
        boolean boolean30 = dateTime11.isGreaterThan(dateTime27);
        java.lang.String str31 = dateTime11.getMonth();
        java.text.SimpleDateFormat simpleDateFormat33 = null;
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat33);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double37 = dateTime34.getDeltaYears(dateTime36);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean42 = dateTime36.isEqual(dateTime41);
        java.util.Calendar calendar43 = dateTime36.getCal();
        java.lang.String str44 = dateTime36.format();
        net.ajaskey.common.DateTime dateTime45 = null;
        long long46 = dateTime36.getDeltaDays(dateTime45);
        int int47 = dateTime36.getSecond();
        int int48 = dateTime36.getHour();
        boolean boolean49 = dateTime11.isGreaterThanOrEqual(dateTime36);
        java.lang.String str50 = dateTime11.getDay();
        boolean boolean51 = dateTime11.isNull();
        java.lang.String str52 = dateTime11.format();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat4);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "December" + "'", str31, "December");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(calendar43);
        org.junit.Assert.assertEquals(calendar43.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "BAD-DATE-FORMAT" + "'", str44, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 5 + "'", int48 == 5);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Wednesday" + "'", str50, "Wednesday");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "BAD-DATE-FORMAT" + "'", str52, "BAD-DATE-FORMAT");
    }

    @Test
    public void test6768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6768");
        java.lang.String str2 = net.ajaskey.common.Utils.lfmt((long) (byte) -1, 12);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "          -1" + "'", str2, "          -1");
    }

    @Test
    public void test6769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6769");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        boolean boolean6 = dateTime2.isWeekday();
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long11 = dateTime2.getDeltaDays(dateTime10);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(dateTime2);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(100L);
        double double19 = dateTime16.getDeltaYears(dateTime18);
        boolean boolean20 = dateTime18.isWeekday();
        java.util.Date date21 = dateTime18.getTime();
        dateTime2.set(date21);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime(100L);
        int int25 = dateTime24.getMs();
        java.lang.String str26 = dateTime24.toString();
        boolean boolean27 = dateTime2.isLessThanOrEqual(dateTime24);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime(100L);
        double double34 = dateTime31.getDeltaYears(dateTime33);
        int int35 = dateTime31.getHour();
        java.text.SimpleDateFormat simpleDateFormat37 = null;
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat37);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double41 = dateTime38.getDeltaYears(dateTime40);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean46 = dateTime40.isEqual(dateTime45);
        java.util.Calendar calendar47 = dateTime40.getCal();
        dateTime31.set(calendar47);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime(calendar47);
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat55 = null;
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat55);
        boolean boolean57 = net.ajaskey.common.Utils.sameDate(dateTime53, dateTime56);
        boolean boolean58 = dateTime49.isGreaterThanOrEqual(dateTime53);
        java.text.SimpleDateFormat simpleDateFormat61 = null;
        java.text.SimpleDateFormat simpleDateFormat62 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime("January", simpleDateFormat61, simpleDateFormat62);
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime("100.00", simpleDateFormat61);
        java.lang.String str66 = dateTime64.format("");
        net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime("5.00", "     10");
        boolean boolean70 = net.ajaskey.common.Utils.sameMonth(dateTime64, dateTime69);
        boolean boolean71 = dateTime49.isEqual(dateTime64);
        boolean boolean72 = net.ajaskey.common.Utils.sameMonth(dateTime2, dateTime64);
        java.util.Date date73 = dateTime64.getTime();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-1972.041095890411d) + "'", double19 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(date21);
        org.junit.Assert.assertEquals(date21.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "31-Dec-1969" + "'", str26, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-1972.041095890411d) + "'", double34 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(calendar47);
        org.junit.Assert.assertEquals(calendar47.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(simpleDateFormat62);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "BAD-DATE-FORMAT" + "'", str66, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(date73);
    }

    @Test
    public void test6770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6770");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (byte) 1, 6, (int) (short) 1);
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(100L);
        double double10 = dateTime7.getDeltaYears(dateTime9);
        int int11 = dateTime7.getHour();
        dateTime7.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat16 = null;
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double20 = dateTime17.getDeltaYears(dateTime19);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean25 = dateTime19.isEqual(dateTime24);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(100L);
        int int28 = dateTime27.getMs();
        boolean boolean29 = dateTime24.isGreaterThanOrEqual(dateTime27);
        java.text.SimpleDateFormat simpleDateFormat31 = null;
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat31);
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double35 = dateTime32.getDeltaYears(dateTime34);
        boolean boolean36 = dateTime32.isWeekday();
        boolean boolean37 = dateTime27.isLessThanOrEqual(dateTime32);
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime(100L);
        dateTime39.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean44 = dateTime39.isWeekday();
        boolean boolean45 = dateTime27.isGreaterThanOrEqual(dateTime39);
        boolean boolean46 = dateTime7.sameDate(dateTime39);
        java.lang.String str47 = dateTime7.format();
        boolean boolean48 = dateTime3.sameDate(dateTime7);
        int int49 = dateTime3.getSecond();
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1972.041095890411d) + "'", double10 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "BAD-DATE-FORMAT" + "'", str47, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + 9 + "'", int49 == 9);
    }

    @Test
    public void test6771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6771");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        boolean boolean6 = dateTime2.isWeekday();
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long11 = dateTime2.getDeltaDays(dateTime10);
        dateTime10.set((int) (short) -1, (int) (byte) 0, (int) ' ');
        java.lang.String str16 = dateTime10.getDay();
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(dateTime10);
        java.lang.String str18 = dateTime17.format();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Wednesday" + "'", str16, "Wednesday");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "BAD-DATE-FORMAT" + "'", str18, "BAD-DATE-FORMAT");
    }

    @Test
    public void test6772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6772");
        net.ajaskey.common.Utils.TAB = "   42.00";
    }

    @Test
    public void test6773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6773");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:43:29", " -716,608");
        java.text.SimpleDateFormat simpleDateFormat3 = dateTime2.getSdf();
        int int4 = dateTime2.getHour();
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime(100L);
        int int8 = dateTime7.getMs();
        java.lang.String str9 = dateTime7.toString();
        dateTime7.set(25, (-1), (int) (short) 10);
        java.lang.String str14 = dateTime7.toString();
        java.text.SimpleDateFormat simpleDateFormat15 = dateTime7.getSdf();
        java.text.SimpleDateFormat simpleDateFormat20 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat22 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat23 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("", simpleDateFormat22, simpleDateFormat23);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat20, simpleDateFormat23);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat32 = null;
        java.text.SimpleDateFormat simpleDateFormat33 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime("January", simpleDateFormat32, simpleDateFormat33);
        java.text.SimpleDateFormat simpleDateFormat37 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime("January", simpleDateFormat37);
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime("", simpleDateFormat37);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime("", simpleDateFormat33, simpleDateFormat37);
        dateTime29.setSdf(simpleDateFormat33);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime("", simpleDateFormat23, simpleDateFormat33);
        java.text.SimpleDateFormat simpleDateFormat45 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat46 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime("", simpleDateFormat45, simpleDateFormat46);
        java.text.SimpleDateFormat simpleDateFormat50 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat51 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime("", simpleDateFormat50, simpleDateFormat51);
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime(100L);
        int int55 = dateTime54.getMs();
        java.text.SimpleDateFormat simpleDateFormat56 = net.ajaskey.common.Utils.sdf;
        dateTime54.setSdf(simpleDateFormat56);
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat51, simpleDateFormat56);
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime("     0", simpleDateFormat46, simpleDateFormat56);
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:43:16", simpleDateFormat33, simpleDateFormat46);
        java.text.SimpleDateFormat simpleDateFormat63 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat64 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime("", simpleDateFormat63, simpleDateFormat64);
        net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:42:54", simpleDateFormat63);
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime("                                             2,020.00", simpleDateFormat46, simpleDateFormat63);
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime("                                                                                                                                                                                                                                                                  43", simpleDateFormat15, simpleDateFormat63);
        dateTime68.set(393, 37, 752);
        boolean boolean73 = net.ajaskey.common.Utils.sameDate(dateTime2, dateTime68);
        org.junit.Assert.assertNull(simpleDateFormat3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "31-Dec-1969" + "'", str9, "31-Dec-1969");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "10-Dec-0024" + "'", str14, "10-Dec-0024");
        org.junit.Assert.assertNotNull(simpleDateFormat15);
        org.junit.Assert.assertNotNull(simpleDateFormat20);
        org.junit.Assert.assertNotNull(simpleDateFormat22);
        org.junit.Assert.assertNotNull(simpleDateFormat23);
        org.junit.Assert.assertNotNull(simpleDateFormat33);
        org.junit.Assert.assertNotNull(simpleDateFormat37);
        org.junit.Assert.assertNotNull(simpleDateFormat45);
        org.junit.Assert.assertNotNull(simpleDateFormat46);
        org.junit.Assert.assertNotNull(simpleDateFormat50);
        org.junit.Assert.assertNotNull(simpleDateFormat51);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat56);
        org.junit.Assert.assertNotNull(simpleDateFormat63);
        org.junit.Assert.assertNotNull(simpleDateFormat64);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test6774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6774");
        java.util.zip.ZipOutputStream zipOutputStream1 = null;
        // The following exception was thrown during execution in test generation
        try {
            net.ajaskey.common.Utils.writeToZipFile("Thu 10-Apr-0002 10:46:57", zipOutputStream1);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: Thu 10-Apr-0002 10:46:57 (The filename, directory name, or volume label syntax is incorrect)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
    }

    @Test
    public void test6775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6775");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        java.text.SimpleDateFormat simpleDateFormat8 = null;
        java.text.SimpleDateFormat simpleDateFormat9 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("January", simpleDateFormat8, simpleDateFormat9);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime("Thursday", simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(dateTime11);
        boolean boolean13 = dateTime2.isEqual(dateTime11);
        java.text.SimpleDateFormat simpleDateFormat15 = null;
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat15);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double19 = dateTime16.getDeltaYears(dateTime18);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean24 = dateTime18.isEqual(dateTime23);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(100L);
        int int27 = dateTime26.getMs();
        boolean boolean28 = dateTime23.isGreaterThanOrEqual(dateTime26);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime(100L);
        dateTime30.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime(100L);
        double double41 = dateTime38.getDeltaYears(dateTime40);
        boolean boolean42 = dateTime40.isWeekday();
        java.util.Date date43 = dateTime40.getTime();
        dateTime30.set(dateTime40);
        boolean boolean45 = net.ajaskey.common.Utils.sameDate(dateTime23, dateTime30);
        dateTime23.add((int) '#', 6);
        int int49 = dateTime2.getYears(dateTime23);
        java.lang.String str50 = dateTime2.getDay();
        int int51 = dateTime2.getDayOfWeek();
        int int52 = dateTime2.getDayOfMonth();
        int int53 = dateTime2.getDayOfYear();
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime(100L);
        double double60 = dateTime57.getDeltaYears(dateTime59);
        int int61 = dateTime57.getHour();
        dateTime57.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat66 = null;
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat66);
        net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double70 = dateTime67.getDeltaYears(dateTime69);
        boolean boolean71 = dateTime57.isEqual(dateTime69);
        net.ajaskey.common.DateTime dateTime73 = new net.ajaskey.common.DateTime(100L);
        dateTime73.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str78 = dateTime73.getMonth();
        int int79 = dateTime73.getMs();
        java.lang.String str81 = dateTime73.format("                                                                                               52.00");
        int int82 = dateTime73.getDayOfMonth();
        java.lang.String str84 = dateTime73.format(" 9");
        boolean boolean85 = dateTime57.isGreaterThanOrEqual(dateTime73);
        java.util.Date date86 = dateTime73.getTime();
        net.ajaskey.common.DateTime dateTime87 = new net.ajaskey.common.DateTime(date86);
        net.ajaskey.common.DateTime dateTime88 = new net.ajaskey.common.DateTime(date86);
        java.lang.String str90 = dateTime88.format("Wed 28-Jul-0062 10:46:55");
        boolean boolean91 = dateTime2.isLessThan(dateTime88);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(simpleDateFormat9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-1972.041095890411d) + "'", double41 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(date43);
        org.junit.Assert.assertEquals(date43.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "UNKNOWN" + "'", str50, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-1972.041095890411d) + "'", double60 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 10 + "'", int61 == 10);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "January" + "'", str78, "January");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 100 + "'", int79 == 100);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "                                                                                               52.00" + "'", str81, "                                                                                               52.00");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 4 + "'", int82 == 4);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + " 9" + "'", str84, " 9");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(date86);
        org.junit.Assert.assertEquals(date86.toString(), "Sat Jan 04 17:00:00 MST 100");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "BAD-DATE-FORMAT" + "'", str90, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test6776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6776");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        dateTime1.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str6 = dateTime1.getMonth();
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        dateTime8.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str13 = dateTime8.getMonth();
        int int14 = dateTime8.getMs();
        net.ajaskey.common.DateTime dateTime15 = dateTime1.copy(dateTime8);
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(100L);
        int int18 = dateTime17.getMs();
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime(100L);
        double double25 = dateTime22.getDeltaYears(dateTime24);
        java.text.SimpleDateFormat simpleDateFormat26 = dateTime22.getSdf();
        boolean boolean27 = dateTime17.isLessThanOrEqual(dateTime22);
        java.text.SimpleDateFormat simpleDateFormat29 = null;
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat29);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double33 = dateTime30.getDeltaYears(dateTime32);
        boolean boolean34 = dateTime30.isWeekday();
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long39 = dateTime30.getDeltaDays(dateTime38);
        long long40 = dateTime17.getDeltaDays(dateTime38);
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat46 = null;
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat46);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double50 = dateTime47.getDeltaYears(dateTime49);
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean55 = dateTime49.isEqual(dateTime54);
        java.util.Calendar calendar56 = dateTime49.getCal();
        boolean boolean57 = dateTime44.isLessThan(dateTime49);
        boolean boolean58 = net.ajaskey.common.Utils.sameDate(dateTime17, dateTime44);
        boolean boolean59 = dateTime8.isEqual(dateTime17);
        java.lang.String str60 = dateTime8.toFullString();
        int int61 = dateTime8.getMinute();
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat67 = null;
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat67);
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double71 = dateTime68.getDeltaYears(dateTime70);
        boolean boolean72 = dateTime65.isLessThan(dateTime70);
        java.lang.String str73 = dateTime70.toFullString();
        int int74 = dateTime70.getSecond();
        net.ajaskey.common.DateTime dateTime75 = new net.ajaskey.common.DateTime(dateTime70);
        dateTime75.add((int) ' ', 12);
        int int79 = dateTime75.getSecond();
        java.util.Date date80 = dateTime75.getTime();
        dateTime8.set(date80);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "January" + "'", str6, "January");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "January" + "'", str13, "January");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + (-1972.041095890411d) + "'", double25 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 719795L + "'", long40 == 719795L);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(calendar56);
        org.junit.Assert.assertEquals(calendar56.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Sat 04-Jan-0100 17:00:00" + "'", str60, "Sat 04-Jan-0100 17:00:00");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str73, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(date80);
        org.junit.Assert.assertEquals(date80.toString(), "Wed Dec 31 17:00:00 MST 1969");
    }

    @Test
    public void test6777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6777");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean4 = dateTime3.isNull();
        java.lang.String str5 = dateTime3.getDay();
        java.lang.String str6 = dateTime3.getMonth();
        java.lang.String str7 = dateTime3.getDay();
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(100L);
        double double14 = dateTime11.getDeltaYears(dateTime13);
        boolean boolean15 = dateTime13.isWeekday();
        java.util.Date date16 = dateTime13.getTime();
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(date16);
        dateTime3.set(date16);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(date16);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Thursday" + "'", str5, "Thursday");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "April" + "'", str6, "April");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Thursday" + "'", str7, "Thursday");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + (-1972.041095890411d) + "'", double14 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(date16);
        org.junit.Assert.assertEquals(date16.toString(), "Wed Dec 31 17:00:00 MST 1969");
    }

    @Test
    public void test6778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6778");
        net.ajaskey.common.TextUtils.printline("Thu 10-Apr-0002 10:44:59");
    }

    @Test
    public void test6779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6779");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("                                     1", "                                                                                            1,965.97");
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime(53, (int) (byte) 100, 28);
        java.lang.String str8 = dateTime6.format("                0");
        net.ajaskey.common.DateTime dateTime9 = dateTime2.copy(dateTime6);
        int int10 = dateTime2.getYear();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "                0" + "'", str8, "                0");
        org.junit.Assert.assertNotNull(dateTime9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test6780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6780");
        net.ajaskey.common.Utils.TAB = "                                                                                                                                                                                                                                                        41";
    }

    @Test
    public void test6781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6781");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean10 = dateTime4.isEqual(dateTime9);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(100L);
        int int13 = dateTime12.getMs();
        boolean boolean14 = dateTime9.isGreaterThanOrEqual(dateTime12);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime(100L);
        double double21 = dateTime18.getDeltaYears(dateTime20);
        java.util.Date date22 = dateTime18.getTime();
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime(date22);
        net.ajaskey.common.DateTime dateTime26 = dateTime23.parse("31-Dec-1969", "January");
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(100L);
        int int29 = dateTime28.getMs();
        java.lang.String str30 = dateTime28.toString();
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime(100L);
        double double37 = dateTime34.getDeltaYears(dateTime36);
        int int38 = dateTime34.getHour();
        int int39 = dateTime34.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(100L);
        double double46 = dateTime43.getDeltaYears(dateTime45);
        boolean boolean47 = dateTime45.isWeekday();
        boolean boolean48 = net.ajaskey.common.Utils.sameDate(dateTime34, dateTime45);
        boolean boolean49 = net.ajaskey.common.Utils.sameDate(dateTime28, dateTime34);
        dateTime23.set(dateTime34);
        java.util.Calendar calendar51 = dateTime34.getCal();
        dateTime9.set(calendar51);
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime(calendar51);
        int int54 = dateTime53.getHour();
        java.text.SimpleDateFormat simpleDateFormat56 = null;
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat56);
        dateTime57.set((int) ' ', 0, 11);
        boolean boolean62 = dateTime57.isWeekday();
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime(100L);
        int int65 = dateTime64.getMs();
        net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime(100L);
        double double72 = dateTime69.getDeltaYears(dateTime71);
        java.text.SimpleDateFormat simpleDateFormat73 = dateTime69.getSdf();
        boolean boolean74 = dateTime64.isLessThanOrEqual(dateTime69);
        java.util.Date date75 = dateTime69.getTime();
        dateTime57.set(date75);
        net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime(date75);
        java.util.Date date78 = dateTime77.getTime();
        net.ajaskey.common.DateTime dateTime80 = new net.ajaskey.common.DateTime(100L);
        int int81 = dateTime80.getMs();
        net.ajaskey.common.DateTime dateTime85 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime87 = new net.ajaskey.common.DateTime(100L);
        double double88 = dateTime85.getDeltaYears(dateTime87);
        java.text.SimpleDateFormat simpleDateFormat89 = dateTime85.getSdf();
        boolean boolean90 = dateTime80.isLessThanOrEqual(dateTime85);
        net.ajaskey.common.DateTime dateTime91 = new net.ajaskey.common.DateTime(dateTime80);
        dateTime91.add(0, (int) (short) 10);
        int int95 = dateTime77.getYears(dateTime91);
        int int96 = dateTime91.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime97 = dateTime53.copy(dateTime91);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-1972.041095890411d) + "'", double21 == (-1972.041095890411d));
        org.junit.Assert.assertNotNull(date22);
// flaky:         org.junit.Assert.assertEquals(date22.toString(), "Thu Apr 10 10:47:09 MST 2");
        org.junit.Assert.assertNull(dateTime26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "31-Dec-1969" + "'", str30, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-1972.041095890411d) + "'", double37 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 10 + "'", int38 == 10);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 10 + "'", int39 == 10);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-1972.041095890411d) + "'", double46 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(calendar51);
// flaky:         org.junit.Assert.assertEquals(calendar51.toString(), "java.util.GregorianCalendar[time=-62190310370701,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=9,MILLISECOND=299,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 10 + "'", int54 == 10);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 100 + "'", int65 == 100);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + (-1972.041095890411d) + "'", double72 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(date75);
// flaky:         org.junit.Assert.assertEquals(date75.toString(), "Thu Apr 10 10:47:09 MST 2");
        org.junit.Assert.assertNotNull(date78);
// flaky:         org.junit.Assert.assertEquals(date78.toString(), "Thu Apr 10 10:47:09 MST 2");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 100 + "'", int81 == 100);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + (-1972.041095890411d) + "'", double88 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 1967 + "'", int95 == 1967);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 31 + "'", int96 == 31);
        org.junit.Assert.assertNotNull(dateTime97);
    }

    @Test
    public void test6782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6782");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime(100L);
        int int3 = dateTime2.getMs();
        java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdf;
        dateTime2.setSdf(simpleDateFormat4);
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat4);
        java.text.SimpleDateFormat simpleDateFormat8 = null;
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double12 = dateTime9.getDeltaYears(dateTime11);
        boolean boolean13 = dateTime11.isNull();
        java.text.SimpleDateFormat simpleDateFormat15 = null;
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat15);
        dateTime16.set((int) ' ', 0, 11);
        boolean boolean21 = dateTime11.isGreaterThanOrEqual(dateTime16);
        double double22 = dateTime6.getDeltaYears(dateTime11);
        java.text.SimpleDateFormat simpleDateFormat24 = null;
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat24);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double28 = dateTime25.getDeltaYears(dateTime27);
        boolean boolean29 = dateTime27.isNull();
        boolean boolean30 = dateTime11.isGreaterThan(dateTime27);
        java.text.SimpleDateFormat simpleDateFormat32 = null;
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat32);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double36 = dateTime33.getDeltaYears(dateTime35);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(dateTime33);
        dateTime37.add((int) '#', (int) (short) 0);
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime(100L);
        int int44 = dateTime43.getMs();
        java.text.SimpleDateFormat simpleDateFormat45 = net.ajaskey.common.Utils.sdf;
        dateTime43.setSdf(simpleDateFormat45);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat45);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime((long) 53);
        boolean boolean50 = dateTime49.isWeekday();
        boolean boolean51 = dateTime47.sameDate(dateTime49);
        java.util.Date date52 = dateTime49.getTime();
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime(date52);
        dateTime37.set(date52);
        long long55 = dateTime27.getDeltaDays(dateTime37);
        java.lang.String str56 = dateTime27.toFullString();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat4);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat45);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(date52);
        org.junit.Assert.assertEquals(date52.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 0L + "'", long55 == 0L);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str56, "Wed 31-Dec-1969 17:00:00");
    }

    @Test
    public void test6783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6783");
        java.text.SimpleDateFormat simpleDateFormat2 = null;
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat2);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean11 = dateTime5.isEqual(dateTime10);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(100L);
        int int14 = dateTime13.getMs();
        boolean boolean15 = dateTime10.isGreaterThanOrEqual(dateTime13);
        java.text.SimpleDateFormat simpleDateFormat17 = null;
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat17);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double21 = dateTime18.getDeltaYears(dateTime20);
        boolean boolean22 = dateTime18.isWeekday();
        boolean boolean23 = dateTime13.isLessThanOrEqual(dateTime18);
        java.text.SimpleDateFormat simpleDateFormat25 = null;
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat25);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double29 = dateTime26.getDeltaYears(dateTime28);
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean34 = dateTime28.isEqual(dateTime33);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime(100L);
        int int37 = dateTime36.getMs();
        boolean boolean38 = dateTime33.isGreaterThanOrEqual(dateTime36);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime(100L);
        dateTime40.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime(100L);
        double double51 = dateTime48.getDeltaYears(dateTime50);
        boolean boolean52 = dateTime50.isWeekday();
        java.util.Date date53 = dateTime50.getTime();
        dateTime40.set(dateTime50);
        boolean boolean55 = net.ajaskey.common.Utils.sameDate(dateTime33, dateTime40);
        boolean boolean56 = dateTime13.isEqual(dateTime40);
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat63 = null;
        java.text.SimpleDateFormat simpleDateFormat64 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime("January", simpleDateFormat63, simpleDateFormat64);
        java.text.SimpleDateFormat simpleDateFormat68 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime("January", simpleDateFormat68);
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime("", simpleDateFormat68);
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime("", simpleDateFormat64, simpleDateFormat68);
        dateTime60.setSdf(simpleDateFormat64);
        dateTime40.setSdf(simpleDateFormat64);
        net.ajaskey.common.DateTime dateTime74 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:45:46", simpleDateFormat64);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-1972.041095890411d) + "'", double51 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(date53);
        org.junit.Assert.assertEquals(date53.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(simpleDateFormat64);
        org.junit.Assert.assertNotNull(simpleDateFormat68);
    }

    @Test
    public void test6784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6784");
        net.ajaskey.common.TextUtils.printline("                                             1");
    }

    @Test
    public void test6785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6785");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean10 = dateTime4.isEqual(dateTime9);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat16 = null;
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double20 = dateTime17.getDeltaYears(dateTime19);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean25 = dateTime19.isEqual(dateTime24);
        java.util.Calendar calendar26 = dateTime19.getCal();
        boolean boolean27 = dateTime14.isLessThan(dateTime19);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime("BAD-DATE-FORMAT", "                                                                                               52.00");
        double double31 = dateTime19.getDeltaYears(dateTime30);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(100L);
        double double38 = dateTime35.getDeltaYears(dateTime37);
        java.text.SimpleDateFormat simpleDateFormat40 = null;
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat40);
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double44 = dateTime41.getDeltaYears(dateTime43);
        boolean boolean45 = dateTime41.isWeekday();
        boolean boolean46 = dateTime35.sameDate(dateTime41);
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime(100L);
        double double53 = dateTime50.getDeltaYears(dateTime52);
        java.text.SimpleDateFormat simpleDateFormat55 = null;
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat55);
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double59 = dateTime56.getDeltaYears(dateTime58);
        boolean boolean60 = dateTime56.isWeekday();
        boolean boolean61 = dateTime50.sameDate(dateTime56);
        java.text.SimpleDateFormat simpleDateFormat63 = null;
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat63);
        net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double67 = dateTime64.getDeltaYears(dateTime66);
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean72 = dateTime66.isEqual(dateTime71);
        dateTime50.set(dateTime71);
        long long74 = dateTime35.getDeltaMilliSeconds(dateTime71);
        net.ajaskey.common.DateTime dateTime76 = new net.ajaskey.common.DateTime(100L);
        int int77 = dateTime76.getMs();
        net.ajaskey.common.DateTime dateTime81 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime83 = new net.ajaskey.common.DateTime(100L);
        double double84 = dateTime81.getDeltaYears(dateTime83);
        java.text.SimpleDateFormat simpleDateFormat85 = dateTime81.getSdf();
        boolean boolean86 = dateTime76.isLessThanOrEqual(dateTime81);
        int int87 = dateTime81.getDayOfYear();
        boolean boolean88 = dateTime81.isWeekday();
        boolean boolean89 = dateTime35.sameDate(dateTime81);
        int int90 = dateTime19.getYears(dateTime81);
        net.ajaskey.common.DateTime dateTime91 = new net.ajaskey.common.DateTime(dateTime81);
        boolean boolean92 = dateTime9.isEqual(dateTime91);
        java.lang.String str93 = dateTime91.getMonth();
        java.lang.String str94 = dateTime91.format();
        dateTime91.setFirstWorkDay();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(calendar26);
        org.junit.Assert.assertEquals(calendar26.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1972.041095890411d) + "'", double38 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-1972.041095890411d) + "'", double53 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long74 + "' != '" + 0L + "'", long74 == 0L);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 100 + "'", int77 == 100);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + (-1972.041095890411d) + "'", double84 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 100 + "'", int87 == 100);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1968) + "'", int90 == (-1968));
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "April" + "'", str93, "April");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "BAD-DATE-FORMAT" + "'", str94, "BAD-DATE-FORMAT");
    }

    @Test
    public void test6786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6786");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean10 = dateTime4.isEqual(dateTime9);
        java.util.Calendar calendar11 = dateTime4.getCal();
        java.lang.String str12 = dateTime4.format();
        net.ajaskey.common.DateTime dateTime13 = null;
        long long14 = dateTime4.getDeltaDays(dateTime13);
        int int15 = dateTime4.getSecond();
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(100L);
        int int18 = dateTime17.getMs();
        boolean boolean19 = dateTime17.isNull();
        java.util.Calendar calendar20 = dateTime17.getCal();
        dateTime4.set(calendar20);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(calendar20);
        net.ajaskey.common.DateTime dateTime23 = null;
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime(dateTime23);
        java.lang.String str26 = dateTime24.format("     5.00");
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(100L);
        int int30 = dateTime29.getMs();
        java.text.SimpleDateFormat simpleDateFormat31 = net.ajaskey.common.Utils.sdf;
        dateTime29.setSdf(simpleDateFormat31);
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat31);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((long) 53);
        boolean boolean36 = dateTime35.isWeekday();
        boolean boolean37 = dateTime33.sameDate(dateTime35);
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime(100L);
        int int40 = dateTime39.getMs();
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime(100L);
        double double47 = dateTime44.getDeltaYears(dateTime46);
        java.text.SimpleDateFormat simpleDateFormat48 = dateTime44.getSdf();
        boolean boolean49 = dateTime39.isLessThanOrEqual(dateTime44);
        java.text.SimpleDateFormat simpleDateFormat51 = null;
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat51);
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double55 = dateTime52.getDeltaYears(dateTime54);
        boolean boolean56 = dateTime52.isWeekday();
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long61 = dateTime52.getDeltaDays(dateTime60);
        long long62 = dateTime39.getDeltaDays(dateTime60);
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime(100L);
        dateTime64.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean69 = dateTime64.isWeekday();
        int int70 = dateTime39.getYears(dateTime64);
        java.text.SimpleDateFormat simpleDateFormat72 = null;
        net.ajaskey.common.DateTime dateTime73 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat72);
        net.ajaskey.common.DateTime dateTime75 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double76 = dateTime73.getDeltaYears(dateTime75);
        net.ajaskey.common.DateTime dateTime80 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean81 = dateTime75.isEqual(dateTime80);
        int int82 = dateTime75.getDayOfWeek();
        boolean boolean83 = dateTime64.isLessThan(dateTime75);
        boolean boolean84 = dateTime33.isLessThanOrEqual(dateTime64);
        long long85 = dateTime24.getDeltaDays(dateTime64);
        net.ajaskey.common.DateTime dateTime89 = new net.ajaskey.common.DateTime((int) 'a', 1869, (int) (byte) 0);
        int int90 = dateTime89.getYear();
        int int91 = dateTime64.getYears(dateTime89);
        java.util.Date date92 = dateTime89.getTime();
        net.ajaskey.common.DateTime dateTime93 = new net.ajaskey.common.DateTime(date92);
        dateTime22.set(date92);
        java.lang.String str95 = dateTime22.getMonth();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(calendar11);
        org.junit.Assert.assertEquals(calendar11.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "BAD-DATE-FORMAT" + "'", str12, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(calendar20);
        org.junit.Assert.assertEquals(calendar20.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "     5.00" + "'", str26, "     5.00");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-1972.041095890411d) + "'", double47 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 0L + "'", long61 == 0L);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 719795L + "'", long62 == 719795L);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1870) + "'", int70 == (-1870));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 4 + "'", int82 == 4);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 701439L + "'", long85 == 701439L);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 252 + "'", int90 == 252);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 152 + "'", int91 == 152);
        org.junit.Assert.assertNotNull(date92);
// flaky:         org.junit.Assert.assertEquals(date92.toString(), "Thu Sep 30 10:47:09 MST 252");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "September" + "'", str95, "September");
    }

    @Test
    public void test6787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6787");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) (byte) 100);
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(100L);
        java.util.Calendar calendar4 = dateTime3.getCal();
        java.text.SimpleDateFormat simpleDateFormat6 = null;
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat6);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double10 = dateTime7.getDeltaYears(dateTime9);
        boolean boolean11 = dateTime7.isWeekday();
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long16 = dateTime7.getDeltaDays(dateTime15);
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(dateTime7);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime(100L);
        double double24 = dateTime21.getDeltaYears(dateTime23);
        boolean boolean25 = dateTime23.isWeekday();
        java.util.Date date26 = dateTime23.getTime();
        dateTime7.set(date26);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(100L);
        int int30 = dateTime29.getMs();
        java.lang.String str31 = dateTime29.toString();
        boolean boolean32 = dateTime7.isLessThanOrEqual(dateTime29);
        net.ajaskey.common.DateTime dateTime35 = dateTime7.parse("", "100.00");
        dateTime7.add((int) (short) 0, (int) (short) -1);
        double double39 = dateTime3.getDeltaYears(dateTime7);
        double double40 = dateTime1.getDeltaYears(dateTime7);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime(100L);
        int int43 = dateTime42.getMs();
        java.lang.String str44 = dateTime42.toString();
        java.util.Date date45 = dateTime42.getTime();
        dateTime1.set(date45);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime(date45);
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime(date45);
        org.junit.Assert.assertNotNull(calendar4);
        org.junit.Assert.assertEquals(calendar4.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1972.041095890411d) + "'", double24 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(date26);
        org.junit.Assert.assertEquals(date26.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "31-Dec-1969" + "'", str31, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(dateTime35);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "31-Dec-1969" + "'", str44, "31-Dec-1969");
        org.junit.Assert.assertNotNull(date45);
        org.junit.Assert.assertEquals(date45.toString(), "Wed Dec 31 17:00:00 MST 1969");
    }

    @Test
    public void test6788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6788");
        java.text.SimpleDateFormat simpleDateFormat3 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat5 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat6 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("", simpleDateFormat5, simpleDateFormat6);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat3, simpleDateFormat6);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat15 = null;
        java.text.SimpleDateFormat simpleDateFormat16 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("January", simpleDateFormat15, simpleDateFormat16);
        java.text.SimpleDateFormat simpleDateFormat20 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("January", simpleDateFormat20);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime("", simpleDateFormat20);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime("", simpleDateFormat16, simpleDateFormat20);
        dateTime12.setSdf(simpleDateFormat16);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("", simpleDateFormat6, simpleDateFormat16);
        java.text.SimpleDateFormat simpleDateFormat28 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat29 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime("", simpleDateFormat28, simpleDateFormat29);
        java.text.SimpleDateFormat simpleDateFormat33 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat34 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("", simpleDateFormat33, simpleDateFormat34);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(100L);
        int int38 = dateTime37.getMs();
        java.text.SimpleDateFormat simpleDateFormat39 = net.ajaskey.common.Utils.sdf;
        dateTime37.setSdf(simpleDateFormat39);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat34, simpleDateFormat39);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime("     0", simpleDateFormat29, simpleDateFormat39);
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:43:16", simpleDateFormat16, simpleDateFormat29);
        java.lang.String str44 = dateTime43.getMonth();
        org.junit.Assert.assertNotNull(simpleDateFormat3);
        org.junit.Assert.assertNotNull(simpleDateFormat5);
        org.junit.Assert.assertNotNull(simpleDateFormat6);
        org.junit.Assert.assertNotNull(simpleDateFormat16);
        org.junit.Assert.assertNotNull(simpleDateFormat20);
        org.junit.Assert.assertNotNull(simpleDateFormat28);
        org.junit.Assert.assertNotNull(simpleDateFormat29);
        org.junit.Assert.assertNotNull(simpleDateFormat33);
        org.junit.Assert.assertNotNull(simpleDateFormat34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat39);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "April" + "'", str44, "April");
    }

    @Test
    public void test6789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6789");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        java.text.SimpleDateFormat simpleDateFormat8 = null;
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double12 = dateTime9.getDeltaYears(dateTime11);
        boolean boolean13 = dateTime9.isWeekday();
        boolean boolean14 = dateTime3.sameDate(dateTime9);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime(100L);
        double double21 = dateTime18.getDeltaYears(dateTime20);
        java.text.SimpleDateFormat simpleDateFormat23 = null;
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat23);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double27 = dateTime24.getDeltaYears(dateTime26);
        boolean boolean28 = dateTime24.isWeekday();
        boolean boolean29 = dateTime18.sameDate(dateTime24);
        java.text.SimpleDateFormat simpleDateFormat31 = null;
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat31);
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double35 = dateTime32.getDeltaYears(dateTime34);
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean40 = dateTime34.isEqual(dateTime39);
        dateTime18.set(dateTime39);
        long long42 = dateTime3.getDeltaMilliSeconds(dateTime39);
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime(100L);
        int int45 = dateTime44.getMs();
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime(100L);
        double double52 = dateTime49.getDeltaYears(dateTime51);
        java.text.SimpleDateFormat simpleDateFormat53 = dateTime49.getSdf();
        boolean boolean54 = dateTime44.isLessThanOrEqual(dateTime49);
        int int55 = dateTime49.getDayOfYear();
        boolean boolean56 = dateTime49.isWeekday();
        boolean boolean57 = dateTime3.sameDate(dateTime49);
        java.util.Date date58 = dateTime49.getTime();
        int int59 = dateTime49.getDayOfWeek();
        java.lang.String str60 = dateTime49.format();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-1972.041095890411d) + "'", double21 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-1972.041095890411d) + "'", double52 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(date58);
// flaky:         org.junit.Assert.assertEquals(date58.toString(), "Thu Apr 10 10:47:09 MST 2");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 5 + "'", int59 == 5);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "BAD-DATE-FORMAT" + "'", str60, "BAD-DATE-FORMAT");
    }

    @Test
    public void test6790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6790");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("2,020.00", "             719,528.00");
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        dateTime5.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(100L);
        double double16 = dateTime13.getDeltaYears(dateTime15);
        boolean boolean17 = dateTime15.isWeekday();
        java.util.Date date18 = dateTime15.getTime();
        dateTime5.set(dateTime15);
        java.text.SimpleDateFormat simpleDateFormat21 = null;
        java.text.SimpleDateFormat simpleDateFormat25 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat27 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat28 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime("", simpleDateFormat27, simpleDateFormat28);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat25, simpleDateFormat28);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime("10-Apr-0002", simpleDateFormat28);
        java.text.SimpleDateFormat simpleDateFormat34 = null;
        java.text.SimpleDateFormat simpleDateFormat35 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime("January", simpleDateFormat34, simpleDateFormat35);
        java.text.SimpleDateFormat simpleDateFormat39 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime("January", simpleDateFormat39);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime("", simpleDateFormat39);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime("", simpleDateFormat35, simpleDateFormat39);
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime("January                                                                                               52.00                                                                                               52.00                                                                                               52.00                                                                                               52.00hi!                                                                                               52.00", simpleDateFormat28, simpleDateFormat39);
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime("January", simpleDateFormat21, simpleDateFormat39);
        dateTime15.setSdf(simpleDateFormat39);
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime("            32", simpleDateFormat39);
        int int47 = dateTime2.getYears(dateTime46);
        java.text.SimpleDateFormat simpleDateFormat48 = dateTime46.getSdf();
        java.lang.String str50 = dateTime46.format
        java.util.Date date51 = dateTime46.getTime();
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-1972.041095890411d) + "'", double16 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(date18);
        org.junit.Assert.assertEquals(date18.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertNotNull(simpleDateFormat25);
        org.junit.Assert.assertNotNull(simpleDateFormat27);
        org.junit.Assert.assertNotNull(simpleDateFormat28);
        org.junit.Assert.assertNotNull(simpleDateFormat35);
        org.junit.Assert.assertNotNull(simpleDateFormat39);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNull(simpleDateFormat48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "BAD-DATE-FORMAT" + "'", str50, "BAD-DATE-FORMAT");
        org.junit.Assert.assertNull(date51);
    }

    @Test
    public void test6791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6791");
        java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat6 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat7 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime("", simpleDateFormat6, simpleDateFormat7);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat4, simpleDateFormat7);
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("10-Apr-0002", simpleDateFormat7);
        java.text.SimpleDateFormat simpleDateFormat13 = null;
        java.text.SimpleDateFormat simpleDateFormat14 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime("January", simpleDateFormat13, simpleDateFormat14);
        java.text.SimpleDateFormat simpleDateFormat18 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime("January", simpleDateFormat18);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("", simpleDateFormat18);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("", simpleDateFormat14, simpleDateFormat18);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime("January                                                                                               52.00                                                                                               52.00                                                                                               52.00                                                                                               52.00hi!                                                                                               52.00", simpleDateFormat7, simpleDateFormat18);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime("                                        33", simpleDateFormat7);
        int int24 = dateTime23.getDayOfWeek();
        org.junit.Assert.assertNotNull(simpleDateFormat4);
        org.junit.Assert.assertNotNull(simpleDateFormat6);
        org.junit.Assert.assertNotNull(simpleDateFormat7);
        org.junit.Assert.assertNotNull(simpleDateFormat14);
        org.junit.Assert.assertNotNull(simpleDateFormat18);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
    }

    @Test
    public void test6792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6792");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        java.text.SimpleDateFormat simpleDateFormat10 = dateTime6.getSdf();
        boolean boolean11 = dateTime1.isLessThanOrEqual(dateTime6);
        java.text.SimpleDateFormat simpleDateFormat13 = null;
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat13);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double17 = dateTime14.getDeltaYears(dateTime16);
        boolean boolean18 = dateTime14.isWeekday();
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long23 = dateTime14.getDeltaDays(dateTime22);
        long long24 = dateTime1.getDeltaDays(dateTime22);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat30 = null;
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat30);
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double34 = dateTime31.getDeltaYears(dateTime33);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean39 = dateTime33.isEqual(dateTime38);
        java.util.Calendar calendar40 = dateTime33.getCal();
        boolean boolean41 = dateTime28.isLessThan(dateTime33);
        boolean boolean42 = net.ajaskey.common.Utils.sameDate(dateTime1, dateTime28);
        int int43 = dateTime28.getDayOfWeek();
        java.util.Date date44 = null;
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(date44);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime(100L);
        double double52 = dateTime49.getDeltaYears(dateTime51);
        int int53 = dateTime49.getHour();
        java.text.SimpleDateFormat simpleDateFormat55 = null;
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat55);
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double59 = dateTime56.getDeltaYears(dateTime58);
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean64 = dateTime58.isEqual(dateTime63);
        java.util.Calendar calendar65 = dateTime58.getCal();
        dateTime49.set(calendar65);
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime(calendar65);
        net.ajaskey.common.DateTime dateTime68 = dateTime45.copy(dateTime67);
        net.ajaskey.common.DateTime dateTime72 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime74 = new net.ajaskey.common.DateTime(100L);
        double double75 = dateTime72.getDeltaYears(dateTime74);
        boolean boolean76 = dateTime74.isWeekday();
        int int77 = dateTime74.getDayOfYear();
        long long78 = dateTime68.getDeltaMilliSeconds(dateTime74);
        java.util.Calendar calendar79 = dateTime68.getCal();
        double double80 = dateTime28.getDeltaYears(dateTime68);
        net.ajaskey.common.DateTime dateTime83 = new net.ajaskey.common.DateTime("5.00", "     10");
        int int84 = dateTime83.getDayOfWeek();
        int int85 = dateTime83.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime89 = new net.ajaskey.common.DateTime(11, (int) (short) 1, 365);
        boolean boolean90 = net.ajaskey.common.Utils.sameMonth(dateTime83, dateTime89);
        int int91 = dateTime68.getYears(dateTime89);
        java.text.SimpleDateFormat simpleDateFormat92 = dateTime68.getSdf();
        net.ajaskey.common.DateTime dateTime95 = dateTime68.parse("                                                                                    40", "");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 719795L + "'", long24 == 719795L);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(calendar40);
        org.junit.Assert.assertEquals(calendar40.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 5 + "'", int43 == 5);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-1972.041095890411d) + "'", double52 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 10 + "'", int53 == 10);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(calendar65);
        org.junit.Assert.assertEquals(calendar65.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(dateTime68);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-1972.041095890411d) + "'", double75 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 365 + "'", int77 == 365);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 100L + "'", long78 == 100L);
        org.junit.Assert.assertNotNull(calendar79);
        org.junit.Assert.assertEquals(calendar79.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + (-1972.041095890411d) + "'", double80 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1958) + "'", int91 == (-1958));
// flaky:         org.junit.Assert.assertNotNull(simpleDateFormat92);
        org.junit.Assert.assertNull(dateTime95);
    }

    @Test
    public void test6793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6793");
        java.util.Map<java.lang.String, java.lang.Integer> strMap0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = net.ajaskey.common.Utils.findName(strMap0, (java.lang.Integer) 1966);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test6794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6794");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        dateTime1.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str6 = dateTime1.getMonth();
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        dateTime8.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str13 = dateTime8.getMonth();
        int int14 = dateTime8.getMs();
        net.ajaskey.common.DateTime dateTime15 = dateTime1.copy(dateTime8);
        int int16 = dateTime8.getSecond();
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(dateTime8);
        dateTime8.add(161, 44);
        java.text.SimpleDateFormat simpleDateFormat23 = null;
        java.text.SimpleDateFormat simpleDateFormat24 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("January", simpleDateFormat23, simpleDateFormat24);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime("100.00", simpleDateFormat23);
        java.text.SimpleDateFormat simpleDateFormat27 = dateTime26.getSdf();
        net.ajaskey.common.DateTime dateTime28 = dateTime8.copy(dateTime26);
        // The following exception was thrown during execution in test generation
        try {
            int int29 = dateTime28.getDayOfMonth();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "January" + "'", str6, "January");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "January" + "'", str13, "January");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(simpleDateFormat24);
        org.junit.Assert.assertNull(simpleDateFormat27);
        org.junit.Assert.assertNull(dateTime28);
    }

    @Test
    public void test6795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6795");
        net.ajaskey.common.Utils.sleep(431);
    }

    @Test
    public void test6796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6796");
        // The following exception was thrown during execution in test generation
        try {
            net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTimeri 31-Dec-0001 10:43:48");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal pattern character 'r'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test6797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6797");
        java.text.SimpleDateFormat simpleDateFormat2 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime("January", simpleDateFormat2);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime("", simpleDateFormat2);
        dateTime4.setFirstWorkDay();
        int int6 = dateTime4.getMs();
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(100L);
        double double13 = dateTime10.getDeltaYears(dateTime12);
        java.text.SimpleDateFormat simpleDateFormat15 = null;
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat15);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double19 = dateTime16.getDeltaYears(dateTime18);
        boolean boolean20 = dateTime16.isWeekday();
        boolean boolean21 = dateTime10.sameDate(dateTime16);
        java.text.SimpleDateFormat simpleDateFormat23 = null;
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat23);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double27 = dateTime24.getDeltaYears(dateTime26);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean32 = dateTime26.isEqual(dateTime31);
        dateTime10.set(dateTime31);
        java.lang.String str34 = dateTime31.toString();
        dateTime4.set(dateTime31);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime((long) (byte) 100);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime(25, 1, 0);
        boolean boolean42 = net.ajaskey.common.Utils.sameMonth(dateTime37, dateTime41);
        int int43 = dateTime37.getSecond();
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(100L);
        int int46 = dateTime45.getMs();
        java.text.SimpleDateFormat simpleDateFormat47 = net.ajaskey.common.Utils.sdf;
        dateTime45.setSdf(simpleDateFormat47);
        net.ajaskey.common.DateTime dateTime49 = dateTime37.copy(dateTime45);
        java.lang.String str50 = dateTime45.toFullString();
        double double51 = dateTime31.getDeltaYears(dateTime45);
        java.lang.String str52 = dateTime45.toFullString();
        org.junit.Assert.assertNotNull(simpleDateFormat2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-1972.041095890411d) + "'", double13 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "10-Apr-0002" + "'", str34, "10-Apr-0002");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat47);
        org.junit.Assert.assertNotNull(dateTime49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str50, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-1972.041095890411d) + "'", double51 == (-1972.041095890411d));
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str52, "Wed 31-Dec-1969 17:00:00");
    }

    @Test
    public void test6798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6798");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        long long6 = dateTime3.getDeltaDays(dateTime5);
        int int7 = dateTime3.getHour();
        dateTime3.add((int) (byte) 100, (int) (byte) 0);
        net.ajaskey.common.DateTime dateTime12 = dateTime3.parse("10-Apr-0002");
        boolean boolean13 = dateTime3.isWeekday();
        java.text.SimpleDateFormat simpleDateFormat14 = dateTime3.getSdf();
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-719795L) + "'", long6 == (-719795L));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertNull(dateTime12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(simpleDateFormat14);
    }

    @Test
    public void test6799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6799");
        java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readGzipFile("Thu 30-Apr-0268 10:45:29", true);
        org.junit.Assert.assertNull(strList2);
    }

    @Test
    public void test6800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6800");
        java.text.SimpleDateFormat simpleDateFormat3 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime("", simpleDateFormat3, simpleDateFormat4);
        java.text.SimpleDateFormat simpleDateFormat7 = null;
        java.text.SimpleDateFormat simpleDateFormat8 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("January", simpleDateFormat7, simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat3, simpleDateFormat8);
        java.text.SimpleDateFormat simpleDateFormat13 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat14 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime("", simpleDateFormat13, simpleDateFormat14);
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(100L);
        int int18 = dateTime17.getMs();
        java.text.SimpleDateFormat simpleDateFormat19 = net.ajaskey.common.Utils.sdf;
        dateTime17.setSdf(simpleDateFormat19);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat14, simpleDateFormat19);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime("                             100", simpleDateFormat8, simpleDateFormat14);
        java.text.SimpleDateFormat simpleDateFormat23 = dateTime22.getSdf();
        int int24 = dateTime22.getDayOfYear();
        org.junit.Assert.assertNotNull(simpleDateFormat3);
        org.junit.Assert.assertNotNull(simpleDateFormat4);
        org.junit.Assert.assertNotNull(simpleDateFormat8);
        org.junit.Assert.assertNotNull(simpleDateFormat13);
        org.junit.Assert.assertNotNull(simpleDateFormat14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat19);
        org.junit.Assert.assertNull(simpleDateFormat23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
    }

    @Test
    public void test6801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6801");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        int int7 = dateTime3.getHour();
        dateTime3.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat12 = null;
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat12);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double16 = dateTime13.getDeltaYears(dateTime15);
        boolean boolean17 = dateTime3.isEqual(dateTime15);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat23 = null;
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat23);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double27 = dateTime24.getDeltaYears(dateTime26);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean32 = dateTime26.isEqual(dateTime31);
        java.util.Calendar calendar33 = dateTime26.getCal();
        boolean boolean34 = dateTime21.isLessThan(dateTime26);
        dateTime21.setFirstWorkDay();
        boolean boolean36 = dateTime3.sameDate(dateTime21);
        net.ajaskey.common.DateTime dateTime37 = null;
        boolean boolean38 = net.ajaskey.common.Utils.sameMonth(dateTime3, dateTime37);
        java.text.SimpleDateFormat simpleDateFormat39 = dateTime3.getSdf();
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime(100L);
        int int42 = dateTime41.getMs();
        int int43 = dateTime41.getHour();
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat49 = null;
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat49);
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double53 = dateTime50.getDeltaYears(dateTime52);
        boolean boolean54 = dateTime47.isLessThan(dateTime52);
        java.lang.String str55 = dateTime52.toFullString();
        dateTime52.add(10, (int) (byte) -1);
        java.text.SimpleDateFormat simpleDateFormat60 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat62 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat63 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime("", simpleDateFormat62, simpleDateFormat63);
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat60, simpleDateFormat63);
        boolean boolean66 = dateTime52.isGreaterThan(dateTime65);
        boolean boolean67 = dateTime41.isEqual(dateTime52);
        double double68 = dateTime3.getDeltaYears(dateTime41);
        int int69 = dateTime3.getMs();
        boolean boolean70 = dateTime3.isWeekday();
        net.ajaskey.common.DateTime dateTime73 = new net.ajaskey.common.DateTime(100L);
        int int74 = dateTime73.getMs();
        java.text.SimpleDateFormat simpleDateFormat75 = net.ajaskey.common.Utils.sdf;
        dateTime73.setSdf(simpleDateFormat75);
        net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat75);
        net.ajaskey.common.DateTime dateTime79 = new net.ajaskey.common.DateTime((long) 53);
        boolean boolean80 = dateTime79.isWeekday();
        boolean boolean81 = dateTime77.sameDate(dateTime79);
        java.util.Date date82 = dateTime79.getTime();
        net.ajaskey.common.DateTime dateTime83 = new net.ajaskey.common.DateTime(date82);
        dateTime3.set(date82);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(calendar33);
        org.junit.Assert.assertEquals(calendar33.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(simpleDateFormat39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 5 + "'", int43 == 5);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str55, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertNotNull(simpleDateFormat60);
        org.junit.Assert.assertNotNull(simpleDateFormat62);
        org.junit.Assert.assertNotNull(simpleDateFormat63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-1972.041095890411d) + "'", double68 == (-1972.041095890411d));
// flaky:         org.junit.Assert.assertTrue("'" + int69 + "' != '" + 153 + "'", int69 == 153);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 100 + "'", int74 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat75);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(date82);
        org.junit.Assert.assertEquals(date82.toString(), "Wed Dec 31 17:00:00 MST 1969");
    }

    @Test
    public void test6802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6802");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("10-Apr-0002", "    0");
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        dateTime8.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str13 = dateTime8.getMonth();
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(100L);
        dateTime15.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str20 = dateTime15.getMonth();
        int int21 = dateTime15.getMs();
        net.ajaskey.common.DateTime dateTime22 = dateTime8.copy(dateTime15);
        dateTime6.set(dateTime8);
        dateTime6.setFirstWorkDay();
        boolean boolean25 = net.ajaskey.common.Utils.sameMonth(dateTime2, dateTime6);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(3, 0, 10);
        int int30 = dateTime29.getSecond();
        java.util.Date date31 = dateTime29.getTime();
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime(date31);
        dateTime2.set(date31);
        net.ajaskey.common.DateTime dateTime35 = dateTime2.parse("                                                                                                                                                                                                                                                                                                                                                            10");
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime(dateTime2);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "January" + "'", str13, "January");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "January" + "'", str20, "January");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        org.junit.Assert.assertNotNull(dateTime22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
        org.junit.Assert.assertNotNull(date31);
// flaky:         org.junit.Assert.assertEquals(date31.toString(), "Wed Jan 10 10:47:10 MST 3");
        org.junit.Assert.assertNull(dateTime35);
    }

    @Test
    public void test6803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6803");
        net.ajaskey.common.Utils.NL = "Thu 10-Apr-0002 10:46:24";
    }

    @Test
    public void test6804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6804");
        java.text.SimpleDateFormat simpleDateFormat1 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat2 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime("", simpleDateFormat1, simpleDateFormat2);
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(100L);
        double double10 = dateTime7.getDeltaYears(dateTime9);
        int int11 = dateTime7.getHour();
        java.text.SimpleDateFormat simpleDateFormat13 = null;
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat13);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double17 = dateTime14.getDeltaYears(dateTime16);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean22 = dateTime16.isEqual(dateTime21);
        java.util.Calendar calendar23 = dateTime16.getCal();
        dateTime7.set(calendar23);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime(calendar23);
        boolean boolean26 = dateTime3.isLessThan(dateTime25);
        int int27 = dateTime25.getHour();
        int int28 = dateTime25.getDayOfMonth();
        int int29 = dateTime25.getDayOfYear();
        java.lang.String str30 = dateTime25.toFullString();
        org.junit.Assert.assertNotNull(simpleDateFormat1);
        org.junit.Assert.assertNotNull(simpleDateFormat2);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1972.041095890411d) + "'", double10 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(calendar23);
        org.junit.Assert.assertEquals(calendar23.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 5 + "'", int27 == 5);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 31 + "'", int28 == 31);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 365 + "'", int29 == 365);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str30, "Wed 31-Dec-1969 17:00:00");
    }

    @Test
    public void test6805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6805");
        net.ajaskey.common.TextUtils.printline("Thu 10-Apr-0002 10:44:54");
    }

    @Test
    public void test6806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6806");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(62190310557275L);
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(100L);
        int int4 = dateTime3.getMs();
        java.lang.String str5 = dateTime3.toString();
        java.util.Date date6 = dateTime3.getTime();
        int int7 = dateTime3.getDayOfYear();
        java.lang.String str9 = dateTime3.format("Thu 10-Apr-0002 10:43:03");
        boolean boolean10 = dateTime1.isLessThanOrEqual(dateTime3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "31-Dec-1969" + "'", str5, "31-Dec-1969");
        org.junit.Assert.assertNotNull(date6);
        org.junit.Assert.assertEquals(date6.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 365 + "'", int7 == 365);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "BAD-DATE-FORMAT" + "'", str9, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test6807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6807");
        java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readTextFile("Mon 10-Apr-0002 10:42:58", false);
        org.junit.Assert.assertNotNull(strList2);
    }

    @Test
    public void test6808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6808");
        java.text.SimpleDateFormat simpleDateFormat5 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat7 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat8 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("", simpleDateFormat7, simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat5, simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime("10-Apr-0002", simpleDateFormat8);
        java.text.SimpleDateFormat simpleDateFormat14 = null;
        java.text.SimpleDateFormat simpleDateFormat15 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("January", simpleDateFormat14, simpleDateFormat15);
        java.text.SimpleDateFormat simpleDateFormat19 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("January", simpleDateFormat19);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("", simpleDateFormat19);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime("", simpleDateFormat15, simpleDateFormat19);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime("January                                                                                               52.00                                                                                               52.00                                                                                               52.00                                                                                               52.00hi!                                                                                               52.00", simpleDateFormat8, simpleDateFormat19);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(100L);
        double double30 = dateTime27.getDeltaYears(dateTime29);
        int int31 = dateTime27.getHour();
        dateTime27.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat36 = null;
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat36);
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double40 = dateTime37.getDeltaYears(dateTime39);
        boolean boolean41 = dateTime27.isEqual(dateTime39);
        java.text.SimpleDateFormat simpleDateFormat43 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat45 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat46 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime("", simpleDateFormat45, simpleDateFormat46);
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat43, simpleDateFormat46);
        dateTime27.setSdf(simpleDateFormat43);
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime("", simpleDateFormat8, simpleDateFormat43);
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime(100L);
        int int54 = dateTime53.getMs();
        java.text.SimpleDateFormat simpleDateFormat55 = net.ajaskey.common.Utils.sdf;
        dateTime53.setSdf(simpleDateFormat55);
        java.text.SimpleDateFormat simpleDateFormat57 = net.ajaskey.common.Utils.sdfFull;
        dateTime53.setSdf(simpleDateFormat57);
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime("Mon 10-Apr-0002 00:00:00", simpleDateFormat57);
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:43:08", simpleDateFormat8, simpleDateFormat57);
        java.util.Calendar calendar61 = dateTime60.getCal();
        org.junit.Assert.assertNotNull(simpleDateFormat5);
        org.junit.Assert.assertNotNull(simpleDateFormat7);
        org.junit.Assert.assertNotNull(simpleDateFormat8);
        org.junit.Assert.assertNotNull(simpleDateFormat15);
        org.junit.Assert.assertNotNull(simpleDateFormat19);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-1972.041095890411d) + "'", double30 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10 + "'", int31 == 10);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(simpleDateFormat43);
        org.junit.Assert.assertNotNull(simpleDateFormat45);
        org.junit.Assert.assertNotNull(simpleDateFormat46);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 100 + "'", int54 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat55);
        org.junit.Assert.assertNotNull(simpleDateFormat57);
        org.junit.Assert.assertNull(calendar61);
    }

    @Test
    public void test6809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6809");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("                                     100.00", simpleDateFormat1);
        int int3 = dateTime2.getYear();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test6810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6810");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        int int7 = dateTime3.getHour();
        int int8 = dateTime3.getDayOfMonth();
        int int9 = dateTime3.getYear();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10 + "'", int8 == 10);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
    }

    @Test
    public void test6811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6811");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        int int7 = dateTime3.getHour();
        dateTime3.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat12 = null;
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat12);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double16 = dateTime13.getDeltaYears(dateTime15);
        boolean boolean17 = dateTime3.isEqual(dateTime15);
        int int18 = dateTime3.getMinute();
        dateTime3.setFirstWorkDay();
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(100L);
        int int22 = dateTime21.getMs();
        java.lang.String str23 = dateTime21.toString();
        dateTime21.set(25, (-1), (int) (short) 10);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat33 = null;
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat33);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double37 = dateTime34.getDeltaYears(dateTime36);
        boolean boolean38 = dateTime31.isLessThan(dateTime36);
        java.lang.String str39 = dateTime36.toFullString();
        dateTime36.add(10, (int) (byte) -1);
        java.text.SimpleDateFormat simpleDateFormat44 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat46 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat47 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime("", simpleDateFormat46, simpleDateFormat47);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat44, simpleDateFormat47);
        boolean boolean50 = dateTime36.isGreaterThan(dateTime49);
        net.ajaskey.common.DateTime dateTime53 = dateTime36.parse("                              10", "Mon 06-Jan-0100 17:00:00");
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime(100L);
        double double60 = dateTime57.getDeltaYears(dateTime59);
        int int61 = dateTime57.getHour();
        dateTime57.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat66 = null;
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat66);
        net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double70 = dateTime67.getDeltaYears(dateTime69);
        boolean boolean71 = dateTime57.isEqual(dateTime69);
        net.ajaskey.common.DateTime dateTime75 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat77 = null;
        net.ajaskey.common.DateTime dateTime78 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat77);
        net.ajaskey.common.DateTime dateTime80 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double81 = dateTime78.getDeltaYears(dateTime80);
        net.ajaskey.common.DateTime dateTime85 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean86 = dateTime80.isEqual(dateTime85);
        java.util.Calendar calendar87 = dateTime80.getCal();
        boolean boolean88 = dateTime75.isLessThan(dateTime80);
        dateTime75.setFirstWorkDay();
        boolean boolean90 = dateTime57.sameDate(dateTime75);
        int int91 = dateTime75.getYear();
        net.ajaskey.common.DateTime dateTime92 = dateTime36.copy(dateTime75);
        boolean boolean93 = dateTime21.isEqual(dateTime92);
        boolean boolean94 = dateTime3.sameDate(dateTime21);
        int int95 = dateTime21.getDayOfMonth();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 47 + "'", int18 == 47);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "31-Dec-1969" + "'", str23, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str39, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertNotNull(simpleDateFormat44);
        org.junit.Assert.assertNotNull(simpleDateFormat46);
        org.junit.Assert.assertNotNull(simpleDateFormat47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(dateTime53);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-1972.041095890411d) + "'", double60 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 10 + "'", int61 == 10);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(calendar87);
        org.junit.Assert.assertEquals(calendar87.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 2 + "'", int91 == 2);
        org.junit.Assert.assertNotNull(dateTime92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 10 + "'", int95 == 10);
    }

    @Test
    public void test6812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6812");
        java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat6 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat7 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime("", simpleDateFormat6, simpleDateFormat7);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat4, simpleDateFormat7);
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("10-Apr-0002", simpleDateFormat7);
        java.text.SimpleDateFormat simpleDateFormat13 = null;
        java.text.SimpleDateFormat simpleDateFormat14 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime("January", simpleDateFormat13, simpleDateFormat14);
        java.text.SimpleDateFormat simpleDateFormat18 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime("January", simpleDateFormat18);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("", simpleDateFormat18);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("", simpleDateFormat14, simpleDateFormat18);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime("January                                                                                               52.00                                                                                               52.00                                                                                               52.00                                                                                               52.00hi!                                                                                               52.00", simpleDateFormat7, simpleDateFormat18);
        java.text.SimpleDateFormat simpleDateFormat24 = null;
        java.text.SimpleDateFormat simpleDateFormat25 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime("January", simpleDateFormat24, simpleDateFormat25);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime("December", simpleDateFormat18, simpleDateFormat25);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(100L);
        int int30 = dateTime29.getMs();
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime(100L);
        double double37 = dateTime34.getDeltaYears(dateTime36);
        java.text.SimpleDateFormat simpleDateFormat38 = dateTime34.getSdf();
        boolean boolean39 = dateTime29.isLessThanOrEqual(dateTime34);
        java.text.SimpleDateFormat simpleDateFormat41 = null;
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat41);
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double45 = dateTime42.getDeltaYears(dateTime44);
        boolean boolean46 = dateTime42.isWeekday();
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long51 = dateTime42.getDeltaDays(dateTime50);
        long long52 = dateTime29.getDeltaDays(dateTime50);
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime(100L);
        int int55 = dateTime54.getMs();
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime(100L);
        double double62 = dateTime59.getDeltaYears(dateTime61);
        java.text.SimpleDateFormat simpleDateFormat63 = dateTime59.getSdf();
        boolean boolean64 = dateTime54.isLessThanOrEqual(dateTime59);
        java.util.Date date65 = dateTime59.getTime();
        net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime(date65);
        dateTime50.set(date65);
        long long68 = dateTime27.getDeltaDays(dateTime50);
        dateTime27.set(182, 191, 268);
        org.junit.Assert.assertNotNull(simpleDateFormat4);
        org.junit.Assert.assertNotNull(simpleDateFormat6);
        org.junit.Assert.assertNotNull(simpleDateFormat7);
        org.junit.Assert.assertNotNull(simpleDateFormat14);
        org.junit.Assert.assertNotNull(simpleDateFormat18);
        org.junit.Assert.assertNotNull(simpleDateFormat25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-1972.041095890411d) + "'", double37 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 719795L + "'", long52 == 719795L);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-1972.041095890411d) + "'", double62 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(date65);
// flaky:         org.junit.Assert.assertEquals(date65.toString(), "Thu Apr 10 10:47:10 MST 2");
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 0L + "'", long68 == 0L);
    }

    @Test
    public void test6813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6813");
        java.util.zip.ZipOutputStream zipOutputStream1 = null;
        // The following exception was thrown during execution in test generation
        try {
            net.ajaskey.common.Utils.writeToZipFile("3", zipOutputStream1);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: 3 (The system cannot find the file specified)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
    }

    @Test
    public void test6814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6814");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) 3);
        int int2 = dateTime1.getMs();
        dateTime1.setFirstWorkDay();
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime((long) (short) 0);
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime(100L);
        int int8 = dateTime7.getMs();
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(100L);
        double double15 = dateTime12.getDeltaYears(dateTime14);
        java.text.SimpleDateFormat simpleDateFormat16 = dateTime12.getSdf();
        boolean boolean17 = dateTime7.isLessThanOrEqual(dateTime12);
        java.text.SimpleDateFormat simpleDateFormat19 = null;
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat19);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double23 = dateTime20.getDeltaYears(dateTime22);
        boolean boolean24 = dateTime20.isWeekday();
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long29 = dateTime20.getDeltaDays(dateTime28);
        long long30 = dateTime7.getDeltaDays(dateTime28);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime(100L);
        dateTime32.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean37 = dateTime32.isWeekday();
        int int38 = dateTime7.getYears(dateTime32);
        int int39 = dateTime7.getYear();
        java.util.Calendar calendar40 = dateTime7.getCal();
        net.ajaskey.common.DateTime dateTime41 = dateTime5.copy(dateTime7);
        java.util.Calendar calendar42 = dateTime7.getCal();
        dateTime1.set(calendar42);
        net.ajaskey.common.DateTime dateTime46 = dateTime1.parse("Thu 10-Apr-0002 10:44:32", "       4");
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime((int) (byte) 10, (int) (byte) 0, 2);
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime(dateTime50);
        boolean boolean52 = dateTime1.isGreaterThanOrEqual(dateTime51);
        java.lang.String str54 = dateTime51.format("Thu 10-Apr-0002 10:45:49");
        boolean boolean55 = dateTime51.isWeekday();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 3 + "'", int2 == 3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-1972.041095890411d) + "'", double15 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 719795L + "'", long30 == 719795L);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1870) + "'", int38 == (-1870));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1969 + "'", int39 == 1969);
        org.junit.Assert.assertNotNull(calendar40);
        org.junit.Assert.assertEquals(calendar40.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(dateTime41);
        org.junit.Assert.assertNotNull(calendar42);
        org.junit.Assert.assertEquals(calendar42.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNull(dateTime46);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "BAD-DATE-FORMAT" + "'", str54, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }

    @Test
    public void test6815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6815");
        net.ajaskey.common.Utils.NL = "                                                                                                                                               62,190,310,594,996";
    }

    @Test
    public void test6816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6816");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(62190310564845L);
        int int2 = dateTime1.getSecond();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 4 + "'", int2 == 4);
    }

    @Test
    public void test6817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6817");
        net.ajaskey.common.Utils.TAB = "Sat 10-Nov-0042 10:45:23";
    }

    @Test
    public void test6818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6818");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(956, 233, 933);
    }

    @Test
    public void test6819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6819");
        net.ajaskey.common.DateTime dateTime0 = null;
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(dateTime0);
        dateTime1.set(42, 10, 10);
        java.lang.String str7 = dateTime1.format("                                                                                                                                                                                                                                                                                                                                                                        1,869");
        int int8 = dateTime1.getMinute();
        dateTime1.setFirstWorkDay();
        int int10 = dateTime1.getDayOfWeek();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "                                                                                                                                                                                                                                                                                                                                                                        1,869" + "'", str7, "                                                                                                                                                                                                                                                                                                                                                                        1,869");
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 47 + "'", int8 == 47);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
    }

    @Test
    public void test6820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6820");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        boolean boolean7 = dateTime5.isWeekday();
        java.util.Date date8 = dateTime5.getTime();
        int int9 = dateTime5.getDayOfWeek();
        java.lang.String str10 = dateTime5.toFullString();
        net.ajaskey.common.DateTime dateTime13 = dateTime5.parse("    25", "                                                                                                   5");
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(100L);
        double double20 = dateTime17.getDeltaYears(dateTime19);
        java.text.SimpleDateFormat simpleDateFormat22 = null;
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat22);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double26 = dateTime23.getDeltaYears(dateTime25);
        boolean boolean27 = dateTime23.isWeekday();
        boolean boolean28 = dateTime17.sameDate(dateTime23);
        boolean boolean29 = dateTime5.isLessThanOrEqual(dateTime17);
        java.lang.String str30 = dateTime5.getMonth();
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime(100L);
        int int33 = dateTime32.getMs();
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime(100L);
        double double40 = dateTime37.getDeltaYears(dateTime39);
        java.text.SimpleDateFormat simpleDateFormat41 = dateTime37.getSdf();
        boolean boolean42 = dateTime32.isLessThanOrEqual(dateTime37);
        boolean boolean43 = dateTime37.isWeekday();
        java.lang.String str44 = dateTime37.toString();
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime(100L);
        int int47 = dateTime46.getMs();
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime(100L);
        double double54 = dateTime51.getDeltaYears(dateTime53);
        java.text.SimpleDateFormat simpleDateFormat55 = dateTime51.getSdf();
        boolean boolean56 = dateTime46.isLessThanOrEqual(dateTime51);
        java.text.SimpleDateFormat simpleDateFormat58 = null;
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat58);
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double62 = dateTime59.getDeltaYears(dateTime61);
        boolean boolean63 = dateTime59.isWeekday();
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long68 = dateTime59.getDeltaDays(dateTime67);
        long long69 = dateTime46.getDeltaDays(dateTime67);
        java.lang.String str70 = dateTime67.toFullString();
        java.util.Calendar calendar71 = dateTime67.getCal();
        boolean boolean72 = dateTime37.isLessThan(dateTime67);
        net.ajaskey.common.DateTime dateTime73 = new net.ajaskey.common.DateTime(dateTime67);
        java.lang.String str74 = dateTime67.toString();
        int int75 = dateTime67.getMs();
        int int76 = dateTime5.getYears(dateTime67);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(date8);
        org.junit.Assert.assertEquals(date8.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 4 + "'", int9 == 4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str10, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertNull(dateTime13);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-1972.041095890411d) + "'", double20 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "December" + "'", str30, "December");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-1972.041095890411d) + "'", double40 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "10-Apr-0002" + "'", str44, "10-Apr-0002");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-1972.041095890411d) + "'", double54 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 0L + "'", long68 == 0L);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 719795L + "'", long69 == 719795L);
// flaky:         org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Thu 10-Apr-0002 10:47:10" + "'", str70, "Thu 10-Apr-0002 10:47:10");
        org.junit.Assert.assertNotNull(calendar71);
// flaky:         org.junit.Assert.assertEquals(calendar71.toString(), "java.util.GregorianCalendar[time=-62190310369536,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=10,MILLISECOND=464,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "10-Apr-0002" + "'", str74, "10-Apr-0002");
// flaky:         org.junit.Assert.assertTrue("'" + int75 + "' != '" + 464 + "'", int75 == 464);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1968) + "'", int76 == (-1968));
    }

    @Test
    public void test6821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6821");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(569, 101, 0);
        boolean boolean4 = dateTime3.isWeekday();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test6822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6822");
        java.text.SimpleDateFormat simpleDateFormat2 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat3 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime("", simpleDateFormat2, simpleDateFormat3);
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime(100L);
        int int7 = dateTime6.getMs();
        java.text.SimpleDateFormat simpleDateFormat8 = net.ajaskey.common.Utils.sdf;
        dateTime6.setSdf(simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat3, simpleDateFormat8);
        java.text.SimpleDateFormat simpleDateFormat12 = null;
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat12);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double16 = dateTime13.getDeltaYears(dateTime15);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean21 = dateTime15.isEqual(dateTime20);
        java.util.Calendar calendar22 = dateTime15.getCal();
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime(calendar22);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime(calendar22);
        boolean boolean25 = dateTime10.isGreaterThan(dateTime24);
        java.util.Date date26 = dateTime10.getTime();
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(100L);
        dateTime28.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime(100L);
        double double39 = dateTime36.getDeltaYears(dateTime38);
        boolean boolean40 = dateTime38.isWeekday();
        java.util.Date date41 = dateTime38.getTime();
        dateTime28.set(dateTime38);
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime(100L);
        double double49 = dateTime46.getDeltaYears(dateTime48);
        int int50 = dateTime46.getHour();
        java.text.SimpleDateFormat simpleDateFormat52 = null;
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat52);
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double56 = dateTime53.getDeltaYears(dateTime55);
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean61 = dateTime55.isEqual(dateTime60);
        java.util.Calendar calendar62 = dateTime55.getCal();
        dateTime46.set(calendar62);
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime(calendar62);
        boolean boolean65 = dateTime38.isGreaterThan(dateTime64);
        net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean70 = dateTime69.isNull();
        java.lang.String str71 = dateTime69.getDay();
        java.text.SimpleDateFormat simpleDateFormat72 = dateTime69.getSdf();
        int int73 = dateTime69.getHour();
        net.ajaskey.common.DateTime dateTime74 = new net.ajaskey.common.DateTime(dateTime69);
        boolean boolean75 = dateTime38.isGreaterThan(dateTime74);
        net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime(100L);
        int int78 = dateTime77.getMs();
        java.lang.String str79 = dateTime77.toString();
        dateTime77.set(25, (-1), (int) (short) 10);
        net.ajaskey.common.DateTime dateTime87 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime89 = new net.ajaskey.common.DateTime(100L);
        double double90 = dateTime87.getDeltaYears(dateTime89);
        boolean boolean91 = dateTime89.isWeekday();
        boolean boolean92 = net.ajaskey.common.Utils.sameMonth(dateTime77, dateTime89);
        long long93 = dateTime38.getDeltaMilliSeconds(dateTime89);
        net.ajaskey.common.DateTime dateTime94 = dateTime10.copy(dateTime38);
        int int95 = dateTime10.getHour();
        org.junit.Assert.assertNotNull(simpleDateFormat2);
        org.junit.Assert.assertNotNull(simpleDateFormat3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat8);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(calendar22);
        org.junit.Assert.assertEquals(calendar22.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(date26);
        org.junit.Assert.assertEquals(date26.toString(), "Wed Dec 31 00:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-1972.041095890411d) + "'", double39 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(date41);
        org.junit.Assert.assertEquals(date41.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-1972.041095890411d) + "'", double49 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 10 + "'", int50 == 10);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(calendar62);
        org.junit.Assert.assertEquals(calendar62.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Thursday" + "'", str71, "Thursday");
        org.junit.Assert.assertNull(simpleDateFormat72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 10 + "'", int73 == 10);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 100 + "'", int78 == 100);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "31-Dec-1969" + "'", str79, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-1972.041095890411d) + "'", double90 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + long93 + "' != '" + 0L + "'", long93 == 0L);
        org.junit.Assert.assertNotNull(dateTime94);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 0 + "'", int95 == 0);
    }

    @Test
    public void test6823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6823");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat6 = null;
        java.text.SimpleDateFormat simpleDateFormat7 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime("January", simpleDateFormat6, simpleDateFormat7);
        java.text.SimpleDateFormat simpleDateFormat11 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime("January", simpleDateFormat11);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("", simpleDateFormat11);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime("", simpleDateFormat7, simpleDateFormat11);
        dateTime3.setSdf(simpleDateFormat7);
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime((long) (short) 0);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime(100L);
        double double24 = dateTime21.getDeltaYears(dateTime23);
        int int25 = dateTime21.getHour();
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime();
        net.ajaskey.common.DateTime dateTime27 = null;
        boolean boolean28 = dateTime26.isGreaterThan(dateTime27);
        java.text.SimpleDateFormat simpleDateFormat30 = null;
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat30);
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double34 = dateTime31.getDeltaYears(dateTime33);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean39 = dateTime33.isEqual(dateTime38);
        java.util.Calendar calendar40 = dateTime33.getCal();
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime(calendar40);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime(calendar40);
        boolean boolean43 = dateTime26.isLessThan(dateTime42);
        boolean boolean44 = dateTime21.isLessThan(dateTime26);
        boolean boolean45 = dateTime17.isGreaterThan(dateTime26);
        boolean boolean46 = dateTime3.isGreaterThanOrEqual(dateTime26);
        boolean boolean47 = dateTime26.isNull();
        java.lang.String str48 = dateTime26.getDay();
        org.junit.Assert.assertNotNull(simpleDateFormat7);
        org.junit.Assert.assertNotNull(simpleDateFormat11);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1972.041095890411d) + "'", double24 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(calendar40);
        org.junit.Assert.assertEquals(calendar40.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Thursday" + "'", str48, "Thursday");
    }

    @Test
    public void test6824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6824");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        java.util.Date date7 = dateTime3.getTime();
        net.ajaskey.common.DateTime dateTime9 = dateTime3.parse("Thu 10-Apr-0002 10:43:08");
        // The following exception was thrown during execution in test generation
        try {
            int int10 = dateTime9.getSecond();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertNotNull(date7);
// flaky:         org.junit.Assert.assertEquals(date7.toString(), "Thu Apr 10 10:47:10 MST 2");
        org.junit.Assert.assertNull(dateTime9);
    }

    @Test
    public void test6825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6825");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(0, 845, 57);
        net.ajaskey.common.DateTime dateTime4 = null;
        boolean boolean5 = net.ajaskey.common.Utils.sameMonth(dateTime3, dateTime4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test6826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6826");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("BAD-DATE-FORMAT", "                                                                                               52.00");
        int int3 = dateTime2.getMinute();
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(100L);
        double double10 = dateTime7.getDeltaYears(dateTime9);
        boolean boolean11 = dateTime9.isWeekday();
        int int12 = dateTime9.getDayOfYear();
        boolean boolean13 = dateTime2.isEqual(dateTime9);
        int int14 = dateTime2.getMs();
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(100L);
        java.util.Calendar calendar17 = dateTime16.getCal();
        java.text.SimpleDateFormat simpleDateFormat19 = null;
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat19);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double23 = dateTime20.getDeltaYears(dateTime22);
        boolean boolean24 = dateTime20.isWeekday();
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long29 = dateTime20.getDeltaDays(dateTime28);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime(dateTime20);
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime(100L);
        double double37 = dateTime34.getDeltaYears(dateTime36);
        boolean boolean38 = dateTime36.isWeekday();
        java.util.Date date39 = dateTime36.getTime();
        dateTime20.set(date39);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime(100L);
        int int43 = dateTime42.getMs();
        java.lang.String str44 = dateTime42.toString();
        boolean boolean45 = dateTime20.isLessThanOrEqual(dateTime42);
        net.ajaskey.common.DateTime dateTime48 = dateTime20.parse("", "100.00");
        dateTime20.add((int) (short) 0, (int) (short) -1);
        double double52 = dateTime16.getDeltaYears(dateTime20);
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime(100L);
        java.util.Calendar calendar55 = dateTime54.getCal();
        dateTime20.set(calendar55);
        dateTime2.set(calendar55);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1972.041095890411d) + "'", double10 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 365 + "'", int12 == 365);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(calendar17);
        org.junit.Assert.assertEquals(calendar17.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-1972.041095890411d) + "'", double37 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(date39);
        org.junit.Assert.assertEquals(date39.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "31-Dec-1969" + "'", str44, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(dateTime48);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(calendar55);
        org.junit.Assert.assertEquals(calendar55.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    }

    @Test
    public void test6827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6827");
        java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readTextFile("Thu 10-Apr-0002 10:43:08", false);
        net.ajaskey.common.TextUtils.print(strList2);
        java.lang.String str4 = net.ajaskey.common.TextUtils.toString(strList2);
        java.lang.String str5 = net.ajaskey.common.TextUtils.toString(strList2);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    }

    @Test
    public void test6828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6828");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        java.text.SimpleDateFormat simpleDateFormat8 = null;
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double12 = dateTime9.getDeltaYears(dateTime11);
        boolean boolean13 = dateTime9.isWeekday();
        boolean boolean14 = dateTime3.sameDate(dateTime9);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime(100L);
        double double21 = dateTime18.getDeltaYears(dateTime20);
        java.text.SimpleDateFormat simpleDateFormat23 = null;
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat23);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double27 = dateTime24.getDeltaYears(dateTime26);
        boolean boolean28 = dateTime24.isWeekday();
        boolean boolean29 = dateTime18.sameDate(dateTime24);
        java.text.SimpleDateFormat simpleDateFormat31 = null;
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat31);
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double35 = dateTime32.getDeltaYears(dateTime34);
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean40 = dateTime34.isEqual(dateTime39);
        dateTime18.set(dateTime39);
        long long42 = dateTime3.getDeltaMilliSeconds(dateTime39);
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat48 = null;
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat48);
        boolean boolean50 = net.ajaskey.common.Utils.sameDate(dateTime46, dateTime49);
        boolean boolean51 = net.ajaskey.common.Utils.sameDate(dateTime3, dateTime49);
        java.util.Calendar calendar52 = dateTime49.getCal();
        boolean boolean53 = dateTime49.isWeekday();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-1972.041095890411d) + "'", double21 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(calendar52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test6829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6829");
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(100L);
        double double10 = dateTime7.getDeltaYears(dateTime9);
        int int11 = dateTime7.getHour();
        dateTime7.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat16 = null;
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double20 = dateTime17.getDeltaYears(dateTime19);
        boolean boolean21 = dateTime7.isEqual(dateTime19);
        java.text.SimpleDateFormat simpleDateFormat23 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat25 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat26 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime("", simpleDateFormat25, simpleDateFormat26);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat23, simpleDateFormat26);
        dateTime7.setSdf(simpleDateFormat23);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime("         1", simpleDateFormat23);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime("                                                                                                                                                                                                                                                  -59,011,286,399,903.00", simpleDateFormat23);
        java.text.SimpleDateFormat simpleDateFormat34 = null;
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat34);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double38 = dateTime35.getDeltaYears(dateTime37);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean43 = dateTime37.isEqual(dateTime42);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(100L);
        int int46 = dateTime45.getMs();
        boolean boolean47 = dateTime42.isGreaterThanOrEqual(dateTime45);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime(100L);
        dateTime49.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime(100L);
        double double60 = dateTime57.getDeltaYears(dateTime59);
        boolean boolean61 = dateTime59.isWeekday();
        java.util.Date date62 = dateTime59.getTime();
        dateTime49.set(dateTime59);
        boolean boolean64 = net.ajaskey.common.Utils.sameDate(dateTime42, dateTime49);
        boolean boolean65 = dateTime42.isNull();
        java.text.SimpleDateFormat simpleDateFormat67 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat69 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat70 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime("", simpleDateFormat69, simpleDateFormat70);
        net.ajaskey.common.DateTime dateTime72 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat67, simpleDateFormat70);
        dateTime42.setSdf(simpleDateFormat70);
        net.ajaskey.common.DateTime dateTime74 = new net.ajaskey.common.DateTime("2,020.00", simpleDateFormat70);
        net.ajaskey.common.DateTime dateTime75 = new net.ajaskey.common.DateTime("January                                                                                                   5                                                                                                   5                                                                                               52.00                                                                                                   5hi!                                                                                                   5", simpleDateFormat23, simpleDateFormat70);
        net.ajaskey.common.DateTime dateTime76 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:45:23", simpleDateFormat70);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1972.041095890411d) + "'", double10 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(simpleDateFormat23);
        org.junit.Assert.assertNotNull(simpleDateFormat25);
        org.junit.Assert.assertNotNull(simpleDateFormat26);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-1972.041095890411d) + "'", double60 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(date62);
        org.junit.Assert.assertEquals(date62.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(simpleDateFormat67);
        org.junit.Assert.assertNotNull(simpleDateFormat69);
        org.junit.Assert.assertNotNull(simpleDateFormat70);
    }

    @Test
    public void test6830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6830");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) 643);
    }

    @Test
    public void test6831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6831");
        java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readTextFile("16", false);
        net.ajaskey.common.TextUtils.print(strList2);
        org.junit.Assert.assertNotNull(strList2);
    }

    @Test
    public void test6832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6832");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        java.text.SimpleDateFormat simpleDateFormat8 = null;
        java.text.SimpleDateFormat simpleDateFormat9 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("January", simpleDateFormat8, simpleDateFormat9);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime("Thursday", simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(dateTime11);
        boolean boolean13 = dateTime2.isEqual(dateTime11);
        java.text.SimpleDateFormat simpleDateFormat15 = null;
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat15);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double19 = dateTime16.getDeltaYears(dateTime18);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean24 = dateTime18.isEqual(dateTime23);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(100L);
        int int27 = dateTime26.getMs();
        boolean boolean28 = dateTime23.isGreaterThanOrEqual(dateTime26);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime(100L);
        dateTime30.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime(100L);
        double double41 = dateTime38.getDeltaYears(dateTime40);
        boolean boolean42 = dateTime40.isWeekday();
        java.util.Date date43 = dateTime40.getTime();
        dateTime30.set(dateTime40);
        boolean boolean45 = net.ajaskey.common.Utils.sameDate(dateTime23, dateTime30);
        dateTime23.add((int) '#', 6);
        int int49 = dateTime2.getYears(dateTime23);
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime("5.00", "     10");
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime(100L);
        double double59 = dateTime56.getDeltaYears(dateTime58);
        int int60 = dateTime56.getHour();
        java.text.SimpleDateFormat simpleDateFormat62 = null;
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat62);
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double66 = dateTime63.getDeltaYears(dateTime65);
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean71 = dateTime65.isEqual(dateTime70);
        java.util.Calendar calendar72 = dateTime65.getCal();
        dateTime56.set(calendar72);
        net.ajaskey.common.DateTime dateTime74 = new net.ajaskey.common.DateTime(calendar72);
        dateTime52.set(calendar72);
        dateTime2.set(dateTime52);
        int int77 = dateTime52.getYear();
        int int78 = dateTime52.getDayOfWeek();
        net.ajaskey.common.DateTime dateTime79 = new net.ajaskey.common.DateTime(dateTime52);
        net.ajaskey.common.DateTime dateTime80 = new net.ajaskey.common.DateTime(dateTime52);
        int int81 = dateTime52.getHour();
        int int82 = dateTime52.getYear();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(simpleDateFormat9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-1972.041095890411d) + "'", double41 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(date43);
        org.junit.Assert.assertEquals(date43.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-1972.041095890411d) + "'", double59 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 10 + "'", int60 == 10);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(calendar72);
        org.junit.Assert.assertEquals(calendar72.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1969 + "'", int77 == 1969);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 4 + "'", int78 == 4);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 5 + "'", int81 == 5);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1969 + "'", int82 == 1969);
    }

    @Test
    public void test6833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6833");
        java.util.Map<java.lang.String, java.lang.Integer> strMap0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = net.ajaskey.common.Utils.findName(strMap0, (java.lang.Integer) 857);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test6834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6834");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime(100L);
        int int3 = dateTime2.getMs();
        java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdf;
        dateTime2.setSdf(simpleDateFormat4);
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat4);
        java.text.SimpleDateFormat simpleDateFormat8 = null;
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double12 = dateTime9.getDeltaYears(dateTime11);
        boolean boolean13 = dateTime11.isNull();
        java.text.SimpleDateFormat simpleDateFormat15 = null;
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat15);
        dateTime16.set((int) ' ', 0, 11);
        boolean boolean21 = dateTime11.isGreaterThanOrEqual(dateTime16);
        double double22 = dateTime6.getDeltaYears(dateTime11);
        java.text.SimpleDateFormat simpleDateFormat24 = null;
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat24);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double28 = dateTime25.getDeltaYears(dateTime27);
        boolean boolean29 = dateTime27.isNull();
        boolean boolean30 = dateTime11.isGreaterThan(dateTime27);
        java.lang.String str31 = dateTime11.getMonth();
        java.text.SimpleDateFormat simpleDateFormat33 = null;
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat33);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double37 = dateTime34.getDeltaYears(dateTime36);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean42 = dateTime36.isEqual(dateTime41);
        java.util.Calendar calendar43 = dateTime36.getCal();
        java.lang.String str44 = dateTime36.format();
        net.ajaskey.common.DateTime dateTime45 = null;
        long long46 = dateTime36.getDeltaDays(dateTime45);
        int int47 = dateTime36.getSecond();
        int int48 = dateTime36.getHour();
        boolean boolean49 = dateTime11.isGreaterThanOrEqual(dateTime36);
        boolean boolean50 = dateTime11.isNull();
        boolean boolean51 = dateTime11.isNull();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat4);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "December" + "'", str31, "December");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(calendar43);
        org.junit.Assert.assertEquals(calendar43.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "BAD-DATE-FORMAT" + "'", str44, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 5 + "'", int48 == 5);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test6835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6835");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        java.lang.String str3 = dateTime1.toString();
        java.text.SimpleDateFormat simpleDateFormat5 = null;
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat5);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        boolean boolean10 = dateTime6.isWeekday();
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long15 = dateTime6.getDeltaDays(dateTime14);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(dateTime6);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(100L);
        double double23 = dateTime20.getDeltaYears(dateTime22);
        boolean boolean24 = dateTime22.isWeekday();
        java.util.Date date25 = dateTime22.getTime();
        dateTime6.set(date25);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(100L);
        int int29 = dateTime28.getMs();
        java.lang.String str30 = dateTime28.toString();
        boolean boolean31 = dateTime6.isLessThanOrEqual(dateTime28);
        boolean boolean32 = dateTime1.isLessThanOrEqual(dateTime28);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("January", "11");
        double double36 = dateTime1.getDeltaYears(dateTime35);
        java.text.SimpleDateFormat simpleDateFormat37 = dateTime1.getSdf();
        java.text.SimpleDateFormat simpleDateFormat39 = null;
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat39);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double43 = dateTime40.getDeltaYears(dateTime42);
        boolean boolean44 = dateTime40.isWeekday();
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long49 = dateTime40.getDeltaDays(dateTime48);
        dateTime48.set((int) (short) -1, (int) (byte) 0, (int) ' ');
        java.text.SimpleDateFormat simpleDateFormat54 = dateTime48.getSdf();
        int int55 = dateTime48.getMinute();
        boolean boolean56 = dateTime1.isEqual(dateTime48);
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat62 = null;
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat62);
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double66 = dateTime63.getDeltaYears(dateTime65);
        boolean boolean67 = dateTime60.isLessThan(dateTime65);
        java.lang.String str68 = dateTime65.toFullString();
        dateTime65.add(10, (int) (byte) -1);
        java.text.SimpleDateFormat simpleDateFormat73 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat75 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat76 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime("", simpleDateFormat75, simpleDateFormat76);
        net.ajaskey.common.DateTime dateTime78 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat73, simpleDateFormat76);
        boolean boolean79 = dateTime65.isGreaterThan(dateTime78);
        java.text.SimpleDateFormat simpleDateFormat81 = null;
        net.ajaskey.common.DateTime dateTime82 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat81);
        net.ajaskey.common.DateTime dateTime84 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double85 = dateTime82.getDeltaYears(dateTime84);
        boolean boolean86 = dateTime82.isWeekday();
        net.ajaskey.common.DateTime dateTime90 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long91 = dateTime82.getDeltaDays(dateTime90);
        net.ajaskey.common.DateTime dateTime92 = new net.ajaskey.common.DateTime(dateTime82);
        boolean boolean93 = dateTime78.sameDate(dateTime82);
        boolean boolean94 = dateTime1.isGreaterThanOrEqual(dateTime82);
        net.ajaskey.common.DateTime dateTime96 = new net.ajaskey.common.DateTime((-1593103568516L));
        boolean boolean97 = dateTime1.isEqual(dateTime96);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "31-Dec-1969" + "'", str3, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-1972.041095890411d) + "'", double23 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(date25);
        org.junit.Assert.assertEquals(date25.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "31-Dec-1969" + "'", str30, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(simpleDateFormat37);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertNull(simpleDateFormat54);
// flaky:         org.junit.Assert.assertTrue("'" + int55 + "' != '" + 47 + "'", int55 == 47);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str68, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertNotNull(simpleDateFormat73);
        org.junit.Assert.assertNotNull(simpleDateFormat75);
        org.junit.Assert.assertNotNull(simpleDateFormat76);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + long91 + "' != '" + 0L + "'", long91 == 0L);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test6836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6836");
        // The following exception was thrown during execution in test generation
        try {
            net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("                                                                                                                                                                                                                                                                     252", "Thu 10-Apr-0002 10:46:20");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal pattern character 'T'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test6837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6837");
        java.text.SimpleDateFormat simpleDateFormat5 = null;
        java.text.SimpleDateFormat simpleDateFormat6 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("January", simpleDateFormat5, simpleDateFormat6);
        java.text.SimpleDateFormat simpleDateFormat10 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime("January", simpleDateFormat10);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime("", simpleDateFormat10);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("", simpleDateFormat6, simpleDateFormat10);
        java.text.SimpleDateFormat simpleDateFormat16 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat18 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat19 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("", simpleDateFormat18, simpleDateFormat19);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat16, simpleDateFormat19);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat28 = null;
        java.text.SimpleDateFormat simpleDateFormat29 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime("January", simpleDateFormat28, simpleDateFormat29);
        java.text.SimpleDateFormat simpleDateFormat33 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime("January", simpleDateFormat33);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("", simpleDateFormat33);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime("", simpleDateFormat29, simpleDateFormat33);
        dateTime25.setSdf(simpleDateFormat29);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime("", simpleDateFormat19, simpleDateFormat29);
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime("   -18,438", simpleDateFormat10, simpleDateFormat29);
        java.text.SimpleDateFormat simpleDateFormat44 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat45 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime("", simpleDateFormat44, simpleDateFormat45);
        java.text.SimpleDateFormat simpleDateFormat48 = null;
        java.text.SimpleDateFormat simpleDateFormat49 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime("January", simpleDateFormat48, simpleDateFormat49);
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat44, simpleDateFormat49);
        java.text.SimpleDateFormat simpleDateFormat54 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat55 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime("", simpleDateFormat54, simpleDateFormat55);
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime(100L);
        int int59 = dateTime58.getMs();
        java.text.SimpleDateFormat simpleDateFormat60 = net.ajaskey.common.Utils.sdf;
        dateTime58.setSdf(simpleDateFormat60);
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat55, simpleDateFormat60);
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime("                             100", simpleDateFormat49, simpleDateFormat55);
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime("11", simpleDateFormat49);
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime("10-Apr-0002", simpleDateFormat29, simpleDateFormat49);
        java.text.SimpleDateFormat simpleDateFormat72 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat73 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime74 = new net.ajaskey.common.DateTime("", simpleDateFormat72, simpleDateFormat73);
        java.text.SimpleDateFormat simpleDateFormat76 = null;
        java.text.SimpleDateFormat simpleDateFormat77 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime78 = new net.ajaskey.common.DateTime("January", simpleDateFormat76, simpleDateFormat77);
        net.ajaskey.common.DateTime dateTime79 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat72, simpleDateFormat77);
        java.text.SimpleDateFormat simpleDateFormat82 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat83 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime84 = new net.ajaskey.common.DateTime("", simpleDateFormat82, simpleDateFormat83);
        net.ajaskey.common.DateTime dateTime86 = new net.ajaskey.common.DateTime(100L);
        int int87 = dateTime86.getMs();
        java.text.SimpleDateFormat simpleDateFormat88 = net.ajaskey.common.Utils.sdf;
        dateTime86.setSdf(simpleDateFormat88);
        net.ajaskey.common.DateTime dateTime90 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat83, simpleDateFormat88);
        net.ajaskey.common.DateTime dateTime91 = new net.ajaskey.common.DateTime("                             100", simpleDateFormat77, simpleDateFormat83);
        net.ajaskey.common.DateTime dateTime92 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:42:58", simpleDateFormat77);
        net.ajaskey.common.DateTime dateTime93 = new net.ajaskey.common.DateTime("", simpleDateFormat77);
        net.ajaskey.common.DateTime dateTime94 = new net.ajaskey.common.DateTime("Sat 04-Jan-0100 17:00:00", simpleDateFormat77);
        net.ajaskey.common.DateTime dateTime95 = new net.ajaskey.common.DateTime("Fri 11-Jan-0032 10:46:21", simpleDateFormat49, simpleDateFormat77);
        org.junit.Assert.assertNotNull(simpleDateFormat6);
        org.junit.Assert.assertNotNull(simpleDateFormat10);
        org.junit.Assert.assertNotNull(simpleDateFormat16);
        org.junit.Assert.assertNotNull(simpleDateFormat18);
        org.junit.Assert.assertNotNull(simpleDateFormat19);
        org.junit.Assert.assertNotNull(simpleDateFormat29);
        org.junit.Assert.assertNotNull(simpleDateFormat33);
        org.junit.Assert.assertNotNull(simpleDateFormat44);
        org.junit.Assert.assertNotNull(simpleDateFormat45);
        org.junit.Assert.assertNotNull(simpleDateFormat49);
        org.junit.Assert.assertNotNull(simpleDateFormat54);
        org.junit.Assert.assertNotNull(simpleDateFormat55);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 100 + "'", int59 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat60);
        org.junit.Assert.assertNotNull(simpleDateFormat72);
        org.junit.Assert.assertNotNull(simpleDateFormat73);
        org.junit.Assert.assertNotNull(simpleDateFormat77);
        org.junit.Assert.assertNotNull(simpleDateFormat82);
        org.junit.Assert.assertNotNull(simpleDateFormat83);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 100 + "'", int87 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat88);
    }

    @Test
    public void test6838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6838");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(13, 19, 219);
        java.lang.String str4 = dateTime3.getDay();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Thursday" + "'", str4, "Thursday");
    }

    @Test
    public void test6839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6839");
        net.ajaskey.common.DateTime dateTime0 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime(100L);
        int int3 = dateTime2.getMs();
        int int4 = dateTime2.getHour();
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat10 = null;
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat10);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double14 = dateTime11.getDeltaYears(dateTime13);
        boolean boolean15 = dateTime8.isLessThan(dateTime13);
        java.lang.String str16 = dateTime13.toFullString();
        dateTime13.add(10, (int) (byte) -1);
        java.text.SimpleDateFormat simpleDateFormat21 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat23 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat24 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("", simpleDateFormat23, simpleDateFormat24);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat21, simpleDateFormat24);
        boolean boolean27 = dateTime13.isGreaterThan(dateTime26);
        boolean boolean28 = dateTime2.isEqual(dateTime13);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.lang.String str33 = dateTime32.toFullString();
        dateTime32.add(7, 53);
        net.ajaskey.common.DateTime dateTime37 = dateTime2.copy(dateTime32);
        java.lang.String str38 = dateTime37.getDay();
        java.text.SimpleDateFormat simpleDateFormat40 = null;
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat40);
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double44 = dateTime41.getDeltaYears(dateTime43);
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean49 = dateTime43.isEqual(dateTime48);
        java.util.Calendar calendar50 = dateTime43.getCal();
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime(calendar50);
        long long52 = dateTime37.getDeltaMilliSeconds(dateTime51);
        java.util.Calendar calendar53 = dateTime37.getCal();
        boolean boolean54 = net.ajaskey.common.Utils.sameMonth(dateTime0, dateTime37);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str16, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertNotNull(simpleDateFormat21);
        org.junit.Assert.assertNotNull(simpleDateFormat23);
        org.junit.Assert.assertNotNull(simpleDateFormat24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Thu 10-Apr-0002 10:47:10" + "'", str33, "Thu 10-Apr-0002 10:47:10");
        org.junit.Assert.assertNotNull(dateTime37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Thursday" + "'", str38, "Thursday");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(calendar50);
        org.junit.Assert.assertEquals(calendar50.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
// flaky:         org.junit.Assert.assertTrue("'" + long52 + "' != '" + 62190310369149L + "'", long52 == 62190310369149L);
        org.junit.Assert.assertNotNull(calendar53);
// flaky:         org.junit.Assert.assertEquals(calendar53.toString(), "java.util.GregorianCalendar[time=-62190310369149,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=10,MILLISECOND=851,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test6840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6840");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        boolean boolean3 = dateTime1.isWeekday();
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime((long) (short) 0);
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime(100L);
        int int8 = dateTime7.getMs();
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(100L);
        double double15 = dateTime12.getDeltaYears(dateTime14);
        java.text.SimpleDateFormat simpleDateFormat16 = dateTime12.getSdf();
        boolean boolean17 = dateTime7.isLessThanOrEqual(dateTime12);
        java.text.SimpleDateFormat simpleDateFormat19 = null;
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat19);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double23 = dateTime20.getDeltaYears(dateTime22);
        boolean boolean24 = dateTime20.isWeekday();
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long29 = dateTime20.getDeltaDays(dateTime28);
        long long30 = dateTime7.getDeltaDays(dateTime28);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime(100L);
        dateTime32.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean37 = dateTime32.isWeekday();
        int int38 = dateTime7.getYears(dateTime32);
        int int39 = dateTime7.getYear();
        java.util.Calendar calendar40 = dateTime7.getCal();
        net.ajaskey.common.DateTime dateTime41 = dateTime5.copy(dateTime7);
        boolean boolean42 = dateTime1.isGreaterThan(dateTime7);
        java.text.SimpleDateFormat simpleDateFormat44 = null;
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat44);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double48 = dateTime45.getDeltaYears(dateTime47);
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean53 = dateTime47.isEqual(dateTime52);
        java.lang.String str54 = dateTime52.getMonth();
        net.ajaskey.common.DateTime dateTime55 = dateTime7.copy(dateTime52);
        java.util.Date date56 = dateTime7.getTime();
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime(date56);
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime(date56);
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime(100L);
        int int62 = dateTime61.getMs();
        java.text.SimpleDateFormat simpleDateFormat63 = net.ajaskey.common.Utils.sdf;
        dateTime61.setSdf(simpleDateFormat63);
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat63);
        java.text.SimpleDateFormat simpleDateFormat67 = null;
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat67);
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double71 = dateTime68.getDeltaYears(dateTime70);
        boolean boolean72 = dateTime70.isNull();
        java.text.SimpleDateFormat simpleDateFormat74 = null;
        net.ajaskey.common.DateTime dateTime75 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat74);
        dateTime75.set((int) ' ', 0, 11);
        boolean boolean80 = dateTime70.isGreaterThanOrEqual(dateTime75);
        double double81 = dateTime65.getDeltaYears(dateTime70);
        java.text.SimpleDateFormat simpleDateFormat83 = null;
        net.ajaskey.common.DateTime dateTime84 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat83);
        net.ajaskey.common.DateTime dateTime86 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double87 = dateTime84.getDeltaYears(dateTime86);
        boolean boolean88 = dateTime86.isNull();
        boolean boolean89 = dateTime70.isGreaterThan(dateTime86);
        net.ajaskey.common.DateTime dateTime90 = new net.ajaskey.common.DateTime(dateTime70);
        int int91 = dateTime90.getDayOfMonth();
        int int92 = dateTime90.getMinute();
        net.ajaskey.common.DateTime dateTime93 = dateTime58.copy(dateTime90);
        int int94 = dateTime58.getHour();
        dateTime58.set(480, 932, 50);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-1972.041095890411d) + "'", double15 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 719795L + "'", long30 == 719795L);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1870) + "'", int38 == (-1870));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1969 + "'", int39 == 1969);
        org.junit.Assert.assertNotNull(calendar40);
        org.junit.Assert.assertEquals(calendar40.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(dateTime41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "April" + "'", str54, "April");
        org.junit.Assert.assertNotNull(dateTime55);
        org.junit.Assert.assertNotNull(date56);
        org.junit.Assert.assertEquals(date56.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat63);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 31 + "'", int91 == 31);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertNotNull(dateTime93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 5 + "'", int94 == 5);
    }

    @Test
    public void test6841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6841");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((-1870), 1969, 1);
        int int4 = dateTime3.getDayOfWeek();
        dateTime3.add(235, 752);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 4 + "'", int4 == 4);
    }

    @Test
    public void test6842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6842");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("5.00", "     10");
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        int int10 = dateTime6.getHour();
        java.text.SimpleDateFormat simpleDateFormat12 = null;
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat12);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double16 = dateTime13.getDeltaYears(dateTime15);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean21 = dateTime15.isEqual(dateTime20);
        java.util.Calendar calendar22 = dateTime15.getCal();
        dateTime6.set(calendar22);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime(calendar22);
        dateTime2.set(calendar22);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(100L);
        int int28 = dateTime27.getMs();
        java.lang.String str29 = dateTime27.toString();
        java.lang.String str31 = dateTime27.format("         1");
        net.ajaskey.common.DateTime dateTime32 = dateTime2.copy(dateTime27);
        boolean boolean33 = dateTime2.isNull();
        java.text.SimpleDateFormat simpleDateFormat34 = dateTime2.getSdf();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(calendar22);
        org.junit.Assert.assertEquals(calendar22.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "31-Dec-1969" + "'", str29, "31-Dec-1969");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "         1" + "'", str31, "         1");
        org.junit.Assert.assertNotNull(dateTime32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(simpleDateFormat34);
    }

    @Test
    public void test6843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6843");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean10 = dateTime4.isEqual(dateTime9);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(100L);
        int int13 = dateTime12.getMs();
        boolean boolean14 = dateTime9.isGreaterThanOrEqual(dateTime12);
        java.text.SimpleDateFormat simpleDateFormat16 = null;
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double20 = dateTime17.getDeltaYears(dateTime19);
        boolean boolean21 = dateTime17.isWeekday();
        boolean boolean22 = dateTime12.isLessThanOrEqual(dateTime17);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime(100L);
        dateTime24.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean29 = dateTime24.isWeekday();
        boolean boolean30 = dateTime12.isGreaterThanOrEqual(dateTime24);
        int int31 = dateTime24.getDayOfYear();
        java.lang.String str33 = dateTime24.format("Thu 10-Apr-0002 10:46:10");
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 4 + "'", int31 == 4);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "BAD-DATE-FORMAT" + "'", str33, "BAD-DATE-FORMAT");
    }

    @Test
    public void test6844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6844");
        net.ajaskey.common.Utils.sleep(608);
    }

    @Test
    public void test6845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6845");
        net.ajaskey.common.Utils.sleep(161);
    }

    @Test
    public void test6846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6846");
        java.text.SimpleDateFormat simpleDateFormat6 = null;
        java.text.SimpleDateFormat simpleDateFormat7 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime("January", simpleDateFormat6, simpleDateFormat7);
        java.text.SimpleDateFormat simpleDateFormat11 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime("January", simpleDateFormat11);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("", simpleDateFormat11);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime("", simpleDateFormat7, simpleDateFormat11);
        java.text.SimpleDateFormat simpleDateFormat17 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat19 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat20 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("", simpleDateFormat19, simpleDateFormat20);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat17, simpleDateFormat20);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat29 = null;
        java.text.SimpleDateFormat simpleDateFormat30 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime("January", simpleDateFormat29, simpleDateFormat30);
        java.text.SimpleDateFormat simpleDateFormat34 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("January", simpleDateFormat34);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime("", simpleDateFormat34);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime("", simpleDateFormat30, simpleDateFormat34);
        dateTime26.setSdf(simpleDateFormat30);
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime("", simpleDateFormat20, simpleDateFormat30);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime("   -18,438", simpleDateFormat11, simpleDateFormat30);
        java.text.SimpleDateFormat simpleDateFormat45 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat46 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime("", simpleDateFormat45, simpleDateFormat46);
        java.text.SimpleDateFormat simpleDateFormat49 = null;
        java.text.SimpleDateFormat simpleDateFormat50 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime("January", simpleDateFormat49, simpleDateFormat50);
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat45, simpleDateFormat50);
        java.text.SimpleDateFormat simpleDateFormat55 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat56 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime("", simpleDateFormat55, simpleDateFormat56);
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime(100L);
        int int60 = dateTime59.getMs();
        java.text.SimpleDateFormat simpleDateFormat61 = net.ajaskey.common.Utils.sdf;
        dateTime59.setSdf(simpleDateFormat61);
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat56, simpleDateFormat61);
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime("                             100", simpleDateFormat50, simpleDateFormat56);
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime("11", simpleDateFormat50);
        net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime("10-Apr-0002", simpleDateFormat30, simpleDateFormat50);
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime("", simpleDateFormat30);
        java.text.SimpleDateFormat simpleDateFormat69 = null;
        java.text.SimpleDateFormat simpleDateFormat70 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime("January", simpleDateFormat69, simpleDateFormat70);
        net.ajaskey.common.DateTime dateTime72 = new net.ajaskey.common.DateTimesimpleDateFormat30, simpleDateFormat69);
        java.lang.String str73 = dateTime72.getDay();
        org.junit.Assert.assertNotNull(simpleDateFormat7);
        org.junit.Assert.assertNotNull(simpleDateFormat11);
        org.junit.Assert.assertNotNull(simpleDateFormat17);
        org.junit.Assert.assertNotNull(simpleDateFormat19);
        org.junit.Assert.assertNotNull(simpleDateFormat20);
        org.junit.Assert.assertNotNull(simpleDateFormat30);
        org.junit.Assert.assertNotNull(simpleDateFormat34);
        org.junit.Assert.assertNotNull(simpleDateFormat45);
        org.junit.Assert.assertNotNull(simpleDateFormat46);
        org.junit.Assert.assertNotNull(simpleDateFormat50);
        org.junit.Assert.assertNotNull(simpleDateFormat55);
        org.junit.Assert.assertNotNull(simpleDateFormat56);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 100 + "'", int60 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat61);
        org.junit.Assert.assertNotNull(simpleDateFormat70);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "UNKNOWN" + "'", str73, "UNKNOWN");
    }

    @Test
    public void test6847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6847");
        java.lang.String str2 = net.ajaskey.common.Utils.ifmt(12, 86);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                                                                    12" + "'", str2, "                                                                                    12");
    }

    @Test
    public void test6848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6848");
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        long long9 = dateTime6.getDeltaDays(dateTime8);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat16 = null;
        java.text.SimpleDateFormat simpleDateFormat17 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime("January", simpleDateFormat16, simpleDateFormat17);
        java.text.SimpleDateFormat simpleDateFormat21 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime("January", simpleDateFormat21);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime("", simpleDateFormat21);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("", simpleDateFormat17, simpleDateFormat21);
        dateTime13.setSdf(simpleDateFormat17);
        dateTime8.setSdf(simpleDateFormat17);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime(100L);
        double double35 = dateTime32.getDeltaYears(dateTime34);
        int int36 = dateTime32.getHour();
        dateTime32.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat41 = null;
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat41);
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double45 = dateTime42.getDeltaYears(dateTime44);
        boolean boolean46 = dateTime32.isEqual(dateTime44);
        java.text.SimpleDateFormat simpleDateFormat48 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat50 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat51 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime("", simpleDateFormat50, simpleDateFormat51);
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat48, simpleDateFormat51);
        dateTime32.setSdf(simpleDateFormat48);
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat61 = null;
        java.text.SimpleDateFormat simpleDateFormat62 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime("January", simpleDateFormat61, simpleDateFormat62);
        java.text.SimpleDateFormat simpleDateFormat66 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime("January", simpleDateFormat66);
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime("", simpleDateFormat66);
        net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime("", simpleDateFormat62, simpleDateFormat66);
        dateTime58.setSdf(simpleDateFormat62);
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime("December", simpleDateFormat48, simpleDateFormat62);
        net.ajaskey.common.DateTime dateTime73 = new net.ajaskey.common.DateTime(100L);
        int int74 = dateTime73.getMs();
        java.text.SimpleDateFormat simpleDateFormat75 = net.ajaskey.common.Utils.sdf;
        dateTime73.setSdf(simpleDateFormat75);
        int int77 = dateTime73.getDayOfWeek();
        java.text.SimpleDateFormat simpleDateFormat78 = dateTime73.getSdf();
        net.ajaskey.common.DateTime dateTime79 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:43:00", simpleDateFormat62, simpleDateFormat78);
        net.ajaskey.common.DateTime dateTime80 = new net.ajaskey.common.DateTime("05-May-0005", simpleDateFormat17, simpleDateFormat62);
        net.ajaskey.common.DateTime dateTime81 = new net.ajaskey.common.DateTime("7", simpleDateFormat17);
        net.ajaskey.common.DateTime dateTime82 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:43:36", simpleDateFormat17);
        dateTime82.setFirstWorkDay();
        int int84 = dateTime82.getDayOfYear();
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-719795L) + "'", long9 == (-719795L));
        org.junit.Assert.assertNotNull(simpleDateFormat17);
        org.junit.Assert.assertNotNull(simpleDateFormat21);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-1972.041095890411d) + "'", double35 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 10 + "'", int36 == 10);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(simpleDateFormat48);
        org.junit.Assert.assertNotNull(simpleDateFormat50);
        org.junit.Assert.assertNotNull(simpleDateFormat51);
        org.junit.Assert.assertNotNull(simpleDateFormat62);
        org.junit.Assert.assertNotNull(simpleDateFormat66);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 100 + "'", int74 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 4 + "'", int77 == 4);
        org.junit.Assert.assertNotNull(simpleDateFormat78);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 100 + "'", int84 == 100);
    }

    @Test
    public void test6849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6849");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean10 = dateTime4.isEqual(dateTime9);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(100L);
        double double17 = dateTime14.getDeltaYears(dateTime16);
        boolean boolean18 = dateTime16.isWeekday();
        int int19 = dateTime16.getDayOfYear();
        net.ajaskey.common.DateTime dateTime20 = dateTime4.copy(dateTime16);
        java.text.SimpleDateFormat simpleDateFormat23 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat25 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat26 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime("", simpleDateFormat25, simpleDateFormat26);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat23, simpleDateFormat26);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime("10-Apr-0002", simpleDateFormat26);
        dateTime20.setSdf(simpleDateFormat26);
        dateTime20.set(0, 310, 8);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-1972.041095890411d) + "'", double17 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 365 + "'", int19 == 365);
        org.junit.Assert.assertNotNull(dateTime20);
        org.junit.Assert.assertNotNull(simpleDateFormat23);
        org.junit.Assert.assertNotNull(simpleDateFormat25);
        org.junit.Assert.assertNotNull(simpleDateFormat26);
    }

    @Test
    public void test6850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6850");
        net.ajaskey.common.DateTime dateTime0 = null;
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(dateTime0);
        java.lang.String str3 = dateTime1.format("     5.00");
        net.ajaskey.common.DateTime dateTime4 = null;
        long long5 = dateTime1.getDeltaDays(dateTime4);
        int int6 = dateTime1.getDayOfMonth();
        int int7 = dateTime1.getHour();
        java.text.SimpleDateFormat simpleDateFormat8 = dateTime1.getSdf();
        net.ajaskey.common.DateTime dateTime11 = dateTime1.parse("Thu 10-Apr-0002 10:44:49", "                                        33");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = dateTime11.format();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "     5.00" + "'", str3, "     5.00");
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 25 + "'", int6 == 25);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertNull(simpleDateFormat8);
        org.junit.Assert.assertNull(dateTime11);
    }

    @Test
    public void test6851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6851");
        java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readTextFile("Thu 10-Apr-0002 10:43:08", false);
        net.ajaskey.common.TextUtils.print(strList2);
        java.lang.String str4 = net.ajaskey.common.TextUtils.toString(strList2);
        net.ajaskey.common.TextUtils.print(strList2);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
    }

    @Test
    public void test6852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6852");
        net.ajaskey.common.Utils.TAB = "                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           978";
    }

    @Test
    public void test6853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6853");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        boolean boolean7 = dateTime5.isWeekday();
        java.util.Date date8 = dateTime5.getTime();
        int int9 = dateTime5.getDayOfWeek();
        java.lang.String str10 = dateTime5.getMonth();
        java.lang.String str11 = dateTime5.getDay();
        java.lang.String str13 = dateTime5.format("           35");
        java.lang.String str14 = dateTime5.getMonth();
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime(100L);
        dateTime20.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str25 = dateTime20.getMonth();
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(100L);
        dateTime27.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str32 = dateTime27.getMonth();
        int int33 = dateTime27.getMs();
        net.ajaskey.common.DateTime dateTime34 = dateTime20.copy(dateTime27);
        dateTime18.set(dateTime20);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime(dateTime20);
        java.text.SimpleDateFormat simpleDateFormat38 = null;
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat38);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double42 = dateTime39.getDeltaYears(dateTime41);
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean47 = dateTime41.isEqual(dateTime46);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime(100L);
        int int50 = dateTime49.getMs();
        boolean boolean51 = dateTime46.isGreaterThanOrEqual(dateTime49);
        java.text.SimpleDateFormat simpleDateFormat53 = null;
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat53);
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double57 = dateTime54.getDeltaYears(dateTime56);
        boolean boolean58 = dateTime54.isWeekday();
        boolean boolean59 = dateTime49.isLessThanOrEqual(dateTime54);
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime(100L);
        dateTime61.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean66 = dateTime61.isWeekday();
        boolean boolean67 = dateTime49.isGreaterThanOrEqual(dateTime61);
        boolean boolean68 = net.ajaskey.common.Utils.sameMonth(dateTime20, dateTime49);
        boolean boolean69 = dateTime5.isGreaterThan(dateTime49);
        dateTime49.set(0, 56, 11);
        net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime((int) (byte) 10, (int) (byte) 0, 2);
        net.ajaskey.common.DateTime dateTime78 = new net.ajaskey.common.DateTime(dateTime77);
        net.ajaskey.common.DateTime dateTime81 = new net.ajaskey.common.DateTime("        10", "         1");
        boolean boolean82 = dateTime77.sameDate(dateTime81);
        java.lang.String str83 = dateTime81.getMonth();
        net.ajaskey.common.DateTime dateTime84 = new net.ajaskey.common.DateTime(dateTime81);
        int int85 = dateTime84.getDayOfWeek();
        java.lang.String str86 = dateTime84.toFullString();
        boolean boolean87 = dateTime49.isLessThan(dateTime84);
        net.ajaskey.common.DateTime dateTime90 = dateTime49.parse("Thu 10-Apr-0002 10:47:03", "                                        365");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(date8);
        org.junit.Assert.assertEquals(date8.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 4 + "'", int9 == 4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "December" + "'", str10, "December");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Wednesday" + "'", str11, "Wednesday");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "           35" + "'", str13, "           35");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "December" + "'", str14, "December");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "January" + "'", str25, "January");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "January" + "'", str32, "January");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        org.junit.Assert.assertNotNull(dateTime34);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "UNKNOWN" + "'", str83, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 5 + "'", int85 == 5);
// flaky:         org.junit.Assert.assertEquals("'" + str86 + "' != '" + "Thu 25-Jun-2020 10:47:11" + "'", str86, "Thu 25-Jun-2020 10:47:11");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNull(dateTime90);
    }

    @Test
    public void test6854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6854");
        java.lang.String str1 = net.ajaskey.common.Utils.getFromUrl("Thu 10-Apr-0002 10:45:23");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
    }

    @Test
    public void test6855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6855");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("     62,190,310,586,261", "  31");
        java.lang.String str3 = dateTime2.getMonth();
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
        double double12 = dateTime9.getDeltaYears(dateTime11);
        int int13 = dateTime9.getHour();
        java.util.Calendar calendar14 = dateTime9.getCal();
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(calendar14);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean20 = dateTime19.isNull();
        boolean boolean21 = net.ajaskey.common.Utils.sameDate(dateTime15, dateTime19);
        java.text.SimpleDateFormat simpleDateFormat24 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat25 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime("", simpleDateFormat24, simpleDateFormat25);
        java.text.SimpleDateFormat simpleDateFormat28 = null;
        java.text.SimpleDateFormat simpleDateFormat29 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime("January", simpleDateFormat28, simpleDateFormat29);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat24, simpleDateFormat29);
        dateTime19.setSdf(simpleDateFormat29);
        java.text.SimpleDateFormat simpleDateFormat35 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat36 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime("", simpleDateFormat35, simpleDateFormat36);
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime(100L);
        int int40 = dateTime39.getMs();
        java.text.SimpleDateFormat simpleDateFormat41 = net.ajaskey.common.Utils.sdf;
        dateTime39.setSdf(simpleDateFormat41);
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat36, simpleDateFormat41);
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime("", simpleDateFormat29, simpleDateFormat36);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime(100L);
        int int48 = dateTime47.getMs();
        java.text.SimpleDateFormat simpleDateFormat49 = net.ajaskey.common.Utils.sdf;
        dateTime47.setSdf(simpleDateFormat49);
        java.text.SimpleDateFormat simpleDateFormat53 = null;
        java.text.SimpleDateFormat simpleDateFormat54 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime("January", simpleDateFormat53, simpleDateFormat54);
        java.text.SimpleDateFormat simpleDateFormat58 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime("January", simpleDateFormat58);
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime("", simpleDateFormat58);
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime("", simpleDateFormat54, simpleDateFormat58);
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime("Thursday", simpleDateFormat49, simpleDateFormat58);
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime("", simpleDateFormat29, simpleDateFormat49);
        int int64 = dateTime63.getHour();
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime(100L);
        double double71 = dateTime68.getDeltaYears(dateTime70);
        java.text.SimpleDateFormat simpleDateFormat72 = dateTime68.getSdf();
        java.lang.String str73 = dateTime68.getMonth();
        long long74 = dateTime63.getDeltaMilliSeconds(dateTime68);
        boolean boolean75 = dateTime2.isEqual(dateTime63);
        int int76 = dateTime63.getMs();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UNKNOWN" + "'", str3, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1972.041095890411d) + "'", double12 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10 + "'", int13 == 10);
        org.junit.Assert.assertNotNull(calendar14);
// flaky:         org.junit.Assert.assertEquals(calendar14.toString(), "java.util.GregorianCalendar[time=-62190310368126,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=11,MILLISECOND=874,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(simpleDateFormat24);
        org.junit.Assert.assertNotNull(simpleDateFormat25);
        org.junit.Assert.assertNotNull(simpleDateFormat29);
        org.junit.Assert.assertNotNull(simpleDateFormat35);
        org.junit.Assert.assertNotNull(simpleDateFormat36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat41);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 100 + "'", int48 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat49);
        org.junit.Assert.assertNotNull(simpleDateFormat54);
        org.junit.Assert.assertNotNull(simpleDateFormat58);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-1972.041095890411d) + "'", double71 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "April" + "'", str73, "April");
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 0L + "'", long74 == 0L);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
    }

    @Test
    public void test6856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6856");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (byte) 10, (int) (byte) 0, 2);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime(dateTime3);
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("        10", "         1");
        boolean boolean8 = dateTime3.sameDate(dateTime7);
        int int9 = dateTime7.getDayOfYear();
        java.text.SimpleDateFormat simpleDateFormat11 = null;
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat11);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double15 = dateTime12.getDeltaYears(dateTime14);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean20 = dateTime14.isEqual(dateTime19);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(100L);
        int int23 = dateTime22.getMs();
        boolean boolean24 = dateTime19.isGreaterThanOrEqual(dateTime22);
        java.text.SimpleDateFormat simpleDateFormat26 = null;
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat26);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double30 = dateTime27.getDeltaYears(dateTime29);
        boolean boolean31 = dateTime27.isWeekday();
        boolean boolean32 = dateTime22.isLessThanOrEqual(dateTime27);
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime(100L);
        dateTime34.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean39 = dateTime34.isWeekday();
        boolean boolean40 = dateTime22.isGreaterThanOrEqual(dateTime34);
        java.lang.String str41 = dateTime22.toFullString();
        java.text.SimpleDateFormat simpleDateFormat43 = null;
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat43);
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double47 = dateTime44.getDeltaYears(dateTime46);
        boolean boolean48 = dateTime44.isWeekday();
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long53 = dateTime44.getDeltaDays(dateTime52);
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime(dateTime44);
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime(100L);
        double double61 = dateTime58.getDeltaYears(dateTime60);
        boolean boolean62 = dateTime60.isWeekday();
        java.util.Date date63 = dateTime60.getTime();
        dateTime44.set(date63);
        dateTime22.set(date63);
        dateTime7.set(dateTime22);
        int int67 = dateTime22.getDayOfWeek();
        java.util.Date date68 = dateTime22.getTime();
        int int69 = dateTime22.getYear();
        boolean boolean70 = dateTime22.isNull();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str41, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-1972.041095890411d) + "'", double61 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(date63);
        org.junit.Assert.assertEquals(date63.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 4 + "'", int67 == 4);
        org.junit.Assert.assertNotNull(date68);
        org.junit.Assert.assertEquals(date68.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1969 + "'", int69 == 1969);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test6857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6857");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((-36794L));
        int int2 = dateTime1.getHour();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 4 + "'", int2 == 4);
    }

    @Test
    public void test6858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6858");
        java.text.SimpleDateFormat simpleDateFormat1 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat2 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime("", simpleDateFormat1, simpleDateFormat2);
        boolean boolean4 = dateTime3.isWeekday();
        int int5 = dateTime3.getSecond();
        java.lang.String str7 = dateTime3.format("");
        org.junit.Assert.assertNotNull(simpleDateFormat1);
        org.junit.Assert.assertNotNull(simpleDateFormat2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "BAD-DATE-FORMAT" + "'", str7, "BAD-DATE-FORMAT");
    }

    @Test
    public void test6859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6859");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("January                                    26                                    26                                                                                               52.00                                    26hi!                                    26", "                                                  32");
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        int int6 = dateTime5.getMs();
        java.text.SimpleDateFormat simpleDateFormat7 = net.ajaskey.common.Utils.sdf;
        dateTime5.setSdf(simpleDateFormat7);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat7);
        java.text.SimpleDateFormat simpleDateFormat11 = null;
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat11);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double15 = dateTime12.getDeltaYears(dateTime14);
        boolean boolean16 = dateTime14.isNull();
        java.text.SimpleDateFormat simpleDateFormat18 = null;
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat18);
        dateTime19.set((int) ' ', 0, 11);
        boolean boolean24 = dateTime14.isGreaterThanOrEqual(dateTime19);
        double double25 = dateTime9.getDeltaYears(dateTime14);
        java.text.SimpleDateFormat simpleDateFormat27 = null;
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat27);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double31 = dateTime28.getDeltaYears(dateTime30);
        boolean boolean32 = dateTime30.isNull();
        boolean boolean33 = dateTime14.isGreaterThan(dateTime30);
        java.text.SimpleDateFormat simpleDateFormat35 = null;
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat35);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double39 = dateTime36.getDeltaYears(dateTime38);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime(dateTime36);
        dateTime40.add((int) '#', (int) (short) 0);
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime(100L);
        int int47 = dateTime46.getMs();
        java.text.SimpleDateFormat simpleDateFormat48 = net.ajaskey.common.Utils.sdf;
        dateTime46.setSdf(simpleDateFormat48);
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat48);
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime((long) 53);
        boolean boolean53 = dateTime52.isWeekday();
        boolean boolean54 = dateTime50.sameDate(dateTime52);
        java.util.Date date55 = dateTime52.getTime();
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime(date55);
        dateTime40.set(date55);
        long long58 = dateTime30.getDeltaDays(dateTime40);
        java.text.SimpleDateFormat simpleDateFormat60 = null;
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat60);
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double64 = dateTime61.getDeltaYears(dateTime63);
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean69 = dateTime63.isEqual(dateTime68);
        net.ajaskey.common.DateTime dateTime72 = dateTime68.parse("Thu 10-Apr-0002 10:43:06", "Mon 06-Jan-0100 17:00:00");
        long long73 = dateTime40.getDeltaDays(dateTime68);
        java.text.SimpleDateFormat simpleDateFormat74 = dateTime40.getSdf();
        boolean boolean75 = net.ajaskey.common.Utils.sameMonth(dateTime2, dateTime40);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat7);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(date55);
        org.junit.Assert.assertEquals(date55.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(dateTime72);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 719795L + "'", long73 == 719795L);
        org.junit.Assert.assertNull(simpleDateFormat74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test6860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6860");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((-1870), 1969, 1);
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("5.00", "     10");
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(100L);
        double double13 = dateTime10.getDeltaYears(dateTime12);
        int int14 = dateTime10.getHour();
        java.text.SimpleDateFormat simpleDateFormat16 = null;
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double20 = dateTime17.getDeltaYears(dateTime19);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean25 = dateTime19.isEqual(dateTime24);
        java.util.Calendar calendar26 = dateTime19.getCal();
        dateTime10.set(calendar26);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(calendar26);
        dateTime6.set(calendar26);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(100L);
        int int32 = dateTime31.getMs();
        java.lang.String str33 = dateTime31.toString();
        java.lang.String str35 = dateTime31.format("         1");
        net.ajaskey.common.DateTime dateTime36 = dateTime6.copy(dateTime31);
        int int37 = dateTime3.getYears(dateTime36);
        net.ajaskey.common.DateTime dateTime38 = null;
        net.ajaskey.common.DateTime dateTime39 = dateTime3.copy(dateTime38);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-1972.041095890411d) + "'", double13 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(calendar26);
        org.junit.Assert.assertEquals(calendar26.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "31-Dec-1969" + "'", str33, "31-Dec-1969");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "         1" + "'", str35, "         1");
        org.junit.Assert.assertNotNull(dateTime36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 262 + "'", int37 == 262);
        org.junit.Assert.assertNull(dateTime39);
    }

    @Test
    public void test6861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6861");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) 275);
        java.text.SimpleDateFormat simpleDateFormat3 = null;
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat3);
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double7 = dateTime4.getDeltaYears(dateTime6);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean12 = dateTime6.isEqual(dateTime11);
        java.util.Calendar calendar13 = dateTime6.getCal();
        java.lang.String str14 = dateTime6.format();
        net.ajaskey.common.DateTime dateTime15 = null;
        long long16 = dateTime6.getDeltaDays(dateTime15);
        int int17 = dateTime6.getSecond();
        java.text.SimpleDateFormat simpleDateFormat19 = null;
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat19);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double23 = dateTime20.getDeltaYears(dateTime22);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean28 = dateTime22.isEqual(dateTime27);
        boolean boolean29 = dateTime6.isGreaterThanOrEqual(dateTime27);
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime((int) (byte) 10, (int) (byte) 0, 2);
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime(dateTime33);
        int int35 = dateTime33.getSecond();
        boolean boolean36 = dateTime27.sameDate(dateTime33);
        dateTime1.set(dateTime33);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(calendar13);
        org.junit.Assert.assertEquals(calendar13.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "BAD-DATE-FORMAT" + "'", str14, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int35 + "' != '" + 11 + "'", int35 == 11);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test6862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6862");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        dateTime3.add(2, 12);
        java.util.Date date7 = dateTime3.getTime();
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(date7);
        dateTime8.setFirstWorkDay();
        int int10 = dateTime8.getHour();
        org.junit.Assert.assertNotNull(date7);
// flaky:         org.junit.Assert.assertEquals(date7.toString(), "Sat Apr 10 10:47:12 MST 1");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
    }

    @Test
    public void test6863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6863");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        dateTime2.set((int) ' ', 0, 11);
        boolean boolean7 = dateTime2.isWeekday();
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(100L);
        int int10 = dateTime9.getMs();
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(100L);
        double double17 = dateTime14.getDeltaYears(dateTime16);
        java.text.SimpleDateFormat simpleDateFormat18 = dateTime14.getSdf();
        boolean boolean19 = dateTime9.isLessThanOrEqual(dateTime14);
        java.util.Date date20 = dateTime14.getTime();
        dateTime2.set(date20);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(date20);
        java.util.Date date23 = dateTime22.getTime();
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime(100L);
        int int26 = dateTime25.getMs();
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime(100L);
        double double33 = dateTime30.getDeltaYears(dateTime32);
        java.text.SimpleDateFormat simpleDateFormat34 = dateTime30.getSdf();
        boolean boolean35 = dateTime25.isLessThanOrEqual(dateTime30);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime(dateTime25);
        dateTime36.add(0, (int) (short) 10);
        int int40 = dateTime22.getYears(dateTime36);
        net.ajaskey.common.DateTime dateTime42 = dateTime22.parse("                                                                                               52.00");
        // The following exception was thrown during execution in test generation
        try {
            int int43 = dateTime42.getDayOfWeek();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-1972.041095890411d) + "'", double17 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(date20);
// flaky:         org.junit.Assert.assertEquals(date20.toString(), "Thu Apr 10 10:47:12 MST 2");
        org.junit.Assert.assertNotNull(date23);
// flaky:         org.junit.Assert.assertEquals(date23.toString(), "Thu Apr 10 10:47:12 MST 2");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-1972.041095890411d) + "'", double33 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1967 + "'", int40 == 1967);
        org.junit.Assert.assertNull(dateTime42);
    }

    @Test
    public void test6864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6864");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean4 = dateTime3.isNull();
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime();
        boolean boolean6 = dateTime3.sameDate(dateTime5);
        java.text.SimpleDateFormat simpleDateFormat12 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat14 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat15 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("", simpleDateFormat14, simpleDateFormat15);
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat12, simpleDateFormat15);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime("10-Apr-0002", simpleDateFormat15);
        java.text.SimpleDateFormat simpleDateFormat21 = null;
        java.text.SimpleDateFormat simpleDateFormat22 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime("January", simpleDateFormat21, simpleDateFormat22);
        java.text.SimpleDateFormat simpleDateFormat26 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime("January", simpleDateFormat26);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime("", simpleDateFormat26);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime("", simpleDateFormat22, simpleDateFormat26);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime("January                                                                                               52.00                                                                                               52.00                                                                                               52.00                                                                                               52.00hi!                                                                                               52.00", simpleDateFormat15, simpleDateFormat26);
        java.text.SimpleDateFormat simpleDateFormat32 = null;
        java.text.SimpleDateFormat simpleDateFormat33 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime("January", simpleDateFormat32, simpleDateFormat33);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("December", simpleDateFormat26, simpleDateFormat33);
        java.text.SimpleDateFormat simpleDateFormat38 = null;
        java.text.SimpleDateFormat simpleDateFormat39 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime("January", simpleDateFormat38, simpleDateFormat39);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime("                                                 100", simpleDateFormat39);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime("January     0     0                                                                                               52.00     0hi!     0", simpleDateFormat26, simpleDateFormat39);
        dateTime5.setSdf(simpleDateFormat26);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime(31, 108, 1969);
        boolean boolean48 = net.ajaskey.common.Utils.sameDate(dateTime5, dateTime47);
        java.util.Date date49 = dateTime5.getTime();
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime(date49);
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime(date49);
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime(date49);
        dateTime52.set(61, 305, 39);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(simpleDateFormat12);
        org.junit.Assert.assertNotNull(simpleDateFormat14);
        org.junit.Assert.assertNotNull(simpleDateFormat15);
        org.junit.Assert.assertNotNull(simpleDateFormat22);
        org.junit.Assert.assertNotNull(simpleDateFormat26);
        org.junit.Assert.assertNotNull(simpleDateFormat33);
        org.junit.Assert.assertNotNull(simpleDateFormat39);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(date49);
// flaky:         org.junit.Assert.assertEquals(date49.toString(), "Thu Jun 25 10:47:12 MDT 2020");
    }

    @Test
    public void test6865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6865");
        java.lang.String str2 = net.ajaskey.common.Utils.lfmt((-62190310414584L), 7);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "-62,190,310,414,584" + "'", str2, "-62,190,310,414,584");
    }

    @Test
    public void test6866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6866");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        java.lang.String str6 = dateTime4.getMonth();
        java.util.Date date7 = null;
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(date7);
        net.ajaskey.common.DateTime dateTime10 = dateTime8.parse("Thu 10-Apr-0002 10:42:58");
        dateTime8.setFirstWorkDay();
        int int12 = dateTime8.getSecond();
        boolean boolean13 = net.ajaskey.common.Utils.sameDate(dateTime4, dateTime8);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(100L);
        int int16 = dateTime15.getMs();
        java.lang.String str17 = dateTime15.toString();
        java.text.SimpleDateFormat simpleDateFormat19 = null;
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat19);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double23 = dateTime20.getDeltaYears(dateTime22);
        boolean boolean24 = dateTime20.isWeekday();
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long29 = dateTime20.getDeltaDays(dateTime28);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime(dateTime20);
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime(100L);
        double double37 = dateTime34.getDeltaYears(dateTime36);
        boolean boolean38 = dateTime36.isWeekday();
        java.util.Date date39 = dateTime36.getTime();
        dateTime20.set(date39);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime(100L);
        int int43 = dateTime42.getMs();
        java.lang.String str44 = dateTime42.toString();
        boolean boolean45 = dateTime20.isLessThanOrEqual(dateTime42);
        boolean boolean46 = dateTime15.isLessThanOrEqual(dateTime42);
        boolean boolean47 = net.ajaskey.common.Utils.sameMonth(dateTime8, dateTime15);
        dateTime8.set(38, 2020, 35);
        int int52 = dateTime8.getDayOfYear();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "December" + "'", str6, "December");
        org.junit.Assert.assertNull(dateTime10);
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 12 + "'", int12 == 12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "31-Dec-1969" + "'", str17, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-1972.041095890411d) + "'", double37 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(date39);
        org.junit.Assert.assertEquals(date39.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "31-Dec-1969" + "'", str44, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 155 + "'", int52 == 155);
    }

    @Test
    public void test6867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6867");
        java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readTextFile("Thu 10-Apr-0002 10:44:17", false);
        java.lang.String str3 = net.ajaskey.common.TextUtils.toString(strList2);
        java.lang.String str4 = net.ajaskey.common.TextUtils.toString(strList2);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
    }

    @Test
    public void test6868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6868");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime(100L);
        int int3 = dateTime2.getMs();
        java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdf;
        dateTime2.setSdf(simpleDateFormat4);
        int int6 = dateTime2.getDayOfWeek();
        java.text.SimpleDateFormat simpleDateFormat7 = dateTime2.getSdf();
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime("10-Dec-0024", simpleDateFormat7);
        boolean boolean9 = dateTime8.isWeekday();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 4 + "'", int6 == 4);
        org.junit.Assert.assertNotNull(simpleDateFormat7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test6869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6869");
        java.lang.String str2 = net.ajaskey.common.Utils.fmt((double) 22, 623);
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Invalid fmt" + "'", str2, "Invalid fmt");
    }

    @Test
    public void test6870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6870");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        boolean boolean7 = dateTime5.isWeekday();
        java.util.Date date8 = dateTime5.getTime();
        dateTime5.add((int) (byte) 100, 33);
        java.lang.String str12 = dateTime5.getDay();
        java.text.SimpleDateFormat simpleDateFormat14 = null;
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat14);
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double18 = dateTime15.getDeltaYears(dateTime17);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean23 = dateTime17.isEqual(dateTime22);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime(100L);
        int int26 = dateTime25.getMs();
        boolean boolean27 = dateTime22.isGreaterThanOrEqual(dateTime25);
        java.text.SimpleDateFormat simpleDateFormat29 = null;
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat29);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double33 = dateTime30.getDeltaYears(dateTime32);
        boolean boolean34 = dateTime30.isWeekday();
        boolean boolean35 = dateTime25.isLessThanOrEqual(dateTime30);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(100L);
        dateTime37.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean42 = dateTime37.isWeekday();
        boolean boolean43 = dateTime25.isGreaterThanOrEqual(dateTime37);
        java.lang.String str44 = dateTime25.toFullString();
        java.text.SimpleDateFormat simpleDateFormat46 = null;
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat46);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double50 = dateTime47.getDeltaYears(dateTime49);
        boolean boolean51 = dateTime47.isWeekday();
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long56 = dateTime47.getDeltaDays(dateTime55);
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime(dateTime47);
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime(100L);
        double double64 = dateTime61.getDeltaYears(dateTime63);
        boolean boolean65 = dateTime63.isWeekday();
        java.util.Date date66 = dateTime63.getTime();
        dateTime47.set(date66);
        dateTime25.set(date66);
        net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime(date66);
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime(date66);
        boolean boolean71 = dateTime5.isEqual(dateTime70);
        java.util.Date date72 = dateTime5.getTime();
        int int73 = dateTime5.getDayOfYear();
        java.lang.String str74 = dateTime5.getMonth();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(date8);
        org.junit.Assert.assertEquals(date8.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Wednesday" + "'", str12, "Wednesday");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str44, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 0L + "'", long56 == 0L);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-1972.041095890411d) + "'", double64 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(date66);
        org.junit.Assert.assertEquals(date66.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(date72);
        org.junit.Assert.assertEquals(date72.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 365 + "'", int73 == 365);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "December" + "'", str74, "December");
    }

    @Test
    public void test6871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6871");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(858, 238, 183);
        dateTime3.setFirstWorkDay();
    }

    @Test
    public void test6872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6872");
        java.util.zip.ZipOutputStream zipOutputStream1 = null;
        // The following exception was thrown during execution in test generation
        try {
            net.ajaskey.common.Utils.writeToZipFile("                                                                                                                                                                                                                                                                                                                                                            10", zipOutputStream1);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:                                                                                                                                                                                                                                                                                                                                                             10 (The filename, directory name, or volume label syntax is incorrect)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
    }

    @Test
    public void test6873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6873");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        int int7 = dateTime3.getHour();
        java.text.SimpleDateFormat simpleDateFormat9 = null;
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat9);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double13 = dateTime10.getDeltaYears(dateTime12);
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean18 = dateTime12.isEqual(dateTime17);
        java.util.Calendar calendar19 = dateTime12.getCal();
        java.lang.String str20 = dateTime12.format();
        net.ajaskey.common.DateTime dateTime21 = null;
        long long22 = dateTime12.getDeltaDays(dateTime21);
        int int23 = dateTime12.getSecond();
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(100L);
        double double30 = dateTime27.getDeltaYears(dateTime29);
        java.text.SimpleDateFormat simpleDateFormat32 = null;
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat32);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double36 = dateTime33.getDeltaYears(dateTime35);
        boolean boolean37 = dateTime33.isWeekday();
        boolean boolean38 = dateTime27.sameDate(dateTime33);
        int int39 = dateTime33.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime40 = dateTime12.copy(dateTime33);
        dateTime3.set(dateTime33);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat48 = null;
        java.text.SimpleDateFormat simpleDateFormat49 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime("January", simpleDateFormat48, simpleDateFormat49);
        java.text.SimpleDateFormat simpleDateFormat53 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime("January", simpleDateFormat53);
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime("", simpleDateFormat53);
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime("", simpleDateFormat49, simpleDateFormat53);
        dateTime45.setSdf(simpleDateFormat49);
        java.util.Calendar calendar58 = dateTime45.getCal();
        dateTime33.set(calendar58);
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime(calendar58);
        int int61 = dateTime60.getMs();
        int int62 = dateTime60.getDayOfMonth();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(calendar19);
        org.junit.Assert.assertEquals(calendar19.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "BAD-DATE-FORMAT" + "'", str20, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-1972.041095890411d) + "'", double30 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNull(dateTime40);
        org.junit.Assert.assertNotNull(simpleDateFormat49);
        org.junit.Assert.assertNotNull(simpleDateFormat53);
        org.junit.Assert.assertNotNull(calendar58);
// flaky:         org.junit.Assert.assertEquals(calendar58.toString(), "java.util.GregorianCalendar[time=-62190310367807,areFieldsSet=true,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=12,MILLISECOND=193,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
// flaky:         org.junit.Assert.assertTrue("'" + int61 + "' != '" + 193 + "'", int61 == 193);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 10 + "'", int62 == 10);
    }

    @Test
    public void test6874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6874");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(723, 17, 43);
    }

    @Test
    public void test6875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6875");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) (short) 0);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime(100L);
        double double8 = dateTime5.getDeltaYears(dateTime7);
        int int9 = dateTime5.getHour();
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime();
        net.ajaskey.common.DateTime dateTime11 = null;
        boolean boolean12 = dateTime10.isGreaterThan(dateTime11);
        java.text.SimpleDateFormat simpleDateFormat14 = null;
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat14);
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double18 = dateTime15.getDeltaYears(dateTime17);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean23 = dateTime17.isEqual(dateTime22);
        java.util.Calendar calendar24 = dateTime17.getCal();
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime(calendar24);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(calendar24);
        boolean boolean27 = dateTime10.isLessThan(dateTime26);
        boolean boolean28 = dateTime5.isLessThan(dateTime10);
        boolean boolean29 = dateTime1.isGreaterThan(dateTime10);
        java.text.SimpleDateFormat simpleDateFormat31 = null;
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat31);
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double35 = dateTime32.getDeltaYears(dateTime34);
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean40 = dateTime34.isEqual(dateTime39);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime(100L);
        int int43 = dateTime42.getMs();
        boolean boolean44 = dateTime39.isGreaterThanOrEqual(dateTime42);
        boolean boolean45 = dateTime10.isGreaterThan(dateTime42);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime(100L);
        int int48 = dateTime47.getMs();
        int int49 = dateTime47.getHour();
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat55 = null;
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat55);
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double59 = dateTime56.getDeltaYears(dateTime58);
        boolean boolean60 = dateTime53.isLessThan(dateTime58);
        java.lang.String str61 = dateTime58.toFullString();
        dateTime58.add(10, (int) (byte) -1);
        java.text.SimpleDateFormat simpleDateFormat66 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat68 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat69 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime("", simpleDateFormat68, simpleDateFormat69);
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat66, simpleDateFormat69);
        boolean boolean72 = dateTime58.isGreaterThan(dateTime71);
        boolean boolean73 = dateTime47.isEqual(dateTime58);
        net.ajaskey.common.DateTime dateTime74 = null;
        net.ajaskey.common.DateTime dateTime75 = new net.ajaskey.common.DateTime(dateTime74);
        dateTime75.set(42, 10, 10);
        java.util.Date date80 = dateTime75.getTime();
        net.ajaskey.common.DateTime dateTime81 = dateTime47.copy(dateTime75);
        net.ajaskey.common.DateTime dateTime83 = new net.ajaskey.common.DateTime(100L);
        int int84 = dateTime83.getMs();
        int int85 = dateTime83.getHour();
        double double86 = dateTime75.getDeltaYears(dateTime83);
        boolean boolean87 = net.ajaskey.common.Utils.sameDate(dateTime10, dateTime83);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-1972.041095890411d) + "'", double8 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(calendar24);
        org.junit.Assert.assertEquals(calendar24.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 100 + "'", int48 == 100);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 5 + "'", int49 == 5);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str61, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertNotNull(simpleDateFormat66);
        org.junit.Assert.assertNotNull(simpleDateFormat68);
        org.junit.Assert.assertNotNull(simpleDateFormat69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(date80);
// flaky:         org.junit.Assert.assertEquals(date80.toString(), "Sat Nov 10 10:47:12 MST 42");
        org.junit.Assert.assertNotNull(dateTime81);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 100 + "'", int84 == 100);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 5 + "'", int85 == 5);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-1928.4246575342465d) + "'", double86 == (-1928.4246575342465d));
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test6876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6876");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        int int7 = dateTime3.getHour();
        boolean boolean8 = dateTime3.isWeekday();
        int int9 = dateTime3.getSecond();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 12 + "'", int9 == 12);
    }

    @Test
    public void test6877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6877");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        int int3 = dateTime1.getHour();
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat9 = null;
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat9);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double13 = dateTime10.getDeltaYears(dateTime12);
        boolean boolean14 = dateTime7.isLessThan(dateTime12);
        java.lang.String str15 = dateTime12.toFullString();
        dateTime12.add(10, (int) (byte) -1);
        java.text.SimpleDateFormat simpleDateFormat20 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat22 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat23 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("", simpleDateFormat22, simpleDateFormat23);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat20, simpleDateFormat23);
        boolean boolean26 = dateTime12.isGreaterThan(dateTime25);
        boolean boolean27 = dateTime1.isEqual(dateTime12);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.lang.String str32 = dateTime31.toFullString();
        dateTime31.add(7, 53);
        net.ajaskey.common.DateTime dateTime36 = dateTime1.copy(dateTime31);
        int int37 = dateTime36.getDayOfMonth();
        int int38 = dateTime36.getDayOfWeek();
        int int39 = dateTime36.getDayOfYear();
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime(100L);
        int int42 = dateTime41.getMs();
        java.lang.String str43 = dateTime41.toString();
        int int44 = dateTime41.getDayOfYear();
        java.text.SimpleDateFormat simpleDateFormat46 = null;
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat46);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double50 = dateTime47.getDeltaYears(dateTime49);
        boolean boolean51 = dateTime47.isWeekday();
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long56 = dateTime47.getDeltaDays(dateTime55);
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime(dateTime47);
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime(100L);
        double double64 = dateTime61.getDeltaYears(dateTime63);
        boolean boolean65 = dateTime63.isWeekday();
        java.util.Date date66 = dateTime63.getTime();
        dateTime47.set(date66);
        net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime(100L);
        int int70 = dateTime69.getMs();
        java.lang.String str71 = dateTime69.toString();
        boolean boolean72 = dateTime47.isLessThanOrEqual(dateTime69);
        int int73 = dateTime47.getHour();
        boolean boolean74 = net.ajaskey.common.Utils.sameDate(dateTime41, dateTime47);
        net.ajaskey.common.DateTime dateTime75 = new net.ajaskey.common.DateTime(dateTime47);
        int int76 = dateTime47.getYear();
        boolean boolean77 = dateTime36.isLessThan(dateTime47);
        dateTime36.set(0, 53, 235);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 5 + "'", int3 == 5);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str15, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertNotNull(simpleDateFormat20);
        org.junit.Assert.assertNotNull(simpleDateFormat22);
        org.junit.Assert.assertNotNull(simpleDateFormat23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Thu 10-Apr-0002 10:47:12" + "'", str32, "Thu 10-Apr-0002 10:47:12");
        org.junit.Assert.assertNotNull(dateTime36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 10 + "'", int37 == 10);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 5 + "'", int38 == 5);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "31-Dec-1969" + "'", str43, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 365 + "'", int44 == 365);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 0L + "'", long56 == 0L);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-1972.041095890411d) + "'", double64 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(date66);
        org.junit.Assert.assertEquals(date66.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 100 + "'", int70 == 100);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "31-Dec-1969" + "'", str71, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 5 + "'", int73 == 5);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1969 + "'", int76 == 1969);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test6878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6878");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(100L);
        int int4 = dateTime3.getMs();
        java.text.SimpleDateFormat simpleDateFormat5 = net.ajaskey.common.Utils.sdf;
        dateTime3.setSdf(simpleDateFormat5);
        java.text.SimpleDateFormat simpleDateFormat9 = null;
        java.text.SimpleDateFormat simpleDateFormat10 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime("January", simpleDateFormat9, simpleDateFormat10);
        java.text.SimpleDateFormat simpleDateFormat14 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime("January", simpleDateFormat14);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("", simpleDateFormat14);
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("", simpleDateFormat10, simpleDateFormat14);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime("Thursday", simpleDateFormat5, simpleDateFormat14);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(100L);
        int int22 = dateTime21.getMs();
        java.text.SimpleDateFormat simpleDateFormat23 = net.ajaskey.common.Utils.sdf;
        dateTime21.setSdf(simpleDateFormat23);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat23);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime("           6", simpleDateFormat14, simpleDateFormat23);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime("BAD-DATE-FORMAT", "                                                                                               52.00");
        dateTime26.set(dateTime29);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime(100L);
        double double39 = dateTime36.getDeltaYears(dateTime38);
        int int40 = dateTime36.getHour();
        dateTime36.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat45 = null;
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat45);
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double49 = dateTime46.getDeltaYears(dateTime48);
        boolean boolean50 = dateTime36.isEqual(dateTime48);
        java.text.SimpleDateFormat simpleDateFormat52 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat54 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat55 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime("", simpleDateFormat54, simpleDateFormat55);
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat52, simpleDateFormat55);
        dateTime36.setSdf(simpleDateFormat52);
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat65 = null;
        java.text.SimpleDateFormat simpleDateFormat66 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime("January", simpleDateFormat65, simpleDateFormat66);
        java.text.SimpleDateFormat simpleDateFormat70 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime("January", simpleDateFormat70);
        net.ajaskey.common.DateTime dateTime72 = new net.ajaskey.common.DateTime("", simpleDateFormat70);
        net.ajaskey.common.DateTime dateTime73 = new net.ajaskey.common.DateTime("", simpleDateFormat66, simpleDateFormat70);
        dateTime62.setSdf(simpleDateFormat66);
        net.ajaskey.common.DateTime dateTime75 = new net.ajaskey.common.DateTime("December", simpleDateFormat52, simpleDateFormat66);
        net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime(100L);
        int int78 = dateTime77.getMs();
        java.text.SimpleDateFormat simpleDateFormat79 = net.ajaskey.common.Utils.sdf;
        dateTime77.setSdf(simpleDateFormat79);
        int int81 = dateTime77.getDayOfWeek();
        java.text.SimpleDateFormat simpleDateFormat82 = dateTime77.getSdf();
        net.ajaskey.common.DateTime dateTime83 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:43:00", simpleDateFormat66, simpleDateFormat82);
        java.lang.String str84 = dateTime83.format();
        int int85 = dateTime83.getHour();
        boolean boolean86 = dateTime29.isEqual(dateTime83);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat5);
        org.junit.Assert.assertNotNull(simpleDateFormat10);
        org.junit.Assert.assertNotNull(simpleDateFormat14);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat23);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-1972.041095890411d) + "'", double39 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(simpleDateFormat52);
        org.junit.Assert.assertNotNull(simpleDateFormat54);
        org.junit.Assert.assertNotNull(simpleDateFormat55);
        org.junit.Assert.assertNotNull(simpleDateFormat66);
        org.junit.Assert.assertNotNull(simpleDateFormat70);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 100 + "'", int78 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat79);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 4 + "'", int81 == 4);
        org.junit.Assert.assertNotNull(simpleDateFormat82);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "10-Apr-0002" + "'", str84, "10-Apr-0002");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 10 + "'", int85 == 10);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test6879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6879");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("              26", "                                             2,020.00");
        net.ajaskey.common.DateTime dateTime3 = null;
        boolean boolean4 = dateTime2.isLessThanOrEqual(dateTime3);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime((int) (short) 100, (int) (byte) 1, (int) (byte) 100);
        int int9 = dateTime8.getHour();
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(100L);
        int int13 = dateTime12.getMs();
        java.text.SimpleDateFormat simpleDateFormat14 = net.ajaskey.common.Utils.sdf;
        dateTime12.setSdf(simpleDateFormat14);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat14);
        java.text.SimpleDateFormat simpleDateFormat18 = null;
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat18);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double22 = dateTime19.getDeltaYears(dateTime21);
        boolean boolean23 = dateTime21.isNull();
        java.text.SimpleDateFormat simpleDateFormat25 = null;
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat25);
        dateTime26.set((int) ' ', 0, 11);
        boolean boolean31 = dateTime21.isGreaterThanOrEqual(dateTime26);
        double double32 = dateTime16.getDeltaYears(dateTime21);
        java.text.SimpleDateFormat simpleDateFormat34 = null;
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat34);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double38 = dateTime35.getDeltaYears(dateTime37);
        boolean boolean39 = dateTime37.isNull();
        boolean boolean40 = dateTime21.isGreaterThan(dateTime37);
        java.lang.String str42 = dateTime37.format("Thu 10-Apr-0002 10:42:59");
        boolean boolean43 = dateTime8.isGreaterThan(dateTime37);
        boolean boolean44 = dateTime2.isGreaterThan(dateTime8);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat14);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "BAD-DATE-FORMAT" + "'", str42, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test6880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6880");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(214, 34, 747);
    }

    @Test
    public void test6881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6881");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        java.util.Date date7 = dateTime3.getTime();
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(date7);
        net.ajaskey.common.DateTime dateTime11 = dateTime8.parse("31-Dec-1969", "January");
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(100L);
        int int14 = dateTime13.getMs();
        java.lang.String str15 = dateTime13.toString();
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(100L);
        double double22 = dateTime19.getDeltaYears(dateTime21);
        int int23 = dateTime19.getHour();
        int int24 = dateTime19.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime(100L);
        double double31 = dateTime28.getDeltaYears(dateTime30);
        boolean boolean32 = dateTime30.isWeekday();
        boolean boolean33 = net.ajaskey.common.Utils.sameDate(dateTime19, dateTime30);
        boolean boolean34 = net.ajaskey.common.Utils.sameDate(dateTime13, dateTime19);
        dateTime8.set(dateTime19);
        java.text.SimpleDateFormat simpleDateFormat37 = null;
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat37);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double41 = dateTime38.getDeltaYears(dateTime40);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean46 = dateTime40.isEqual(dateTime45);
        java.util.Calendar calendar47 = dateTime40.getCal();
        java.lang.String str48 = dateTime40.format();
        net.ajaskey.common.DateTime dateTime49 = null;
        long long50 = dateTime40.getDeltaDays(dateTime49);
        int int51 = dateTime40.getSecond();
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime(100L);
        int int54 = dateTime53.getMs();
        boolean boolean55 = dateTime53.isNull();
        java.util.Calendar calendar56 = dateTime53.getCal();
        dateTime40.set(calendar56);
        dateTime19.set(calendar56);
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime(calendar56);
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime(calendar56);
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime(calendar56);
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime(calendar56);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertNotNull(date7);
// flaky:         org.junit.Assert.assertEquals(date7.toString(), "Thu Apr 10 10:47:12 MST 2");
        org.junit.Assert.assertNull(dateTime11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "31-Dec-1969" + "'", str15, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-1972.041095890411d) + "'", double22 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-1972.041095890411d) + "'", double31 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(calendar47);
        org.junit.Assert.assertEquals(calendar47.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "BAD-DATE-FORMAT" + "'", str48, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 100 + "'", int54 == 100);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(calendar56);
        org.junit.Assert.assertEquals(calendar56.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    }

    @Test
    public void test6882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6882");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("5.00", "     10");
        int int3 = dateTime2.getDayOfWeek();
        int int4 = dateTime2.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(11, (int) (short) 1, 365);
        boolean boolean9 = net.ajaskey.common.Utils.sameMonth(dateTime2, dateTime8);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
        int int12 = dateTime11.getMs();
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(100L);
        double double19 = dateTime16.getDeltaYears(dateTime18);
        java.text.SimpleDateFormat simpleDateFormat20 = dateTime16.getSdf();
        boolean boolean21 = dateTime11.isLessThanOrEqual(dateTime16);
        boolean boolean22 = dateTime11.isWeekday();
        java.util.Calendar calendar23 = dateTime11.getCal();
        java.text.SimpleDateFormat simpleDateFormat25 = null;
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat25);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double29 = dateTime26.getDeltaYears(dateTime28);
        boolean boolean30 = dateTime26.isWeekday();
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long35 = dateTime26.getDeltaDays(dateTime34);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime(dateTime26);
        dateTime36.setFirstWorkDay();
        long long38 = dateTime11.getDeltaDays(dateTime36);
        boolean boolean39 = net.ajaskey.common.Utils.sameDate(dateTime8, dateTime11);
        java.lang.String str40 = dateTime11.toString();
        net.ajaskey.common.DateTime dateTime43 = dateTime11.parse("Fri 31-Dec-0001 10:43:48", "          264");
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime("", "         22");
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime(dateTime46);
        boolean boolean48 = net.ajaskey.common.Utils.sameMonth(dateTime11, dateTime46);
        int int49 = dateTime46.getDayOfMonth();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-1972.041095890411d) + "'", double19 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(calendar23);
        org.junit.Assert.assertEquals(calendar23.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-18438L) + "'", long38 == (-18438L));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "31-Dec-1969" + "'", str40, "31-Dec-1969");
        org.junit.Assert.assertNull(dateTime43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
    }

    @Test
    public void test6883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6883");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        dateTime1.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
        double double12 = dateTime9.getDeltaYears(dateTime11);
        boolean boolean13 = dateTime11.isWeekday();
        java.util.Date date14 = dateTime11.getTime();
        dateTime1.set(dateTime11);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(100L);
        double double22 = dateTime19.getDeltaYears(dateTime21);
        int int23 = dateTime19.getHour();
        java.text.SimpleDateFormat simpleDateFormat25 = null;
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat25);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double29 = dateTime26.getDeltaYears(dateTime28);
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean34 = dateTime28.isEqual(dateTime33);
        java.util.Calendar calendar35 = dateTime28.getCal();
        dateTime19.set(calendar35);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(calendar35);
        boolean boolean38 = dateTime11.isGreaterThan(dateTime37);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((long) (byte) 100);
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime(25, 1, 0);
        boolean boolean45 = net.ajaskey.common.Utils.sameMonth(dateTime40, dateTime44);
        int int46 = dateTime40.getSecond();
        boolean boolean47 = net.ajaskey.common.Utils.sameDate(dateTime37, dateTime40);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime(0L);
        int int50 = dateTime40.getYears(dateTime49);
        boolean boolean51 = dateTime49.isWeekday();
        int int52 = dateTime49.getDayOfYear();
        java.lang.String str53 = dateTime49.format();
        dateTime49.set((int) 'a', 0, 27);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1972.041095890411d) + "'", double12 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(date14);
        org.junit.Assert.assertEquals(date14.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-1972.041095890411d) + "'", double22 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(calendar35);
        org.junit.Assert.assertEquals(calendar35.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 365 + "'", int52 == 365);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "BAD-DATE-FORMAT" + "'", str53, "BAD-DATE-FORMAT");
    }

    @Test
    public void test6884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6884");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        java.text.SimpleDateFormat simpleDateFormat8 = null;
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double12 = dateTime9.getDeltaYears(dateTime11);
        boolean boolean13 = dateTime9.isWeekday();
        boolean boolean14 = dateTime3.sameDate(dateTime9);
        java.text.SimpleDateFormat simpleDateFormat16 = null;
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double20 = dateTime17.getDeltaYears(dateTime19);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean25 = dateTime19.isEqual(dateTime24);
        dateTime3.set(dateTime24);
        int int27 = dateTime24.getDayOfWeek();
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(100L);
        dateTime29.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str34 = dateTime29.getMonth();
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime(100L);
        dateTime36.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str41 = dateTime36.getMonth();
        int int42 = dateTime36.getMs();
        net.ajaskey.common.DateTime dateTime43 = dateTime29.copy(dateTime36);
        int int44 = dateTime36.getSecond();
        java.util.Date date45 = null;
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime(date45);
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime(100L);
        double double53 = dateTime50.getDeltaYears(dateTime52);
        int int54 = dateTime50.getHour();
        java.text.SimpleDateFormat simpleDateFormat56 = null;
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat56);
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double60 = dateTime57.getDeltaYears(dateTime59);
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean65 = dateTime59.isEqual(dateTime64);
        java.util.Calendar calendar66 = dateTime59.getCal();
        dateTime50.set(calendar66);
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime(calendar66);
        net.ajaskey.common.DateTime dateTime69 = dateTime46.copy(dateTime68);
        boolean boolean70 = dateTime36.isLessThan(dateTime68);
        boolean boolean71 = dateTime24.isEqual(dateTime68);
        int int72 = dateTime68.getDayOfWeek();
        java.util.Calendar calendar73 = dateTime68.getCal();
        net.ajaskey.common.DateTime dateTime74 = new net.ajaskey.common.DateTime(dateTime68);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 5 + "'", int27 == 5);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "January" + "'", str34, "January");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "January" + "'", str41, "January");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
        org.junit.Assert.assertNotNull(dateTime43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-1972.041095890411d) + "'", double53 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 10 + "'", int54 == 10);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(calendar66);
        org.junit.Assert.assertEquals(calendar66.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(dateTime69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 4 + "'", int72 == 4);
        org.junit.Assert.assertNotNull(calendar73);
        org.junit.Assert.assertEquals(calendar73.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    }

    @Test
    public void test6885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6885");
        java.text.SimpleDateFormat simpleDateFormat2 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime("January", simpleDateFormat2);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime("", simpleDateFormat2);
        dateTime4.setFirstWorkDay();
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat11 = null;
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat11);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double15 = dateTime12.getDeltaYears(dateTime14);
        boolean boolean16 = dateTime9.isLessThan(dateTime14);
        java.lang.String str17 = dateTime14.toFullString();
        dateTime14.add(10, (int) (byte) -1);
        java.text.SimpleDateFormat simpleDateFormat22 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat24 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat25 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime("", simpleDateFormat24, simpleDateFormat25);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat22, simpleDateFormat25);
        boolean boolean28 = dateTime14.isGreaterThan(dateTime27);
        java.text.SimpleDateFormat simpleDateFormat30 = null;
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat30);
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double34 = dateTime31.getDeltaYears(dateTime33);
        boolean boolean35 = dateTime31.isWeekday();
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long40 = dateTime31.getDeltaDays(dateTime39);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime(dateTime31);
        boolean boolean42 = dateTime27.sameDate(dateTime31);
        boolean boolean43 = dateTime4.isGreaterThan(dateTime31);
        java.lang.String str44 = dateTime31.toFullString();
        net.ajaskey.common.DateTime dateTime45 = null;
        long long46 = dateTime31.getDeltaDays(dateTime45);
        java.lang.String str48 = dateTime31.format("                                      1");
        java.lang.String str50 = dateTime31.format("                                                                                                                                                                                                                                                                   238");
        org.junit.Assert.assertNotNull(simpleDateFormat2);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str17, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertNotNull(simpleDateFormat22);
        org.junit.Assert.assertNotNull(simpleDateFormat24);
        org.junit.Assert.assertNotNull(simpleDateFormat25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Invalid Time" + "'", str44, "Invalid Time");
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "BAD-DATE-FORMAT" + "'", str48, "BAD-DATE-FORMAT");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "BAD-DATE-FORMAT" + "'", str50, "BAD-DATE-FORMAT");
    }

    @Test
    public void test6886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6886");
        java.text.SimpleDateFormat simpleDateFormat2 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat3 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime("", simpleDateFormat2, simpleDateFormat3);
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime(100L);
        int int7 = dateTime6.getMs();
        java.text.SimpleDateFormat simpleDateFormat8 = net.ajaskey.common.Utils.sdf;
        dateTime6.setSdf(simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat3, simpleDateFormat8);
        java.text.SimpleDateFormat simpleDateFormat12 = null;
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat12);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double16 = dateTime13.getDeltaYears(dateTime15);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean21 = dateTime15.isEqual(dateTime20);
        java.util.Calendar calendar22 = dateTime15.getCal();
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime(calendar22);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime(calendar22);
        boolean boolean25 = dateTime10.isGreaterThan(dateTime24);
        java.util.Date date26 = dateTime10.getTime();
        java.lang.String str28 = dateTime10.format("Thu 25-Jun-2020 10:43:34");
        org.junit.Assert.assertNotNull(simpleDateFormat2);
        org.junit.Assert.assertNotNull(simpleDateFormat3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat8);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(calendar22);
        org.junit.Assert.assertEquals(calendar22.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(date26);
        org.junit.Assert.assertEquals(date26.toString(), "Wed Dec 31 00:00:00 MST 1969");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "BAD-DATE-FORMAT" + "'", str28, "BAD-DATE-FORMAT");
    }

    @Test
    public void test6887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6887");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) 1);
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(100L);
        int int4 = dateTime3.getMs();
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime(100L);
        double double11 = dateTime8.getDeltaYears(dateTime10);
        java.text.SimpleDateFormat simpleDateFormat12 = dateTime8.getSdf();
        boolean boolean13 = dateTime3.isLessThanOrEqual(dateTime8);
        java.text.SimpleDateFormat simpleDateFormat15 = null;
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat15);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double19 = dateTime16.getDeltaYears(dateTime18);
        boolean boolean20 = dateTime16.isWeekday();
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long25 = dateTime16.getDeltaDays(dateTime24);
        long long26 = dateTime3.getDeltaDays(dateTime24);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(100L);
        dateTime28.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean33 = dateTime28.isWeekday();
        int int34 = dateTime3.getYears(dateTime28);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime(100L);
        double double41 = dateTime38.getDeltaYears(dateTime40);
        int int42 = dateTime38.getHour();
        java.text.SimpleDateFormat simpleDateFormat44 = null;
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat44);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double48 = dateTime45.getDeltaYears(dateTime47);
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean53 = dateTime47.isEqual(dateTime52);
        java.util.Calendar calendar54 = dateTime47.getCal();
        dateTime38.set(calendar54);
        dateTime3.set(calendar54);
        dateTime3.set(0, (int) (short) 0, 2);
        long long61 = dateTime1.getDeltaDays(dateTime3);
        boolean boolean62 = dateTime3.isNull();
        java.util.Date date63 = dateTime3.getTime();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + (-1972.041095890411d) + "'", double11 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 719795L + "'", long26 == 719795L);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1870) + "'", int34 == (-1870));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-1972.041095890411d) + "'", double41 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10 + "'", int42 == 10);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(calendar54);
        org.junit.Assert.assertEquals(calendar54.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 719528L + "'", long61 == 719528L);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(date63);
        org.junit.Assert.assertEquals(date63.toString(), "Fri Jan 02 17:00:00 MST 1");
    }

    @Test
    public void test6888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6888");
        java.util.zip.ZipOutputStream zipOutputStream1 = null;
        // The following exception was thrown during execution in test generation
        try {
            net.ajaskey.common.Utils.writeToZipFile("Thu 10-Apr-0002 10:43:39", zipOutputStream1);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: Thu 10-Apr-0002 10:43:39 (The filename, directory name, or volume label syntax is incorrect)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
    }

    @Test
    public void test6889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6889");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        java.lang.String str3 = dateTime1.toString();
        java.util.Date date4 = dateTime1.getTime();
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(date4);
        java.lang.String str6 = dateTime5.toFullString();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "31-Dec-1969" + "'", str3, "31-Dec-1969");
        org.junit.Assert.assertNotNull(date4);
        org.junit.Assert.assertEquals(date4.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str6, "Wed 31-Dec-1969 17:00:00");
    }

    @Test
    public void test6890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6890");
        net.ajaskey.common.Utils.makeDir("                          152");
    }

    @Test
    public void test6891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6891");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(862, 898, 8);
    }

    @Test
    public void test6892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6892");
        java.util.zip.ZipOutputStream zipOutputStream1 = null;
        // The following exception was thrown during execution in test generation
        try {
            net.ajaskey.common.Utils.writeToZipFile("Thu 10-Apr-0002 10:44:06", zipOutputStream1);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: Thu 10-Apr-0002 10:44:06 (The filename, directory name, or volume label syntax is incorrect)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
    }

    @Test
    public void test6893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6893");
        java.text.SimpleDateFormat simpleDateFormat2 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime("January", simpleDateFormat2);
        java.text.SimpleDateFormat simpleDateFormat8 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat9 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("", simpleDateFormat8, simpleDateFormat9);
        java.text.SimpleDateFormat simpleDateFormat12 = null;
        java.text.SimpleDateFormat simpleDateFormat13 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime("January", simpleDateFormat12, simpleDateFormat13);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat8, simpleDateFormat13);
        java.text.SimpleDateFormat simpleDateFormat18 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat19 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("", simpleDateFormat18, simpleDateFormat19);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(100L);
        int int23 = dateTime22.getMs();
        java.text.SimpleDateFormat simpleDateFormat24 = net.ajaskey.common.Utils.sdf;
        dateTime22.setSdf(simpleDateFormat24);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat19, simpleDateFormat24);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime("                             100", simpleDateFormat13, simpleDateFormat19);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime("11", simpleDateFormat13);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime("                                 32.00", simpleDateFormat2, simpleDateFormat13);
        java.text.SimpleDateFormat simpleDateFormat30 = dateTime29.getSdf();
        int int31 = dateTime29.getMinute();
        org.junit.Assert.assertNotNull(simpleDateFormat2);
        org.junit.Assert.assertNotNull(simpleDateFormat8);
        org.junit.Assert.assertNotNull(simpleDateFormat9);
        org.junit.Assert.assertNotNull(simpleDateFormat13);
        org.junit.Assert.assertNotNull(simpleDateFormat18);
        org.junit.Assert.assertNotNull(simpleDateFormat19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat24);
        org.junit.Assert.assertNull(simpleDateFormat30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
    }

    @Test
    public void test6894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6894");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        long long6 = dateTime3.getDeltaDays(dateTime5);
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(100L);
        double double13 = dateTime10.getDeltaYears(dateTime12);
        java.util.Date date14 = dateTime10.getTime();
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(date14);
        net.ajaskey.common.DateTime dateTime18 = dateTime15.parse("31-Dec-1969", "January");
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime(100L);
        int int21 = dateTime20.getMs();
        java.lang.String str22 = dateTime20.toString();
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(100L);
        double double29 = dateTime26.getDeltaYears(dateTime28);
        int int30 = dateTime26.getHour();
        int int31 = dateTime26.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(100L);
        double double38 = dateTime35.getDeltaYears(dateTime37);
        boolean boolean39 = dateTime37.isWeekday();
        boolean boolean40 = net.ajaskey.common.Utils.sameDate(dateTime26, dateTime37);
        boolean boolean41 = net.ajaskey.common.Utils.sameDate(dateTime20, dateTime26);
        dateTime15.set(dateTime26);
        java.util.Calendar calendar43 = dateTime26.getCal();
        boolean boolean44 = dateTime3.isLessThan(dateTime26);
        boolean boolean45 = dateTime26.isWeekday();
        java.lang.String str46 = dateTime26.toFullString();
        java.lang.String str47 = dateTime26.getDay();
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-719795L) + "'", long6 == (-719795L));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-1972.041095890411d) + "'", double13 == (-1972.041095890411d));
        org.junit.Assert.assertNotNull(date14);
// flaky:         org.junit.Assert.assertEquals(date14.toString(), "Thu Apr 10 10:47:12 MST 2");
        org.junit.Assert.assertNull(dateTime18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "31-Dec-1969" + "'", str22, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-1972.041095890411d) + "'", double29 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10 + "'", int31 == 10);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1972.041095890411d) + "'", double38 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(calendar43);
// flaky:         org.junit.Assert.assertEquals(calendar43.toString(), "java.util.GregorianCalendar[time=-62190310367415,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=12,MILLISECOND=585,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
// flaky:         org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Thu 10-Apr-0002 10:47:12" + "'", str46, "Thu 10-Apr-0002 10:47:12");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Thursday" + "'", str47, "Thursday");
    }

    @Test
    public void test6895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6895");
        java.lang.String str2 = net.ajaskey.common.Utils.lfmt(0L, 974);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             0" + "'", str
    }

    @Test
    public void test6896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6896");
        net.ajaskey.common.Utils.sleep(241);
    }

    @Test
    public void test6897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6897");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("5.00", "     10");
        dateTime2.add((int) (short) 0, (int) 'a');
        int int6 = dateTime2.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        int int9 = dateTime8.getMs();
        int int10 = dateTime8.getHour();
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat16 = null;
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double20 = dateTime17.getDeltaYears(dateTime19);
        boolean boolean21 = dateTime14.isLessThan(dateTime19);
        java.lang.String str22 = dateTime19.toFullString();
        dateTime19.add(10, (int) (byte) -1);
        java.text.SimpleDateFormat simpleDateFormat27 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat29 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat30 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime("", simpleDateFormat29, simpleDateFormat30);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat27, simpleDateFormat30);
        boolean boolean33 = dateTime19.isGreaterThan(dateTime32);
        boolean boolean34 = dateTime8.isEqual(dateTime19);
        net.ajaskey.common.DateTime dateTime35 = null;
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime(dateTime35);
        dateTime36.set(42, 10, 10);
        java.util.Date date41 = dateTime36.getTime();
        net.ajaskey.common.DateTime dateTime42 = dateTime8.copy(dateTime36);
        net.ajaskey.common.DateTime dateTime43 = dateTime2.copy(dateTime8);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime((long) (byte) 100);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime(25, 1, 0);
        boolean boolean50 = net.ajaskey.common.Utils.sameMonth(dateTime45, dateTime49);
        boolean boolean51 = net.ajaskey.common.Utils.sameDate(dateTime2, dateTime45);
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime(100L);
        int int55 = dateTime54.getMs();
        java.text.SimpleDateFormat simpleDateFormat56 = net.ajaskey.common.Utils.sdf;
        dateTime54.setSdf(simpleDateFormat56);
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat56);
        java.text.SimpleDateFormat simpleDateFormat60 = null;
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat60);
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double64 = dateTime61.getDeltaYears(dateTime63);
        boolean boolean65 = dateTime63.isNull();
        java.text.SimpleDateFormat simpleDateFormat67 = null;
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat67);
        dateTime68.set((int) ' ', 0, 11);
        boolean boolean73 = dateTime63.isGreaterThanOrEqual(dateTime68);
        double double74 = dateTime58.getDeltaYears(dateTime63);
        net.ajaskey.common.DateTime dateTime76 = new net.ajaskey.common.DateTime((long) (short) 0);
        int int77 = dateTime76.getHour();
        boolean boolean78 = dateTime76.isNull();
        net.ajaskey.common.DateTime dateTime79 = new net.ajaskey.common.DateTime(dateTime76);
        dateTime79.set(0, 12, 12);
        boolean boolean84 = dateTime58.isLessThan(dateTime79);
        boolean boolean85 = net.ajaskey.common.Utils.sameDate(dateTime2, dateTime79);
        int int86 = dateTime79.getSecond();
        java.lang.Class<?> wildcardClass87 = dateTime79.getClass();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str22, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertNotNull(simpleDateFormat27);
        org.junit.Assert.assertNotNull(simpleDateFormat29);
        org.junit.Assert.assertNotNull(simpleDateFormat30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(date41);
// flaky:         org.junit.Assert.assertEquals(date41.toString(), "Sat Nov 10 10:47:12 MST 42");
        org.junit.Assert.assertNotNull(dateTime42);
        org.junit.Assert.assertNotNull(dateTime43);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat56);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 5 + "'", int77 == 5);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test6898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6898");
        java.lang.String str2 = net.ajaskey.common.Utils.fmt(0.0d, (-239));
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Invalid fmt" + "'", str2, "Invalid fmt");
    }

    @Test
    public void test6899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6899");
        java.text.SimpleDateFormat simpleDateFormat5 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat6 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("", simpleDateFormat5, simpleDateFormat6);
        java.text.SimpleDateFormat simpleDateFormat9 = null;
        java.text.SimpleDateFormat simpleDateFormat10 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime("January", simpleDateFormat9, simpleDateFormat10);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat5, simpleDateFormat10);
        java.text.SimpleDateFormat simpleDateFormat15 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat16 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("", simpleDateFormat15, simpleDateFormat16);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(100L);
        int int20 = dateTime19.getMs();
        java.text.SimpleDateFormat simpleDateFormat21 = net.ajaskey.common.Utils.sdf;
        dateTime19.setSdf(simpleDateFormat21);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat16, simpleDateFormat21);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("                             100", simpleDateFormat10, simpleDateFormat16);
        java.text.SimpleDateFormat simpleDateFormat27 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat28 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime("", simpleDateFormat27, simpleDateFormat28);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:42:54", simpleDateFormat27);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime("5.00", simpleDateFormat10, simpleDateFormat27);
        java.text.SimpleDateFormat simpleDateFormat32 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat10, simpleDateFormat32);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(12, 42, (int) (byte) 1);
        java.util.Calendar calendar38 = dateTime37.getCal();
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime(calendar38);
        long long40 = dateTime33.getDeltaMilliSeconds(dateTime39);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime(dateTime39);
        int int42 = dateTime39.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime44 = dateTime39.parse("                                                                                                                                                                                                                                                                                                                                                                        1,869");
        org.junit.Assert.assertNotNull(simpleDateFormat5);
        org.junit.Assert.assertNotNull(simpleDateFormat6);
        org.junit.Assert.assertNotNull(simpleDateFormat10);
        org.junit.Assert.assertNotNull(simpleDateFormat15);
        org.junit.Assert.assertNotNull(simpleDateFormat16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat21);
        org.junit.Assert.assertNotNull(simpleDateFormat27);
        org.junit.Assert.assertNotNull(simpleDateFormat28);
        org.junit.Assert.assertNotNull(simpleDateFormat32);
        org.junit.Assert.assertNotNull(calendar38);
// flaky:         org.junit.Assert.assertEquals(calendar38.toString(), "java.util.GregorianCalendar[time=-61678303967082,areFieldsSet=true,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=15,MONTH=6,WEEK_OF_YEAR=27,WEEK_OF_MONTH=1,DAY_OF_MONTH=1,DAY_OF_YEAR=182,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=1,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=12,MILLISECOND=918,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNull(dateTime44);
    }

    @Test
    public void test6900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6900");
        net.ajaskey.common.Utils.sleep(439);
    }

    @Test
    public void test6901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6901");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        java.text.SimpleDateFormat simpleDateFormat8 = null;
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double12 = dateTime9.getDeltaYears(dateTime11);
        boolean boolean13 = dateTime9.isWeekday();
        boolean boolean14 = dateTime3.sameDate(dateTime9);
        java.text.SimpleDateFormat simpleDateFormat16 = null;
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double20 = dateTime17.getDeltaYears(dateTime19);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean25 = dateTime19.isEqual(dateTime24);
        dateTime3.set(dateTime24);
        java.text.SimpleDateFormat simpleDateFormat31 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat32 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime("", simpleDateFormat31, simpleDateFormat32);
        java.text.SimpleDateFormat simpleDateFormat35 = null;
        java.text.SimpleDateFormat simpleDateFormat36 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime("January", simpleDateFormat35, simpleDateFormat36);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat31, simpleDateFormat36);
        java.text.SimpleDateFormat simpleDateFormat41 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat42 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime("", simpleDateFormat41, simpleDateFormat42);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(100L);
        int int46 = dateTime45.getMs();
        java.text.SimpleDateFormat simpleDateFormat47 = net.ajaskey.common.Utils.sdf;
        dateTime45.setSdf(simpleDateFormat47);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat42, simpleDateFormat47);
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime("                             100", simpleDateFormat36, simpleDateFormat42);
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:42:58", simpleDateFormat36);
        boolean boolean52 = dateTime3.isGreaterThanOrEqual(dateTime51);
        java.lang.String str53 = dateTime3.toString();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(simpleDateFormat31);
        org.junit.Assert.assertNotNull(simpleDateFormat32);
        org.junit.Assert.assertNotNull(simpleDateFormat36);
        org.junit.Assert.assertNotNull(simpleDateFormat41);
        org.junit.Assert.assertNotNull(simpleDateFormat42);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat47);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "10-Apr-0002" + "'", str53, "10-Apr-0002");
    }

    @Test
    public void test6902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6902");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        dateTime1.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str6 = dateTime1.getMonth();
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        dateTime8.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str13 = dateTime8.getMonth();
        int int14 = dateTime8.getMs();
        net.ajaskey.common.DateTime dateTime15 = dateTime1.copy(dateTime8);
        int int16 = dateTime15.getMs();
        net.ajaskey.common.DateTime dateTime18 = dateTime15.parse("                              1,927");
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(0, 594, 18);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:43:41", "");
        double double26 = dateTime22.getDeltaYears(dateTime25);
        boolean boolean27 = dateTime15.isGreaterThanOrEqual(dateTime25);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "January" + "'", str6, "January");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "January" + "'", str13, "January");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        org.junit.Assert.assertNull(dateTime18);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test6903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6903");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        boolean boolean3 = dateTime1.isWeekday();
        int int4 = dateTime1.getHour();
        java.text.SimpleDateFormat simpleDateFormat6 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("January", simpleDateFormat6);
        dateTime1.setSdf(simpleDateFormat6);
        java.lang.String str9 = dateTime1.toFullString();
        java.lang.String str11 = dateTime1.format("   42.00");
        int int12 = dateTime1.getYear();
        net.ajaskey.common.DateTime dateTime14 = dateTime1.parse("                                                                                               52.00");
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(100L);
        dateTime16.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str21 = dateTime16.getMonth();
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime(100L);
        dateTime23.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str28 = dateTime23.getMonth();
        int int29 = dateTime23.getMs();
        net.ajaskey.common.DateTime dateTime30 = dateTime16.copy(dateTime23);
        int int31 = dateTime23.getSecond();
        int int32 = dateTime23.getMinute();
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime(100L);
        long long43 = dateTime40.getDeltaDays(dateTime42);
        int int44 = dateTime40.getHour();
        dateTime40.add((int) (byte) 100, (int) (byte) 0);
        double double48 = dateTime36.getDeltaYears(dateTime40);
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime(100L);
        int int51 = dateTime50.getMs();
        java.lang.String str52 = dateTime50.toString();
        dateTime50.set(25, (-1), (int) (short) 10);
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime(100L);
        double double63 = dateTime60.getDeltaYears(dateTime62);
        boolean boolean64 = dateTime62.isWeekday();
        boolean boolean65 = net.ajaskey.common.Utils.sameMonth(dateTime50, dateTime62);
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime((long) (short) 0);
        int int68 = dateTime67.getHour();
        boolean boolean69 = dateTime67.isNull();
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime(dateTime67);
        boolean boolean71 = dateTime62.isGreaterThan(dateTime67);
        boolean boolean72 = dateTime40.isGreaterThan(dateTime67);
        dateTime67.set(43, 28, 1866);
        net.ajaskey.common.DateTime dateTime77 = dateTime23.copy(dateTime67);
        // The following exception was thrown during execution in test generation
        try {
            double double78 = dateTime14.getDeltaYears(dateTime77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertNotNull(simpleDateFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str9, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "   42.00" + "'", str11, "   42.00");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1969 + "'", int12 == 1969);
        org.junit.Assert.assertNull(dateTime14);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "January" + "'", str21, "January");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "January" + "'", str28, "January");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        org.junit.Assert.assertNotNull(dateTime30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-719795L) + "'", long43 == (-719795L));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 10 + "'", int44 == 10);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 100 + "'", int51 == 100);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "31-Dec-1969" + "'", str52, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-1972.041095890411d) + "'", double63 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 5 + "'", int68 == 5);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(dateTime77);
    }

    @Test
    public void test6904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6904");
        java.lang.String str2 = net.ajaskey.common.Utils.fmt((double) 87, (-51));
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Invalid fmt" + "'", str2, "Invalid fmt");
    }

    @Test
    public void test6905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6905");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        java.lang.String str3 = dateTime1.toString();
        java.util.Date date4 = dateTime1.getTime();
        java.util.Date date5 = dateTime1.getTime();
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime(100L);
        int int8 = dateTime7.getMs();
        int int9 = dateTime7.getHour();
        int int10 = dateTime7.getDayOfYear();
        long long11 = dateTime1.getDeltaDays(dateTime7);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(100L);
        int int14 = dateTime13.getMs();
        java.lang.String str15 = dateTime13.toString();
        java.lang.String str17 = dateTime13.format("         1");
        boolean boolean18 = dateTime7.isEqual(dateTime13);
        net.ajaskey.common.DateTime dateTime19 = null;
        long long20 = dateTime13.getDeltaDays(dateTime19);
        java.lang.String str21 = dateTime13.toFullString();
        java.lang.String str22 = dateTime13.getMonth();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "31-Dec-1969" + "'", str3, "31-Dec-1969");
        org.junit.Assert.assertNotNull(date4);
        org.junit.Assert.assertEquals(date4.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertNotNull(date5);
        org.junit.Assert.assertEquals(date5.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 5 + "'", int9 == 5);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 365 + "'", int10 == 365);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "31-Dec-1969" + "'", str15, "31-Dec-1969");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "         1" + "'", str17, "         1");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str21, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "December" + "'", str22, "December");
    }

    @Test
    public void test6906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6906");
        java.text.SimpleDateFormat simpleDateFormat1 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat2 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime("", simpleDateFormat1, simpleDateFormat2);
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(100L);
        double double10 = dateTime7.getDeltaYears(dateTime9);
        int int11 = dateTime7.getHour();
        java.text.SimpleDateFormat simpleDateFormat13 = null;
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat13);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double17 = dateTime14.getDeltaYears(dateTime16);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean22 = dateTime16.isEqual(dateTime21);
        java.util.Calendar calendar23 = dateTime16.getCal();
        dateTime7.set(calendar23);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime(calendar23);
        boolean boolean26 = dateTime3.isLessThan(dateTime25);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(100L);
        int int29 = dateTime28.getMs();
        boolean boolean30 = dateTime28.isWeekday();
        int int31 = dateTime28.getHour();
        java.text.SimpleDateFormat simpleDateFormat33 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime("January", simpleDateFormat33);
        dateTime28.setSdf(simpleDateFormat33);
        java.lang.String str36 = dateTime28.toFullString();
        java.lang.String str37 = dateTime28.toFullString();
        boolean boolean38 = dateTime25.isGreaterThan(dateTime28);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime(100L);
        dateTime40.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str45 = dateTime40.getMonth();
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime(100L);
        dateTime47.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str52 = dateTime47.getMonth();
        int int53 = dateTime47.getMs();
        net.ajaskey.common.DateTime dateTime54 = dateTime40.copy(dateTime47);
        boolean boolean55 = dateTime25.isLessThanOrEqual(dateTime54);
        int int56 = dateTime54.getYear();
        org.junit.Assert.assertNotNull(simpleDateFormat1);
        org.junit.Assert.assertNotNull(simpleDateFormat2);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1972.041095890411d) + "'", double10 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(calendar23);
        org.junit.Assert.assertEquals(calendar23.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 5 + "'", int31 == 5);
        org.junit.Assert.assertNotNull(simpleDateFormat33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str36, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str37, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "January" + "'", str45, "January");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "January" + "'", str52, "January");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 100 + "'", int53 == 100);
        org.junit.Assert.assertNotNull(dateTime54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
    }

    @Test
    public void test6907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6907");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        boolean boolean7 = dateTime5.isWeekday();
        java.lang.String str9 = dateTime5.format("hi!");
        int int10 = dateTime5.getMinute();
        net.ajaskey.common.DateTime dateTime13 = dateTime5.parse("Mon 10-Apr-0002 00:00:00", "January                                 365.00                                 365.00                                                                                               52.00                                 365.00hi!                                 365.00");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = dateTime13.format();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "BAD-DATE-FORMAT" + "'", str9, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(dateTime13);
    }

    @Test
    public void test6908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6908");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(100L);
        long long10 = dateTime7.getDeltaDays(dateTime9);
        int int11 = dateTime7.getHour();
        dateTime7.add((int) (byte) 100, (int) (byte) 0);
        double double15 = dateTime3.getDeltaYears(dateTime7);
        java.lang.String str16 = dateTime7.toFullString();
        java.lang.String str17 = dateTime7.toFullString();
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(dateTime7);
        int int19 = dateTime7.getDayOfWeek();
        int int20 = dateTime7.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime("5.00", "     10");
        dateTime23.add((int) (short) 0, (int) 'a');
        int int27 = dateTime23.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(100L);
        int int30 = dateTime29.getMs();
        int int31 = dateTime29.getHour();
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat37 = null;
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat37);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double41 = dateTime38.getDeltaYears(dateTime40);
        boolean boolean42 = dateTime35.isLessThan(dateTime40);
        java.lang.String str43 = dateTime40.toFullString();
        dateTime40.add(10, (int) (byte) -1);
        java.text.SimpleDateFormat simpleDateFormat48 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat50 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat51 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime("", simpleDateFormat50, simpleDateFormat51);
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat48, simpleDateFormat51);
        boolean boolean54 = dateTime40.isGreaterThan(dateTime53);
        boolean boolean55 = dateTime29.isEqual(dateTime40);
        net.ajaskey.common.DateTime dateTime56 = null;
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime(dateTime56);
        dateTime57.set(42, 10, 10);
        java.util.Date date62 = dateTime57.getTime();
        net.ajaskey.common.DateTime dateTime63 = dateTime29.copy(dateTime57);
        net.ajaskey.common.DateTime dateTime64 = dateTime23.copy(dateTime29);
        java.text.SimpleDateFormat simpleDateFormat66 = null;
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat66);
        net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double70 = dateTime67.getDeltaYears(dateTime69);
        net.ajaskey.common.DateTime dateTime74 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean75 = dateTime69.isEqual(dateTime74);
        java.util.Calendar calendar76 = dateTime69.getCal();
        net.ajaskey.common.DateTime dateTime80 = new net.ajaskey.common.DateTime(1, (int) '4', 5);
        double double81 = dateTime69.getDeltaYears(dateTime80);
        double double82 = dateTime64.getDeltaYears(dateTime80);
        boolean boolean83 = dateTime80.isNull();
        boolean boolean84 = net.ajaskey.common.Utils.sameMonth(dateTime7, dateTime80);
        java.lang.String str85 = dateTime80.toFullString();
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-719795L) + "'", long10 == (-719795L));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Thu 10-Apr-0002 10:47:13" + "'", str16, "Thu 10-Apr-0002 10:47:13");
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Thu 10-Apr-0002 10:47:13" + "'", str17, "Thu 10-Apr-0002 10:47:13");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 5 + "'", int19 == 5);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 5 + "'", int31 == 5);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str43, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertNotNull(simpleDateFormat48);
        org.junit.Assert.assertNotNull(simpleDateFormat50);
        org.junit.Assert.assertNotNull(simpleDateFormat51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(date62);
// flaky:         org.junit.Assert.assertEquals(date62.toString(), "Sat Nov 10 10:47:13 MST 42");
        org.junit.Assert.assertNotNull(dateTime63);
        org.junit.Assert.assertNotNull(dateTime64);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(calendar76);
        org.junit.Assert.assertEquals(calendar76.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1965.9671232876713d + "'", double81 == 1965.9671232876713d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 1965.9671232876713d + "'", double82 == 1965.9671232876713d);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str85 + "' != '" + "Tue 05-May-0005 10:47:13" + "'", str85, "Tue 05-May-0005 10:47:13");
    }

    @Test
    public void test6909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6909");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        java.text.SimpleDateFormat simpleDateFormat8 = null;
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double12 = dateTime9.getDeltaYears(dateTime11);
        boolean boolean13 = dateTime9.isWeekday();
        boolean boolean14 = dateTime3.sameDate(dateTime9);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime(100L);
        double double21 = dateTime18.getDeltaYears(dateTime20);
        java.text.SimpleDateFormat simpleDateFormat23 = null;
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat23);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double27 = dateTime24.getDeltaYears(dateTime26);
        boolean boolean28 = dateTime24.isWeekday();
        boolean boolean29 = dateTime18.sameDate(dateTime24);
        java.text.SimpleDateFormat simpleDateFormat31 = null;
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat31);
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double35 = dateTime32.getDeltaYears(dateTime34);
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean40 = dateTime34.isEqual(dateTime39);
        dateTime18.set(dateTime39);
        long long42 = dateTime3.getDeltaMilliSeconds(dateTime39);
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat48 = null;
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat48);
        boolean boolean50 = net.ajaskey.common.Utils.sameDate(dateTime46, dateTime49);
        boolean boolean51 = net.ajaskey.common.Utils.sameDate(dateTime3, dateTime49);
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime(100L);
        dateTime53.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime(100L);
        double double64 = dateTime61.getDeltaYears(dateTime63);
        boolean boolean65 = dateTime63.isWeekday();
        java.util.Date date66 = dateTime63.getTime();
        dateTime53.set(dateTime63);
        boolean boolean68 = dateTime49.sameDate(dateTime63);
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime((long) 3);
        boolean boolean71 = dateTime49.isGreaterThanOrEqual(dateTime70);
        net.ajaskey.common.DateTime dateTime73 = new net.ajaskey.common.DateTime(100L);
        dateTime73.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str78 = dateTime73.getMonth();
        int int79 = dateTime73.getMs();
        java.lang.String str81 = dateTime73.format("                                                                                               52.00");
        int int82 = dateTime73.getDayOfMonth();
        long long83 = dateTime70.getDeltaMilliSeconds(dateTime73);
        java.lang.String str84 = dateTime70.toFullString();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-1972.041095890411d) + "'", double21 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-1972.041095890411d) + "'", double64 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(date66);
        org.junit.Assert.assertEquals(date66.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "January" + "'", str78, "January");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 100 + "'", int79 == 100);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "                                                                                               52.00" + "'", str81, "                                                                                               52.00");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 4 + "'", int82 == 4);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + (-59011286399903L) + "'", long83 == (-59011286399903L));
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str84, "Wed 31-Dec-1969 17:00:00");
    }

    @Test
    public void test6910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6910");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        java.text.SimpleDateFormat simpleDateFormat7 = dateTime3.getSdf();
        int int8 = dateTime3.getMinute();
        int int9 = dateTime3.getDayOfYear();
        net.ajaskey.common.DateTime dateTime10 = null;
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(dateTime10);
        dateTime11.set(42, 10, 10);
        java.util.Date date16 = dateTime11.getTime();
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(date16);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(date16);
        java.lang.String str19 = dateTime18.getMonth();
        boolean boolean20 = dateTime3.sameDate(dateTime18);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(100L);
        int int23 = dateTime22.getMs();
        boolean boolean24 = dateTime22.isWeekday();
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime((long) (short) 0);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(100L);
        int int29 = dateTime28.getMs();
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime(100L);
        double double36 = dateTime33.getDeltaYears(dateTime35);
        java.text.SimpleDateFormat simpleDateFormat37 = dateTime33.getSdf();
        boolean boolean38 = dateTime28.isLessThanOrEqual(dateTime33);
        java.text.SimpleDateFormat simpleDateFormat40 = null;
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat40);
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double44 = dateTime41.getDeltaYears(dateTime43);
        boolean boolean45 = dateTime41.isWeekday();
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long50 = dateTime41.getDeltaDays(dateTime49);
        long long51 = dateTime28.getDeltaDays(dateTime49);
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime(100L);
        dateTime53.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean58 = dateTime53.isWeekday();
        int int59 = dateTime28.getYears(dateTime53);
        int int60 = dateTime28.getYear();
        java.util.Calendar calendar61 = dateTime28.getCal();
        net.ajaskey.common.DateTime dateTime62 = dateTime26.copy(dateTime28);
        boolean boolean63 = dateTime22.isGreaterThan(dateTime28);
        java.text.SimpleDateFormat simpleDateFormat65 = null;
        net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat65);
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double69 = dateTime66.getDeltaYears(dateTime68);
        net.ajaskey.common.DateTime dateTime73 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean74 = dateTime68.isEqual(dateTime73);
        java.lang.String str75 = dateTime73.getMonth();
        net.ajaskey.common.DateTime dateTime76 = dateTime28.copy(dateTime73);
        net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime(dateTime73);
        double double78 = dateTime18.getDeltaYears(dateTime77);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat7);
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 47 + "'", int8 == 47);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertNotNull(date16);
// flaky:         org.junit.Assert.assertEquals(date16.toString(), "Sat Nov 10 10:47:13 MST 42");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "November" + "'", str19, "November");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-1972.041095890411d) + "'", double36 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 719795L + "'", long51 == 719795L);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1870) + "'", int59 == (-1870));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1969 + "'", int60 == 1969);
        org.junit.Assert.assertNotNull(calendar61);
        org.junit.Assert.assertEquals(calendar61.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(dateTime62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "April" + "'", str75, "April");
        org.junit.Assert.assertNotNull(dateTime76);
// flaky:         org.junit.Assert.assertTrue("'" + double78 + "' != '" + 43.61369863013699d + "'", double78 == 43.61369863013699d);
    }

    @Test
    public void test6911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6911");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) 100, (int) (byte) 1, (int) (byte) 100);
        dateTime3.add((int) (short) -1, 5);
        java.lang.String str7 = dateTime3.toString();
        java.lang.String str8 = dateTime3.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "10-May-0100" + "'", str7, "10-May-0100");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "10-May-0100" + "'", str8, "10-May-0100");
    }

    @Test
    public void test6912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6912");
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime(100L);
        double double7 = dateTime4.getDeltaYears(dateTime6);
        int int8 = dateTime4.getHour();
        dateTime4.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat13 = null;
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat13);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double17 = dateTime14.getDeltaYears(dateTime16);
        boolean boolean18 = dateTime4.isEqual(dateTime16);
        java.text.SimpleDateFormat simpleDateFormat20 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat22 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat23 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("", simpleDateFormat22, simpleDateFormat23);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat20, simpleDateFormat23);
        dateTime4.setSdf(simpleDateFormat20);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat33 = null;
        java.text.SimpleDateFormat simpleDateFormat34 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("January", simpleDateFormat33, simpleDateFormat34);
        java.text.SimpleDateFormat simpleDateFormat38 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime("January", simpleDateFormat38);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime("", simpleDateFormat38);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime("", simpleDateFormat34, simpleDateFormat38);
        dateTime30.setSdf(simpleDateFormat34);
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime("December", simpleDateFormat20, simpleDateFormat34);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(100L);
        int int46 = dateTime45.getMs();
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime(100L);
        double double53 = dateTime50.getDeltaYears(dateTime52);
        java.text.SimpleDateFormat simpleDateFormat54 = dateTime50.getSdf();
        boolean boolean55 = dateTime45.isLessThanOrEqual(dateTime50);
        int int56 = dateTime50.getDayOfYear();
        boolean boolean57 = dateTime50.isWeekday();
        java.lang.String str58 = dateTime50.getMonth();
        boolean boolean59 = dateTime43.isGreaterThanOrEqual(dateTime50);
        dateTime43.setFirstWorkDay();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-1972.041095890411d) + "'", double7 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10 + "'", int8 == 10);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(simpleDateFormat20);
        org.junit.Assert.assertNotNull(simpleDateFormat22);
        org.junit.Assert.assertNotNull(simpleDateFormat23);
        org.junit.Assert.assertNotNull(simpleDateFormat34);
        org.junit.Assert.assertNotNull(simpleDateFormat38);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-1972.041095890411d) + "'", double53 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "April" + "'", str58, "April");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test6913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6913");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        boolean boolean6 = dateTime2.isWeekday();
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        int int9 = dateTime8.getMs();
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(100L);
        double double16 = dateTime13.getDeltaYears(dateTime15);
        java.text.SimpleDateFormat simpleDateFormat17 = dateTime13.getSdf();
        boolean boolean18 = dateTime8.isLessThanOrEqual(dateTime13);
        boolean boolean19 = dateTime2.isLessThanOrEqual(dateTime8);
        java.lang.String str21 = dateTime2.format("5.00");
        dateTime2.setFirstWorkDay();
        net.ajaskey.common.DateTime dateTime25 = dateTime2.parse
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-1972.041095890411d) + "'", double16 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "BAD-DATE-FORMAT" + "'", str21, "BAD-DATE-FORMAT");
        org.junit.Assert.assertNull(dateTime25);
    }

    @Test
    public void test6914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6914");
        java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readGzipFile("10-Apr-0002", false);
        org.junit.Assert.assertNull(strList2);
    }

    @Test
    public void test6915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6915");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("5.00", "     10");
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        int int10 = dateTime6.getHour();
        java.text.SimpleDateFormat simpleDateFormat12 = null;
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat12);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double16 = dateTime13.getDeltaYears(dateTime15);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean21 = dateTime15.isEqual(dateTime20);
        java.util.Calendar calendar22 = dateTime15.getCal();
        dateTime6.set(calendar22);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime(calendar22);
        dateTime2.set(calendar22);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(100L);
        int int28 = dateTime27.getMs();
        java.lang.String str29 = dateTime27.toString();
        java.lang.String str31 = dateTime27.format("         1");
        net.ajaskey.common.DateTime dateTime32 = dateTime2.copy(dateTime27);
        java.text.SimpleDateFormat simpleDateFormat34 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat35 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime("", simpleDateFormat34, simpleDateFormat35);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime(100L);
        double double43 = dateTime40.getDeltaYears(dateTime42);
        int int44 = dateTime40.getHour();
        java.text.SimpleDateFormat simpleDateFormat46 = null;
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat46);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double50 = dateTime47.getDeltaYears(dateTime49);
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean55 = dateTime49.isEqual(dateTime54);
        java.util.Calendar calendar56 = dateTime49.getCal();
        dateTime40.set(calendar56);
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime(calendar56);
        boolean boolean59 = dateTime36.isLessThan(dateTime58);
        int int60 = dateTime58.getHour();
        net.ajaskey.common.DateTime dateTime61 = dateTime32.copy(dateTime58);
        java.lang.String str62 = dateTime32.getDay();
        java.util.Date date63 = dateTime32.getTime();
        int int64 = dateTime32.getDayOfWeek();
        java.lang.String str65 = dateTime32.getMonth();
        net.ajaskey.common.DateTime dateTime67 = dateTime32.parse("                                                                                                                                                                                                                                                                                                   108");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(calendar22);
        org.junit.Assert.assertEquals(calendar22.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "31-Dec-1969" + "'", str29, "31-Dec-1969");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "         1" + "'", str31, "         1");
        org.junit.Assert.assertNotNull(dateTime32);
        org.junit.Assert.assertNotNull(simpleDateFormat34);
        org.junit.Assert.assertNotNull(simpleDateFormat35);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-1972.041095890411d) + "'", double43 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 10 + "'", int44 == 10);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(calendar56);
        org.junit.Assert.assertEquals(calendar56.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 5 + "'", int60 == 5);
        org.junit.Assert.assertNotNull(dateTime61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Wednesday" + "'", str62, "Wednesday");
        org.junit.Assert.assertNotNull(date63);
        org.junit.Assert.assertEquals(date63.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 4 + "'", int64 == 4);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "December" + "'", str65, "December");
        org.junit.Assert.assertNull(dateTime67);
    }

    @Test
    public void test6916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6916");
        java.lang.String str1 = net.ajaskey.common.Utils.getFromUrl("                                                                                                                                               0");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
    }

    @Test
    public void test6917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6917");
        net.ajaskey.common.Utils.TAB = "Thu 10-Apr-0002 10:45:12";
    }

    @Test
    public void test6918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6918");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) (short) 0);
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(100L);
        int int4 = dateTime3.getMs();
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime(100L);
        double double11 = dateTime8.getDeltaYears(dateTime10);
        java.text.SimpleDateFormat simpleDateFormat12 = dateTime8.getSdf();
        boolean boolean13 = dateTime3.isLessThanOrEqual(dateTime8);
        java.text.SimpleDateFormat simpleDateFormat15 = null;
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat15);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double19 = dateTime16.getDeltaYears(dateTime18);
        boolean boolean20 = dateTime16.isWeekday();
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long25 = dateTime16.getDeltaDays(dateTime24);
        long long26 = dateTime3.getDeltaDays(dateTime24);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(100L);
        dateTime28.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean33 = dateTime28.isWeekday();
        int int34 = dateTime3.getYears(dateTime28);
        int int35 = dateTime3.getYear();
        java.util.Calendar calendar36 = dateTime3.getCal();
        net.ajaskey.common.DateTime dateTime37 = dateTime1.copy(dateTime3);
        java.util.Calendar calendar38 = dateTime3.getCal();
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((long) 53);
        long long41 = dateTime3.getDeltaDays(dateTime40);
        boolean boolean42 = dateTime40.isNull();
        int int43 = dateTime40.getMinute();
        int int44 = dateTime40.getYear();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + (-1972.041095890411d) + "'", double11 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 719795L + "'", long26 == 719795L);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1870) + "'", int34 == (-1870));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1969 + "'", int35 == 1969);
        org.junit.Assert.assertNotNull(calendar36);
        org.junit.Assert.assertEquals(calendar36.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(dateTime37);
        org.junit.Assert.assertNotNull(calendar38);
        org.junit.Assert.assertEquals(calendar38.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 0L + "'", long41 == 0L);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1969 + "'", int44 == 1969);
    }

    @Test
    public void test6919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6919");
        net.ajaskey.common.TextUtils.printline("                                              291");
    }

    @Test
    public void test6920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6920");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        boolean boolean3 = dateTime1.isNull();
        java.util.Calendar calendar4 = dateTime1.getCal();
        java.lang.String str5 = dateTime1.toString();
        java.text.SimpleDateFormat simpleDateFormat8 = null;
        java.text.SimpleDateFormat simpleDateFormat9 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("January", simpleDateFormat8, simpleDateFormat9);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime("Thursday", simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(dateTime11);
        boolean boolean13 = dateTime1.isEqual(dateTime12);
        dateTime12.set(100, 33, 38);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean22 = dateTime21.isNull();
        java.lang.String str23 = dateTime21.getDay();
        java.lang.String str24 = dateTime21.getMonth();
        java.lang.String str25 = dateTime21.getDay();
        java.lang.String str26 = dateTime21.toFullString();
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime(100L);
        double double33 = dateTime30.getDeltaYears(dateTime32);
        int int34 = dateTime30.getHour();
        dateTime30.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat39 = null;
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat39);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double43 = dateTime40.getDeltaYears(dateTime42);
        boolean boolean44 = dateTime30.isEqual(dateTime42);
        int int45 = dateTime30.getDayOfYear();
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime(100L);
        int int48 = dateTime47.getMs();
        boolean boolean49 = dateTime47.isWeekday();
        int int50 = dateTime47.getHour();
        java.text.SimpleDateFormat simpleDateFormat52 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime("January", simpleDateFormat52);
        dateTime47.setSdf(simpleDateFormat52);
        java.text.SimpleDateFormat simpleDateFormat55 = dateTime47.getSdf();
        boolean boolean56 = dateTime30.isGreaterThan(dateTime47);
        java.text.SimpleDateFormat simpleDateFormat58 = null;
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat58);
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double62 = dateTime59.getDeltaYears(dateTime61);
        boolean boolean63 = dateTime59.isWeekday();
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long68 = dateTime59.getDeltaDays(dateTime67);
        net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime(dateTime59);
        dateTime69.setFirstWorkDay();
        boolean boolean71 = dateTime47.sameDate(dateTime69);
        boolean boolean72 = dateTime21.sameDate(dateTime47);
        java.text.SimpleDateFormat simpleDateFormat73 = dateTime21.getSdf();
        boolean boolean74 = net.ajaskey.common.Utils.sameMonth(dateTime12, dateTime21);
        java.lang.String str75 = dateTime21.getDay();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(calendar4);
        org.junit.Assert.assertEquals(calendar4.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "31-Dec-1969" + "'", str5, "31-Dec-1969");
        org.junit.Assert.assertNotNull(simpleDateFormat9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Thursday" + "'", str23, "Thursday");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "April" + "'", str24, "April");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Thursday" + "'", str25, "Thursday");
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Thu 10-Apr-0002 10:47:13" + "'", str26, "Thu 10-Apr-0002 10:47:13");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-1972.041095890411d) + "'", double33 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 10 + "'", int34 == 10);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 100 + "'", int48 == 100);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 5 + "'", int50 == 5);
        org.junit.Assert.assertNotNull(simpleDateFormat52);
        org.junit.Assert.assertNotNull(simpleDateFormat55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 0L + "'", long68 == 0L);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(simpleDateFormat73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "Thursday" + "'", str75, "Thursday");
    }

    @Test
    public void test6921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6921");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("5.00", "     10");
        dateTime2.add((int) (short) 0, (int) 'a');
        int int6 = dateTime2.getDayOfMonth();
        java.lang.String str7 = dateTime2.toString();
        boolean boolean8 = dateTime2.isWeekday();
        java.text.SimpleDateFormat simpleDateFormat10 = null;
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat10);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double14 = dateTime11.getDeltaYears(dateTime13);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean19 = dateTime13.isEqual(dateTime18);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(100L);
        int int22 = dateTime21.getMs();
        boolean boolean23 = dateTime18.isGreaterThanOrEqual(dateTime21);
        java.text.SimpleDateFormat simpleDateFormat25 = null;
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat25);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double29 = dateTime26.getDeltaYears(dateTime28);
        boolean boolean30 = dateTime26.isWeekday();
        boolean boolean31 = dateTime21.isLessThanOrEqual(dateTime26);
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime(100L);
        dateTime33.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean38 = dateTime33.isWeekday();
        boolean boolean39 = dateTime21.isGreaterThanOrEqual(dateTime33);
        java.lang.String str40 = dateTime21.toFullString();
        java.text.SimpleDateFormat simpleDateFormat42 = null;
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat42);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double46 = dateTime43.getDeltaYears(dateTime45);
        boolean boolean47 = dateTime43.isWeekday();
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long52 = dateTime43.getDeltaDays(dateTime51);
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime(dateTime43);
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime(100L);
        double double60 = dateTime57.getDeltaYears(dateTime59);
        boolean boolean61 = dateTime59.isWeekday();
        java.util.Date date62 = dateTime59.getTime();
        dateTime43.set(date62);
        dateTime21.set(date62);
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime(date62);
        net.ajaskey.common.DateTime dateTime68 = dateTime65.parse("Thu 10-Apr-0002 10:42:54", "Thursday");
        dateTime65.set(23, (int) (short) 1, 6);
        java.lang.String str73 = dateTime65.getMonth();
        boolean boolean74 = net.ajaskey.common.Utils.sameDate(dateTime2, dateTime65);
        dateTime65.setFirstWorkDay();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str40, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-1972.041095890411d) + "'", double60 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(date62);
        org.junit.Assert.assertEquals(date62.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertNull(dateTime68);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "February" + "'", str73, "February");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test6922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6922");
        java.lang.String str2 = net.ajaskey.common.Utils.fmt(0.0d, 1969);
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Invalid fmt" + "'", str2, "Invalid fmt");
    }

    @Test
    public void test6923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6923");
        net.ajaskey.common.Utils.sleep(274);
    }

    @Test
    public void test6924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6924");
        java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readTextFile("Thu 25-Jun-2020 10:44:56", true);
        org.junit.Assert.assertNotNull(strList2);
    }

    @Test
    public void test6925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6925");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("BAD-DATE-FORMAT", "                                                                                               52.00");
        int int3 = dateTime2.getMinute();
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(100L);
        double double10 = dateTime7.getDeltaYears(dateTime9);
        boolean boolean11 = dateTime9.isWeekday();
        int int12 = dateTime9.getDayOfYear();
        boolean boolean13 = dateTime2.isEqual(dateTime9);
        int int14 = dateTime9.getHour();
        java.text.SimpleDateFormat simpleDateFormat16 = null;
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double20 = dateTime17.getDeltaYears(dateTime19);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean25 = dateTime19.isEqual(dateTime24);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(100L);
        int int28 = dateTime27.getMs();
        boolean boolean29 = dateTime24.isGreaterThanOrEqual(dateTime27);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(100L);
        dateTime31.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime(100L);
        double double42 = dateTime39.getDeltaYears(dateTime41);
        boolean boolean43 = dateTime41.isWeekday();
        java.util.Date date44 = dateTime41.getTime();
        dateTime31.set(dateTime41);
        boolean boolean46 = net.ajaskey.common.Utils.sameDate(dateTime24, dateTime31);
        int int47 = dateTime24.getDayOfYear();
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime(100L);
        long long55 = dateTime52.getDeltaDays(dateTime54);
        int int56 = dateTime52.getHour();
        dateTime52.add((int) (byte) 100, (int) (byte) 0);
        net.ajaskey.common.DateTime dateTime61 = dateTime52.parse("10-Apr-0002");
        int int62 = dateTime52.getDayOfMonth();
        java.text.SimpleDateFormat simpleDateFormat66 = null;
        java.text.SimpleDateFormat simpleDateFormat67 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime("January", simpleDateFormat66, simpleDateFormat67);
        java.text.SimpleDateFormat simpleDateFormat71 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime72 = new net.ajaskey.common.DateTime("January", simpleDateFormat71);
        net.ajaskey.common.DateTime dateTime73 = new net.ajaskey.common.DateTime("", simpleDateFormat71);
        net.ajaskey.common.DateTime dateTime74 = new net.ajaskey.common.DateTime("", simpleDateFormat67, simpleDateFormat71);
        net.ajaskey.common.DateTime dateTime75 = new net.ajaskey.common.DateTime("Wed 31-Dec-1969 17:00:00", simpleDateFormat71);
        dateTime52.setSdf(simpleDateFormat71);
        net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime("                                                                                                                                                                                                                                                                      13", simpleDateFormat71);
        dateTime24.setSdf(simpleDateFormat71);
        boolean boolean79 = dateTime9.isLessThanOrEqual(dateTime24);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1972.041095890411d) + "'", double10 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 365 + "'", int12 == 365);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 5 + "'", int14 == 5);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-1972.041095890411d) + "'", double42 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(date44);
        org.junit.Assert.assertEquals(date44.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-719795L) + "'", long55 == (-719795L));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
        org.junit.Assert.assertNull(dateTime61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 10 + "'", int62 == 10);
        org.junit.Assert.assertNotNull(simpleDateFormat67);
        org.junit.Assert.assertNotNull(simpleDateFormat71);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test6926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6926");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("Thu 10-Apr
    }

    @Test
    public void test6927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6927");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        dateTime1.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
        double double12 = dateTime9.getDeltaYears(dateTime11);
        boolean boolean13 = dateTime11.isWeekday();
        java.util.Date date14 = dateTime11.getTime();
        dateTime1.set(dateTime11);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat21 = null;
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat21);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double25 = dateTime22.getDeltaYears(dateTime24);
        boolean boolean26 = dateTime19.isLessThan(dateTime24);
        dateTime11.set(dateTime24);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime(100L);
        double double34 = dateTime31.getDeltaYears(dateTime33);
        long long35 = dateTime11.getDeltaMilliSeconds(dateTime33);
        java.util.Date date36 = null;
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(date36);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime(100L);
        double double44 = dateTime41.getDeltaYears(dateTime43);
        int int45 = dateTime41.getHour();
        java.text.SimpleDateFormat simpleDateFormat47 = null;
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat47);
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double51 = dateTime48.getDeltaYears(dateTime50);
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean56 = dateTime50.isEqual(dateTime55);
        java.util.Calendar calendar57 = dateTime50.getCal();
        dateTime41.set(calendar57);
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime(calendar57);
        net.ajaskey.common.DateTime dateTime60 = dateTime37.copy(dateTime59);
        boolean boolean61 = dateTime33.isLessThan(dateTime37);
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:42:59", "11");
        int int65 = dateTime64.getYear();
        boolean boolean66 = net.ajaskey.common.Utils.sameDate(dateTime37, dateTime64);
        int int67 = dateTime37.getSecond();
        dateTime37.add(753, 215);
        int int71 = dateTime37.getDayOfYear();
        dateTime37.set(314, (int) '#', (-1933));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1972.041095890411d) + "'", double12 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(date14);
        org.junit.Assert.assertEquals(date14.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-1972.041095890411d) + "'", double34 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 100L + "'", long35 == 100L);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-1972.041095890411d) + "'", double44 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 10 + "'", int45 == 10);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(calendar57);
        org.junit.Assert.assertEquals(calendar57.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(dateTime60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int67 + "' != '" + 14 + "'", int67 == 14);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 177 + "'", int71 == 177);
    }

    @Test
    public void test6928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6928");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean10 = dateTime4.isEqual(dateTime9);
        java.util.Calendar calendar11 = dateTime4.getCal();
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(calendar11);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(100L);
        double double19 = dateTime16.getDeltaYears(dateTime18);
        java.text.SimpleDateFormat simpleDateFormat21 = null;
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat21);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double25 = dateTime22.getDeltaYears(dateTime24);
        boolean boolean26 = dateTime22.isWeekday();
        boolean boolean27 = dateTime16.sameDate(dateTime22);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime(100L);
        double double34 = dateTime31.getDeltaYears(dateTime33);
        java.text.SimpleDateFormat simpleDateFormat36 = null;
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat36);
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double40 = dateTime37.getDeltaYears(dateTime39);
        boolean boolean41 = dateTime37.isWeekday();
        boolean boolean42 = dateTime31.sameDate(dateTime37);
        java.text.SimpleDateFormat simpleDateFormat44 = null;
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat44);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double48 = dateTime45.getDeltaYears(dateTime47);
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean53 = dateTime47.isEqual(dateTime52);
        dateTime31.set(dateTime52);
        long long55 = dateTime16.getDeltaMilliSeconds(dateTime52);
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime(100L);
        int int58 = dateTime57.getMs();
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime(100L);
        double double65 = dateTime62.getDeltaYears(dateTime64);
        java.text.SimpleDateFormat simpleDateFormat66 = dateTime62.getSdf();
        boolean boolean67 = dateTime57.isLessThanOrEqual(dateTime62);
        int int68 = dateTime62.getDayOfYear();
        boolean boolean69 = dateTime62.isWeekday();
        boolean boolean70 = dateTime16.sameDate(dateTime62);
        java.util.Date date71 = dateTime62.getTime();
        net.ajaskey.common.DateTime dateTime72 = new net.ajaskey.common.DateTime(date71);
        dateTime12.set(date71);
        java.text.SimpleDateFormat simpleDateFormat74 = dateTime12.getSdf();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(calendar11);
        org.junit.Assert.assertEquals(calendar11.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-1972.041095890411d) + "'", double19 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-1972.041095890411d) + "'", double34 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long55 + "' != '" + 1L + "'", long55 == 1L);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-1972.041095890411d) + "'", double65 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(date71);
// flaky:         org.junit.Assert.assertEquals(date71.toString(), "Thu Apr 10 10:47:14 MST 2");
        org.junit.Assert.assertNull(simpleDateFormat74);
    }

    @Test
    public void test6929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6929");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        long long6 = dateTime3.getDeltaDays(dateTime5);
        int int7 = dateTime3.getHour();
        dateTime3.add((int) (byte) 100, (int) (byte) 0);
        net.ajaskey.common.DateTime dateTime12 = dateTime3.parse("10-Apr-0002");
        int int13 = dateTime3.getDayOfMonth();
        java.lang.String str14 = dateTime3.toString();
        java.text.SimpleDateFormat simpleDateFormat16 = null;
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat16);
        int int18 = dateTime17.getYear();
        java.text.SimpleDateFormat simpleDateFormat19 = dateTime17.getSdf();
        int int20 = dateTime17.getMs();
        boolean boolean21 = dateTime3.isEqual(dateTime17);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("April", "5.00");
        int int25 = dateTime24.getYear();
        boolean boolean26 = dateTime3.isEqual(dateTime24);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat32 = null;
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat32);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double36 = dateTime33.getDeltaYears(dateTime35);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean41 = dateTime35.isEqual(dateTime40);
        java.util.Calendar calendar42 = dateTime35.getCal();
        boolean boolean43 = dateTime30.isLessThan(dateTime35);
        dateTime30.setFirstWorkDay();
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime(100L);
        double double51 = dateTime48.getDeltaYears(dateTime50);
        java.text.SimpleDateFormat simpleDateFormat53 = null;
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat53);
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double57 = dateTime54.getDeltaYears(dateTime56);
        boolean boolean58 = dateTime54.isWeekday();
        boolean boolean59 = dateTime48.sameDate(dateTime54);
        boolean boolean60 = dateTime30.sameDate(dateTime48);
        dateTime48.add(252, 2020);
        long long64 = dateTime24.getDeltaDays(dateTime48);
        net.ajaskey.common.DateTime dateTime67 = dateTime48.parse
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-719795L) + "'", long6 == (-719795L));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertNull(dateTime12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10 + "'", int13 == 10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "10-Apr-0002" + "'", str14, "10-Apr-0002");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(simpleDateFormat19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(calendar42);
        org.junit.Assert.assertEquals(calendar42.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-1972.041095890411d) + "'", double51 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 0L + "'", long64 == 0L);
        org.junit.Assert.assertNull(dateTime67);
    }

    @Test
    public void test6930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6930");
        java.lang.String str2 = net.ajaskey.common.Utils.ifmt(153, 52);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                                 153" + "'", str2, "                                                 153");
    }

    @Test
    public void test6931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6931");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean10 = dateTime4.isEqual(dateTime9);
        java.util.Calendar calendar11 = dateTime4.getCal();
        java.lang.String str12 = dateTime4.format();
        net.ajaskey.common.DateTime dateTime13 = null;
        long long14 = dateTime4.getDeltaDays(dateTime13);
        int int15 = dateTime4.getSecond();
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(100L);
        int int18 = dateTime17.getMs();
        java.text.SimpleDateFormat simpleDateFormat20 = null;
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat20);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double24 = dateTime21.getDeltaYears(dateTime23);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean29 = dateTime23.isEqual(dateTime28);
        java.util.Calendar calendar30 = dateTime23.getCal();
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(calendar30);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime(calendar30);
        dateTime17.set(calendar30);
        boolean boolean34 = dateTime17.isWeekday();
        boolean boolean35 = dateTime4.isGreaterThan(dateTime17);
        boolean boolean36 = dateTime17.isNull();
        int int37 = dateTime17.getMinute();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(calendar11);
        org.junit.Assert.assertEquals(calendar11.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "BAD-DATE-FORMAT" + "'", str12, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(calendar30);
        org.junit.Assert.assertEquals(calendar30.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
    }

    @Test
    public void test6932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6932");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean10 = dateTime4.isEqual(dateTime9);
        boolean boolean11 = dateTime4.isNull();
        int int12 = dateTime4.getHour();
        java.lang.String str13 = dateTime4.getDay();
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("5.00", "     10");
        dateTime16.add((int) (short) 0, (int) 'a');
        int int20 = dateTime16.getDayOfMonth();
        java.lang.String str21 = dateTime16.toString();
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(100L);
        double double28 = dateTime25.getDeltaYears(dateTime27);
        int int29 = dateTime25.getHour();
        java.text.SimpleDateFormat simpleDateFormat31 = null;
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat31);
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double35 = dateTime32.getDeltaYears(dateTime34);
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean40 = dateTime34.isEqual(dateTime39);
        java.util.Calendar calendar41 = dateTime34.getCal();
        java.lang.String str42 = dateTime34.format();
        net.ajaskey.common.DateTime dateTime43 = null;
        long long44 = dateTime34.getDeltaDays(dateTime43);
        int int45 = dateTime34.getSecond();
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime(100L);
        double double52 = dateTime49.getDeltaYears(dateTime51);
        java.text.SimpleDateFormat simpleDateFormat54 = null;
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat54);
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double58 = dateTime55.getDeltaYears(dateTime57);
        boolean boolean59 = dateTime55.isWeekday();
        boolean boolean60 = dateTime49.sameDate(dateTime55);
        int int61 = dateTime55.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime62 = dateTime34.copy(dateTime55);
        dateTime25.set(dateTime55);
        boolean boolean64 = dateTime16.isGreaterThan(dateTime55);
        long long65 = dateTime4.getDeltaMilliSeconds(dateTime55);
        int int66 = dateTime4.getHour();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Wednesday" + "'", str13, "Wednesday");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + (-1972.041095890411d) + "'", double28 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 10 + "'", int29 == 10);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(calendar41);
        org.junit.Assert.assertEquals(calendar41.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "BAD-DATE-FORMAT" + "'", str42, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-1972.041095890411d) + "'", double52 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNull(dateTime62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 0L + "'", long65 == 0L);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 5 + "'", int66 == 5);
    }

    @Test
    public void test6933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6933");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        java.text.SimpleDateFormat simpleDateFormat8 = null;
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double12 = dateTime9.getDeltaYears(dateTime11);
        boolean boolean13 = dateTime9.isWeekday();
        boolean boolean14 = dateTime3.sameDate(dateTime9);
        java.text.SimpleDateFormat simpleDateFormat16 = null;
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double20 = dateTime17.getDeltaYears(dateTime19);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean25 = dateTime19.isEqual(dateTime24);
        dateTime3.set(dateTime24);
        java.lang.String str27 = dateTime24.toString();
        net.ajaskey.common.DateTime dateTime28 = null;
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(dateTime28);
        boolean boolean30 = dateTime24.isGreaterThanOrEqual(dateTime29);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime(100L);
        int int33 = dateTime32.getMs();
        int int34 = dateTime32.getHour();
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat40 = null;
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat40);
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double44 = dateTime41.getDeltaYears(dateTime43);
        boolean boolean45 = dateTime38.isLessThan(dateTime43);
        java.lang.String str46 = dateTime43.toFullString();
        dateTime43.add(10, (int) (byte) -1);
        java.text.SimpleDateFormat simpleDateFormat51 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat53 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat54 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime("", simpleDateFormat53, simpleDateFormat54);
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat51, simpleDateFormat54);
        boolean boolean57 = dateTime43.isGreaterThan(dateTime56);
        boolean boolean58 = dateTime32.isEqual(dateTime43);
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.lang.String str63 = dateTime62.toFullString();
        dateTime62.add(7, 53);
        net.ajaskey.common.DateTime dateTime67 = dateTime32.copy(dateTime62);
        int int68 = dateTime67.getDayOfMonth();
        boolean boolean69 = dateTime29.isLessThanOrEqual(dateTime67);
        int int70 = dateTime29.getHour();
        int int71 = dateTime29.getDayOfYear();
        int int72 = dateTime29.getDayOfWeek();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "10-Apr-0002" + "'", str27, "10-Apr-0002");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 5 + "'", int34 == 5);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str46, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertNotNull(simpleDateFormat51);
        org.junit.Assert.assertNotNull(simpleDateFormat53);
        org.junit.Assert.assertNotNull(simpleDateFormat54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Thu 10-Apr-0002 10:47:14" + "'", str63, "Thu 10-Apr-0002 10:47:14");
        org.junit.Assert.assertNotNull(dateTime67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 10 + "'", int68 == 10);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 10 + "'", int70 == 10);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 177 + "'", int71 == 177);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 5 + "'", int72 == 5);
    }

    @Test
    public void test6934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6934");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean10 = dateTime4.isEqual(dateTime9);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(100L);
        int int13 = dateTime12.getMs();
        boolean boolean14 = dateTime9.isGreaterThanOrEqual(dateTime12);
        java.text.SimpleDateFormat simpleDateFormat16 = null;
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double20 = dateTime17.getDeltaYears(dateTime19);
        boolean boolean21 = dateTime17.isWeekday();
        boolean boolean22 = dateTime12.isLessThanOrEqual(dateTime17);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime(100L);
        dateTime24.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean29 = dateTime24.isWeekday();
        boolean boolean30 = dateTime12.isGreaterThanOrEqual(dateTime24);
        int int31 = dateTime24.getDayOfYear();
        net.ajaskey.common.DateTime dateTime33 = dateTime24.parse("7");
        java.text.SimpleDateFormat simpleDateFormat37 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat39 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat40 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime("", simpleDateFormat39, simpleDateFormat40);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat37, simpleDateFormat40);
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat49 = null;
        java.text.SimpleDateFormat simpleDateFormat50 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime("January", simpleDateFormat49, simpleDateFormat50);
        java.text.SimpleDateFormat simpleDateFormat54 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime("January", simpleDateFormat54);
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime("", simpleDateFormat54);
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime("", simpleDateFormat50, simpleDateFormat54);
        dateTime46.setSdf(simpleDateFormat50);
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime("", simpleDateFormat40, simpleDateFormat50);
        java.text.SimpleDateFormat simpleDateFormat62 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat63 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime("", simpleDateFormat62, simpleDateFormat63);
        java.text.SimpleDateFormat simpleDateFormat67 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat68 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime("", simpleDateFormat67, simpleDateFormat68);
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime(100L);
        int int72 = dateTime71.getMs();
        java.text.SimpleDateFormat simpleDateFormat73 = net.ajaskey.common.Utils.sdf;
        dateTime71.setSdf(simpleDateFormat73);
        net.ajaskey.common.DateTime dateTime75 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat68, simpleDateFormat73);
        net.ajaskey.common.DateTime dateTime76 = new net.ajaskey.common.DateTime("     0", simpleDateFormat63, simpleDateFormat73);
        net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:43:16", simpleDateFormat50, simpleDateFormat63);
        // The following exception was thrown during execution in test generation
        try {
            dateTime33.setSdf(simpleDateFormat63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 4 + "'", int31 == 4);
        org.junit.Assert.assertNull(dateTime33);
        org.junit.Assert.assertNotNull(simpleDateFormat37);
        org.junit.Assert.assertNotNull(simpleDateFormat39);
        org.junit.Assert.assertNotNull(simpleDateFormat40);
        org.junit.Assert.assertNotNull(simpleDateFormat50);
        org.junit.Assert.assertNotNull(simpleDateFormat54);
        org.junit.Assert.assertNotNull(simpleDateFormat62);
        org.junit.Assert.assertNotNull(simpleDateFormat63);
        org.junit.Assert.assertNotNull(simpleDateFormat67);
        org.junit.Assert.assertNotNull(simpleDateFormat68);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 100 + "'", int72 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat73);
    }

    @Test
    public void test6935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6935");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(313, 185, 86);
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((-1870), 1969, 1);
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("5.00", "     10");
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(100L);
        double double17 = dateTime14.getDeltaYears(dateTime16);
        int int18 = dateTime14.getHour();
        java.text.SimpleDateFormat simpleDateFormat20 = null;
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat20);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double24 = dateTime21.getDeltaYears(dateTime23);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean29 = dateTime23.isEqual(dateTime28);
        java.util.Calendar calendar30 = dateTime23.getCal();
        dateTime14.set(calendar30);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime(calendar30);
        dateTime10.set(calendar30);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime(100L);
        int int36 = dateTime35.getMs();
        java.lang.String str37 = dateTime35.toString();
        java.lang.String str39 = dateTime35.format("         1");
        net.ajaskey.common.DateTime dateTime40 = dateTime10.copy(dateTime35);
        int int41 = dateTime7.getYears(dateTime40);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime(dateTime7);
        int int43 = dateTime7.getSecond();
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime(100L);
        double double50 = dateTime47.getDeltaYears(dateTime49);
        int int51 = dateTime47.getHour();
        dateTime47.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat56 = null;
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat56);
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double60 = dateTime57.getDeltaYears(dateTime59);
        boolean boolean61 = dateTime47.isEqual(dateTime59);
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat67 = null;
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat67);
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double71 = dateTime68.getDeltaYears(dateTime70);
        net.ajaskey.common.DateTime dateTime75 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean76 = dateTime70.isEqual(dateTime75);
        java.util.Calendar calendar77 = dateTime70.getCal();
        boolean boolean78 = dateTime65.isLessThan(dateTime70);
        dateTime65.setFirstWorkDay();
        boolean boolean80 = dateTime47.sameDate(dateTime65);
        net.ajaskey.common.DateTime dateTime81 = null;
        boolean boolean82 = net.ajaskey.common.Utils.sameMonth(dateTime47, dateTime81);
        java.text.SimpleDateFormat simpleDateFormat83 = dateTime47.getSdf();
        net.ajaskey.common.DateTime dateTime84 = dateTime7.copy(dateTime47);
        java.text.SimpleDateFormat simpleDateFormat86 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime87 = new net.ajaskey.common.DateTime("January", simpleDateFormat86);
        long long88 = dateTime47.getDeltaMilliSeconds(dateTime87);
        boolean boolean89 = dateTime3.isEqual(dateTime47);
        int int90 = dateTime3.getHour();
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-1972.041095890411d) + "'", double17 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10 + "'", int18 == 10);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(calendar30);
        org.junit.Assert.assertEquals(calendar30.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "31-Dec-1969" + "'", str37, "31-Dec-1969");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "         1" + "'", str39, "         1");
        org.junit.Assert.assertNotNull(dateTime40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 262 + "'", int41 == 262);
// flaky:         org.junit.Assert.assertTrue("'" + int43 + "' != '" + 14 + "'", int43 == 14);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-1972.041095890411d) + "'", double50 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 10 + "'", int51 == 10);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(calendar77);
        org.junit.Assert.assertEquals(calendar77.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(simpleDateFormat83);
        org.junit.Assert.assertNotNull(dateTime84);
        org.junit.Assert.assertNotNull(simpleDateFormat86);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 0L + "'", long88 == 0L);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 10 + "'", int90 == 10);
    }

    @Test
    public void test6936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6936");
        java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat5 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("", simpleDateFormat4, simpleDateFormat5);
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:42:54", simpleDateFormat4);
        java.text.SimpleDateFormat simpleDateFormat11 = null;
        java.text.SimpleDateFormat simpleDateFormat12 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("January", simpleDateFormat11, simpleDateFormat12);
        java.text.SimpleDateFormat simpleDateFormat16 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("January", simpleDateFormat16);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime("", simpleDateFormat16);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime("", simpleDateFormat12, simpleDateFormat16);
        java.text.SimpleDateFormat simpleDateFormat24 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat26 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat27 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime("", simpleDateFormat26, simpleDateFormat27);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat24, simpleDateFormat27);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime("10-Apr-0002", simpleDateFormat27);
        java.text.SimpleDateFormat simpleDateFormat33 = null;
        java.text.SimpleDateFormat simpleDateFormat34 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("January", simpleDateFormat33, simpleDateFormat34);
        java.text.SimpleDateFormat simpleDateFormat38 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime("January", simpleDateFormat38);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime("", simpleDateFormat38);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime("", simpleDateFormat34, simpleDateFormat38);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime("January                                                                                               52.00                                                                                               52.00                                                                                               52.00                                                                                               52.00hi!                                                                                               52.00", simpleDateFormat27, simpleDateFormat38);
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime(100L);
        double double49 = dateTime46.getDeltaYears(dateTime48);
        int int50 = dateTime46.getHour();
        dateTime46.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat55 = null;
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat55);
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double59 = dateTime56.getDeltaYears(dateTime58);
        boolean boolean60 = dateTime46.isEqual(dateTime58);
        java.text.SimpleDateFormat simpleDateFormat62 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat64 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat65 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime("", simpleDateFormat64, simpleDateFormat65);
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat62, simpleDateFormat65);
        dateTime46.setSdf(simpleDateFormat62);
        net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime("", simpleDateFormat27, simpleDateFormat62);
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime("   8.00", simpleDateFormat12, simpleDateFormat27);
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime("JanuaryBAD-DATE-FORMATBAD-DATE-FORMAT                                                                                               52.00BAD-DATE-FORMAThi!BAD-DATE-FORMAT", simpleDateFormat4, simpleDateFormat27);
        net.ajaskey.common.DateTime dateTime72 = new net.ajaskey.common.DateTime("100.00", simpleDateFormat27);
        net.ajaskey.common.DateTime dateTime76 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime78 = new net.ajaskey.common.DateTime(100L);
        long long79 = dateTime76.getDeltaDays(dateTime78);
        int int80 = dateTime78.getSecond();
        int int81 = dateTime78.getYear();
        net.ajaskey.common.DateTime dateTime83 = new net.ajaskey.common.DateTime(100L);
        int int84 = dateTime83.getMs();
        boolean boolean85 = dateTime83.isWeekday();
        java.util.Calendar calendar86 = dateTime83.getCal();
        int int87 = dateTime78.getYears(dateTime83);
        java.util.Calendar calendar88 = dateTime78.getCal();
        dateTime72.set(calendar88);
        net.ajaskey.common.DateTime dateTime90 = new net.ajaskey.common.DateTime(calendar88);
        org.junit.Assert.assertNotNull(simpleDateFormat4);
        org.junit.Assert.assertNotNull(simpleDateFormat5);
        org.junit.Assert.assertNotNull(simpleDateFormat12);
        org.junit.Assert.assertNotNull(simpleDateFormat16);
        org.junit.Assert.assertNotNull(simpleDateFormat24);
        org.junit.Assert.assertNotNull(simpleDateFormat26);
        org.junit.Assert.assertNotNull(simpleDateFormat27);
        org.junit.Assert.assertNotNull(simpleDateFormat34);
        org.junit.Assert.assertNotNull(simpleDateFormat38);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-1972.041095890411d) + "'", double49 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 10 + "'", int50 == 10);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(simpleDateFormat62);
        org.junit.Assert.assertNotNull(simpleDateFormat64);
        org.junit.Assert.assertNotNull(simpleDateFormat65);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + (-719795L) + "'", long79 == (-719795L));
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1969 + "'", int81 == 1969);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 100 + "'", int84 == 100);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(calendar86);
        org.junit.Assert.assertEquals(calendar86.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertNotNull(calendar88);
        org.junit.Assert.assertEquals(calendar88.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    }

    @Test
    public void test6937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6937");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) '4', 454, 11);
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime(100, 362, 397);
        dateTime3.set(dateTime7);
    }

    @Test
    public void test6938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6938");
        java.lang.String str2 = net.ajaskey.common.Utils.ifmt(23, 291);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                                                                                                                                                                                                                                                                                 23" + "'", str2, "                                                                                                                                                                                                                                                                                                 23");
    }

    @Test
    public void test6939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6939");
        java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat5 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("", simpleDateFormat4, simpleDateFormat5);
        java.text.SimpleDateFormat simpleDateFormat8 = null;
        java.text.SimpleDateFormat simpleDateFormat9 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("January", simpleDateFormat8, simpleDateFormat9);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat4, simpleDateFormat9);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime("Mon 06-Jan-0100 17:00:00", simpleDateFormat9);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("             719,528.00", simpleDateFormat9);
        int int14 = dateTime13.getMs();
        org.junit.Assert.assertNotNull(simpleDateFormat4);
        org.junit.Assert.assertNotNull(simpleDateFormat5);
        org.junit.Assert.assertNotNull(simpleDateFormat9);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test6940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6940");
        java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readGzipFile("Tue 05-Aug-0010 10:46:37", false);
        org.junit.Assert.assertNull(strList2);
    }

    @Test
    public void test6941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6941");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        java.util.Calendar calendar3 = dateTime2.getCal();
        int int4 = dateTime2.getDayOfWeek();
        java.lang.String str5 = dateTime2.toFullString();
        boolean boolean6 = dateTime2.isNull();
        net.ajaskey.common.DateTime dateTime9 = dateTime2.parse
        org.junit.Assert.assertNull(calendar3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Invalid Time" + "'", str5, "Invalid Time");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(dateTime9);
    }

    @Test
    public void test6942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6942");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        dateTime1.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
        double double12 = dateTime9.getDeltaYears(dateTime11);
        boolean boolean13 = dateTime11.isWeekday();
        java.util.Date date14 = dateTime11.getTime();
        dateTime1.set(dateTime11);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat21 = null;
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat21);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double25 = dateTime22.getDeltaYears(dateTime24);
        boolean boolean26 = dateTime19.isLessThan(dateTime24);
        dateTime11.set(dateTime24);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime(100L);
        double double34 = dateTime31.getDeltaYears(dateTime33);
        long long35 = dateTime11.getDeltaMilliSeconds(dateTime33);
        int int36 = dateTime33.getYear();
        int int37 = dateTime33.getMinute();
        dateTime33.set(49, 221, 33);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1972.041095890411d) + "'", double12 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(date14);
        org.junit.Assert.assertEquals(date14.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-1972.041095890411d) + "'", double34 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 100L + "'", long35 == 100L);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1969 + "'", int36 == 1969);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
    }

    @Test
    public void test6943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6943");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        int int7 = dateTime3.getHour();
        dateTime3.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat12 = null;
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat12);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double16 = dateTime13.getDeltaYears(dateTime15);
        boolean boolean17 = dateTime3.isEqual(dateTime15);
        int int18 = dateTime3.getMinute();
        dateTime3.setFirstWorkDay();
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(100L);
        dateTime21.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(100L);
        double double32 = dateTime29.getDeltaYears(dateTime31);
        boolean boolean33 = dateTime31.isWeekday();
        java.util.Date date34 = dateTime31.getTime();
        dateTime21.set(dateTime31);
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat41 = null;
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat41);
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double45 = dateTime42.getDeltaYears(dateTime44);
        boolean boolean46 = dateTime39.isLessThan(dateTime44);
        dateTime31.set(dateTime44);
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime(100L);
        int int51 = dateTime50.getMs();
        java.text.SimpleDateFormat simpleDateFormat52 = net.ajaskey.common.Utils.sdf;
        dateTime50.setSdf(simpleDateFormat52);
        java.text.SimpleDateFormat simpleDateFormat56 = null;
        java.text.SimpleDateFormat simpleDateFormat57 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime("January", simpleDateFormat56, simpleDateFormat57);
        java.text.SimpleDateFormat simpleDateFormat61 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime("January", simpleDateFormat61);
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime("", simpleDateFormat61);
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime("", simpleDateFormat57, simpleDateFormat61);
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime("Thursday", simpleDateFormat52, simpleDateFormat61);
        dateTime44.setSdf(simpleDateFormat61);
        net.ajaskey.common.DateTime dateTime67 = dateTime3.copy(dateTime44);
        int int68 = dateTime3.getMinute();
        net.ajaskey.common.DateTime dateTime69 = null;
        boolean boolean70 = net.ajaskey.common.Utils.sameDate(dateTime3, dateTime69);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 47 + "'", int18 == 47);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-1972.041095890411d) + "'", double32 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(date34);
        org.junit.Assert.assertEquals(date34.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 100 + "'", int51 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat52);
        org.junit.Assert.assertNotNull(simpleDateFormat57);
        org.junit.Assert.assertNotNull(simpleDateFormat61);
        org.junit.Assert.assertNotNull(dateTime67);
// flaky:         org.junit.Assert.assertTrue("'" + int68 + "' != '" + 47 + "'", int68 == 47);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test6944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6944");
        java.lang.String str1 = net.ajaskey.common.Utils.getFromUrl("Thu 10-Apr-0002 10:47:14");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
    }

    @Test
    public void test6945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6945");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        int int7 = dateTime3.getHour();
        java.text.SimpleDateFormat simpleDateFormat9 = null;
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat9);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double13 = dateTime10.getDeltaYears(dateTime12);
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean18 = dateTime12.isEqual(dateTime17);
        java.util.Calendar calendar19 = dateTime12.getCal();
        dateTime3.set(calendar19);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(calendar19);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat27 = null;
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat27);
        boolean boolean29 = net.ajaskey.common.Utils.sameDate(dateTime25, dateTime28);
        boolean boolean30 = dateTime21.isGreaterThanOrEqual(dateTime25);
        java.text.SimpleDateFormat simpleDateFormat32 = null;
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat32);
        dateTime33.set((int) ' ', 0, 11);
        boolean boolean38 = dateTime33.isWeekday();
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime(100L);
        int int41 = dateTime40.getMs();
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime(100L);
        double double48 = dateTime45.getDeltaYears(dateTime47);
        java.text.SimpleDateFormat simpleDateFormat49 = dateTime45.getSdf();
        boolean boolean50 = dateTime40.isLessThanOrEqual(dateTime45);
        java.util.Date date51 = dateTime45.getTime();
        dateTime33.set(date51);
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime(date51);
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime(date51);
        dateTime21.set(date51);
        java.lang.String str56 = dateTime21.getDay();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(calendar19);
        org.junit.Assert.assertEquals(calendar19.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + (-1972.041095890411d) + "'", double48 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(date51);
// flaky:         org.junit.Assert.assertEquals(date51.toString(), "Thu Apr 10 10:47:14 MST 2");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Thursday" + "'", str56, "Thursday");
    }

    @Test
    public void test6946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6946");
        java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat5 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("", simpleDateFormat4, simpleDateFormat5);
        java.text.SimpleDateFormat simpleDateFormat8 = null;
        java.text.SimpleDateFormat simpleDateFormat9 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("January", simpleDateFormat8, simpleDateFormat9);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat4, simpleDateFormat9);
        java.text.SimpleDateFormat simpleDateFormat14 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat15 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("", simpleDateFormat14, simpleDateFormat15);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(100L);
        int int19 = dateTime18.getMs();
        java.text.SimpleDateFormat simpleDateFormat20 = net.ajaskey.common.Utils.sdf;
        dateTime18.setSdf(simpleDateFormat20);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat15, simpleDateFormat20);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime("                             100", simpleDateFormat9, simpleDateFormat15);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("  53", simpleDateFormat15);
        java.util.Calendar calendar25 = null;
        dateTime24.set(calendar25);
        boolean boolean27 = dateTime24.isNull();
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((long) (byte) 100);
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime(25, 1, 0);
        boolean boolean34 = net.ajaskey.common.Utils.sameMonth(dateTime29, dateTime33);
        int int35 = dateTime29.getSecond();
        java.lang.String str36 = dateTime29.getDay();
        java.util.Date date37 = dateTime29.getTime();
        double double38 = dateTime24.getDeltaYears(dateTime29);
        org.junit.Assert.assertNotNull(simpleDateFormat4);
        org.junit.Assert.assertNotNull(simpleDateFormat5);
        org.junit.Assert.assertNotNull(simpleDateFormat9);
        org.junit.Assert.assertNotNull(simpleDateFormat14);
        org.junit.Assert.assertNotNull(simpleDateFormat15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat20);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Wednesday" + "'", str36, "Wednesday");
        org.junit.Assert.assertNotNull(date37);
        org.junit.Assert.assertEquals(date37.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
    }

    @Test
    public void test6947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6947");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        java.lang.String str3 = dateTime1.toString();
        int int4 = dateTime1.getDayOfYear();
        java.text.SimpleDateFormat simpleDateFormat6 = null;
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat6);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double10 = dateTime7.getDeltaYears(dateTime9);
        boolean boolean11 = dateTime7.isWeekday();
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long16 = dateTime7.getDeltaDays(dateTime15);
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(dateTime7);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime(100L);
        double double24 = dateTime21.getDeltaYears(dateTime23);
        boolean boolean25 = dateTime23.isWeekday();
        java.util.Date date26 = dateTime23.getTime();
        dateTime7.set(date26);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(100L);
        int int30 = dateTime29.getMs();
        java.lang.String str31 = dateTime29.toString();
        boolean boolean32 = dateTime7.isLessThanOrEqual(dateTime29);
        int int33 = dateTime7.getHour();
        boolean boolean34 = net.ajaskey.common.Utils.sameDate(dateTime1, dateTime7);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime(dateTime7);
        boolean boolean36 = dateTime7.isWeekday();
        java.text.SimpleDateFormat simpleDateFormat37 = dateTime7.getSdf();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "31-Dec-1969" + "'", str3, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 365 + "'", int4 == 365);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1972.041095890411d) + "'", double24 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(date26);
        org.junit.Assert.assertEquals(date26.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "31-Dec-1969" + "'", str31, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 5 + "'", int33 == 5);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(simpleDateFormat37);
    }

    @Test
    public void test6948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6948");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) 42);
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        int int10 = dateTime6.getHour();
        dateTime6.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat15 = null;
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat15);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double19 = dateTime16.getDeltaYears(dateTime18);
        boolean boolean20 = dateTime6.isEqual(dateTime18);
        java.text.SimpleDateFormat simpleDateFormat22 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat24 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat25 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime("", simpleDateFormat24, simpleDateFormat25);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat22, simpleDateFormat25);
        dateTime6.setSdf(simpleDateFormat22);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime("         1", simpleDateFormat22);
        dateTime1.setSdf(simpleDateFormat22);
        java.lang.String str31 = dateTime1.toFullString();
        int int32 = dateTime1.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime(100L);
        double double39 = dateTime36.getDeltaYears(dateTime38);
        boolean boolean40 = dateTime38.isWeekday();
        java.lang.String str42 = dateTime38.format("hi!");
        int int43 = dateTime38.getMinute();
        net.ajaskey.common.DateTime dateTime46 = dateTime38.parse("Mon 10-Apr-0002 00:00:00", "January                                 365.00                                 365.00                                                                                               52.00                                 365.00hi!                                 365.00");
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime(dateTime38);
        net.ajaskey.common.DateTime dateTime48 = dateTime1.copy(dateTime47);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(simpleDateFormat22);
        org.junit.Assert.assertNotNull(simpleDateFormat24);
        org.junit.Assert.assertNotNull(simpleDateFormat25);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str31, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 31 + "'", int32 == 31);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-1972.041095890411d) + "'", double39 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "BAD-DATE-FORMAT" + "'", str42, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNull(dateTime46);
        org.junit.Assert.assertNotNull(dateTime48);
    }

    @Test
    public void test6949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6949");
        java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readTextFile("Fri 11-Jan-0032 10:43:03", false);
        org.junit.Assert.assertNotNull(strList2);
    }

    @Test
    public void test6950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6950");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        dateTime2.set((int) ' ', 0, 11);
        java.lang.String str7 = dateTime2.toFullString();
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(dateTime2);
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Fri 11-Jan-0032 10:47:14" + "'", str7, "Fri 11-Jan-0032 10:47:14");
    }

    @Test
    public void test6951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6951");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("BAD-DATE-FORMAT", "                                                                                               52.00");
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime("10-Apr-0002", "5.00");
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(12, 42, (int) (byte) 1);
        java.util.Calendar calendar10 = dateTime9.getCal();
        boolean boolean11 = net.ajaskey.common.Utils.sameDate(dateTime5, dateTime9);
        boolean boolean12 = dateTime2.isLessThan(dateTime5);
        boolean boolean13 = dateTime5.isNull();
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(100L);
        double double20 = dateTime17.getDeltaYears(dateTime19);
        java.text.SimpleDateFormat simpleDateFormat22 = null;
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat22);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double26 = dateTime23.getDeltaYears(dateTime25);
        boolean boolean27 = dateTime23.isWeekday();
        boolean boolean28 = dateTime17.sameDate(dateTime23);
        java.text.SimpleDateFormat simpleDateFormat30 = null;
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat30);
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double34 = dateTime31.getDeltaYears(dateTime33);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean39 = dateTime33.isEqual(dateTime38);
        dateTime17.set(dateTime38);
        int int41 = dateTime38.getDayOfWeek();
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime();
        net.ajaskey.common.DateTime dateTime43 = null;
        boolean boolean44 = dateTime42.isGreaterThan(dateTime43);
        java.text.SimpleDateFormat simpleDateFormat46 = null;
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat46);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double50 = dateTime47.getDeltaYears(dateTime49);
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean55 = dateTime49.isEqual(dateTime54);
        java.util.Calendar calendar56 = dateTime49.getCal();
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime(calendar56);
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime(calendar56);
        boolean boolean59 = dateTime42.isLessThan(dateTime58);
        long long60 = dateTime38.getDeltaDays(dateTime42);
        java.util.Date date61 = dateTime38.getTime();
        dateTime5.set(date61);
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime(dateTime5);
        java.lang.String str64 = dateTime63.getMonth();
        org.junit.Assert.assertNotNull(calendar10);
// flaky:         org.junit.Assert.assertEquals(calendar10.toString(), "java.util.GregorianCalendar[time=-61678303965419,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=15,MONTH=6,WEEK_OF_YEAR=27,WEEK_OF_MONTH=1,DAY_OF_MONTH=1,DAY_OF_YEAR=182,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=1,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=14,MILLISECOND=581,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-1972.041095890411d) + "'", double20 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 5 + "'", int41 == 5);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(calendar56);
        org.junit.Assert.assertEquals(calendar56.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-738233L) + "'", long60 == (-738233L));
        org.junit.Assert.assertNotNull(date61);
// flaky:         org.junit.Assert.assertEquals(date61.toString(), "Thu Apr 10 10:47:14 MST 2");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "April" + "'", str64, "April");
    }

    @Test
    public void test6952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6952");
        java.lang.String str2 = net.ajaskey.common.Utils.fmt((double) 1622, 845);
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Invalid fmt" + "'", str2, "Invalid fmt");
    }

    @Test
    public void test6953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6953");
        net.ajaskey.common.DateTime dateTime0 = null;
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean5 = dateTime4.isNull();
        int int6 = dateTime4.getDayOfYear();
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(100L);
        long long17 = dateTime14.getDeltaDays(dateTime16);
        int int18 = dateTime14.getHour();
        dateTime14.add((int) (byte) 100, (int) (byte) 0);
        double double22 = dateTime10.getDeltaYears(dateTime14);
        boolean boolean23 = dateTime4.isLessThanOrEqual(dateTime10);
        java.util.Calendar calendar24 = null;
        dateTime4.set(calendar24);
        int int26 = dateTime4.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(100L);
        dateTime28.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime(100L);
        double double39 = dateTime36.getDeltaYears(dateTime38);
        boolean boolean40 = dateTime38.isWeekday();
        java.util.Date date41 = dateTime38.getTime();
        dateTime28.set(dateTime38);
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime(100L);
        double double49 = dateTime46.getDeltaYears(dateTime48);
        int int50 = dateTime46.getHour();
        java.text.SimpleDateFormat simpleDateFormat52 = null;
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat52);
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double56 = dateTime53.getDeltaYears(dateTime55);
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean61 = dateTime55.isEqual(dateTime60);
        java.util.Calendar calendar62 = dateTime55.getCal();
        dateTime46.set(calendar62);
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime(calendar62);
        boolean boolean65 = dateTime38.isGreaterThan(dateTime64);
        long long66 = dateTime4.getDeltaMilliSeconds(dateTime64);
        boolean boolean67 = net.ajaskey.common.Utils.sameMonth(dateTime0, dateTime64);
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime(dateTime64);
        net.ajaskey.common.DateTime dateTime72 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime74 = new net.ajaskey.common.DateTime(100L);
        double double75 = dateTime72.getDeltaYears(dateTime74);
        long long76 = dateTime64.getDeltaDays(dateTime72);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-719795L) + "'", long17 == (-719795L));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10 + "'", int18 == 10);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 10 + "'", int26 == 10);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-1972.041095890411d) + "'", double39 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(date41);
        org.junit.Assert.assertEquals(date41.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-1972.041095890411d) + "'", double49 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 10 + "'", int50 == 10);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(calendar62);
        org.junit.Assert.assertEquals(calendar62.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
// flaky:         org.junit.Assert.assertTrue("'" + long66 + "' != '" + 62190310365387L + "'", long66 == 62190310365387L);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-1972.041095890411d) + "'", double75 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 719795L + "'", long76 == 719795L);
    }

    @Test
    public void test6954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6954");
        java.lang.String str2 = net.ajaskey.common.Utils.lfmt((long) 8, 274);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                                                                                                                                                                                                                                                                 8" + "'", str2, "                                                                                                                                                                                                                                                                                 8");
    }

    @Test
    public void test6955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6955");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        java.text.SimpleDateFormat simpleDateFormat8 = null;
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double12 = dateTime9.getDeltaYears(dateTime11);
        boolean boolean13 = dateTime9.isWeekday();
        boolean boolean14 = dateTime3.sameDate(dateTime9);
        int int15 = dateTime9.getDayOfMonth();
        int int16 = dateTime9.getHour();
        java.text.SimpleDateFormat simpleDateFormat18 = null;
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat18);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double22 = dateTime19.getDeltaYears(dateTime21);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean27 = dateTime21.isEqual(dateTime26);
        java.lang.String str28 = dateTime26.getDay();
        boolean boolean29 = dateTime26.isWeekday();
        java.lang.String str30 = dateTime26.getMonth();
        boolean boolean31 = dateTime9.isLessThanOrEqual(dateTime26);
        java.util.Date date32 = dateTime26.getTime();
        java.text.SimpleDateFormat simpleDateFormat34 = null;
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat34);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double38 = dateTime35.getDeltaYears(dateTime37);
        boolean boolean39 = dateTime35.isWeekday();
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime(100L);
        int int42 = dateTime41.getMs();
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime(100L);
        double double49 = dateTime46.getDeltaYears(dateTime48);
        java.text.SimpleDateFormat simpleDateFormat50 = dateTime46.getSdf();
        boolean boolean51 = dateTime41.isLessThanOrEqual(dateTime46);
        boolean boolean52 = dateTime35.isLessThanOrEqual(dateTime41);
        boolean boolean53 = dateTime26.isGreaterThanOrEqual(dateTime35);
        dateTime35.add((int) (byte) 10, 4);
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime(8, (int) (short) 0, 0);
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat66 = null;
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat66);
        net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double70 = dateTime67.getDeltaYears(dateTime69);
        boolean boolean71 = dateTime64.isLessThan(dateTime69);
        java.lang.String str72 = dateTime69.toFullString();
        int int73 = dateTime69.getSecond();
        net.ajaskey.common.DateTime dateTime74 = new net.ajaskey.common.DateTime(dateTime69);
        long long75 = dateTime60.getDeltaDays(dateTime69);
        net.ajaskey.common.DateTime dateTime78 = dateTime69.parse("                                                                                                                                                                                                                                                          16", "Fri 11-Jan-0032 10:43:43");
        boolean boolean79 = net.ajaskey.common.Utils.sameDate(dateTime35, dateTime69);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Thursday" + "'", str28, "Thursday");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "April" + "'", str30, "April");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(date32);
// flaky:         org.junit.Assert.assertEquals(date32.toString(), "Thu Apr 10 10:47:14 MST 2");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-1972.041095890411d) + "'", double49 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str72, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + (-716608L) + "'", long75 == (-716608L));
        org.junit.Assert.assertNull(dateTime78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test6956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6956");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        java.text.SimpleDateFormat simpleDateFormat7 = dateTime3.getSdf();
        int int8 = dateTime3.getHour();
        java.lang.String str10 = dateTime3.format("                                                                                               52.00");
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime((long) 2020);
        java.text.SimpleDateFormat simpleDateFormat14 = null;
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat14);
        java.lang.String str16 = dateTime15.getMonth();
        boolean boolean17 = dateTime12.sameDate(dateTime15);
        boolean boolean18 = net.ajaskey.common.Utils.sameMonth(dateTime3, dateTime12);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10 + "'", int8 == 10);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "                                                                                               52.00" + "'", str10, "                                                                                               52.00");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UNKNOWN" + "'", str16, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test6957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6957");
        java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readTextFile("                                                                                                                                                                                                                                                                                                                                                                                                                                                    62,190,310,484,635", true);
        org.junit.Assert.assertNotNull(strList2);
    }

    @Test
    public void test6958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6958");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        boolean boolean7 = dateTime5.isWeekday();
        java.util.Date date8 = dateTime5.getTime();
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
        int int12 = dateTime11.getMs();
        java.text.SimpleDateFormat simpleDateFormat13 = net.ajaskey.common.Utils.sdf;
        dateTime11.setSdf(simpleDateFormat13);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat13);
        java.text.SimpleDateFormat simpleDateFormat17 = null;
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat17);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double21 = dateTime18.getDeltaYears(dateTime20);
        boolean boolean22 = dateTime20.isNull();
        java.text.SimpleDateFormat simpleDateFormat24 = null;
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat24);
        dateTime25.set((int) ' ', 0, 11);
        boolean boolean30 = dateTime20.isGreaterThanOrEqual(dateTime25);
        double double31 = dateTime15.getDeltaYears(dateTime20);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(100L);
        double double38 = dateTime35.getDeltaYears(dateTime37);
        int int39 = dateTime35.getHour();
        java.text.SimpleDateFormat simpleDateFormat41 = null;
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat41);
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double45 = dateTime42.getDeltaYears(dateTime44);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean50 = dateTime44.isEqual(dateTime49);
        java.util.Calendar calendar51 = dateTime44.getCal();
        java.lang.String str52 = dateTime44.format();
        net.ajaskey.common.DateTime dateTime53 = null;
        long long54 = dateTime44.getDeltaDays(dateTime53);
        int int55 = dateTime44.getSecond();
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime(100L);
        double double62 = dateTime59.getDeltaYears(dateTime61);
        java.text.SimpleDateFormat simpleDateFormat64 = null;
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat64);
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double68 = dateTime65.getDeltaYears(dateTime67);
        boolean boolean69 = dateTime65.isWeekday();
        boolean boolean70 = dateTime59.sameDate(dateTime65);
        int int71 = dateTime65.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime72 = dateTime44.copy(dateTime65);
        dateTime35.set(dateTime65);
        boolean boolean74 = dateTime20.sameDate(dateTime65);
        java.util.Date date75 = null;
        net.ajaskey.common.DateTime dateTime76 = new net.ajaskey.common.DateTime(date75);
        boolean boolean77 = dateTime65.isGreaterThan(dateTime76);
        boolean boolean78 = dateTime5.isGreaterThan(dateTime76);
        java.text.SimpleDateFormat simpleDateFormat80 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat81 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime82 = new net.ajaskey.common.DateTime("", simpleDateFormat80, simpleDateFormat81);
        java.util.Date date83 = dateTime82.getTime();
        long long84 = dateTime76.getDeltaMilliSeconds(dateTime82);
        java.text.SimpleDateFormat simpleDateFormat85 = dateTime82.getSdf();
        net.ajaskey.common.DateTime dateTime88 = new net.ajaskey.common.DateTime("10-Apr-0002", "                            152.00");
        net.ajaskey.common.DateTime dateTime89 = dateTime82.copy(dateTime88);
        dateTime88.setFirstWorkDay();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(date8);
        org.junit.Assert.assertEquals(date8.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat13);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1972.041095890411d) + "'", double38 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 10 + "'", int39 == 10);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(calendar51);
        org.junit.Assert.assertEquals(calendar51.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "BAD-DATE-FORMAT" + "'", str52, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 0L + "'", long54 == 0L);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-1972.041095890411d) + "'", double62 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNull(dateTime72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(simpleDateFormat80);
        org.junit.Assert.assertNotNull(simpleDateFormat81);
        org.junit.Assert.assertNull(date83);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 0L + "'", long84 == 0L);
        org.junit.Assert.assertNull(simpleDateFormat85);
        org.junit.Assert.assertNull(dateTime89);
    }

    @Test
    public void test6959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6959");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        dateTime1.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
        double double12 = dateTime9.getDeltaYears(dateTime11);
        boolean boolean13 = dateTime11.isWeekday();
        java.util.Date date14 = dateTime11.getTime();
        dateTime1.set(dateTime11);
        int int16 = dateTime1.getYear();
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(100L);
        int int19 = dateTime18.getMs();
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime(100L);
        double double26 = dateTime23.getDeltaYears(dateTime25);
        java.text.SimpleDateFormat simpleDateFormat27 = dateTime23.getSdf();
        boolean boolean28 = dateTime18.isLessThanOrEqual(dateTime23);
        boolean boolean29 = dateTime23.isWeekday();
        boolean boolean30 = dateTime23.isWeekday();
        boolean boolean31 = dateTime1.sameDate(dateTime23);
        java.util.Date date32 = null;
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime(date32);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime(100L);
        double double40 = dateTime37.getDeltaYears(dateTime39);
        int int41 = dateTime37.getHour();
        java.text.SimpleDateFormat simpleDateFormat43 = null;
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat43);
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double47 = dateTime44.getDeltaYears(dateTime46);
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean52 = dateTime46.isEqual(dateTime51);
        java.util.Calendar calendar53 = dateTime46.getCal();
        dateTime37.set(calendar53);
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime(calendar53);
        net.ajaskey.common.DateTime dateTime56 = dateTime33.copy(dateTime55);
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime(100L);
        double double63 = dateTime60.getDeltaYears(dateTime62);
        boolean boolean64 = dateTime62.isWeekday();
        int int65 = dateTime62.getDayOfYear();
        long long66 = dateTime56.getDeltaMilliSeconds(dateTime62);
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime(100L);
        int int69 = dateTime68.getMs();
        java.lang.String str70 = dateTime68.toString();
        java.lang.String str72 = dateTime68.format("         1");
        long long73 = dateTime56.getDeltaDays(dateTime68);
        boolean boolean74 = net.ajaskey.common.Utils.sameMonth(dateTime1, dateTime56);
        java.lang.String str75 = dateTime56.getMonth();
        java.lang.String str76 = dateTime56.toString();
        net.ajaskey.common.DateTime dateTime78 = new net.ajaskey.common.DateTime((long) 10);
        java.util.Calendar calendar79 = dateTime78.getCal();
        boolean boolean80 = dateTime56.isLessThan(dateTime78);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1972.041095890411d) + "'", double12 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(date14);
        org.junit.Assert.assertEquals(date14.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1969 + "'", int16 == 1969);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-1972.041095890411d) + "'", double26 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-1972.041095890411d) + "'", double40 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 10 + "'", int41 == 10);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(calendar53);
        org.junit.Assert.assertEquals(calendar53.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(dateTime56);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-1972.041095890411d) + "'", double63 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 365 + "'", int65 == 365);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 100L + "'", long66 == 100L);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 100 + "'", int69 == 100);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "31-Dec-1969" + "'", str70, "31-Dec-1969");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "         1" + "'", str72, "         1");
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 0L + "'", long73 == 0L);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "December" + "'", str75, "December");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "31-Dec-1969" + "'", str76, "31-Dec-1969");
        org.junit.Assert.assertNotNull(calendar79);
        org.junit.Assert.assertEquals(calendar79.toString(), "java.util.GregorianCalendar[time=10,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=10,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
    }

    @Test
    public void test6960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6960");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        java.lang.String str3 = dateTime1.toString();
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(100L);
        double double10 = dateTime7.getDeltaYears(dateTime9);
        int int11 = dateTime7.getHour();
        int int12 = dateTime7.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(100L);
        double double19 = dateTime16.getDeltaYears(dateTime18);
        boolean boolean20 = dateTime18.isWeekday();
        boolean boolean21 = net.ajaskey.common.Utils.sameDate(dateTime7, dateTime18);
        boolean boolean22 = net.ajaskey.common.Utils.sameDate(dateTime1, dateTime7);
        net.ajaskey.common.DateTime dateTime23 = null;
        boolean boolean24 = dateTime7.isLessThanOrEqual(dateTime23);
        java.lang.String str25 = dateTime7.getDay();
        net.ajaskey.common.DateTime dateTime27 = dateTime7.parse("                                                                                                                                                                                                                                                                   238");
        net.ajaskey.common.DateTime dateTime30 = dateTime7.parse("Thu 10-Apr-0002 10:43:19", "                                     100.00");
        dateTime7.add(55, 20);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "31-Dec-1969" + "'", str3, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1972.041095890411d) + "'", double10 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-1972.041095890411d) + "'", double19 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Thursday" + "'", str25, "Thursday");
        org.junit.Assert.assertNull(dateTime27);
        org.junit.Assert.assertNull(dateTime30);
    }

    @Test
    public void test6961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6961");
        // The following exception was thrown during execution in test generation
        try {
            net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("                         191", "Thu 25-Jun-2020 10:45:31");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal pattern character 'T'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test6962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6962");
        java.lang.String str2 = net.ajaskey.common.Utils.fmt((double) (-62190310414584L), 68);
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Invalid fmt" + "'", str2, "Invalid fmt");
    }

    @Test
    public void test6963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6963");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime(100L);
        int int3 = dateTime2.getMs();
        java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdf;
        dateTime2.setSdf(simpleDateFormat4);
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat4);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime((long) 53);
        boolean boolean9 = dateTime8.isWeekday();
        boolean boolean10 = dateTime6.sameDate(dateTime8);
        java.text.SimpleDateFormat simpleDateFormat11 = dateTime6.getSdf();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(simpleDateFormat11);
    }

    @Test
    public void test6964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6964");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean10 = dateTime4.isEqual(dateTime9);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(100L);
        double double17 = dateTime14.getDeltaYears(dateTime16);
        boolean boolean18 = dateTime16.isWeekday();
        int int19 = dateTime16.getDayOfYear();
        net.ajaskey.common.DateTime dateTime20 = dateTime4.copy(dateTime16);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(100L);
        boolean boolean23 = dateTime22.isWeekday();
        java.lang.String str24 = dateTime22.getMonth();
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(100L);
        java.util.Calendar calendar27 = dateTime26.getCal();
        java.text.SimpleDateFormat simpleDateFormat29 = null;
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat29);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double33 = dateTime30.getDeltaYears(dateTime32);
        boolean boolean34 = dateTime30.isWeekday();
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long39 = dateTime30.getDeltaDays(dateTime38);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime(dateTime30);
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime(100L);
        double double47 = dateTime44.getDeltaYears(dateTime46);
        boolean boolean48 = dateTime46.isWeekday();
        java.util.Date date49 = dateTime46.getTime();
        dateTime30.set(date49);
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime(100L);
        int int53 = dateTime52.getMs();
        java.lang.String str54 = dateTime52.toString();
        boolean boolean55 = dateTime30.isLessThanOrEqual(dateTime52);
        net.ajaskey.common.DateTime dateTime58 = dateTime30.parse("", "100.00");
        dateTime30.add((int) (short) 0, (int) (short) -1);
        double double62 = dateTime26.getDeltaYears(dateTime30);
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime(100L);
        int int65 = dateTime64.getMs();
        net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime(100L);
        double double72 = dateTime69.getDeltaYears(dateTime71);
        java.text.SimpleDateFormat simpleDateFormat73 = dateTime69.getSdf();
        boolean boolean74 = dateTime64.isLessThanOrEqual(dateTime69);
        int int75 = dateTime64.getDayOfMonth();
        boolean boolean76 = net.ajaskey.common.Utils.sameMonth(dateTime30, dateTime64);
        boolean boolean77 = net.ajaskey.common.Utils.sameDate(dateTime22, dateTime30);
        net.ajaskey.common.DateTime dateTime80 = new net.ajaskey.common.DateTime(100L);
        int int81 = dateTime80.getMs();
        java.text.SimpleDateFormat simpleDateFormat82 = net.ajaskey.common.Utils.sdf;
        dateTime80.setSdf(simpleDateFormat82);
        net.ajaskey.common.DateTime dateTime84 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat82);
        net.ajaskey.common.DateTime dateTime86 = new net.ajaskey.common.DateTime((long) 53);
        boolean boolean87 = dateTime86.isWeekday();
        boolean boolean88 = dateTime84.sameDate(dateTime86);
        java.util.Date date89 = dateTime86.getTime();
        java.lang.String str90 = dateTime86.format();
        boolean boolean91 = dateTime30.isLessThan(dateTime86);
        net.ajaskey.common.DateTime dateTime92 = dateTime4.copy(dateTime30);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-1972.041095890411d) + "'", double17 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 365 + "'", int19 == 365);
        org.junit.Assert.assertNotNull(dateTime20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "December" + "'", str24, "December");
        org.junit.Assert.assertNotNull(calendar27);
        org.junit.Assert.assertEquals(calendar27.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-1972.041095890411d) + "'", double47 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(date49);
        org.junit.Assert.assertEquals(date49.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 100 + "'", int53 == 100);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "31-Dec-1969" + "'", str54, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(dateTime58);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 100 + "'", int65 == 100);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + (-1972.041095890411d) + "'", double72 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 31 + "'", int75 == 31);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 100 + "'", int81 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat82);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(date89);
        org.junit.Assert.assertEquals(date89.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "BAD-DATE-FORMAT" + "'", str90, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(dateTime92);
    }

    @Test
    public void test6965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6965");
        java.text.SimpleDateFormat simpleDateFormat1 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat3 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime("", simpleDateFormat3, simpleDateFormat4);
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat1, simpleDateFormat4);
        int int7 = dateTime6.getHour();
        java.text.SimpleDateFormat simpleDateFormat14 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat16 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat17 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime("", simpleDateFormat16, simpleDateFormat17);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat14, simpleDateFormat17);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("10-Apr-0002", simpleDateFormat17);
        java.text.SimpleDateFormat simpleDateFormat23 = null;
        java.text.SimpleDateFormat simpleDateFormat24 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("January", simpleDateFormat23, simpleDateFormat24);
        java.text.SimpleDateFormat simpleDateFormat28 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime("January", simpleDateFormat28);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime("", simpleDateFormat28);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime("", simpleDateFormat24, simpleDateFormat28);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime("January                                                                                               52.00                                                                                               52.00                                                                                               52.00                                                                                               52.00hi!                                                                                               52.00", simpleDateFormat17, simpleDateFormat28);
        java.text.SimpleDateFormat simpleDateFormat34 = null;
        java.text.SimpleDateFormat simpleDateFormat35 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime("January", simpleDateFormat34, simpleDateFormat35);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime("December", simpleDateFormat28, simpleDateFormat35);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:43:00", simpleDateFormat35);
        java.text.SimpleDateFormat simpleDateFormat41 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat42 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime("", simpleDateFormat41, simpleDateFormat42);
        java.text.SimpleDateFormat simpleDateFormat45 = null;
        java.text.SimpleDateFormat simpleDateFormat46 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime("January", simpleDateFormat45, simpleDateFormat46);
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat41, simpleDateFormat46);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime("JanuaryDecemberDecember                                                                                               52.00Decemberhi!December", simpleDateFormat35, simpleDateFormat41);
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime(100L);
        double double56 = dateTime53.getDeltaYears(dateTime55);
        boolean boolean57 = dateTime55.isWeekday();
        java.util.Date date58 = dateTime55.getTime();
        int int59 = dateTime55.getDayOfWeek();
        java.lang.String str60 = dateTime55.toFullString();
        boolean boolean61 = dateTime55.isWeekday();
        int int62 = dateTime55.getMs();
        long long63 = dateTime49.getDeltaMilliSeconds(dateTime55);
        int int64 = dateTime55.getMinute();
        dateTime6.set(dateTime55);
        boolean boolean66 = dateTime6.isNull();
        org.junit.Assert.assertNotNull(simpleDateFormat1);
        org.junit.Assert.assertNotNull(simpleDateFormat3);
        org.junit.Assert.assertNotNull(simpleDateFormat4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(simpleDateFormat14);
        org.junit.Assert.assertNotNull(simpleDateFormat16);
        org.junit.Assert.assertNotNull(simpleDateFormat17);
        org.junit.Assert.assertNotNull(simpleDateFormat24);
        org.junit.Assert.assertNotNull(simpleDateFormat28);
        org.junit.Assert.assertNotNull(simpleDateFormat35);
        org.junit.Assert.assertNotNull(simpleDateFormat41);
        org.junit.Assert.assertNotNull(simpleDateFormat42);
        org.junit.Assert.assertNotNull(simpleDateFormat46);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-1972.041095890411d) + "'", double56 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(date58);
        org.junit.Assert.assertEquals(date58.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 4 + "'", int59 == 4);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str60, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 0L + "'", long63 == 0L);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test6966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6966");
        net.ajaskey.common.Utils.makeDir("Thu 10-Apr-0002 10:46:56");
    }

    @Test
    public void test6967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6967");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(7, 14, (int) (short) -1);
        java.text.SimpleDateFormat simpleDateFormat5 = null;
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat5);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean14 = dateTime8.isEqual(dateTime13);
        java.lang.String str15 = dateTime13.getMonth();
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(100L);
        int int18 = dateTime17.getMs();
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime(100L);
        double double25 = dateTime22.getDeltaYears(dateTime24);
        java.text.SimpleDateFormat simpleDateFormat26 = dateTime22.getSdf();
        boolean boolean27 = dateTime17.isLessThanOrEqual(dateTime22);
        java.text.SimpleDateFormat simpleDateFormat29 = null;
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat29);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double33 = dateTime30.getDeltaYears(dateTime32);
        boolean boolean34 = dateTime30.isWeekday();
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long39 = dateTime30.getDeltaDays(dateTime38);
        long long40 = dateTime17.getDeltaDays(dateTime38);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime(100L);
        dateTime42.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean47 = dateTime42.isWeekday();
        int int48 = dateTime17.getYears(dateTime42);
        int int49 = dateTime17.getYear();
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime(100L);
        int int52 = dateTime51.getMs();
        java.lang.String str53 = dateTime51.toString();
        int int54 = dateTime51.getDayOfYear();
        java.text.SimpleDateFormat simpleDateFormat56 = null;
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat56);
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double60 = dateTime57.getDeltaYears(dateTime59);
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean65 = dateTime59.isEqual(dateTime64);
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime(100L);
        int int68 = dateTime67.getMs();
        boolean boolean69 = dateTime64.isGreaterThanOrEqual(dateTime67);
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime(100L);
        dateTime71.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime79 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime81 = new net.ajaskey.common.DateTime(100L);
        double double82 = dateTime79.getDeltaYears(dateTime81);
        boolean boolean83 = dateTime81.isWeekday();
        java.util.Date date84 = dateTime81.getTime();
        dateTime71.set(dateTime81);
        boolean boolean86 = net.ajaskey.common.Utils.sameDate(dateTime64, dateTime71);
        dateTime64.add((int) '#', 6);
        boolean boolean90 = dateTime51.sameDate(dateTime64);
        net.ajaskey.common.DateTime dateTime91 = dateTime17.copy(dateTime51);
        int int92 = dateTime51.getDayOfMonth();
        boolean boolean93 = dateTime13.isLessThanOrEqual(dateTime51);
        int int94 = dateTime13.getYear();
        java.lang.String str95 = dateTime13.getDay();
        boolean boolean96 = dateTime3.isLessThan(dateTime13);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "April" + "'", str15, "April");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + (-1972.041095890411d) + "'", double25 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 719795L + "'", long40 == 719795L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1870) + "'", int48 == (-1870));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1969 + "'", int49 == 1969);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 100 + "'", int52 == 100);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "31-Dec-1969" + "'", str53, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 365 + "'", int54 == 365);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-1972.041095890411d) + "'", double82 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(date84);
        org.junit.Assert.assertEquals(date84.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(dateTime91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 31 + "'", int92 == 31);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 2 + "'", int94 == 2);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "Thursday" + "'", str95, "Thursday");
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test6968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6968");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) 7);
        java.lang.String str2 = dateTime1.toFullString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str2, "Wed 31-Dec-1969 17:00:00");
    }

    @Test
    public void test6969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6969");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime(100L);
        int int3 = dateTime2.getMs();
        java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdf;
        dateTime2.setSdf(simpleDateFormat4);
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat4);
        java.text.SimpleDateFormat simpleDateFormat8 = null;
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double12 = dateTime9.getDeltaYears(dateTime11);
        boolean boolean13 = dateTime11.isNull();
        java.text.SimpleDateFormat simpleDateFormat15 = null;
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat15);
        dateTime16.set((int) ' ', 0, 11);
        boolean boolean21 = dateTime11.isGreaterThanOrEqual(dateTime16);
        double double22 = dateTime6.getDeltaYears(dateTime11);
        java.text.SimpleDateFormat simpleDateFormat24 = null;
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat24);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double28 = dateTime25.getDeltaYears(dateTime27);
        boolean boolean29 = dateTime27.isNull();
        boolean boolean30 = dateTime11.isGreaterThan(dateTime27);
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean35 = dateTime34.isNull();
        java.lang.String str36 = dateTime34.getDay();
        java.lang.String str37 = dateTime34.getMonth();
        java.lang.String str38 = dateTime34.getDay();
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime(100L);
        double double45 = dateTime42.getDeltaYears(dateTime44);
        boolean boolean46 = dateTime44.isWeekday();
        java.util.Date date47 = dateTime44.getTime();
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime(date47);
        dateTime34.set(date47);
        long long50 = dateTime27.getDeltaDays(dateTime34);
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime(100L);
        double double57 = dateTime54.getDeltaYears(dateTime56);
        java.util.Date date58 = dateTime54.getTime();
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime(date58);
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime(date58);
        dateTime27.set(date58);
        java.lang.String str63 = dateTime27.format("                            0.00");
        java.lang.String str64 = dateTime27.toString();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat4);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Thursday" + "'", str36, "Thursday");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "April" + "'", str37, "April");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Thursday" + "'", str38, "Thursday");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-1972.041095890411d) + "'", double45 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(date47);
        org.junit.Assert.assertEquals(date47.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-1972.041095890411d) + "'", double57 == (-1972.041095890411d));
        org.junit.Assert.assertNotNull(date58);
// flaky:         org.junit.Assert.assertEquals(date58.toString(), "Thu Apr 10 10:47:14 MST 2");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "                            0.00" + "'", str63, "                            0.00");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "10-Apr-0002" + "'", str64, "10-Apr-0002");
    }

    @Test
    public void test6970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6970");
        java.text.SimpleDateFormat simpleDateFormat5 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat7 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat8 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("", simpleDateFormat7, simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat5, simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat17 = null;
        java.text.SimpleDateFormat simpleDateFormat18 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime("January", simpleDateFormat17, simpleDateFormat18);
        java.text.SimpleDateFormat simpleDateFormat22 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime("January", simpleDateFormat22);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("", simpleDateFormat22);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("", simpleDateFormat18, simpleDateFormat22);
        dateTime14.setSdf(simpleDateFormat18);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime("", simpleDateFormat8, simpleDateFormat18);
        java.text.SimpleDateFormat simpleDateFormat30 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat31 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime("", simpleDateFormat30, simpleDateFormat31);
        java.text.SimpleDateFormat simpleDateFormat35 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat36 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime("", simpleDateFormat35, simpleDateFormat36);
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime(100L);
        int int40 = dateTime39.getMs();
        java.text.SimpleDateFormat simpleDateFormat41 = net.ajaskey.common.Utils.sdf;
        dateTime39.setSdf(simpleDateFormat41);
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat36, simpleDateFormat41);
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime("     0", simpleDateFormat31, simpleDateFormat41);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:43:16", simpleDateFormat18, simpleDateFormat31);
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime("Fri 11-Jan-0032 10:44:58", simpleDateFormat18);
        java.text.SimpleDateFormat simpleDateFormat50 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime("January", simpleDateFormat50);
        java.text.SimpleDateFormat simpleDateFormat56 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat57 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime("", simpleDateFormat56, simpleDateFormat57);
        java.text.SimpleDateFormat simpleDateFormat60 = null;
        java.text.SimpleDateFormat simpleDateFormat61 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime("January", simpleDateFormat60, simpleDateFormat61);
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat56, simpleDateFormat61);
        java.text.SimpleDateFormat simpleDateFormat66 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat67 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime("", simpleDateFormat66, simpleDateFormat67);
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime(100L);
        int int71 = dateTime70.getMs();
        java.text.SimpleDateFormat simpleDateFormat72 = net.ajaskey.common.Utils.sdf;
        dateTime70.setSdf(simpleDateFormat72);
        net.ajaskey.common.DateTime dateTime74 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat67, simpleDateFormat72);
        net.ajaskey.common.DateTime dateTime75 = new net.ajaskey.common.DateTime("                             100", simpleDateFormat61, simpleDateFormat67);
        net.ajaskey.common.DateTime dateTime76 = new net.ajaskey.common.DateTime("11", simpleDateFormat61);
        net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime("                                 32.00", simpleDateFormat50, simpleDateFormat61);
        java.text.SimpleDateFormat simpleDateFormat79 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime80 = new net.ajaskey.common.DateTime("Thu 25-Jun-2020 10:43:26", simpleDateFormat79);
        net.ajaskey.common.DateTime dateTime81 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:43:11", simpleDateFormat61, simpleDateFormat79);
        net.ajaskey.common.DateTime dateTime82 = new net.ajaskey.common.DateTime("                             857", simpleDateFormat18, simpleDateFormat79);
        org.junit.Assert.assertNotNull(simpleDateFormat5);
        org.junit.Assert.assertNotNull(simpleDateFormat7);
        org.junit.Assert.assertNotNull(simpleDateFormat8);
        org.junit.Assert.assertNotNull(simpleDateFormat18);
        org.junit.Assert.assertNotNull(simpleDateFormat22);
        org.junit.Assert.assertNotNull(simpleDateFormat30);
        org.junit.Assert.assertNotNull(simpleDateFormat31);
        org.junit.Assert.assertNotNull(simpleDateFormat35);
        org.junit.Assert.assertNotNull(simpleDateFormat36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat41);
        org.junit.Assert.assertNotNull(simpleDateFormat50);
        org.junit.Assert.assertNotNull(simpleDateFormat56);
        org.junit.Assert.assertNotNull(simpleDateFormat57);
        org.junit.Assert.assertNotNull(simpleDateFormat61);
        org.junit.Assert.assertNotNull(simpleDateFormat66);
        org.junit.Assert.assertNotNull(simpleDateFormat67);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 100 + "'", int71 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat72);
        org.junit.Assert.assertNotNull(simpleDateFormat79);
    }

    @Test
    public void test6971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6971");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean10 = dateTime4.isEqual(dateTime9);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(100L);
        int int13 = dateTime12.getMs();
        boolean boolean14 = dateTime9.isGreaterThanOrEqual(dateTime12);
        java.text.SimpleDateFormat simpleDateFormat16 = null;
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double20 = dateTime17.getDeltaYears(dateTime19);
        boolean boolean21 = dateTime17.isWeekday();
        boolean boolean22 = dateTime12.isLessThanOrEqual(dateTime17);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime(100L);
        dateTime24.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean29 = dateTime24.isWeekday();
        boolean boolean30 = dateTime12.isGreaterThanOrEqual(dateTime24);
        int int31 = dateTime24.getDayOfYear();
        net.ajaskey.common.DateTime dateTime33 = dateTime24.parse("7");
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime(dateTime33);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 4 + "'", int31 == 4);
        org.junit.Assert.assertNull(dateTime33);
    }

    @Test
    public void test6972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6972");
        net.ajaskey.common.Utils.sleep(552);
    }

    @Test
    public void test6973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6973");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) 1833);
    }

    @Test
    public void test6974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6974");
        java.text.SimpleDateFormat simpleDateFormat6 = null;
        java.text.SimpleDateFormat simpleDateFormat7 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime("January", simpleDateFormat6, simpleDateFormat7);
        java.text.SimpleDateFormat simpleDateFormat11 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime("January", simpleDateFormat11);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("", simpleDateFormat11);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime("", simpleDateFormat7, simpleDateFormat11);
        java.text.SimpleDateFormat simpleDateFormat17 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat19 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat20 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("", simpleDateFormat19, simpleDateFormat20);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat17, simpleDateFormat20);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat29 = null;
        java.text.SimpleDateFormat simpleDateFormat30 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime("January", simpleDateFormat29, simpleDateFormat30);
        java.text.SimpleDateFormat simpleDateFormat34 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("January", simpleDateFormat34);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime("", simpleDateFormat34);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime("", simpleDateFormat30, simpleDateFormat34);
        dateTime26.setSdf(simpleDateFormat30);
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime("", simpleDateFormat20, simpleDateFormat30);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime("   -18,438", simpleDateFormat11, simpleDateFormat30);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime("-2,005", simpleDateFormat11);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime("May", simpleDateFormat11);
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime("January     0     0                                                                                               52.00     0hi!     0", simpleDateFormat11);
        org.junit.Assert.assertNotNull(simpleDateFormat7);
        org.junit.Assert.assertNotNull(simpleDateFormat11);
        org.junit.Assert.assertNotNull(simpleDateFormat17);
        org.junit.Assert.assertNotNull(simpleDateFormat19);
        org.junit.Assert.assertNotNull(simpleDateFormat20);
        org.junit.Assert.assertNotNull(simpleDateFormat30);
        org.junit.Assert.assertNotNull(simpleDateFormat34);
    }

    @Test
    public void test6975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6975");
        net.ajaskey.common.TextUtils.printline("Thu 10-Apr-0002 10:44:16");
    }

    @Test
    public void test6976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6976");
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        long long9 = dateTime6.getDeltaDays(dateTime8);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat16 = null;
        java.text.SimpleDateFormat simpleDateFormat17 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime("January", simpleDateFormat16, simpleDateFormat17);
        java.text.SimpleDateFormat simpleDateFormat21 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime("January", simpleDateFormat21);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime("", simpleDateFormat21);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("", simpleDateFormat17, simpleDateFormat21);
        dateTime13.setSdf(simpleDateFormat17);
        dateTime8.setSdf(simpleDateFormat17);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime(100L);
        double double35 = dateTime32.getDeltaYears(dateTime34);
        int int36 = dateTime32.getHour();
        dateTime32.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat41 = null;
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat41);
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double45 = dateTime42.getDeltaYears(dateTime44);
        boolean boolean46 = dateTime32.isEqual(dateTime44);
        java.text.SimpleDateFormat simpleDateFormat48 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat50 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat51 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime("", simpleDateFormat50, simpleDateFormat51);
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat48, simpleDateFormat51);
        dateTime32.setSdf(simpleDateFormat48);
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat61 = null;
        java.text.SimpleDateFormat simpleDateFormat62 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime("January", simpleDateFormat61, simpleDateFormat62);
        java.text.SimpleDateFormat simpleDateFormat66 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime("January", simpleDateFormat66);
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime("", simpleDateFormat66);
        net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime("", simpleDateFormat62, simpleDateFormat66);
        dateTime58.setSdf(simpleDateFormat62);
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime("December", simpleDateFormat48, simpleDateFormat62);
        net.ajaskey.common.DateTime dateTime73 = new net.ajaskey.common.DateTime(100L);
        int int74 = dateTime73.getMs();
        java.text.SimpleDateFormat simpleDateFormat75 = net.ajaskey.common.Utils.sdf;
        dateTime73.setSdf(simpleDateFormat75);
        int int77 = dateTime73.getDayOfWeek();
        java.text.SimpleDateFormat simpleDateFormat78 = dateTime73.getSdf();
        net.ajaskey.common.DateTime dateTime79 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:43:00", simpleDateFormat62, simpleDateFormat78);
        net.ajaskey.common.DateTime dateTime80 = new net.ajaskey.common.DateTime("05-May-0005", simpleDateFormat17, simpleDateFormat62);
        net.ajaskey.common.DateTime dateTime81 = new net.ajaskey.common.DateTime("7", simpleDateFormat17);
        net.ajaskey.common.DateTime dateTime82 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:43:36", simpleDateFormat17);
        dateTime82.setFirstWorkDay();
        java.lang.String str84 = dateTime82.getDay();
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-719795L) + "'", long9 == (-719795L));
        org.junit.Assert.assertNotNull(simpleDateFormat17);
        org.junit.Assert.assertNotNull(simpleDateFormat21);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-1972.041095890411d) + "'", double35 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 10 + "'", int36 == 10);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(simpleDateFormat48);
        org.junit.Assert.assertNotNull(simpleDateFormat50);
        org.junit.Assert.assertNotNull(simpleDateFormat51);
        org.junit.Assert.assertNotNull(simpleDateFormat62);
        org.junit.Assert.assertNotNull(simpleDateFormat66);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 100 + "'", int74 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 4 + "'", int77 == 4);
        org.junit.Assert.assertNotNull(simpleDateFormat78);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "Monday" + "'", str84, "Monday");
    }

    @Test
    public void test6977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6977");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((-1L));
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime(100L);
        int int5 = dateTime4.getMs();
        java.text.SimpleDateFormat simpleDateFormat6 = net.ajaskey.common.Utils.sdf;
        dateTime4.setSdf(simpleDateFormat6);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat6);
        java.text.SimpleDateFormat simpleDateFormat10 = null;
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat10);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double14 = dateTime11.getDeltaYears(dateTime13);
        boolean boolean15 = dateTime13.isNull();
        java.text.SimpleDateFormat simpleDateFormat17 = null;
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat17);
        dateTime18.set((int) ' ', 0, 11);
        boolean boolean23 = dateTime13.isGreaterThanOrEqual(dateTime18);
        double double24 = dateTime8.getDeltaYears(dateTime13);
        java.text.SimpleDateFormat simpleDateFormat26 = null;
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat26);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double30 = dateTime27.getDeltaYears(dateTime29);
        boolean boolean31 = dateTime29.isNull();
        boolean boolean32 = dateTime13.isGreaterThan(dateTime29);
        java.lang.String str33 = dateTime13.getMonth();
        java.text.SimpleDateFormat simpleDateFormat35 = null;
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat35);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double39 = dateTime36.getDeltaYears(dateTime38);
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean44 = dateTime38.isEqual(dateTime43);
        java.util.Calendar calendar45 = dateTime38.getCal();
        java.lang.String str46 = dateTime38.format();
        net.ajaskey.common.DateTime dateTime47 = null;
        long long48 = dateTime38.getDeltaDays(dateTime47);
        int int49 = dateTime38.getSecond();
        int int50 = dateTime38.getHour();
        boolean boolean51 = dateTime13.isGreaterThanOrEqual(dateTime38);
        java.lang.String str52 = dateTime38.toString();
        boolean boolean53 = net.ajaskey.common.Utils.sameMonth(dateTime1, dateTime38);
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime(0, (int) (byte) -1, (int) (short) 1);
        boolean boolean58 = dateTime38.isLessThanOrEqual(dateTime57);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat6);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "December" + "'", str33, "December");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(calendar45);
        org.junit.Assert.assertEquals(calendar45.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "BAD-DATE-FORMAT" + "'", str46, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 5 + "'", int50 == 5);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "31-Dec-1969" + "'", str52, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test6978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6978");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("                                                                                               52.00", "-100");
        java.text.SimpleDateFormat simpleDateFormat4 = null;
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat4);
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double8 = dateTime5.getDeltaYears(dateTime7);
        boolean boolean9 = dateTime7.isNull();
        java.lang.String str10 = dateTime7.format();
        dateTime7.setFirstWorkDay();
        java.text.SimpleDateFormat simpleDateFormat15 = null;
        java.text.SimpleDateFormat simpleDateFormat16 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("January", simpleDateFormat15, simpleDateFormat16);
        java.text.SimpleDateFormat simpleDateFormat20 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("January", simpleDateFormat20);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime("", simpleDateFormat20);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime("", simpleDateFormat16, simpleDateFormat20);
        java.text.SimpleDateFormat simpleDateFormat26 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat28 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat29 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime("", simpleDateFormat28, simpleDateFormat29);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat26, simpleDateFormat29);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat38 = null;
        java.text.SimpleDateFormat simpleDateFormat39 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime("January", simpleDateFormat38, simpleDateFormat39);
        java.text.SimpleDateFormat simpleDateFormat43 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime("January", simpleDateFormat43);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime("", simpleDateFormat43);
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime("", simpleDateFormat39, simpleDateFormat43);
        dateTime35.setSdf(simpleDateFormat39);
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime("", simpleDateFormat29, simpleDateFormat39);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime("   -18,438", simpleDateFormat20, simpleDateFormat39);
        dateTime7.setSdf(simpleDateFormat20);
        java.lang.String str51 = dateTime7.toString();
        java.lang.String str53 = dateTime7.format("Thu 10-Apr-0002 10:44:17");
        boolean boolean54 = dateTime2.sameDate(dateTime7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "BAD-DATE-FORMAT" + "'", str10, "BAD-DATE-FORMAT");
        org.junit.Assert.assertNotNull(simpleDateFormat16);
        org.junit.Assert.assertNotNull(simpleDateFormat20);
        org.junit.Assert.assertNotNull(simpleDateFormat26);
        org.junit.Assert.assertNotNull(simpleDateFormat28);
        org.junit.Assert.assertNotNull(simpleDateFormat29);
        org.junit.Assert.assertNotNull(simpleDateFormat39);
        org.junit.Assert.assertNotNull(simpleDateFormat43);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "31-Dec-1969" + "'", str51, "31-Dec-1969");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "BAD-DATE-FORMAT" + "'", str53, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test6979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6979");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        boolean boolean2 = dateTime1.isWeekday();
        boolean boolean3 = dateTime1.isNull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test6980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6980");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        java.text.SimpleDateFormat simpleDateFormat10 = dateTime6.getSdf();
        boolean boolean11 = dateTime1.isLessThanOrEqual(dateTime6);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(dateTime1);
        java.text.SimpleDateFormat simpleDateFormat14 = null;
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat14);
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double18 = dateTime15.getDeltaYears(dateTime17);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean23 = dateTime17.isEqual(dateTime22);
        java.lang.String str24 = dateTime22.getDay();
        boolean boolean25 = dateTime12.isLessThanOrEqual(dateTime22);
        java.text.SimpleDateFormat simpleDateFormat27 = null;
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat27);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double31 = dateTime28.getDeltaYears(dateTime30);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean36 = dateTime30.isEqual(dateTime35);
        java.util.Calendar calendar37 = dateTime30.getCal();
        java.lang.String str38 = dateTime30.format();
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime(100L);
        double double45 = dateTime42.getDeltaYears(dateTime44);
        int int46 = dateTime42.getHour();
        dateTime42.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat51 = null;
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat51);
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double55 = dateTime52.getDeltaYears(dateTime54);
        boolean boolean56 = dateTime42.isEqual(dateTime54);
        java.lang.String str57 = dateTime42.toString();
        dateTime42.add(100, (int) (byte) 0);
        boolean boolean61 = dateTime30.isLessThanOrEqual(dateTime42);
        boolean boolean62 = dateTime22.isEqual(dateTime42);
        int int63 = dateTime22.getDayOfWeek();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Thursday" + "'", str24, "Thursday");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(calendar37);
        org.junit.Assert.assertEquals(calendar37.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "BAD-DATE-FORMAT" + "'", str38, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-1972.041095890411d) + "'", double45 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 10 + "'", int46 == 10);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "10-Apr-0002" + "'", str57, "10-Apr-0002");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 5 + "'", int63 == 5);
    }

    @Test
    public void test6981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6981");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        dateTime1.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
        double double12 = dateTime9.getDeltaYears(dateTime11);
        boolean boolean13 = dateTime11.isWeekday();
        java.util.Date date14 = dateTime11.getTime();
        dateTime1.set(dateTime11);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat21 = null;
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat21);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double25 = dateTime22.getDeltaYears(dateTime24);
        boolean boolean26 = dateTime19.isLessThan(dateTime24);
        dateTime11.set(dateTime24);
        java.lang.String str28 = dateTime24.getDay();
        java.text.SimpleDateFormat simpleDateFormat29 = dateTime24.getSdf();
        net.ajaskey.common.DateTime dateTime32 = dateTime24.parse("    0", "Invalid Time");
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((long) (short) 0);
        int int35 = dateTime34.getHour();
        boolean boolean36 = dateTime34.isNull();
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(dateTime34);
        net.ajaskey.common.DateTime dateTime38 = dateTime24.copy(dateTime37);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat44 = null;
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat44);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double48 = dateTime45.getDeltaYears(dateTime47);
        boolean boolean49 = dateTime42.isLessThan(dateTime47);
        dateTime47.set(3, 365, 0);
        net.ajaskey.common.DateTime dateTime54 = dateTime37.copy(dateTime47);
        net.ajaskey.common.DateTime dateTime55 = null;
        boolean boolean56 = net.ajaskey.common.Utils.sameDate(dateTime47, dateTime55);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1972.041095890411d) + "'", double12 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(date14);
        org.junit.Assert.assertEquals(date14.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Wednesday" + "'", str28, "Wednesday");
        org.junit.Assert.assertNull(simpleDateFormat29);
        org.junit.Assert.assertNull(dateTime32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 5 + "'", int35 == 5);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(dateTime38);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(dateTime54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test6982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6982");
        net.ajaskey.common.DateTime dateTime0 = null;
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(dateTime0);
        dateTime1.set(42, 10, 10);
        java.util.Date date6 = dateTime1.getTime();
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat12 = null;
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat12);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double16 = dateTime13.getDeltaYears(dateTime15);
        boolean boolean17 = dateTime10.isLessThan(dateTime15);
        java.lang.String str18 = dateTime15.toFullString();
        int int19 = dateTime15.getSecond();
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime(dateTime15);
        java.text.SimpleDateFormat simpleDateFormat22 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat23 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("", simpleDateFormat22, simpleDateFormat23);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime(100L);
        double double31 = dateTime28.getDeltaYears(dateTime30);
        int int32 = dateTime28.getHour();
        java.text.SimpleDateFormat simpleDateFormat34 = null;
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat34);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double38 = dateTime35.getDeltaYears(dateTime37);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean43 = dateTime37.isEqual(dateTime42);
        java.util.Calendar calendar44 = dateTime37.getCal();
        dateTime28.set(calendar44);
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime(calendar44);
        boolean boolean47 = dateTime24.isLessThan(dateTime46);
        double double48 = dateTime15.getDeltaYears(dateTime46);
        net.ajaskey.common.DateTime dateTime49 = dateTime1.copy(dateTime46);
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        dateTime53.add(2, 12);
        java.util.Date date57 = dateTime53.getTime();
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime(date57);
        dateTime46.set(date57);
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime(date57);
        boolean boolean61 = dateTime60.isWeekday();
        org.junit.Assert.assertNotNull(date6);
// flaky:         org.junit.Assert.assertEquals(date6.toString(), "Sat Nov 10 10:47:15 MST 42");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str18, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(simpleDateFormat22);
        org.junit.Assert.assertNotNull(simpleDateFormat23);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-1972.041095890411d) + "'", double31 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10 + "'", int32 == 10);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(calendar44);
        org.junit.Assert.assertEquals(calendar44.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(dateTime49);
        org.junit.Assert.assertNotNull(date57);
// flaky:         org.junit.Assert.assertEquals(date57.toString(), "Sat Apr 10 10:47:15 MST 1");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test6983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6983");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean10 = dateTime4.isEqual(dateTime9);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(100L);
        int int13 = dateTime12.getMs();
        boolean boolean14 = dateTime9.isGreaterThanOrEqual(dateTime12);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(100L);
        int int17 = dateTime16.getMs();
        int int18 = dateTime16.getHour();
        java.text.SimpleDateFormat simpleDateFormat20 = null;
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat20);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double24 = dateTime21.getDeltaYears(dateTime23);
        boolean boolean25 = dateTime21.isWeekday();
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long30 = dateTime21.getDeltaDays(dateTime29);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(dateTime21);
        boolean boolean32 = dateTime16.isLessThanOrEqual(dateTime31);
        boolean boolean33 = net.ajaskey.common.Utils.sameDate(dateTime12, dateTime31);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime(100L);
        int int36 = dateTime35.getMs();
        boolean boolean37 = dateTime35.isWeekday();
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime((long) (short) 0);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime(100L);
        int int42 = dateTime41.getMs();
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime(100L);
        double double49 = dateTime46.getDeltaYears(dateTime48);
        java.text.SimpleDateFormat simpleDateFormat50 = dateTime46.getSdf();
        boolean boolean51 = dateTime41.isLessThanOrEqual(dateTime46);
        java.text.SimpleDateFormat simpleDateFormat53 = null;
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat53);
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double57 = dateTime54.getDeltaYears(dateTime56);
        boolean boolean58 = dateTime54.isWeekday();
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long63 = dateTime54.getDeltaDays(dateTime62);
        long long64 = dateTime41.getDeltaDays(dateTime62);
        net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime(100L);
        dateTime66.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean71 = dateTime66.isWeekday();
        int int72 = dateTime41.getYears(dateTime66);
        int int73 = dateTime41.getYear();
        java.util.Calendar calendar74 = dateTime41.getCal();
        net.ajaskey.common.DateTime dateTime75 = dateTime39.copy(dateTime41);
        boolean boolean76 = dateTime35.isGreaterThan(dateTime41);
        net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime(dateTime35);
        int int78 = dateTime35.getDayOfWeek();
        net.ajaskey.common.DateTime dateTime81 = dateTime35.parse("-716,608.00", "11");
        int int82 = dateTime12.getYears(dateTime81);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-1972.041095890411d) + "'", double49 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 0L + "'", long63 == 0L);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 719795L + "'", long64 == 719795L);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1870) + "'", int72 == (-1870));
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1969 + "'", int73 == 1969);
        org.junit.Assert.assertNotNull(calendar74);
        org.junit.Assert.assertEquals(calendar74.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(dateTime75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 4 + "'", int78 == 4);
        org.junit.Assert.assertNull(dateTime81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
    }

    @Test
    public void test6984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6984");
        java.text.SimpleDateFormat simpleDateFormat2 = null;
        java.text.SimpleDateFormat simpleDateFormat3 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime("January", simpleDateFormat2, simpleDateFormat3);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime("                                                 100", simpleDateFormat3);
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime(100L);
        int int8 = dateTime7.getMs();
        java.lang.String str9 = dateTime7.toString();
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
        int int12 = dateTime11.getMs();
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(100L);
        double double19 = dateTime16.getDeltaYears(dateTime18);
        java.text.SimpleDateFormat simpleDateFormat20 = dateTime16.getSdf();
        boolean boolean21 = dateTime11.isLessThanOrEqual(dateTime16);
        boolean boolean22 = dateTime11.isWeekday();
        java.util.Calendar calendar23 = dateTime11.getCal();
        dateTime7.set(calendar23);
        int int25 = dateTime7.getMs();
        int int26 = dateTime7.getSecond();
        boolean boolean27 = net.ajaskey.common.Utils.sameMonth(dateTime5, dateTime7);
        net.ajaskey.common.DateTime dateTime28 = null;
        double double29 = dateTime5.getDeltaYears(dateTime28);
        org.junit.Assert.assertNotNull(simpleDateFormat3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "31-Dec-1969" + "'", str9, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-1972.041095890411d) + "'", double19 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(calendar23);
        org.junit.Assert.assertEquals(calendar23.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
    }

    @Test
    public void test6985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6985");
        java.lang.String str1 = net.ajaskey.common.Utils.getFromUrl("Wed 12-Apr-0139 10:46:37");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
    }

    @Test
    public void test6986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6986");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        boolean boolean3 = dateTime1.isWeekday();
        int int4 = dateTime1.getHour();
        java.text.SimpleDateFormat simpleDateFormat6 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("January", simpleDateFormat6);
        dateTime1.setSdf(simpleDateFormat6);
        java.lang.String str9 = dateTime1.toFullString();
        java.lang.String str11 = dateTime1.format("   42.00");
        dateTime1.setFirstWorkDay();
        int int13 = dateTime1.getMs();
        net.ajaskey.common.DateTime dateTime16 = dateTime1.parse("       -18,438", "                      -733,554.00");
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(100L);
        boolean boolean19 = dateTime18.isWeekday();
        dateTime18.setFirstWorkDay();
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime("5.00", "     10");
        java.text.SimpleDateFormat simpleDateFormat24 = dateTime23.getSdf();
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean29 = dateTime28.isNull();
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime();
        boolean boolean31 = dateTime28.sameDate(dateTime30);
        dateTime30.set(43, (int) (byte) 1, 12);
        double double36 = dateTime23.getDeltaYears(dateTime30);
        boolean boolean37 = dateTime18.isLessThan(dateTime23);
        int int38 = dateTime23.getMinute();
        java.text.SimpleDateFormat simpleDateFormat44 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat45 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime("", simpleDateFormat44, simpleDateFormat45);
        java.text.SimpleDateFormat simpleDateFormat48 = null;
        java.text.SimpleDateFormat simpleDateFormat49 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime("January", simpleDateFormat48, simpleDateFormat49);
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat44, simpleDateFormat49);
        java.text.SimpleDateFormat simpleDateFormat54 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat55 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime("", simpleDateFormat54, simpleDateFormat55);
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime(100L);
        int int59 = dateTime58.getMs();
        java.text.SimpleDateFormat simpleDateFormat60 = net.ajaskey.common.Utils.sdf;
        dateTime58.setSdf(simpleDateFormat60);
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat55, simpleDateFormat60);
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime("                             100", simpleDateFormat49, simpleDateFormat55);
        java.text.SimpleDateFormat simpleDateFormat66 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat67 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime("", simpleDateFormat66, simpleDateFormat67);
        net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:42:54", simpleDateFormat66);
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime("5.00", simpleDateFormat49, simpleDateFormat66);
        java.text.SimpleDateFormat simpleDateFormat71 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime72 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat49, simpleDateFormat71);
        boolean boolean73 = net.ajaskey.common.Utils.sameDate(dateTime23, dateTime72);
        boolean boolean74 = net.ajaskey.common.Utils.sameDate(dateTime1, dateTime23);
        java.text.SimpleDateFormat simpleDateFormat75 = dateTime23.getSdf();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertNotNull(simpleDateFormat6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str9, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "   42.00" + "'", str11, "   42.00");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        org.junit.Assert.assertNull(dateTime16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(simpleDateFormat24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(simpleDateFormat44);
        org.junit.Assert.assertNotNull(simpleDateFormat45);
        org.junit.Assert.assertNotNull(simpleDateFormat49);
        org.junit.Assert.assertNotNull(simpleDateFormat54);
        org.junit.Assert.assertNotNull(simpleDateFormat55);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 100 + "'", int59 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat60);
        org.junit.Assert.assertNotNull(simpleDateFormat66);
        org.junit.Assert.assertNotNull(simpleDateFormat67);
        org.junit.Assert.assertNotNull(simpleDateFormat71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(simpleDateFormat75);
    }

    @Test
    public void test6987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6987");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean10 = dateTime4.isEqual(dateTime9);
        boolean boolean11 = dateTime4.isNull();
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        dateTime15.set(10, 7, 13);
        boolean boolean20 = dateTime4.isLessThan(dateTime15);
        int int21 = dateTime15.getMinute();
        int int22 = dateTime15.getSecond();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 47 + "'", int21 == 47);
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 15 + "'", int22 == 15);
    }

    @Test
    public void test6988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6988");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        java.text.SimpleDateFormat simpleDateFormat10 = dateTime6.getSdf();
        boolean boolean11 = dateTime1.isLessThanOrEqual(dateTime6);
        int int12 = dateTime1.getMinute();
        int int13 = dateTime1.getMinute();
        java.util.Calendar calendar14 = null;
        dateTime1.set(calendar14);
        java.util.Calendar calendar16 = dateTime1.getCal();
        java.lang.String str18 = dateTime1.format("                                                                                                                                                                                                                                                                                   -733,554.00");
        net.ajaskey.common.DateTime dateTime20 = dateTime1.parse("Thu 10-Apr-0002 10:44:37");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(calendar16);
        org.junit.Assert.assertEquals(calendar16.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "                                                                                                                                                                                                                                                                                   -733,554.00" + "'", str18, "                                                                                                                                                                                                                                                                                   -733,554.00");
        org.junit.Assert.assertNull(dateTime20);
    }

    @Test
    public void test6989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6989");
        java.text.SimpleDateFormat simpleDateFormat10 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat12 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat13 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime("", simpleDateFormat12, simpleDateFormat13);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat10, simpleDateFormat13);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("10-Apr-0002", simpleDateFormat13);
        java.text.SimpleDateFormat simpleDateFormat19 = null;
        java.text.SimpleDateFormat simpleDateFormat20 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("January", simpleDateFormat19, simpleDateFormat20);
        java.text.SimpleDateFormat simpleDateFormat24 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("January", simpleDateFormat24);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime("", simpleDateFormat24);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime("", simpleDateFormat20, simpleDateFormat24);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime("January                                                                                               52.00                                                                                               52.00                                                                                               52.00                                                                                               52.00hi!                                                                                               52.00", simpleDateFormat13, simpleDateFormat24);
        java.text.SimpleDateFormat simpleDateFormat30 = null;
        java.text.SimpleDateFormat simpleDateFormat31 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime("January", simpleDateFormat30, simpleDateFormat31);
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime("December", simpleDateFormat24, simpleDateFormat31);
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:43:00", simpleDateFormat31);
        java.text.SimpleDateFormat simpleDateFormat37 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat38 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime("", simpleDateFormat37, simpleDateFormat38);
        java.text.SimpleDateFormat simpleDateFormat41 = null;
        java.text.SimpleDateFormat simpleDateFormat42 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime("January", simpleDateFormat41, simpleDateFormat42);
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat37, simpleDateFormat42);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime("JanuaryDecemberDecember                                                                                               52.00Decemberhi!December", simpleDateFormat31, simpleDateFormat37);
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime("                                     100.00", simpleDateFormat37);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime("-62,190,310,610,288", simpleDateFormat37);
        java.text.SimpleDateFormat simpleDateFormat51 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat52 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime("", simpleDateFormat51, simpleDateFormat52);
        java.text.SimpleDateFormat simpleDateFormat56 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat57 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime("", simpleDateFormat56, simpleDateFormat57);
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime(100L);
        int int61 = dateTime60.getMs();
        java.text.SimpleDateFormat simpleDateFormat62 = net.ajaskey.common.Utils.sdf;
        dateTime60.setSdf(simpleDateFormat62);
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat57, simpleDateFormat62);
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime("     0", simpleDateFormat52, simpleDateFormat62);
        net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat72 = null;
        java.text.SimpleDateFormat simpleDateFormat73 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime74 = new net.ajaskey.common.DateTime("January", simpleDateFormat72, simpleDateFormat73);
        java.text.SimpleDateFormat simpleDateFormat77 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime78 = new net.ajaskey.common.DateTime("January", simpleDateFormat77);
        net.ajaskey.common.DateTime dateTime79 = new net.ajaskey.common.DateTime("", simpleDateFormat77);
        net.ajaskey.common.DateTime dateTime80 = new net.ajaskey.common.DateTime("", simpleDateFormat73, simpleDateFormat77);
        dateTime69.setSdf(simpleDateFormat73);
        net.ajaskey.common.DateTime dateTime82 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:43:10", simpleDateFormat62, simpleDateFormat73);
        net.ajaskey.common.DateTime dateTime83 = new net.ajaskey.common.DateTime("                                                                                                                                                                                                                                                                                                                                                                                                     -733,554", simpleDateFormat37, simpleDateFormat62);
        net.ajaskey.common.DateTime dateTime84 = new net.ajaskey.common.DateTime("Sat 10-Nov-0042 10:45:00", simpleDateFormat62);
        java.lang.String str86 = dateTime84.format("Thu 10-Apr-0002 10:46:05");
        org.junit.Assert.assertNotNull(simpleDateFormat10);
        org.junit.Assert.assertNotNull(simpleDateFormat12);
        org.junit.Assert.assertNotNull(simpleDateFormat13);
        org.junit.Assert.assertNotNull(simpleDateFormat20);
        org.junit.Assert.assertNotNull(simpleDateFormat24);
        org.junit.Assert.assertNotNull(simpleDateFormat31);
        org.junit.Assert.assertNotNull(simpleDateFormat37);
        org.junit.Assert.assertNotNull(simpleDateFormat38);
        org.junit.Assert.assertNotNull(simpleDateFormat42);
        org.junit.Assert.assertNotNull(simpleDateFormat51);
        org.junit.Assert.assertNotNull(simpleDateFormat52);
        org.junit.Assert.assertNotNull(simpleDateFormat56);
        org.junit.Assert.assertNotNull(simpleDateFormat57);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat62);
        org.junit.Assert.assertNotNull(simpleDateFormat73);
        org.junit.Assert.assertNotNull(simpleDateFormat77);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "BAD-DATE-FORMAT" + "'", str86, "BAD-DATE-FORMAT");
    }

    @Test
    public void test6990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6990");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat5 = null;
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat5);
        boolean boolean7 = net.ajaskey.common.Utils.sameDate(dateTime3, dateTime6);
        java.lang.String str8 = dateTime3.toString();
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime("                                                                                              100", "100");
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(100L);
        int int15 = dateTime14.getMs();
        java.text.SimpleDateFormat simpleDateFormat16 = net.ajaskey.common.Utils.sdf;
        dateTime14.setSdf(simpleDateFormat16);
        java.text.SimpleDateFormat simpleDateFormat18 = net.ajaskey.common.Utils.sdfFull;
        dateTime14.setSdf(simpleDateFormat18);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("Mon 10-Apr-0002 00:00:00", simpleDateFormat18);
        dateTime11.setSdf(simpleDateFormat18);
        dateTime3.setSdf(simpleDateFormat18);
        java.text.SimpleDateFormat simpleDateFormat27 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat29 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat30 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime("", simpleDateFormat29, simpleDateFormat30);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat27, simpleDateFormat30);
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime("10-Apr-0002", simpleDateFormat30);
        java.text.SimpleDateFormat simpleDateFormat36 = null;
        java.text.SimpleDateFormat simpleDateFormat37 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime("January", simpleDateFormat36, simpleDateFormat37);
        java.text.SimpleDateFormat simpleDateFormat41 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime("January", simpleDateFormat41);
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime("", simpleDateFormat41);
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime("", simpleDateFormat37, simpleDateFormat41);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime("January                                                                                               52.00                                                                                               52.00                                                                                               52.00                                                                                               52.00hi!                                                                                               52.00", simpleDateFormat30, simpleDateFormat41);
        java.text.SimpleDateFormat simpleDateFormat51 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat53 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat54 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime("", simpleDateFormat53, simpleDateFormat54);
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat51, simpleDateFormat54);
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime("10-Apr-0002", simpleDateFormat54);
        java.text.SimpleDateFormat simpleDateFormat60 = null;
        java.text.SimpleDateFormat simpleDateFormat61 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime("January", simpleDateFormat60, simpleDateFormat61);
        java.text.SimpleDateFormat simpleDateFormat65 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime("January", simpleDateFormat65);
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime("", simpleDateFormat65);
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime("", simpleDateFormat61, simpleDateFormat65);
        net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime("January                                                                                               52.00                                                                                               52.00                                                                                               52.00                                                                                               52.00hi!                                                                                               52.00", simpleDateFormat54, simpleDateFormat65);
        java.text.SimpleDateFormat simpleDateFormat71 = null;
        java.text.SimpleDateFormat simpleDateFormat72 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime73 = new net.ajaskey.common.DateTime("January", simpleDateFormat71, simpleDateFormat72);
        net.ajaskey.common.DateTime dateTime74 = new net.ajaskey.common.DateTime("December", simpleDateFormat65, simpleDateFormat72);
        java.text.SimpleDateFormat simpleDateFormat77 = null;
        java.text.SimpleDateFormat simpleDateFormat78 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime79 = new net.ajaskey.common.DateTime("January", simpleDateFormat77, simpleDateFormat78);
        net.ajaskey.common.DateTime dateTime80 = new net.ajaskey.common.DateTime("                                                 100", simpleDateFormat78);
        net.ajaskey.common.DateTime dateTime81 = new net.ajaskey.common.DateTime("January     0     0                                                                                               52.00     0hi!     0", simpleDateFormat65, simpleDateFormat78);
        net.ajaskey.common.DateTime dateTime82 = new net.ajaskey.common.DateTime("                                                                                                   0", simpleDateFormat41, simpleDateFormat65);
        dateTime3.setSdf(simpleDateFormat65);
        java.text.SimpleDateFormat simpleDateFormat85 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat87 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat88 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime89 = new net.ajaskey.common.DateTime("", simpleDateFormat87, simpleDateFormat88);
        net.ajaskey.common.DateTime dateTime90 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat85, simpleDateFormat88);
        int int91 = dateTime90.getHour();
        int int92 = dateTime90.getDayOfYear();
        dateTime90.add(15, 4);
        dateTime3.set(dateTime90);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "10-Apr-0002" + "'", str8, "10-Apr-0002");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat16);
        org.junit.Assert.assertNotNull(simpleDateFormat18);
        org.junit.Assert.assertNotNull(simpleDateFormat27);
        org.junit.Assert.assertNotNull(simpleDateFormat29);
        org.junit.Assert.assertNotNull(simpleDateFormat30);
        org.junit.Assert.assertNotNull(simpleDateFormat37);
        org.junit.Assert.assertNotNull(simpleDateFormat41);
        org.junit.Assert.assertNotNull(simpleDateFormat51);
        org.junit.Assert.assertNotNull(simpleDateFormat53);
        org.junit.Assert.assertNotNull(simpleDateFormat54);
        org.junit.Assert.assertNotNull(simpleDateFormat61);
        org.junit.Assert.assertNotNull(simpleDateFormat65);
        org.junit.Assert.assertNotNull(simpleDateFormat72);
        org.junit.Assert.assertNotNull(simpleDateFormat78);
        org.junit.Assert.assertNotNull(simpleDateFormat85);
        org.junit.Assert.assertNotNull(simpleDateFormat87);
        org.junit.Assert.assertNotNull(simpleDateFormat88);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
    }

    @Test
    public void test6991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6991");
        java.util.zip.ZipOutputStream zipOutputStream1 = null;
        // The following exception was thrown during execution in test generation
        try {
            net.ajaskey.common.Utils.writeToZipFile("Thu 10-Apr-0002 10:45:37", zipOutputStream1);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: Thu 10-Apr-0002 10:45:37 (The filename, directory name, or volume label syntax is incorrect)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
    }

    @Test
    public void test6992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6992");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        java.text.SimpleDateFormat simpleDateFormat10 = dateTime6.getSdf();
        boolean boolean11 = dateTime1.isLessThanOrEqual(dateTime6);
        boolean boolean12 = dateTime1.isWeekday();
        java.util.Calendar calendar13 = dateTime1.getCal();
        java.lang.String str14 = dateTime1.format();
        java.text.SimpleDateFormat simpleDateFormat16 = null;
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
        dateTime17.set((int) ' ', 0, 11);
        boolean boolean22 = dateTime17.isWeekday();
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime(100L);
        int int25 = dateTime24.getMs();
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(100L);
        double double32 = dateTime29.getDeltaYears(dateTime31);
        java.text.SimpleDateFormat simpleDateFormat33 = dateTime29.getSdf();
        boolean boolean34 = dateTime24.isLessThanOrEqual(dateTime29);
        java.util.Date date35 = dateTime29.getTime();
        dateTime17.set(date35);
        java.lang.String str38 = dateTime17.format("                                                                                                   0");
        boolean boolean39 = net.ajaskey.common.Utils.sameDate(dateTime1, dateTime17);
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime(3, 0, 10);
        int int44 = dateTime43.getSecond();
        java.util.Date date45 = dateTime43.getTime();
        boolean boolean46 = dateTime17.isLessThanOrEqual(dateTime43);
        java.lang.String str48 = dateTime43.format("          264");
        int int49 = dateTime43.getMs();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(calendar13);
        org.junit.Assert.assertEquals(calendar13.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "BAD-DATE-FORMAT" + "'", str14, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-1972.041095890411d) + "'", double32 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(date35);
// flaky:         org.junit.Assert.assertEquals(date35.toString(), "Thu Apr 10 10:47:15 MST 2");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "                                                                                                   0" + "'", str38, "                                                                                                   0");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int44 + "' != '" + 15 + "'", int44 == 15);
        org.junit.Assert.assertNotNull(date45);
// flaky:         org.junit.Assert.assertEquals(date45.toString(), "Wed Jan 10 10:47:15 MST 3");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "          264" + "'", str48, "          264");
// flaky:         org.junit.Assert.assertTrue("'" + int49 + "' != '" + 907 + "'", int49 == 907);
    }

    @Test
    public void test6993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6993");
        java.lang.String str2 = net.ajaskey.common.Utils.ifmt((int) (short) 10, 221);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                                                                                                                                                                                                           10" + "'", str2, "                                                                                                                                                                                                                           10");
    }

    @Test
    public void test6994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6994");
        // The following exception was thrown during execution in test generation
        try {
            net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:44:19", "Thu 10-Apr-0002 10:42:57");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal pattern character 'T'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test6995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6995");
        java.lang.String str2 = net.ajaskey.common.Utils.ifmt(933, (int) '4');
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                                 933" + "'", str2, "                                                 933");
    }

    @Test
    public void test6996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6996");
        java.lang.String str1 = net.ajaskey.common.Utils.getFromUrl("                                                                                                                                                                                                                                                       1,924");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
    }

    @Test
    public void test6997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6997");
        java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readGzipFile("Thu 10-Apr-0002 10:46:14", true);
        org.junit.Assert.assertNull(strList2);
    }

    @Test
    public void test6998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6998");
        java.text.SimpleDateFormat simpleDateFormat6 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat8 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat9 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("", simpleDateFormat8, simpleDateFormat9);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat6, simpleDateFormat9);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime("10-Apr-0002", simpleDateFormat9);
        java.text.SimpleDateFormat simpleDateFormat15 = null;
        java.text.SimpleDateFormat simpleDateFormat16 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("January", simpleDateFormat15, simpleDateFormat16);
        java.text.SimpleDateFormat simpleDateFormat20 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("January", simpleDateFormat20);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime("", simpleDateFormat20);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime("", simpleDateFormat16, simpleDateFormat20);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("January                                                                                               52.00                                                                                               52.00                                                                                               52.00                                                                                               52.00hi!                                                                                               52.00", simpleDateFormat9, simpleDateFormat20);
        java.text.SimpleDateFormat simpleDateFormat26 = null;
        java.text.SimpleDateFormat simpleDateFormat27 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime("January", simpleDateFormat26, simpleDateFormat27);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime("December", simpleDateFormat20, simpleDateFormat27);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:43:00", simpleDateFormat27);
        java.text.SimpleDateFormat simpleDateFormat33 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat34 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("", simpleDateFormat33, simpleDateFormat34);
        java.text.SimpleDateFormat simpleDateFormat37 = null;
        java.text.SimpleDateFormat simpleDateFormat38 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime("January", simpleDateFormat37, simpleDateFormat38);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat33, simpleDateFormat38);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime("JanuaryDecemberDecember                                                                                               52.00Decemberhi!December", simpleDateFormat27, simpleDateFormat33);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime(100L);
        double double48 = dateTime45.getDeltaYears(dateTime47);
        boolean boolean49 = dateTime47.isWeekday();
        java.util.Date date50 = dateTime47.getTime();
        int int51 = dateTime47.getDayOfWeek();
        java.lang.String str52 = dateTime47.toFullString();
        boolean boolean53 = dateTime47.isWeekday();
        int int54 = dateTime47.getMs();
        long long55 = dateTime41.getDeltaMilliSeconds(dateTime47);
        int int56 = dateTime41.getDayOfWeek();
        java.lang.String str57 = dateTime41.getDay();
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime("", "");
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:43:36", "                                                                                               52.00");
        long long64 = dateTime60.getDeltaMilliSeconds(dateTime63);
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime(13, (-1870), 1869);
        boolean boolean69 = net.ajaskey.common.Utils.sameMonth(dateTime63, dateTime68);
        net.ajaskey.common.DateTime dateTime73 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime75 = new net.ajaskey.common.DateTime(100L);
        double double76 = dateTime73.getDeltaYears(dateTime75);
        int int77 = dateTime73.getHour();
        net.ajaskey.common.DateTime dateTime78 = new net.ajaskey.common.DateTime();
        net.ajaskey.common.DateTime dateTime79 = null;
        boolean boolean80 = dateTime78.isGreaterThan(dateTime79);
        java.text.SimpleDateFormat simpleDateFormat82 = null;
        net.ajaskey.common.DateTime dateTime83 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat82);
        net.ajaskey.common.DateTime dateTime85 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double86 = dateTime83.getDeltaYears(dateTime85);
        net.ajaskey.common.DateTime dateTime90 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean91 = dateTime85.isEqual(dateTime90);
        java.util.Calendar calendar92 = dateTime85.getCal();
        net.ajaskey.common.DateTime dateTime93 = new net.ajaskey.common.DateTime(calendar92);
        net.ajaskey.common.DateTime dateTime94 = new net.ajaskey.common.DateTime(calendar92);
        boolean boolean95 = dateTime78.isLessThan(dateTime94);
        boolean boolean96 = dateTime73.isLessThan(dateTime78);
        int int97 = dateTime68.getYears(dateTime78);
        boolean boolean98 = dateTime41.sameDate(dateTime78);
        org.junit.Assert.assertNotNull(simpleDateFormat6);
        org.junit.Assert.assertNotNull(simpleDateFormat8);
        org.junit.Assert.assertNotNull(simpleDateFormat9);
        org.junit.Assert.assertNotNull(simpleDateFormat16);
        org.junit.Assert.assertNotNull(simpleDateFormat20);
        org.junit.Assert.assertNotNull(simpleDateFormat27);
        org.junit.Assert.assertNotNull(simpleDateFormat33);
        org.junit.Assert.assertNotNull(simpleDateFormat34);
        org.junit.Assert.assertNotNull(simpleDateFormat38);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + (-1972.041095890411d) + "'", double48 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(date50);
        org.junit.Assert.assertEquals(date50.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 4 + "'", int51 == 4);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str52, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 100 + "'", int54 == 100);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 0L + "'", long55 == 0L);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "UNKNOWN" + "'", str57, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 0L + "'", long64 == 0L);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-1972.041095890411d) + "'", double76 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 10 + "'", int77 == 10);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(calendar92);
        org.junit.Assert.assertEquals(calendar92.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 1881 + "'", int97 == 1881);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test6999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test6999");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) 45);
        net.ajaskey.common.DateTime dateTime2 = null;
        boolean boolean3 = dateTime1.isLessThan(dateTime2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test7000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests13.test7000");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        java.lang.String str3 = dateTime1.toString();
        java.lang.String str5 = dateTime1.format("         1");
        dateTime1.setFirstWorkDay();
        net.ajaskey.common.DateTime dateTime9 = dateTime1.parse("", "Thu 10-Apr-0002 10:42:54");
        // The following exception was thrown during execution in test generation
        try {
            net.ajaskey.common.DateTime dateTime12 = dateTime9.parse("August", "Fri 01-Jul-0001 10:46:16");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "31-Dec-1969" + "'", str3, "31-Dec-1969");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "         1" + "'", str5, "         1");
        org.junit.Assert.assertNull(dateTime9);
    }
}
