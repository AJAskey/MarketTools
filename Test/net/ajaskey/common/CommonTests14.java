package net.ajaskey.common;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class CommonTests14 {

    public static boolean debug = false;

    @Test
    public void test7001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7001");
        net.ajaskey.common.Utils.makeDir("Thu 10-Apr-0002 10:46:22");
    }

    @Test
    public void test7002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7002");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(13, (-1870), 1869);
        int int4 = dateTime3.getHour();
        java.text.SimpleDateFormat simpleDateFormat5 = dateTime3.getSdf();
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
        double double12 = dateTime9.getDeltaYears(dateTime11);
        int int13 = dateTime9.getHour();
        java.util.Calendar calendar14 = dateTime9.getCal();
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(calendar14);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean20 = dateTime19.isNull();
        boolean boolean21 = net.ajaskey.common.Utils.sameDate(dateTime15, dateTime19);
        java.text.SimpleDateFormat simpleDateFormat23 = null;
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat23);
        dateTime24.set((int) ' ', 0, 11);
        boolean boolean29 = dateTime24.isWeekday();
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(100L);
        int int32 = dateTime31.getMs();
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime(100L);
        double double39 = dateTime36.getDeltaYears(dateTime38);
        java.text.SimpleDateFormat simpleDateFormat40 = dateTime36.getSdf();
        boolean boolean41 = dateTime31.isLessThanOrEqual(dateTime36);
        java.util.Date date42 = dateTime36.getTime();
        dateTime24.set(date42);
        long long44 = dateTime19.getDeltaMilliSeconds(dateTime24);
        boolean boolean45 = dateTime3.isLessThan(dateTime19);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 10 + "'", int4 == 10);
        org.junit.Assert.assertNull(simpleDateFormat5);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1972.041095890411d) + "'", double12 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10 + "'", int13 == 10);
        org.junit.Assert.assertNotNull(calendar14);
// flaky:         org.junit.Assert.assertEquals(calendar14.toString(), "java.util.GregorianCalendar[time=-62190310363942,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=16,MILLISECOND=58,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-1972.041095890411d) + "'", double39 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(date42);
// flaky:         org.junit.Assert.assertEquals(date42.toString(), "Thu Apr 10 10:47:16 MST 2");
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test7003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7003");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        int int7 = dateTime3.getHour();
        int int8 = dateTime3.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(100L);
        double double15 = dateTime12.getDeltaYears(dateTime14);
        boolean boolean16 = dateTime14.isWeekday();
        boolean boolean17 = net.ajaskey.common.Utils.sameDate(dateTime3, dateTime14);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(100L);
        dateTime19.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(100L);
        double double30 = dateTime27.getDeltaYears(dateTime29);
        boolean boolean31 = dateTime29.isWeekday();
        java.util.Date date32 = dateTime29.getTime();
        dateTime19.set(dateTime29);
        int int34 = dateTime19.getYear();
        boolean boolean35 = dateTime14.isGreaterThanOrEqual(dateTime19);
        int int36 = dateTime19.getSecond();
        int int37 = dateTime19.getHour();
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.lang.String str42 = dateTime41.toFullString();
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime((long) 8);
        int int45 = dateTime41.getYears(dateTime44);
        boolean boolean46 = dateTime19.isGreaterThan(dateTime41);
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime(46, 182, 515);
        long long51 = dateTime19.getDeltaDays(dateTime50);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10 + "'", int8 == 10);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-1972.041095890411d) + "'", double15 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-1972.041095890411d) + "'", double30 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(date32);
        org.junit.Assert.assertEquals(date32.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1969 + "'", int34 == 1969);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 5 + "'", int37 == 5);
// flaky:         org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Thu 10-Apr-0002 10:47:16" + "'", str42, "Thu 10-Apr-0002 10:47:16");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1967 + "'", int45 == 1967);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 696675L + "'", long51 == 696675L);
    }

    @Test
    public void test7004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7004");
        java.util.zip.ZipOutputStream zipOutputStream1 = null;
        // The following exception was thrown during execution in test generation
        try {
            net.ajaskey.common.Utils.writeToZipFile("        10.00", zipOutputStream1);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:         10.00 (Access is denied)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
    }

    @Test
    public void test7005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7005");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) 50);
        net.ajaskey.common.DateTime dateTime2 = null;
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) 821);
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((long) (short) 0);
        int int7 = dateTime6.getHour();
        net.ajaskey.common.DateTime dateTime10 = dateTime6.parse("                0", "January                                 42                                 42                                                                                               52.00                                 42hi!                                 42");
        java.lang.String str11 = dateTime6.toString();
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(100L);
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(100L);
        double double20 = dateTime17.getDeltaYears(dateTime19);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(100L);
        double double27 = dateTime24.getDeltaYears(dateTime26);
        int int28 = dateTime24.getHour();
        int int29 = dateTime24.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime(100L);
        double double36 = dateTime33.getDeltaYears(dateTime35);
        boolean boolean37 = dateTime35.isWeekday();
        boolean boolean38 = net.ajaskey.common.Utils.sameDate(dateTime24, dateTime35);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime(100L);
        dateTime40.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime(100L);
        double double51 = dateTime48.getDeltaYears(dateTime50);
        boolean boolean52 = dateTime50.isWeekday();
        java.util.Date date53 = dateTime50.getTime();
        dateTime40.set(dateTime50);
        int int55 = dateTime40.getYear();
        boolean boolean56 = dateTime35.isGreaterThanOrEqual(dateTime40);
        boolean boolean57 = dateTime17.sameDate(dateTime35);
        net.ajaskey.common.DateTime dateTime58 = dateTime13.copy(dateTime17);
        java.util.Date date59 = null;
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime(date59);
        net.ajaskey.common.DateTime dateTime62 = dateTime60.parse("Thu 10-Apr-0002 10:42:58");
        boolean boolean63 = dateTime17.isGreaterThan(dateTime60);
        boolean boolean64 = dateTime6.sameDate(dateTime17);
        boolean boolean65 = dateTime4.isGreaterThanOrEqual(dateTime17);
        boolean boolean66 = net.ajaskey.common.Utils.sameMonth(dateTime2, dateTime4);
        double double67 = dateTime1.getDeltaYears(dateTime4);
        java.lang.String str68 = dateTime1.getDay();
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 5 + "'", int7 == 5);
        org.junit.Assert.assertNull(dateTime10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "31-Dec-1969" + "'", str11, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-1972.041095890411d) + "'", double20 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-1972.041095890411d) + "'", double27 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 10 + "'", int28 == 10);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 10 + "'", int29 == 10);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-1972.041095890411d) + "'", double36 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-1972.041095890411d) + "'", double51 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(date53);
        org.junit.Assert.assertEquals(date53.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1969 + "'", int55 == 1969);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(dateTime58);
        org.junit.Assert.assertNull(dateTime62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Wednesday" + "'", str68, "Wednesday");
    }

    @Test
    public void test7006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7006");
        net.ajaskey.common.TextUtils.printline("Thu 10-Apr-0002 10:45:35");
    }

    @Test
    public void test7007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7007");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) 1);
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(100L);
        int int4 = dateTime3.getMs();
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime(100L);
        double double11 = dateTime8.getDeltaYears(dateTime10);
        java.text.SimpleDateFormat simpleDateFormat12 = dateTime8.getSdf();
        boolean boolean13 = dateTime3.isLessThanOrEqual(dateTime8);
        java.text.SimpleDateFormat simpleDateFormat15 = null;
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat15);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double19 = dateTime16.getDeltaYears(dateTime18);
        boolean boolean20 = dateTime16.isWeekday();
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long25 = dateTime16.getDeltaDays(dateTime24);
        long long26 = dateTime3.getDeltaDays(dateTime24);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(100L);
        dateTime28.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean33 = dateTime28.isWeekday();
        int int34 = dateTime3.getYears(dateTime28);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime(100L);
        double double41 = dateTime38.getDeltaYears(dateTime40);
        int int42 = dateTime38.getHour();
        java.text.SimpleDateFormat simpleDateFormat44 = null;
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat44);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double48 = dateTime45.getDeltaYears(dateTime47);
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean53 = dateTime47.isEqual(dateTime52);
        java.util.Calendar calendar54 = dateTime47.getCal();
        dateTime38.set(calendar54);
        dateTime3.set(calendar54);
        dateTime3.set(0, (int) (short) 0, 2);
        long long61 = dateTime1.getDeltaDays(dateTime3);
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime(100L);
        int int64 = dateTime63.getMs();
        java.lang.String str65 = dateTime63.toString();
        java.text.SimpleDateFormat simpleDateFormat67 = null;
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat67);
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double71 = dateTime68.getDeltaYears(dateTime70);
        boolean boolean72 = dateTime68.isWeekday();
        net.ajaskey.common.DateTime dateTime76 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long77 = dateTime68.getDeltaDays(dateTime76);
        net.ajaskey.common.DateTime dateTime78 = new net.ajaskey.common.DateTime(dateTime68);
        net.ajaskey.common.DateTime dateTime82 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime84 = new net.ajaskey.common.DateTime(100L);
        double double85 = dateTime82.getDeltaYears(dateTime84);
        boolean boolean86 = dateTime84.isWeekday();
        java.util.Date date87 = dateTime84.getTime();
        dateTime68.set(date87);
        net.ajaskey.common.DateTime dateTime90 = new net.ajaskey.common.DateTime(100L);
        int int91 = dateTime90.getMs();
        java.lang.String str92 = dateTime90.toString();
        boolean boolean93 = dateTime68.isLessThanOrEqual(dateTime90);
        boolean boolean94 = dateTime63.isLessThanOrEqual(dateTime90);
        int int95 = dateTime63.getYear();
        java.lang.String str96 = dateTime63.format();
        boolean boolean97 = dateTime1.isGreaterThanOrEqual(dateTime63);
        int int98 = dateTime63.getMinute();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + (-1972.041095890411d) + "'", double11 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 719795L + "'", long26 == 719795L);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1870) + "'", int34 == (-1870));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-1972.041095890411d) + "'", double41 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10 + "'", int42 == 10);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(calendar54);
        org.junit.Assert.assertEquals(calendar54.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 719528L + "'", long61 == 719528L);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 100 + "'", int64 == 100);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "31-Dec-1969" + "'", str65, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 0L + "'", long77 == 0L);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + (-1972.041095890411d) + "'", double85 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(date87);
        org.junit.Assert.assertEquals(date87.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 100 + "'", int91 == 100);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "31-Dec-1969" + "'", str92, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 1969 + "'", int95 == 1969);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "31-Dec-1969" + "'", str96, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 0 + "'", int98 == 0);
    }

    @Test
    public void test7008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7008");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        int int7 = dateTime3.getHour();
        java.text.SimpleDateFormat simpleDateFormat9 = null;
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat9);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double13 = dateTime10.getDeltaYears(dateTime12);
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean18 = dateTime12.isEqual(dateTime17);
        java.util.Calendar calendar19 = dateTime12.getCal();
        dateTime3.set(calendar19);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(calendar19);
        dateTime21.add(14, 2020);
        dateTime21.setFirstWorkDay();
        int int26 = dateTime21.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime29 = dateTime21.parse("             -62,190,310,593,948", "Thu 10-Apr-0002 10:43:17");
        net.ajaskey.common.DateTime dateTime30 = null;
        int int31 = dateTime21.getYears(dateTime30);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(calendar19);
        org.junit.Assert.assertEquals(calendar19.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 31 + "'", int26 == 31);
        org.junit.Assert.assertNull(dateTime29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
    }

    @Test
    public void test7009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7009");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        java.text.SimpleDateFormat simpleDateFormat8 = null;
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double12 = dateTime9.getDeltaYears(dateTime11);
        boolean boolean13 = dateTime9.isWeekday();
        boolean boolean14 = dateTime3.sameDate(dateTime9);
        java.text.SimpleDateFormat simpleDateFormat16 = null;
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double20 = dateTime17.getDeltaYears(dateTime19);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean25 = dateTime19.isEqual(dateTime24);
        dateTime3.set(dateTime24);
        java.text.SimpleDateFormat simpleDateFormat28 = null;
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat28);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double32 = dateTime29.getDeltaYears(dateTime31);
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime(dateTime29);
        dateTime33.add((int) '#', (int) (short) 0);
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime(100L);
        int int40 = dateTime39.getMs();
        java.text.SimpleDateFormat simpleDateFormat41 = net.ajaskey.common.Utils.sdf;
        dateTime39.setSdf(simpleDateFormat41);
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat41);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime((long) 53);
        boolean boolean46 = dateTime45.isWeekday();
        boolean boolean47 = dateTime43.sameDate(dateTime45);
        java.util.Date date48 = dateTime45.getTime();
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime(date48);
        dateTime33.set(date48);
        long long51 = dateTime3.getDeltaDays(dateTime33);
        java.lang.Class<?> wildcardClass52 = dateTime33.getClass();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(date48);
        org.junit.Assert.assertEquals(date48.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-719795L) + "'", long51 == (-719795L));
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test7010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7010");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean10 = dateTime4.isEqual(dateTime9);
        java.util.Calendar calendar11 = dateTime4.getCal();
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(1, (int) '4', 5);
        double double16 = dateTime4.getDeltaYears(dateTime15);
        int int17 = dateTime4.getDayOfMonth();
        java.text.SimpleDateFormat simpleDateFormat21 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat22 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime("", simpleDateFormat21, simpleDateFormat22);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:42:54", simpleDateFormat21);
        java.text.SimpleDateFormat simpleDateFormat28 = null;
        java.text.SimpleDateFormat simpleDateFormat29 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime("January", simpleDateFormat28, simpleDateFormat29);
        java.text.SimpleDateFormat simpleDateFormat33 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime("January", simpleDateFormat33);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("", simpleDateFormat33);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime("", simpleDateFormat29, simpleDateFormat33);
        java.text.SimpleDateFormat simpleDateFormat41 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat43 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat44 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime("", simpleDateFormat43, simpleDateFormat44);
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat41, simpleDateFormat44);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime("10-Apr-0002", simpleDateFormat44);
        java.text.SimpleDateFormat simpleDateFormat50 = null;
        java.text.SimpleDateFormat simpleDateFormat51 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime("January", simpleDateFormat50, simpleDateFormat51);
        java.text.SimpleDateFormat simpleDateFormat55 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime("January", simpleDateFormat55);
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime("", simpleDateFormat55);
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime("", simpleDateFormat51, simpleDateFormat55);
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime("January                                                                                               52.00                                                                                               52.00                                                                                               52.00                                                                                               52.00hi!                                                                                               52.00", simpleDateFormat44, simpleDateFormat55);
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime(100L);
        double double66 = dateTime63.getDeltaYears(dateTime65);
        int int67 = dateTime63.getHour();
        dateTime63.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat72 = null;
        net.ajaskey.common.DateTime dateTime73 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat72);
        net.ajaskey.common.DateTime dateTime75 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double76 = dateTime73.getDeltaYears(dateTime75);
        boolean boolean77 = dateTime63.isEqual(dateTime75);
        java.text.SimpleDateFormat simpleDateFormat79 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat81 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat82 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime83 = new net.ajaskey.common.DateTime("", simpleDateFormat81, simpleDateFormat82);
        net.ajaskey.common.DateTime dateTime84 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat79, simpleDateFormat82);
        dateTime63.setSdf(simpleDateFormat79);
        net.ajaskey.common.DateTime dateTime86 = new net.ajaskey.common.DateTime("", simpleDateFormat44, simpleDateFormat79);
        net.ajaskey.common.DateTime dateTime87 = new net.ajaskey.common.DateTime("   8.00", simpleDateFormat29, simpleDateFormat44);
        net.ajaskey.common.DateTime dateTime88 = new net.ajaskey.common.DateTime("JanuaryBAD-DATE-FORMATBAD-DATE-FORMAT                                                                                               52.00BAD-DATE-FORMAThi!BAD-DATE-FORMAT", simpleDateFormat21, simpleDateFormat44);
        net.ajaskey.common.DateTime dateTime89 = null;
        boolean boolean90 = dateTime88.isEqual(dateTime89);
        boolean boolean91 = dateTime4.isGreaterThanOrEqual(dateTime89);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(calendar11);
        org.junit.Assert.assertEquals(calendar11.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1965.9671232876713d + "'", double16 == 1965.9671232876713d);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 31 + "'", int17 == 31);
        org.junit.Assert.assertNotNull(simpleDateFormat21);
        org.junit.Assert.assertNotNull(simpleDateFormat22);
        org.junit.Assert.assertNotNull(simpleDateFormat29);
        org.junit.Assert.assertNotNull(simpleDateFormat33);
        org.junit.Assert.assertNotNull(simpleDateFormat41);
        org.junit.Assert.assertNotNull(simpleDateFormat43);
        org.junit.Assert.assertNotNull(simpleDateFormat44);
        org.junit.Assert.assertNotNull(simpleDateFormat51);
        org.junit.Assert.assertNotNull(simpleDateFormat55);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-1972.041095890411d) + "'", double66 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 10 + "'", int67 == 10);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(simpleDateFormat79);
        org.junit.Assert.assertNotNull(simpleDateFormat81);
        org.junit.Assert.assertNotNull(simpleDateFormat82);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test7011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7011");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        dateTime1.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
        double double12 = dateTime9.getDeltaYears(dateTime11);
        boolean boolean13 = dateTime11.isWeekday();
        java.util.Date date14 = dateTime11.getTime();
        dateTime1.set(dateTime11);
        int int16 = dateTime1.getYear();
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(100L);
        double double23 = dateTime20.getDeltaYears(dateTime22);
        int int24 = dateTime20.getHour();
        java.util.Calendar calendar25 = dateTime20.getCal();
        boolean boolean26 = dateTime1.isGreaterThan(dateTime20);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(100L);
        int int30 = dateTime29.getMs();
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime(100L);
        double double37 = dateTime34.getDeltaYears(dateTime36);
        java.text.SimpleDateFormat simpleDateFormat38 = dateTime34.getSdf();
        boolean boolean39 = dateTime29.isLessThanOrEqual(dateTime34);
        int int40 = dateTime29.getMinute();
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime(100L);
        double double47 = dateTime44.getDeltaYears(dateTime46);
        int int48 = dateTime44.getHour();
        dateTime44.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat53 = null;
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat53);
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double57 = dateTime54.getDeltaYears(dateTime56);
        boolean boolean58 = dateTime44.isEqual(dateTime56);
        java.text.SimpleDateFormat simpleDateFormat60 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat62 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat63 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime("", simpleDateFormat62, simpleDateFormat63);
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat60, simpleDateFormat63);
        dateTime44.setSdf(simpleDateFormat60);
        dateTime29.setSdf(simpleDateFormat60);
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime("                                                                                                                                                                                                                                                       -68", simpleDateFormat60);
        boolean boolean69 = dateTime20.isGreaterThan(dateTime68);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1972.041095890411d) + "'", double12 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(date14);
        org.junit.Assert.assertEquals(date14.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1969 + "'", int16 == 1969);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-1972.041095890411d) + "'", double23 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertNotNull(calendar25);
// flaky:         org.junit.Assert.assertEquals(calendar25.toString(), "java.util.GregorianCalendar[time=-62190310363782,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=16,MILLISECOND=218,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-1972.041095890411d) + "'", double37 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-1972.041095890411d) + "'", double47 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 10 + "'", int48 == 10);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(simpleDateFormat60);
        org.junit.Assert.assertNotNull(simpleDateFormat62);
        org.junit.Assert.assertNotNull(simpleDateFormat63);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test7012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7012");
        java.util.Date date0 = null;
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(date0);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime(100L);
        double double8 = dateTime5.getDeltaYears(dateTime7);
        int int9 = dateTime5.getHour();
        java.text.SimpleDateFormat simpleDateFormat11 = null;
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat11);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double15 = dateTime12.getDeltaYears(dateTime14);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean20 = dateTime14.isEqual(dateTime19);
        java.util.Calendar calendar21 = dateTime14.getCal();
        dateTime5.set(calendar21);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime(calendar21);
        net.ajaskey.common.DateTime dateTime24 = dateTime1.copy(dateTime23);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime(100L);
        double double31 = dateTime28.getDeltaYears(dateTime30);
        boolean boolean32 = dateTime30.isWeekday();
        int int33 = dateTime30.getDayOfYear();
        long long34 = dateTime24.getDeltaMilliSeconds(dateTime30);
        java.util.Calendar calendar35 = dateTime24.getCal();
        java.util.Date date36 = dateTime24.getTime();
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(date36);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime(date36);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime(345, 31, 31);
        java.lang.String str43 = dateTime42.getDay();
        boolean boolean44 = dateTime38.sameDate(dateTime42);
        dateTime42.add(1622, 252);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-1972.041095890411d) + "'", double8 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(calendar21);
        org.junit.Assert.assertEquals(calendar21.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(dateTime24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-1972.041095890411d) + "'", double31 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 365 + "'", int33 == 365);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 100L + "'", long34 == 100L);
        org.junit.Assert.assertNotNull(calendar35);
        org.junit.Assert.assertEquals(calendar35.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(date36);
        org.junit.Assert.assertEquals(date36.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Monday" + "'", str43, "Monday");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test7013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7013");
        java.text.SimpleDateFormat simpleDateFormat1 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat2 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime("", simpleDateFormat1, simpleDateFormat2);
        int int4 = dateTime3.getHour();
        dateTime3.setFirstWorkDay();
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) 'a', 1869, (int) (byte) 0);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(100L);
        double double16 = dateTime13.getDeltaYears(dateTime15);
        java.util.Date date17 = dateTime13.getTime();
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(date17);
        net.ajaskey.common.DateTime dateTime21 = dateTime18.parse("31-Dec-1969", "January");
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime(100L);
        int int24 = dateTime23.getMs();
        java.lang.String str25 = dateTime23.toString();
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(100L);
        double double32 = dateTime29.getDeltaYears(dateTime31);
        int int33 = dateTime29.getHour();
        int int34 = dateTime29.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime(100L);
        double double41 = dateTime38.getDeltaYears(dateTime40);
        boolean boolean42 = dateTime40.isWeekday();
        boolean boolean43 = net.ajaskey.common.Utils.sameDate(dateTime29, dateTime40);
        boolean boolean44 = net.ajaskey.common.Utils.sameDate(dateTime23, dateTime29);
        dateTime18.set(dateTime29);
        java.util.Calendar calendar46 = dateTime29.getCal();
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime(calendar46);
        boolean boolean48 = dateTime9.sameDate(dateTime47);
        java.text.SimpleDateFormat simpleDateFormat50 = null;
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat50);
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double54 = dateTime51.getDeltaYears(dateTime53);
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean59 = dateTime53.isEqual(dateTime58);
        java.util.Calendar calendar60 = dateTime53.getCal();
        java.lang.String str61 = dateTime53.format();
        net.ajaskey.common.DateTime dateTime62 = null;
        long long63 = dateTime53.getDeltaDays(dateTime62);
        int int64 = dateTime53.getSecond();
        net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime(100L);
        int int67 = dateTime66.getMs();
        boolean boolean68 = dateTime66.isNull();
        java.util.Calendar calendar69 = dateTime66.getCal();
        dateTime53.set(calendar69);
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime(calendar69);
        dateTime47.set(calendar69);
        java.lang.String str73 = dateTime47.toFullString();
        net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime79 = new net.ajaskey.common.DateTime(100L);
        double double80 = dateTime77.getDeltaYears(dateTime79);
        int int81 = dateTime77.getHour();
        int int82 = dateTime77.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime86 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime88 = new net.ajaskey.common.DateTime(100L);
        double double89 = dateTime86.getDeltaYears(dateTime88);
        boolean boolean90 = dateTime88.isWeekday();
        boolean boolean91 = net.ajaskey.common.Utils.sameDate(dateTime77, dateTime88);
        boolean boolean92 = net.ajaskey.common.Utils.sameMonth(dateTime47, dateTime77);
        java.lang.String str93 = dateTime47.toString();
        dateTime47.setFirstWorkDay();
        net.ajaskey.common.DateTime dateTime95 = dateTime3.copy(dateTime47);
        org.junit.Assert.assertNotNull(simpleDateFormat1);
        org.junit.Assert.assertNotNull(simpleDateFormat2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-1972.041095890411d) + "'", double16 == (-1972.041095890411d));
        org.junit.Assert.assertNotNull(date17);
// flaky:         org.junit.Assert.assertEquals(date17.toString(), "Thu Apr 10 10:47:16 MST 2");
        org.junit.Assert.assertNull(dateTime21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "31-Dec-1969" + "'", str25, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-1972.041095890411d) + "'", double32 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 10 + "'", int33 == 10);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 10 + "'", int34 == 10);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-1972.041095890411d) + "'", double41 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(calendar46);
// flaky:         org.junit.Assert.assertEquals(calendar46.toString(), "java.util.GregorianCalendar[time=-62190310363741,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=16,MILLISECOND=259,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(calendar60);
        org.junit.Assert.assertEquals(calendar60.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "BAD-DATE-FORMAT" + "'", str61, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 0L + "'", long63 == 0L);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 100 + "'", int67 == 100);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(calendar69);
        org.junit.Assert.assertEquals(calendar69.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str73, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + (-1972.041095890411d) + "'", double80 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 10 + "'", int81 == 10);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 10 + "'", int82 == 10);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + (-1972.041095890411d) + "'", double89 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "31-Dec-1969" + "'", str93, "31-Dec-1969");
        org.junit.Assert.assertNotNull(dateTime95);
    }

    @Test
    public void test7014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7014");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        java.lang.String str3 = dateTime1.toString();
        int int4 = dateTime1.getDayOfYear();
        java.text.SimpleDateFormat simpleDateFormat6 = null;
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat6);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double10 = dateTime7.getDeltaYears(dateTime9);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean15 = dateTime9.isEqual(dateTime14);
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(100L);
        int int18 = dateTime17.getMs();
        boolean boolean19 = dateTime14.isGreaterThanOrEqual(dateTime17);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(100L);
        dateTime21.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(100L);
        double double32 = dateTime29.getDeltaYears(dateTime31);
        boolean boolean33 = dateTime31.isWeekday();
        java.util.Date date34 = dateTime31.getTime();
        dateTime21.set(dateTime31);
        boolean boolean36 = net.ajaskey.common.Utils.sameDate(dateTime14, dateTime21);
        dateTime14.add((int) '#', 6);
        boolean boolean40 = dateTime1.sameDate(dateTime14);
        java.text.SimpleDateFormat simpleDateFormat42 = null;
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat42);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double46 = dateTime43.getDeltaYears(dateTime45);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime(dateTime43);
        boolean boolean48 = dateTime14.sameDate(dateTime47);
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime(100L);
        double double55 = dateTime52.getDeltaYears(dateTime54);
        java.text.SimpleDateFormat simpleDateFormat57 = null;
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat57);
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double61 = dateTime58.getDeltaYears(dateTime60);
        boolean boolean62 = dateTime58.isWeekday();
        boolean boolean63 = dateTime52.sameDate(dateTime58);
        int int64 = dateTime52.getSecond();
        boolean boolean65 = net.ajaskey.common.Utils.sameDate(dateTime47, dateTime52);
        java.text.SimpleDateFormat simpleDateFormat67 = null;
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat67);
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double71 = dateTime68.getDeltaYears(dateTime70);
        java.text.SimpleDateFormat simpleDateFormat72 = dateTime70.getSdf();
        boolean boolean73 = dateTime47.isLessThanOrEqual(dateTime70);
        net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat79 = null;
        net.ajaskey.common.DateTime dateTime80 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat79);
        net.ajaskey.common.DateTime dateTime82 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double83 = dateTime80.getDeltaYears(dateTime82);
        boolean boolean84 = dateTime77.isLessThan(dateTime82);
        dateTime82.set(3, 365, 0);
        net.ajaskey.common.DateTime dateTime90 = new net.ajaskey.common.DateTime(100L);
        java.util.Calendar calendar91 = dateTime90.getCal();
        dateTime82.set(calendar91);
        dateTime70.set(calendar91);
        int int94 = dateTime70.getMinute();
        java.lang.String str96 = dateTime70.format("                 0");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "31-Dec-1969" + "'", str3, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 365 + "'", int4 == 365);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-1972.041095890411d) + "'", double32 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(date34);
        org.junit.Assert.assertEquals(date34.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-1972.041095890411d) + "'", double55 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int64 + "' != '" + 16 + "'", int64 == 16);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertNull(simpleDateFormat72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(calendar91);
        org.junit.Assert.assertEquals(calendar91.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 0 + "'", int94 == 0);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "                 0" + "'", str96, "                 0");
    }

    @Test
    public void test7015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7015");
        net.ajaskey.common.TextUtils.printline
    }

    @Test
    public void test7016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7016");
        java.text.SimpleDateFormat simpleDateFormat2 = null;
        java.text.SimpleDateFormat simpleDateFormat3 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime("January", simpleDateFormat2, simpleDateFormat3);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime("100.00", simpleDateFormat2);
        java.text.SimpleDateFormat simpleDateFormat7 = null;
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat7);
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double11 = dateTime8.getDeltaYears(dateTime10);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean16 = dateTime10.isEqual(dateTime15);
        long long17 = dateTime5.getDeltaDays(dateTime15);
        int int18 = dateTime5.getHour();
        org.junit.Assert.assertNotNull(simpleDateFormat3);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test7017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7017");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) (short) 0);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime(100L);
        double double8 = dateTime5.getDeltaYears(dateTime7);
        int int9 = dateTime5.getHour();
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime();
        net.ajaskey.common.DateTime dateTime11 = null;
        boolean boolean12 = dateTime10.isGreaterThan(dateTime11);
        java.text.SimpleDateFormat simpleDateFormat14 = null;
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat14);
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double18 = dateTime15.getDeltaYears(dateTime17);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean23 = dateTime17.isEqual(dateTime22);
        java.util.Calendar calendar24 = dateTime17.getCal();
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime(calendar24);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(calendar24);
        boolean boolean27 = dateTime10.isLessThan(dateTime26);
        boolean boolean28 = dateTime5.isLessThan(dateTime10);
        boolean boolean29 = dateTime1.isGreaterThan(dateTime10);
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime(25, 1, 0);
        java.text.SimpleDateFormat simpleDateFormat37 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat38 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime("", simpleDateFormat37, simpleDateFormat38);
        java.text.SimpleDateFormat simpleDateFormat42 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat43 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime("", simpleDateFormat42, simpleDateFormat43);
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime(100L);
        int int47 = dateTime46.getMs();
        java.text.SimpleDateFormat simpleDateFormat48 = net.ajaskey.common.Utils.sdf;
        dateTime46.setSdf(simpleDateFormat48);
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat43, simpleDateFormat48);
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime("     0", simpleDateFormat38, simpleDateFormat48);
        dateTime34.setSdf(simpleDateFormat38);
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime("January     0     0                                                                                               52.00     0hi!     0", simpleDateFormat38);
        boolean boolean54 = net.ajaskey.common.Utils.sameDate(dateTime1, dateTime53);
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime(12, 42, (int) (byte) 1);
        java.util.Calendar calendar59 = dateTime58.getCal();
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime(calendar59);
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime(calendar59);
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime(calendar59);
        dateTime53.set(calendar59);
        int int64 = dateTime53.getMs();
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-1972.041095890411d) + "'", double8 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(calendar24);
        org.junit.Assert.assertEquals(calendar24.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(simpleDateFormat37);
        org.junit.Assert.assertNotNull(simpleDateFormat38);
        org.junit.Assert.assertNotNull(simpleDateFormat42);
        org.junit.Assert.assertNotNull(simpleDateFormat43);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat48);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(calendar59);
// flaky:         org.junit.Assert.assertEquals(calendar59.toString(), "java.util.GregorianCalendar[time=-61678303963642,areFieldsSet=true,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=15,MONTH=6,WEEK_OF_YEAR=27,WEEK_OF_MONTH=1,DAY_OF_MONTH=1,DAY_OF_YEAR=182,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=1,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=16,MILLISECOND=358,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
// flaky:         org.junit.Assert.assertTrue("'" + int64 + "' != '" + 358 + "'", int64 == 358);
    }

    @Test
    public void test7018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7018");
        java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readGzipFile("                                     1", true);
        org.junit.Assert.assertNull(strList2);
    }

    @Test
    public void test7019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7019");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        java.text.SimpleDateFormat simpleDateFormat10 = dateTime6.getSdf();
        boolean boolean11 = dateTime1.isLessThanOrEqual(dateTime6);
        java.text.SimpleDateFormat simpleDateFormat13 = null;
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat13);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double17 = dateTime14.getDeltaYears(dateTime16);
        boolean boolean18 = dateTime14.isWeekday();
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long23 = dateTime14.getDeltaDays(dateTime22);
        long long24 = dateTime1.getDeltaDays(dateTime22);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat30 = null;
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat30);
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double34 = dateTime31.getDeltaYears(dateTime33);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean39 = dateTime33.isEqual(dateTime38);
        java.util.Calendar calendar40 = dateTime33.getCal();
        boolean boolean41 = dateTime28.isLessThan(dateTime33);
        boolean boolean42 = net.ajaskey.common.Utils.sameDate(dateTime1, dateTime28);
        int int43 = dateTime28.getDayOfWeek();
        java.util.Date date44 = null;
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(date44);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime(100L);
        double double52 = dateTime49.getDeltaYears(dateTime51);
        int int53 = dateTime49.getHour();
        java.text.SimpleDateFormat simpleDateFormat55 = null;
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat55);
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double59 = dateTime56.getDeltaYears(dateTime58);
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean64 = dateTime58.isEqual(dateTime63);
        java.util.Calendar calendar65 = dateTime58.getCal();
        dateTime49.set(calendar65);
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime(calendar65);
        net.ajaskey.common.DateTime dateTime68 = dateTime45.copy(dateTime67);
        net.ajaskey.common.DateTime dateTime72 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime74 = new net.ajaskey.common.DateTime(100L);
        double double75 = dateTime72.getDeltaYears(dateTime74);
        boolean boolean76 = dateTime74.isWeekday();
        int int77 = dateTime74.getDayOfYear();
        long long78 = dateTime68.getDeltaMilliSeconds(dateTime74);
        java.util.Calendar calendar79 = dateTime68.getCal();
        double double80 = dateTime28.getDeltaYears(dateTime68);
        java.text.SimpleDateFormat simpleDateFormat83 = null;
        java.text.SimpleDateFormat simpleDateFormat84 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime85 = new net.ajaskey.common.DateTime("January", simpleDateFormat83, simpleDateFormat84);
        java.text.SimpleDateFormat simpleDateFormat88 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime89 = new net.ajaskey.common.DateTime("January", simpleDateFormat88);
        net.ajaskey.common.DateTime dateTime90 = new net.ajaskey.common.DateTime("", simpleDateFormat88);
        net.ajaskey.common.DateTime dateTime91 = new net.ajaskey.common.DateTime("", simpleDateFormat84, simpleDateFormat88);
        int int92 = dateTime91.getSecond();
        double double93 = dateTime28.getDeltaYears(dateTime91);
        int int94 = dateTime91.getHour();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 719795L + "'", long24 == 719795L);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(calendar40);
        org.junit.Assert.assertEquals(calendar40.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 5 + "'", int43 == 5);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-1972.041095890411d) + "'", double52 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 10 + "'", int53 == 10);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(calendar65);
        org.junit.Assert.assertEquals(calendar65.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(dateTime68);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-1972.041095890411d) + "'", double75 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 365 + "'", int77 == 365);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 100L + "'", long78 == 100L);
        org.junit.Assert.assertNotNull(calendar79);
        org.junit.Assert.assertEquals(calendar79.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + (-1972.041095890411d) + "'", double80 == (-1972.041095890411d));
        org.junit.Assert.assertNotNull(simpleDateFormat84);
        org.junit.Assert.assertNotNull(simpleDateFormat88);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.0d + "'", double93 == 0.0d);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
    }

    @Test
    public void test7020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7020");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(36794L);
    }

    @Test
    public void test7021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7021");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        java.text.SimpleDateFormat simpleDateFormat10 = dateTime6.getSdf();
        boolean boolean11 = dateTime1.isLessThanOrEqual(dateTime6);
        java.text.SimpleDateFormat simpleDateFormat13 = null;
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat13);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double17 = dateTime14.getDeltaYears(dateTime16);
        boolean boolean18 = dateTime14.isWeekday();
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long23 = dateTime14.getDeltaDays(dateTime22);
        long long24 = dateTime1.getDeltaDays(dateTime22);
        java.lang.String str25 = dateTime22.toFullString();
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        dateTime29.add(2, 12);
        java.util.Date date33 = dateTime29.getTime();
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime(date33);
        boolean boolean35 = dateTime34.isNull();
        java.lang.String str36 = dateTime34.getMonth();
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime(100L);
        int int39 = dateTime38.getMs();
        java.text.SimpleDateFormat simpleDateFormat41 = null;
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat41);
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double45 = dateTime42.getDeltaYears(dateTime44);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean50 = dateTime44.isEqual(dateTime49);
        java.util.Calendar calendar51 = dateTime44.getCal();
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime(calendar51);
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime(calendar51);
        dateTime38.set(calendar51);
        dateTime34.set(calendar51);
        dateTime22.set(dateTime34);
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime(100L);
        dateTime58.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime(100L);
        double double69 = dateTime66.getDeltaYears(dateTime68);
        boolean boolean70 = dateTime68.isWeekday();
        java.util.Date date71 = dateTime68.getTime();
        dateTime58.set(dateTime68);
        int int73 = dateTime58.getYear();
        net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime79 = new net.ajaskey.common.DateTime(100L);
        double double80 = dateTime77.getDeltaYears(dateTime79);
        int int81 = dateTime77.getHour();
        java.util.Calendar calendar82 = dateTime77.getCal();
        boolean boolean83 = dateTime58.isGreaterThan(dateTime77);
        dateTime34.set(dateTime58);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 719795L + "'", long24 == 719795L);
// flaky:         org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Thu 10-Apr-0002 10:47:16" + "'", str25, "Thu 10-Apr-0002 10:47:16");
        org.junit.Assert.assertNotNull(date33);
// flaky:         org.junit.Assert.assertEquals(date33.toString(), "Sat Apr 10 10:47:16 MST 1");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "April" + "'", str36, "April");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(calendar51);
        org.junit.Assert.assertEquals(calendar51.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-1972.041095890411d) + "'", double69 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(date71);
        org.junit.Assert.assertEquals(date71.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1969 + "'", int73 == 1969);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + (-1972.041095890411d) + "'", double80 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 10 + "'", int81 == 10);
        org.junit.Assert.assertNotNull(calendar82);
// flaky:         org.junit.Assert.assertEquals(calendar82.toString(), "java.util.GregorianCalendar[time=-62190310363505,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=16,MILLISECOND=495,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test7022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7022");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("31-Dec-1969", "                                                                                                                                                                                                                                                                      10");
        int int3 = dateTime2.getMinute();
        dateTime2.set(18, 27, (int) (byte) 100);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test7023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7023");
        java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readGzipFile("Thu 10-Apr-0002 10:45:32", false);
        org.junit.Assert.assertNull(strList2);
    }

    @Test
    public void test7024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7024");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        java.text.SimpleDateFormat simpleDateFormat10 = dateTime6.getSdf();
        boolean boolean11 = dateTime1.isLessThanOrEqual(dateTime6);
        int int12 = dateTime1.getMinute();
        int int13 = dateTime1.getMinute();
        java.util.Calendar calendar14 = null;
        dateTime1.set(calendar14);
        java.text.SimpleDateFormat simpleDateFormat17 = null;
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat17);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double21 = dateTime18.getDeltaYears(dateTime20);
        boolean boolean22 = dateTime20.isNull();
        java.text.SimpleDateFormat simpleDateFormat24 = null;
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat24);
        dateTime25.set((int) ' ', 0, 11);
        boolean boolean30 = dateTime20.isGreaterThanOrEqual(dateTime25);
        java.lang.String str31 = dateTime20.toString();
        java.text.SimpleDateFormat simpleDateFormat33 = null;
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat33);
        boolean boolean35 = dateTime20.isGreaterThanOrEqual(dateTime34);
        dateTime1.set(dateTime20);
        java.lang.String str37 = dateTime20.toFullString();
        int int38 = dateTime20.getYear();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "31-Dec-1969" + "'", str31, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str37, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1969 + "'", int38 == 1969);
    }

    @Test
    public void test7025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7025");
        java.lang.String str2 = net.ajaskey.common.Utils.lfmt(2449203317204L, 568);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       2,449,203,317,204" + "'", str
    }

    @Test
    public void test7026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7026");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        boolean boolean6 = dateTime2.isWeekday();
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long11 = dateTime2.getDeltaDays(dateTime10);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(dateTime2);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(100L);
        double double19 = dateTime16.getDeltaYears(dateTime18);
        boolean boolean20 = dateTime18.isWeekday();
        java.util.Date date21 = dateTime18.getTime();
        dateTime2.set(date21);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime(date21);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime(date21);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean29 = dateTime28.isNull();
        int int30 = dateTime28.getDayOfYear();
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime(100L);
        long long41 = dateTime38.getDeltaDays(dateTime40);
        int int42 = dateTime38.getHour();
        dateTime38.add((int) (byte) 100, (int) (byte) 0);
        double double46 = dateTime34.getDeltaYears(dateTime38);
        boolean boolean47 = dateTime28.isLessThanOrEqual(dateTime34);
        java.util.Calendar calendar48 = null;
        dateTime28.set(calendar48);
        int int50 = dateTime28.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime(100L);
        dateTime52.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime(100L);
        double double63 = dateTime60.getDeltaYears(dateTime62);
        boolean boolean64 = dateTime62.isWeekday();
        java.util.Date date65 = dateTime62.getTime();
        dateTime52.set(dateTime62);
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime72 = new net.ajaskey.common.DateTime(100L);
        double double73 = dateTime70.getDeltaYears(dateTime72);
        int int74 = dateTime70.getHour();
        java.text.SimpleDateFormat simpleDateFormat76 = null;
        net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat76);
        net.ajaskey.common.DateTime dateTime79 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double80 = dateTime77.getDeltaYears(dateTime79);
        net.ajaskey.common.DateTime dateTime84 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean85 = dateTime79.isEqual(dateTime84);
        java.util.Calendar calendar86 = dateTime79.getCal();
        dateTime70.set(calendar86);
        net.ajaskey.common.DateTime dateTime88 = new net.ajaskey.common.DateTime(calendar86);
        boolean boolean89 = dateTime62.isGreaterThan(dateTime88);
        long long90 = dateTime28.getDeltaMilliSeconds(dateTime88);
        java.lang.String str91 = dateTime28.getMonth();
        boolean boolean92 = dateTime24.isEqual(dateTime28);
        java.lang.String str93 = dateTime28.format();
        java.util.Date date94 = dateTime28.getTime();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-1972.041095890411d) + "'", double19 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(date21);
        org.junit.Assert.assertEquals(date21.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-719795L) + "'", long41 == (-719795L));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10 + "'", int42 == 10);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 10 + "'", int50 == 10);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-1972.041095890411d) + "'", double63 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(date65);
        org.junit.Assert.assertEquals(date65.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-1972.041095890411d) + "'", double73 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 10 + "'", int74 == 10);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(calendar86);
        org.junit.Assert.assertEquals(calendar86.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
// flaky:         org.junit.Assert.assertTrue("'" + long90 + "' != '" + 62190310363433L + "'", long90 == 62190310363433L);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "April" + "'", str91, "April");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "BAD-DATE-FORMAT" + "'", str93, "BAD-DATE-FORMAT");
        org.junit.Assert.assertNotNull(date94);
// flaky:         org.junit.Assert.assertEquals(date94.toString(), "Thu Apr 10 10:47:16 MST 2");
    }

    @Test
    public void test7027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7027");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean4 = dateTime3.isNull();
        java.lang.String str5 = dateTime3.getDay();
        int int6 = dateTime3.getYear();
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        int int9 = dateTime8.getMs();
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(100L);
        double double16 = dateTime13.getDeltaYears(dateTime15);
        java.text.SimpleDateFormat simpleDateFormat17 = dateTime13.getSdf();
        boolean boolean18 = dateTime8.isLessThanOrEqual(dateTime13);
        boolean boolean19 = dateTime13.isWeekday();
        java.lang.String str20 = dateTime13.toString();
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(100L);
        int int23 = dateTime22.getMs();
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(100L);
        double double30 = dateTime27.getDeltaYears(dateTime29);
        java.text.SimpleDateFormat simpleDateFormat31 = dateTime27.getSdf();
        boolean boolean32 = dateTime22.isLessThanOrEqual(dateTime27);
        java.text.SimpleDateFormat simpleDateFormat34 = null;
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat34);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double38 = dateTime35.getDeltaYears(dateTime37);
        boolean boolean39 = dateTime35.isWeekday();
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long44 = dateTime35.getDeltaDays(dateTime43);
        long long45 = dateTime22.getDeltaDays(dateTime43);
        java.lang.String str46 = dateTime43.toFullString();
        java.util.Calendar calendar47 = dateTime43.getCal();
        boolean boolean48 = dateTime13.isLessThan(dateTime43);
        boolean boolean49 = dateTime3.isGreaterThanOrEqual(dateTime43);
        java.text.SimpleDateFormat simpleDateFormat52 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat54 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat55 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime("", simpleDateFormat54, simpleDateFormat55);
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat52, simpleDateFormat55);
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime("10-Apr-0002", simpleDateFormat55);
        dateTime3.setSdf(simpleDateFormat55);
        java.text.SimpleDateFormat simpleDateFormat61 = null;
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat61);
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double65 = dateTime62.getDeltaYears(dateTime64);
        net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean70 = dateTime64.isEqual(dateTime69);
        net.ajaskey.common.DateTime dateTime72 = new net.ajaskey.common.DateTime(100L);
        int int73 = dateTime72.getMs();
        boolean boolean74 = dateTime69.isGreaterThanOrEqual(dateTime72);
        java.text.SimpleDateFormat simpleDateFormat76 = null;
        net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat76);
        net.ajaskey.common.DateTime dateTime79 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double80 = dateTime77.getDeltaYears(dateTime79);
        boolean boolean81 = dateTime77.isWeekday();
        boolean boolean82 = dateTime72.isLessThanOrEqual(dateTime77);
        net.ajaskey.common.DateTime dateTime84 = new net.ajaskey.common.DateTime(100L);
        int int85 = dateTime84.getMs();
        boolean boolean86 = dateTime84.isWeekday();
        int int87 = dateTime84.getHour();
        java.text.SimpleDateFormat simpleDateFormat89 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime90 = new net.ajaskey.common.DateTime("January", simpleDateFormat89);
        dateTime84.setSdf(simpleDateFormat89);
        java.lang.String str92 = dateTime84.toFullString();
        java.lang.String str93 = dateTime84.toFullString();
        double double94 = dateTime72.getDeltaYears(dateTime84);
        net.ajaskey.common.DateTime dateTime97 = dateTime72.parse("                                                                                                                                                                                                                                                          22", "Thu 10-Apr-0002 10:44:15");
        net.ajaskey.common.DateTime dateTime98 = new net.ajaskey.common.DateTime(dateTime72);
        long long99 = dateTime3.getDeltaMilliSeconds(dateTime72);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Thursday" + "'", str5, "Thursday");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-1972.041095890411d) + "'", double16 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "10-Apr-0002" + "'", str20, "10-Apr-0002");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-1972.041095890411d) + "'", double30 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 719795L + "'", long45 == 719795L);
// flaky:         org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Thu 10-Apr-0002 10:47:16" + "'", str46, "Thu 10-Apr-0002 10:47:16");
        org.junit.Assert.assertNotNull(calendar47);
// flaky:         org.junit.Assert.assertEquals(calendar47.toString(), "java.util.GregorianCalendar[time=-62190310363409,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=16,MILLISECOND=591,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
// flaky:         org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(simpleDateFormat52);
        org.junit.Assert.assertNotNull(simpleDateFormat54);
        org.junit.Assert.assertNotNull(simpleDateFormat55);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 100 + "'", int73 == 100);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 100 + "'", int85 == 100);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 5 + "'", int87 == 5);
        org.junit.Assert.assertNotNull(simpleDateFormat89);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str92, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str93, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.0d + "'", double94 == 0.0d);
        org.junit.Assert.assertNull(dateTime97);
// flaky:         org.junit.Assert.assertTrue("'" + long99 + "' != '" + 62190310363509L + "'", long99 == 62190310363509L);
    }

    @Test
    public void test7028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7028");
        java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readTextFile("Thu 10-Apr-0002 10:43:04", false);
        net.ajaskey.common.TextUtils.print(strList2);
        net.ajaskey.common.TextUtils.print(strList2);
        net.ajaskey.common.TextUtils.print(strList2);
        org.junit.Assert.assertNotNull(strList2);
    }

    @Test
    public void test7029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7029");
        net.ajaskey.common.Utils.NL = "Tue 05-Aug-0010 10:46:37";
    }

    @Test
    public void test7030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7030");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(1869, 0, 0);
        int int4 = dateTime3.getDayOfMonth();
        java.text.SimpleDateFormat simpleDateFormat5 = dateTime3.getSdf();
        java.lang.String str6 = dateTime3.format();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 31 + "'", int4 == 31);
        org.junit.Assert.assertNull(simpleDateFormat5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "BAD-DATE-FORMAT" + "'", str6, "BAD-DATE-FORMAT");
    }

    @Test
    public void test7031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7031");
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime(100L);
        int int5 = dateTime4.getMs();
        java.text.SimpleDateFormat simpleDateFormat6 = net.ajaskey.common.Utils.sdf;
        dateTime4.setSdf(simpleDateFormat6);
        java.text.SimpleDateFormat simpleDateFormat8 = net.ajaskey.common.Utils.sdfFull;
        dateTime4.setSdf(simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
        int int12 = dateTime11.getMs();
        java.lang.String str13 = dateTime11.toString();
        java.util.Date date14 = dateTime11.getTime();
        int int15 = dateTime11.getDayOfYear();
        java.text.SimpleDateFormat simpleDateFormat17 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat18 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime("", simpleDateFormat17, simpleDateFormat18);
        dateTime11.setSdf(simpleDateFormat17);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("", simpleDateFormat8, simpleDateFormat17);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime(100L);
        int int26 = dateTime25.getMs();
        java.text.SimpleDateFormat simpleDateFormat27 = net.ajaskey.common.Utils.sdf;
        dateTime25.setSdf(simpleDateFormat27);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat27);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((long) 53);
        boolean boolean32 = dateTime31.isWeekday();
        boolean boolean33 = dateTime29.sameDate(dateTime31);
        java.util.Date date34 = dateTime31.getTime();
        java.text.SimpleDateFormat simpleDateFormat36 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime("January", simpleDateFormat36);
        dateTime31.setSdf(simpleDateFormat36);
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat36);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime("Wed 12-Apr-0139 10:44:24", simpleDateFormat8, simpleDateFormat36);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:45:41", simpleDateFormat8);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat6);
        org.junit.Assert.assertNotNull(simpleDateFormat8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "31-Dec-1969" + "'", str13, "31-Dec-1969");
        org.junit.Assert.assertNotNull(date14);
        org.junit.Assert.assertEquals(date14.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 365 + "'", int15 == 365);
        org.junit.Assert.assertNotNull(simpleDateFormat17);
        org.junit.Assert.assertNotNull(simpleDateFormat18);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(date34);
        org.junit.Assert.assertEquals(date34.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertNotNull(simpleDateFormat36);
    }

    @Test
    public void test7032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7032");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        boolean boolean7 = dateTime5.isWeekday();
        java.lang.String str9 = dateTime5.format("hi!");
        int int10 = dateTime5.getMinute();
        net.ajaskey.common.DateTime dateTime13 = dateTime5.parse("Mon 10-Apr-0002 00:00:00", "January                                 365.00                                 365.00                                                                                               52.00                                 365.00hi!                                 365.00");
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(dateTime5);
        dateTime5.add(0, 0);
        net.ajaskey.common.DateTime dateTime18 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = dateTime5.sameDate(dateTime18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "BAD-DATE-FORMAT" + "'", str9, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(dateTime13);
    }

    @Test
    public void test7033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7033");
        java.util.Date date0 = null;
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(date0);
        net.ajaskey.common.DateTime dateTime3 = dateTime1.parse("Thu 10-Apr-0002 10:42:58");
        int int4 = dateTime1.getMinute();
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean9 = dateTime8.isNull();
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime();
        boolean boolean11 = dateTime8.sameDate(dateTime10);
        net.ajaskey.common.DateTime dateTime13 = dateTime10.parse("Thu 10-Apr-0002 10:43:12");
        long long14 = dateTime1.getDeltaMilliSeconds(dateTime10);
        int int15 = dateTime1.getMinute();
        net.ajaskey.common.DateTime dateTime16 = null;
        dateTime1.set(dateTime16);
        java.lang.String str19 = dateTime1.format("                               1");
        org.junit.Assert.assertNull(dateTime3);
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 47 + "'", int4 == 47);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(dateTime13);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 47 + "'", int15 == 47);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "                               1" + "'", str19, "                               1");
    }

    @Test
    public void test7034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7034");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        int int3 = dateTime1.getHour();
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat9 = null;
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat9);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double13 = dateTime10.getDeltaYears(dateTime12);
        boolean boolean14 = dateTime7.isLessThan(dateTime12);
        java.lang.String str15 = dateTime12.toFullString();
        dateTime12.add(10, (int) (byte) -1);
        java.text.SimpleDateFormat simpleDateFormat20 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat22 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat23 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("", simpleDateFormat22, simpleDateFormat23);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat20, simpleDateFormat23);
        boolean boolean26 = dateTime12.isGreaterThan(dateTime25);
        boolean boolean27 = dateTime1.isEqual(dateTime12);
        net.ajaskey.common.DateTime dateTime28 = null;
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(dateTime28);
        dateTime29.set(42, 10, 10);
        java.util.Date date34 = dateTime29.getTime();
        net.ajaskey.common.DateTime dateTime35 = dateTime1.copy(dateTime29);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(100L);
        int int38 = dateTime37.getMs();
        int int39 = dateTime37.getHour();
        double double40 = dateTime29.getDeltaYears(dateTime37);
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime(100L);
        long long51 = dateTime48.getDeltaDays(dateTime50);
        int int52 = dateTime48.getHour();
        dateTime48.add((int) (byte) 100, (int) (byte) 0);
        double double56 = dateTime44.getDeltaYears(dateTime48);
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime(100L);
        int int59 = dateTime58.getMs();
        java.lang.String str60 = dateTime58.toString();
        dateTime58.set(25, (-1), (int) (short) 10);
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime(100L);
        double double71 = dateTime68.getDeltaYears(dateTime70);
        boolean boolean72 = dateTime70.isWeekday();
        boolean boolean73 = net.ajaskey.common.Utils.sameMonth(dateTime58, dateTime70);
        net.ajaskey.common.DateTime dateTime75 = new net.ajaskey.common.DateTime((long) (short) 0);
        int int76 = dateTime75.getHour();
        boolean boolean77 = dateTime75.isNull();
        net.ajaskey.common.DateTime dateTime78 = new net.ajaskey.common.DateTime(dateTime75);
        boolean boolean79 = dateTime70.isGreaterThan(dateTime75);
        boolean boolean80 = dateTime48.isGreaterThan(dateTime75);
        boolean boolean81 = dateTime37.isEqual(dateTime75);
        dateTime37.add(214, 365);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 5 + "'", int3 == 5);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str15, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertNotNull(simpleDateFormat20);
        org.junit.Assert.assertNotNull(simpleDateFormat22);
        org.junit.Assert.assertNotNull(simpleDateFormat23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(date34);
// flaky:         org.junit.Assert.assertEquals(date34.toString(), "Sat Nov 10 10:47:16 MST 42");
        org.junit.Assert.assertNotNull(dateTime35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 5 + "'", int39 == 5);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-1928.4246575342465d) + "'", double40 == (-1928.4246575342465d));
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-719795L) + "'", long51 == (-719795L));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 10 + "'", int52 == 10);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 100 + "'", int59 == 100);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "31-Dec-1969" + "'", str60, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-1972.041095890411d) + "'", double71 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 5 + "'", int76 == 5);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test7035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7035");
        java.text.SimpleDateFormat simpleDateFormat1 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat3 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime("", simpleDateFormat3, simpleDateFormat4);
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat1, simpleDateFormat4);
        int int7 = dateTime6.getHour();
        int int8 = dateTime6.getDayOfYear();
        dateTime6.add(15, 4);
        boolean boolean12 = dateTime6.isNull();
        org.junit.Assert.assertNotNull(simpleDateFormat1);
        org.junit.Assert.assertNotNull(simpleDateFormat3);
        org.junit.Assert.assertNotNull(simpleDateFormat4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test7036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7036");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        java.lang.String str3 = dateTime1.toString();
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        int int6 = dateTime5.getMs();
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(100L);
        double double13 = dateTime10.getDeltaYears(dateTime12);
        java.text.SimpleDateFormat simpleDateFormat14 = dateTime10.getSdf();
        boolean boolean15 = dateTime5.isLessThanOrEqual(dateTime10);
        boolean boolean16 = dateTime5.isWeekday();
        java.util.Calendar calendar17 = dateTime5.getCal();
        dateTime1.set(calendar17);
        int int19 = dateTime1.getMs();
        int int20 = dateTime1.getSecond();
        int int21 = dateTime1.getDayOfWeek();
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean26 = dateTime25.isNull();
        java.lang.String str27 = dateTime25.getDay();
        java.lang.String str28 = dateTime25.getMonth();
        java.lang.String str29 = dateTime25.getDay();
        java.lang.String str30 = dateTime25.toFullString();
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime(100L);
        double double37 = dateTime34.getDeltaYears(dateTime36);
        int int38 = dateTime34.getHour();
        dateTime34.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat43 = null;
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat43);
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double47 = dateTime44.getDeltaYears(dateTime46);
        boolean boolean48 = dateTime34.isEqual(dateTime46);
        int int49 = dateTime34.getDayOfYear();
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime(100L);
        int int52 = dateTime51.getMs();
        boolean boolean53 = dateTime51.isWeekday();
        int int54 = dateTime51.getHour();
        java.text.SimpleDateFormat simpleDateFormat56 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime("January", simpleDateFormat56);
        dateTime51.setSdf(simpleDateFormat56);
        java.text.SimpleDateFormat simpleDateFormat59 = dateTime51.getSdf();
        boolean boolean60 = dateTime34.isGreaterThan(dateTime51);
        java.text.SimpleDateFormat simpleDateFormat62 = null;
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat62);
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double66 = dateTime63.getDeltaYears(dateTime65);
        boolean boolean67 = dateTime63.isWeekday();
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long72 = dateTime63.getDeltaDays(dateTime71);
        net.ajaskey.common.DateTime dateTime73 = new net.ajaskey.common.DateTime(dateTime63);
        dateTime73.setFirstWorkDay();
        boolean boolean75 = dateTime51.sameDate(dateTime73);
        boolean boolean76 = dateTime25.sameDate(dateTime51);
        net.ajaskey.common.DateTime dateTime79 = new net.ajaskey.common.DateTime("5.00", "     10");
        dateTime79.add((int) (short) 0, (int) 'a');
        int int83 = dateTime79.getDayOfMonth();
        int int84 = dateTime79.getDayOfWeek();
        int int85 = dateTime79.getDayOfMonth();
        java.util.Calendar calendar86 = dateTime79.getCal();
        boolean boolean87 = dateTime51.isLessThanOrEqual(dateTime79);
        boolean boolean88 = dateTime1.sameDate(dateTime51);
        net.ajaskey.common.DateTime dateTime89 = null;
        dateTime51.set(dateTime89);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "31-Dec-1969" + "'", str3, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-1972.041095890411d) + "'", double13 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(calendar17);
        org.junit.Assert.assertEquals(calendar17.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 4 + "'", int21 == 4);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Thursday" + "'", str27, "Thursday");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "April" + "'", str28, "April");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Thursday" + "'", str29, "Thursday");
// flaky:         org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Thu 10-Apr-0002 10:47:16" + "'", str30, "Thu 10-Apr-0002 10:47:16");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-1972.041095890411d) + "'", double37 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 10 + "'", int38 == 10);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 100 + "'", int52 == 100);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 5 + "'", int54 == 5);
        org.junit.Assert.assertNotNull(simpleDateFormat56);
        org.junit.Assert.assertNotNull(simpleDateFormat59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 0L + "'", long72 == 0L);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNull(calendar86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
    }

    @Test
    public void test7037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7037");
        net.ajaskey.common.Utils.NL = "                                                                                                                                                                                                                                                                                   -68";
    }

    @Test
    public void test7038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7038");
        java.lang.String str1 = net.ajaskey.common.Utils.getFromUrl
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
    }

    @Test
    public void test7039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7039");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) 10);
        java.util.Calendar calendar2 = dateTime1.getCal();
        java.text.SimpleDateFormat simpleDateFormat5 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("January", simpleDateFormat5);
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("", simpleDateFormat5);
        dateTime7.setFirstWorkDay();
        int int9 = dateTime7.getMs();
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(100L);
        double double16 = dateTime13.getDeltaYears(dateTime15);
        java.text.SimpleDateFormat simpleDateFormat18 = null;
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat18);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double22 = dateTime19.getDeltaYears(dateTime21);
        boolean boolean23 = dateTime19.isWeekday();
        boolean boolean24 = dateTime13.sameDate(dateTime19);
        java.text.SimpleDateFormat simpleDateFormat26 = null;
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat26);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double30 = dateTime27.getDeltaYears(dateTime29);
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean35 = dateTime29.isEqual(dateTime34);
        dateTime13.set(dateTime34);
        java.lang.String str37 = dateTime34.toString();
        dateTime7.set(dateTime34);
        java.text.SimpleDateFormat simpleDateFormat40 = null;
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat40);
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double44 = dateTime41.getDeltaYears(dateTime43);
        boolean boolean45 = dateTime41.isWeekday();
        int int46 = dateTime41.getHour();
        boolean boolean47 = dateTime34.isGreaterThan(dateTime41);
        java.util.Date date48 = dateTime34.getTime();
        dateTime1.set(date48);
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime(date48);
        org.junit.Assert.assertNotNull(calendar2);
// flaky:         org.junit.Assert.assertEquals(calendar2.toString(), "java.util.GregorianCalendar[time=-62190310363063,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=16,MILLISECOND=937,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(simpleDateFormat5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-1972.041095890411d) + "'", double16 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "10-Apr-0002" + "'", str37, "10-Apr-0002");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(date48);
// flaky:         org.junit.Assert.assertEquals(date48.toString(), "Thu Apr 10 10:47:16 MST 2");
    }

    @Test
    public void test7040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7040");
        net.ajaskey.common.TextUtils.printline("JanuaryThu 10-Apr-0002 10:44:47Thu 10-Apr-0002 10:44:47                                                                                               52.00Thu 10-Apr-0002 10:44:47hi!Thu 10-Apr-0002 10:44:47");
    }

    @Test
    public void test7041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7041");
        java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat5 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("", simpleDateFormat4, simpleDateFormat5);
        java.text.SimpleDateFormat simpleDateFormat8 = null;
        java.text.SimpleDateFormat simpleDateFormat9 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("January", simpleDateFormat8, simpleDateFormat9);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat4, simpleDateFormat9);
        java.text.SimpleDateFormat simpleDateFormat14 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat15 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("", simpleDateFormat14, simpleDateFormat15);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(100L);
        int int19 = dateTime18.getMs();
        java.text.SimpleDateFormat simpleDateFormat20 = net.ajaskey.common.Utils.sdf;
        dateTime18.setSdf(simpleDateFormat20);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat15, simpleDateFormat20);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime("                             100", simpleDateFormat9, simpleDateFormat15);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("11", simpleDateFormat9);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime((long) 8);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime(100L);
        double double33 = dateTime30.getDeltaYears(dateTime32);
        int int34 = dateTime30.getHour();
        dateTime30.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat39 = null;
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat39);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double43 = dateTime40.getDeltaYears(dateTime42);
        boolean boolean44 = dateTime30.isEqual(dateTime42);
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat50 = null;
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat50);
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double54 = dateTime51.getDeltaYears(dateTime53);
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean59 = dateTime53.isEqual(dateTime58);
        java.util.Calendar calendar60 = dateTime53.getCal();
        boolean boolean61 = dateTime48.isLessThan(dateTime53);
        dateTime48.setFirstWorkDay();
        boolean boolean63 = dateTime30.sameDate(dateTime48);
        boolean boolean64 = net.ajaskey.common.Utils.sameMonth(dateTime26, dateTime48);
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat70 = null;
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat70);
        net.ajaskey.common.DateTime dateTime73 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double74 = dateTime71.getDeltaYears(dateTime73);
        boolean boolean75 = dateTime68.isLessThan(dateTime73);
        java.lang.String str76 = dateTime73.toFullString();
        int int77 = dateTime73.getSecond();
        net.ajaskey.common.DateTime dateTime78 = new net.ajaskey.common.DateTime(dateTime73);
        java.lang.String str79 = dateTime78.getDay();
        long long80 = dateTime48.getDeltaDays(dateTime78);
        double double81 = dateTime24.getDeltaYears(dateTime48);
        boolean boolean82 = dateTime24.isNull();
        org.junit.Assert.assertNotNull(simpleDateFormat4);
        org.junit.Assert.assertNotNull(simpleDateFormat5);
        org.junit.Assert.assertNotNull(simpleDateFormat9);
        org.junit.Assert.assertNotNull(simpleDateFormat14);
        org.junit.Assert.assertNotNull(simpleDateFormat15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat20);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-1972.041095890411d) + "'", double33 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 10 + "'", int34 == 10);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(calendar60);
        org.junit.Assert.assertEquals(calendar60.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str76, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "Wednesday" + "'", str79, "Wednesday");
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + (-719795L) + "'", long80 == (-719795L));
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test7042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7042");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(62190310578628L);
    }

    @Test
    public void test7043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7043");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(718, 313, 568);
    }

    @Test
    public void test7044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7044");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(41, 32, 845);
    }

    @Test
    public void test7045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7045");
        java.lang.String str1 = net.ajaskey.common.Utils.getFromUrl("Thu 10-Apr-0002 10:43:02");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
    }

    @Test
    public void test7046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7046");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        int int3 = dateTime1.getHour();
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat9 = null;
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat9);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double13 = dateTime10.getDeltaYears(dateTime12);
        boolean boolean14 = dateTime7.isLessThan(dateTime12);
        java.lang.String str15 = dateTime12.toFullString();
        dateTime12.add(10, (int) (byte) -1);
        java.text.SimpleDateFormat simpleDateFormat20 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat22 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat23 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("", simpleDateFormat22, simpleDateFormat23);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat20, simpleDateFormat23);
        boolean boolean26 = dateTime12.isGreaterThan(dateTime25);
        boolean boolean27 = dateTime1.isEqual(dateTime12);
        net.ajaskey.common.DateTime dateTime28 = null;
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(dateTime28);
        dateTime29.set(42, 10, 10);
        java.util.Date date34 = dateTime29.getTime();
        net.ajaskey.common.DateTime dateTime35 = dateTime1.copy(dateTime29);
        net.ajaskey.common.DateTime dateTime36 = null;
        net.ajaskey.common.DateTime dateTime37 = dateTime1.copy(dateTime36);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime(dateTime36);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 5 + "'", int3 == 5);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str15, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertNotNull(simpleDateFormat20);
        org.junit.Assert.assertNotNull(simpleDateFormat22);
        org.junit.Assert.assertNotNull(simpleDateFormat23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(date34);
// flaky:         org.junit.Assert.assertEquals(date34.toString(), "Sat Nov 10 10:47:17 MST 42");
        org.junit.Assert.assertNotNull(dateTime35);
        org.junit.Assert.assertNull(dateTime37);
    }

    @Test
    public void test7047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7047");
        java.text.SimpleDateFormat simpleDateFormat2 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime("January", simpleDateFormat2);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime("", simpleDateFormat2);
        dateTime4.setFirstWorkDay();
        int int6 = dateTime4.getDayOfMonth();
        int int7 = dateTime4.getDayOfMonth();
        org.junit.Assert.assertNotNull(simpleDateFormat2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test7048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7048");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        boolean boolean3 = dateTime1.isNull();
        java.util.Calendar calendar4 = dateTime1.getCal();
        java.lang.String str5 = dateTime1.toString();
        java.text.SimpleDateFormat simpleDateFormat8 = null;
        java.text.SimpleDateFormat simpleDateFormat9 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("January", simpleDateFormat8, simpleDateFormat9);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime("Thursday", simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(dateTime11);
        boolean boolean13 = dateTime1.isEqual(dateTime12);
        java.lang.String str14 = dateTime1.toString();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(calendar4);
        org.junit.Assert.assertEquals(calendar4.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "31-Dec-1969" + "'", str5, "31-Dec-1969");
        org.junit.Assert.assertNotNull(simpleDateFormat9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "31-Dec-1969" + "'", str14, "31-Dec-1969");
    }

    @Test
    public void test7049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7049");
        java.lang.String str2 = net.ajaskey.common.Utils.ifmt(350, 155);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                                                                                                                                        350" + "'", str2, "                                                                                                                                                        350");
    }

    @Test
    public void test7050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7050");
        java.lang.String[] strArray7 = new java.lang.String[] { "     5.00" };
        java.util.List<java.io.File> fileList8 = net.ajaskey.common.Utils.getDirTree("                                                 100", strArray7);
        java.util.List<java.io.File> fileList9 = net.ajaskey.common.Utils.getDirTree("         1", strArray7);
        java.util.List<java.io.File> fileList10 = net.ajaskey.common.Utils.getDirTree("", strArray7);
        java.util.List<java.io.File> fileList11 = net.ajaskey.common.Utils.getDirTree(" 9", strArray7);
        java.util.List<java.io.File> fileList12 = net.ajaskey.common.Utils.getDirTree("                            0.00", strArray7);
        java.util.List<java.io.File> fileList13 = net.ajaskey.common.Utils.getDirTree("Wed 12-Apr-0139 10:43:33", strArray7);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNull(fileList8);
        org.junit.Assert.assertNull(fileList9);
        org.junit.Assert.assertNull(fileList10);
        org.junit.Assert.assertNull(fileList11);
        org.junit.Assert.assertNull(fileList12);
        org.junit.Assert.assertNull(fileList13);
    }

    @Test
    public void test7051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7051");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat5 = null;
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat5);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        boolean boolean10 = dateTime3.isLessThan(dateTime8);
        java.lang.String str11 = dateTime8.toFullString();
        dateTime8.add(10, (int) (byte) -1);
        java.lang.String str15 = dateTime8.getDay();
        java.lang.String str16 = dateTime8.toFullString();
        int int17 = dateTime8.getHour();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str11, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Wednesday" + "'", str15, "Wednesday");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str16, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 5 + "'", int17 == 5);
    }

    @Test
    public void test7052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7052");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        boolean boolean6 = dateTime2.isWeekday();
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long11 = dateTime2.getDeltaDays(dateTime10);
        dateTime10.set((int) (short) -1, (int) (byte) 0, (int) ' ');
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(100L);
        double double22 = dateTime19.getDeltaYears(dateTime21);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(100L);
        double double29 = dateTime26.getDeltaYears(dateTime28);
        int int30 = dateTime26.getHour();
        int int31 = dateTime26.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(100L);
        double double38 = dateTime35.getDeltaYears(dateTime37);
        boolean boolean39 = dateTime37.isWeekday();
        boolean boolean40 = net.ajaskey.common.Utils.sameDate(dateTime26, dateTime37);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime(100L);
        dateTime42.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime(100L);
        double double53 = dateTime50.getDeltaYears(dateTime52);
        boolean boolean54 = dateTime52.isWeekday();
        java.util.Date date55 = dateTime52.getTime();
        dateTime42.set(dateTime52);
        int int57 = dateTime42.getYear();
        boolean boolean58 = dateTime37.isGreaterThanOrEqual(dateTime42);
        boolean boolean59 = dateTime19.sameDate(dateTime37);
        boolean boolean60 = dateTime10.isLessThanOrEqual(dateTime19);
        java.util.Date date61 = dateTime10.getTime();
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime(date61);
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime(date61);
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime(date61);
        net.ajaskey.common.DateTime dateTime65 = null;
        dateTime64.set(dateTime65);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-1972.041095890411d) + "'", double22 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-1972.041095890411d) + "'", double29 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10 + "'", int31 == 10);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1972.041095890411d) + "'", double38 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-1972.041095890411d) + "'", double53 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(date55);
        org.junit.Assert.assertEquals(date55.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1969 + "'", int57 == 1969);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(date61);
// flaky:         org.junit.Assert.assertEquals(date61.toString(), "Wed Feb 01 10:47:17 MST 2");
    }

    @Test
    public void test7053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7053");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(22, 4, 26);
        java.text.SimpleDateFormat simpleDateFormat5 = null;
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat5);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        boolean boolean10 = dateTime6.isWeekday();
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(100L);
        int int13 = dateTime12.getMs();
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(100L);
        double double20 = dateTime17.getDeltaYears(dateTime19);
        java.text.SimpleDateFormat simpleDateFormat21 = dateTime17.getSdf();
        boolean boolean22 = dateTime12.isLessThanOrEqual(dateTime17);
        boolean boolean23 = dateTime6.isLessThanOrEqual(dateTime12);
        boolean boolean24 = dateTime3.isGreaterThan(dateTime12);
        net.ajaskey.common.DateTime dateTime26 = dateTime12.parse
        java.lang.String str27 = dateTime12.toString();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-1972.041095890411d) + "'", double20 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(dateTime26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "31-Dec-1969" + "'", str27, "31-Dec-1969");
    }

    @Test
    public void test7054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7054");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        boolean boolean6 = dateTime2.isWeekday();
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long11 = dateTime2.getDeltaDays(dateTime10);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(dateTime2);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(100L);
        double double19 = dateTime16.getDeltaYears(dateTime18);
        boolean boolean20 = dateTime18.isWeekday();
        java.util.Date date21 = dateTime18.getTime();
        dateTime2.set(date21);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime(100L);
        int int25 = dateTime24.getMs();
        java.lang.String str26 = dateTime24.toString();
        boolean boolean27 = dateTime2.isLessThanOrEqual(dateTime24);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime(100L);
        double double34 = dateTime31.getDeltaYears(dateTime33);
        int int35 = dateTime31.getHour();
        java.text.SimpleDateFormat simpleDateFormat37 = null;
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat37);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double41 = dateTime38.getDeltaYears(dateTime40);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean46 = dateTime40.isEqual(dateTime45);
        java.util.Calendar calendar47 = dateTime40.getCal();
        dateTime31.set(calendar47);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime(calendar47);
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime(calendar47);
        dateTime2.set(calendar47);
        dateTime2.add(42, (int) (short) -1);
        java.util.Calendar calendar55 = dateTime2.getCal();
        java.lang.String str56 = dateTime2.toFullString();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-1972.041095890411d) + "'", double19 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(date21);
        org.junit.Assert.assertEquals(date21.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "31-Dec-1969" + "'", str26, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-1972.041095890411d) + "'", double34 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(calendar47);
        org.junit.Assert.assertEquals(calendar47.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(calendar55);
        org.junit.Assert.assertEquals(calendar55.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str56, "Wed 31-Dec-1969 17:00:00");
    }

    @Test
    public void test7055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7055");
        // The following exception was thrown during execution in test generation
        try {
            net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTimehu 10-Apr-0002 10:43:52");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal pattern character 'T'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test7056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7056");
        java.util.Map<java.lang.String, java.lang.Integer> strMap0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = net.ajaskey.common.Utils.findName(strMap0, (java.lang.Integer) 620);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test7057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7057");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        java.text.SimpleDateFormat simpleDateFormat3 = net.ajaskey.common.Utils.sdf;
        dateTime1.setSdf(simpleDateFormat3);
        int int5 = dateTime1.getDayOfWeek();
        java.text.SimpleDateFormat simpleDateFormat6 = dateTime1.getSdf();
        java.util.Date date7 = dateTime1.getTime();
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(date7);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 4 + "'", int5 == 4);
        org.junit.Assert.assertNotNull(simpleDateFormat6);
        org.junit.Assert.assertNotNull(date7);
        org.junit.Assert.assertEquals(date7.toString(), "Wed Dec 31 17:00:00 MST 1969");
    }

    @Test
    public void test7058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7058");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime(100L);
        int int3 = dateTime2.getMs();
        java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdf;
        dateTime2.setSdf(simpleDateFormat4);
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat4);
        java.text.SimpleDateFormat simpleDateFormat8 = null;
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double12 = dateTime9.getDeltaYears(dateTime11);
        boolean boolean13 = dateTime11.isNull();
        java.text.SimpleDateFormat simpleDateFormat15 = null;
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat15);
        dateTime16.set((int) ' ', 0, 11);
        boolean boolean21 = dateTime11.isGreaterThanOrEqual(dateTime16);
        double double22 = dateTime6.getDeltaYears(dateTime11);
        java.text.SimpleDateFormat simpleDateFormat24 = null;
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat24);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double28 = dateTime25.getDeltaYears(dateTime27);
        boolean boolean29 = dateTime27.isNull();
        boolean boolean30 = dateTime11.isGreaterThan(dateTime27);
        java.lang.String str31 = dateTime11.getMonth();
        dateTime11.add(0, (int) (short) 0);
        java.lang.String str35 = dateTime11.getDay();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat4);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "December" + "'", str31, "December");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Wednesday" + "'", str35, "Wednesday");
    }

    @Test
    public void test7059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7059");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:45:46", "                                                                                                   0");
    }

    @Test
    public void test7060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7060");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        boolean boolean7 = dateTime5.isWeekday();
        java.util.Date date8 = dateTime5.getTime();
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(date8);
        int int10 = dateTime9.getDayOfYear();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(date8);
        org.junit.Assert.assertEquals(date8.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 365 + "'", int10 == 365);
    }

    @Test
    public void test7061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7061");
        java.lang.String str2 = net.ajaskey.common.Utils.ifmt(27, 21);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                   27" + "'", str2, "                   27");
    }

    @Test
    public void test7062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7062");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime(100L);
        int int3 = dateTime2.getMs();
        java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdf;
        dateTime2.setSdf(simpleDateFormat4);
        java.text.SimpleDateFormat simpleDateFormat8 = null;
        java.text.SimpleDateFormat simpleDateFormat9 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("January", simpleDateFormat8, simpleDateFormat9);
        java.text.SimpleDateFormat simpleDateFormat13 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime("January", simpleDateFormat13);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime("", simpleDateFormat13);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("", simpleDateFormat9, simpleDateFormat13);
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("Thursday", simpleDateFormat4, simpleDateFormat13);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat23 = null;
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat23);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double27 = dateTime24.getDeltaYears(dateTime26);
        boolean boolean28 = dateTime21.isLessThan(dateTime26);
        java.lang.String str29 = dateTime26.toFullString();
        int int30 = dateTime26.getSecond();
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(dateTime26);
        java.lang.String str32 = dateTime31.getDay();
        int int33 = dateTime31.getDayOfMonth();
        double double34 = dateTime17.getDeltaYears(dateTime31);
        int int35 = dateTime31.getDayOfMonth();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat4);
        org.junit.Assert.assertNotNull(simpleDateFormat9);
        org.junit.Assert.assertNotNull(simpleDateFormat13);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str29, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Wednesday" + "'", str32, "Wednesday");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 31 + "'", int33 == 31);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 31 + "'", int35 == 31);
    }

    @Test
    public void test7063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7063");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(62190310447329L);
    }

    @Test
    public void test7064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7064");
        java.lang.String[] strArray4 = new java.lang.String[] { "January", "", "                                                                                               52.00", "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        net.ajaskey.common.TextUtils.print((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = net.ajaskey.common.TextUtils.toString((java.util.List<java.lang.String>) strList5);
        net.ajaskey.common.TextUtils.print((java.util.List<java.lang.String>) strList5);
        java.lang.String str10 = net.ajaskey.common.TextUtils.toString((java.util.List<java.lang.String>) strList5);
        net.ajaskey.common.TextUtils.print((java.util.List<java.lang.String>) strList5);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test7065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7065");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        dateTime2.set((int) ' ', 0, 11);
        boolean boolean7 = dateTime2.isWeekday();
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(100L);
        int int10 = dateTime9.getMs();
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(100L);
        double double17 = dateTime14.getDeltaYears(dateTime16);
        java.text.SimpleDateFormat simpleDateFormat18 = dateTime14.getSdf();
        boolean boolean19 = dateTime9.isLessThanOrEqual(dateTime14);
        java.util.Date date20 = dateTime14.getTime();
        dateTime2.set(date20);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(date20);
        java.util.Date date23 = dateTime22.getTime();
        java.lang.String str24 = dateTime22.getDay();
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat30 = null;
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat30);
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double34 = dateTime31.getDeltaYears(dateTime33);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean39 = dateTime33.isEqual(dateTime38);
        java.util.Calendar calendar40 = dateTime33.getCal();
        boolean boolean41 = dateTime28.isLessThan(dateTime33);
        net.ajaskey.common.DateTime dateTime42 = null;
        boolean boolean43 = dateTime28.isEqual(dateTime42);
        java.text.SimpleDateFormat simpleDateFormat44 = dateTime28.getSdf();
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime(100L);
        double double51 = dateTime48.getDeltaYears(dateTime50);
        int int52 = dateTime48.getHour();
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime(100L);
        double double59 = dateTime56.getDeltaYears(dateTime58);
        int int60 = dateTime56.getHour();
        dateTime56.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat65 = null;
        net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat65);
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double69 = dateTime66.getDeltaYears(dateTime68);
        boolean boolean70 = dateTime56.isEqual(dateTime68);
        net.ajaskey.common.DateTime dateTime74 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat76 = null;
        net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat76);
        net.ajaskey.common.DateTime dateTime79 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double80 = dateTime77.getDeltaYears(dateTime79);
        net.ajaskey.common.DateTime dateTime84 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean85 = dateTime79.isEqual(dateTime84);
        java.util.Calendar calendar86 = dateTime79.getCal();
        boolean boolean87 = dateTime74.isLessThan(dateTime79);
        dateTime74.setFirstWorkDay();
        boolean boolean89 = dateTime56.sameDate(dateTime74);
        dateTime48.set(dateTime56);
        java.lang.String str91 = dateTime48.toFullString();
        boolean boolean92 = dateTime28.sameDate(dateTime48);
        int int93 = dateTime28.getDayOfYear();
        java.util.Calendar calendar94 = dateTime28.getCal();
        boolean boolean95 = dateTime22.isGreaterThanOrEqual(dateTime28);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-1972.041095890411d) + "'", double17 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(date20);
// flaky:         org.junit.Assert.assertEquals(date20.toString(), "Thu Apr 10 10:47:17 MST 2");
        org.junit.Assert.assertNotNull(date23);
// flaky:         org.junit.Assert.assertEquals(date23.toString(), "Thu Apr 10 10:47:17 MST 2");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Thursday" + "'", str24, "Thursday");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(calendar40);
        org.junit.Assert.assertEquals(calendar40.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(simpleDateFormat44);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-1972.041095890411d) + "'", double51 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 10 + "'", int52 == 10);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-1972.041095890411d) + "'", double59 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 10 + "'", int60 == 10);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(calendar86);
        org.junit.Assert.assertEquals(calendar86.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str91 + "' != '" + "Thu 10-Apr-0002 10:47:17" + "'", str91, "Thu 10-Apr-0002 10:47:17");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 100 + "'", int93 == 100);
        org.junit.Assert.assertNotNull(calendar94);
// flaky:         org.junit.Assert.assertEquals(calendar94.toString(), "java.util.GregorianCalendar[time=-62190310362641,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=17,MILLISECOND=359,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test7066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7066");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime(dateTime2);
        boolean boolean7 = dateTime6.isNull();
        int int8 = dateTime6.getDayOfWeek();
        java.text.SimpleDateFormat simpleDateFormat10 = null;
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat10);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double14 = dateTime11.getDeltaYears(dateTime13);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean19 = dateTime13.isEqual(dateTime18);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime(100L);
        double double26 = dateTime23.getDeltaYears(dateTime25);
        boolean boolean27 = dateTime25.isWeekday();
        int int28 = dateTime25.getDayOfYear();
        net.ajaskey.common.DateTime dateTime29 = dateTime13.copy(dateTime25);
        java.util.Calendar calendar30 = dateTime25.getCal();
        java.text.SimpleDateFormat simpleDateFormat32 = null;
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat32);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double36 = dateTime33.getDeltaYears(dateTime35);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean41 = dateTime35.isEqual(dateTime40);
        java.util.Calendar calendar42 = dateTime35.getCal();
        net.ajaskey.common.DateTime dateTime43 = null;
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime(dateTime43);
        java.lang.String str46 = dateTime44.format("     5.00");
        net.ajaskey.common.DateTime dateTime47 = null;
        long long48 = dateTime44.getDeltaDays(dateTime47);
        long long49 = dateTime35.getDeltaDays(dateTime44);
        net.ajaskey.common.DateTime dateTime50 = dateTime25.copy(dateTime44);
        java.lang.String str51 = dateTime25.format();
        net.ajaskey.common.DateTime dateTime52 = null;
        boolean boolean53 = net.ajaskey.common.Utils.sameMonth(dateTime25, dateTime52);
        double double54 = dateTime6.getDeltaYears(dateTime25);
        boolean boolean55 = dateTime6.isWeekday();
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime((long) 9);
        long long58 = dateTime6.getDeltaMilliSeconds(dateTime57);
        java.util.Calendar calendar59 = dateTime57.getCal();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-1972.041095890411d) + "'", double26 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 365 + "'", int28 == 365);
        org.junit.Assert.assertNotNull(dateTime29);
        org.junit.Assert.assertNotNull(calendar30);
        org.junit.Assert.assertEquals(calendar30.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(calendar42);
        org.junit.Assert.assertEquals(calendar42.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "     5.00" + "'", str46, "     5.00");
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-18438L) + "'", long49 == (-18438L));
        org.junit.Assert.assertNotNull(dateTime50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "BAD-DATE-FORMAT" + "'", str51, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 50.515068493150686d + "'", double54 == 50.515068493150686d);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
// flaky:         org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-1593103637397L) + "'", long58 == (-1593103637397L));
        org.junit.Assert.assertNotNull(calendar59);
        org.junit.Assert.assertEquals(calendar59.toString(), "java.util.GregorianCalendar[time=9,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=9,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    }

    @Test
    public void test7067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7067");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) (byte) 100);
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(100L);
        java.util.Calendar calendar4 = dateTime3.getCal();
        java.text.SimpleDateFormat simpleDateFormat6 = null;
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat6);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double10 = dateTime7.getDeltaYears(dateTime9);
        boolean boolean11 = dateTime7.isWeekday();
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long16 = dateTime7.getDeltaDays(dateTime15);
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(dateTime7);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime(100L);
        double double24 = dateTime21.getDeltaYears(dateTime23);
        boolean boolean25 = dateTime23.isWeekday();
        java.util.Date date26 = dateTime23.getTime();
        dateTime7.set(date26);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(100L);
        int int30 = dateTime29.getMs();
        java.lang.String str31 = dateTime29.toString();
        boolean boolean32 = dateTime7.isLessThanOrEqual(dateTime29);
        net.ajaskey.common.DateTime dateTime35 = dateTime7.parse("", "100.00");
        dateTime7.add((int) (short) 0, (int) (short) -1);
        double double39 = dateTime3.getDeltaYears(dateTime7);
        double double40 = dateTime1.getDeltaYears(dateTime7);
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime(100L);
        double double47 = dateTime44.getDeltaYears(dateTime46);
        int int48 = dateTime44.getHour();
        dateTime44.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat53 = null;
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat53);
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double57 = dateTime54.getDeltaYears(dateTime56);
        boolean boolean58 = dateTime44.isEqual(dateTime56);
        boolean boolean59 = dateTime1.isLessThan(dateTime44);
        java.util.Calendar calendar60 = dateTime1.getCal();
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime(calendar60);
        int int62 = dateTime61.getDayOfYear();
        java.util.Date date63 = dateTime61.getTime();
        org.junit.Assert.assertNotNull(calendar4);
        org.junit.Assert.assertEquals(calendar4.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1972.041095890411d) + "'", double24 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(date26);
        org.junit.Assert.assertEquals(date26.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "31-Dec-1969" + "'", str31, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(dateTime35);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-1972.041095890411d) + "'", double47 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 10 + "'", int48 == 10);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(calendar60);
        org.junit.Assert.assertEquals(calendar60.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 365 + "'", int62 == 365);
        org.junit.Assert.assertNotNull(date63);
        org.junit.Assert.assertEquals(date63.toString(), "Wed Dec 31 17:00:00 MST 1969");
    }

    @Test
    public void test7068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7068");
        net.ajaskey.common.Utils.TAB = "02-Jan-0001";
    }

    @Test
    public void test7069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7069");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime(" 1", "     5.00");
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat8 = null;
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
        boolean boolean10 = net.ajaskey.common.Utils.sameDate(dateTime6, dateTime9);
        java.text.SimpleDateFormat simpleDateFormat13 = null;
        java.text.SimpleDateFormat simpleDateFormat14 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime("January", simpleDateFormat13, simpleDateFormat14);
        java.text.SimpleDateFormat simpleDateFormat18 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime("January", simpleDateFormat18);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("", simpleDateFormat18);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("", simpleDateFormat14, simpleDateFormat18);
        dateTime9.setSdf(simpleDateFormat14);
        dateTime2.setSdf(simpleDateFormat14);
        java.text.SimpleDateFormat simpleDateFormat24 = dateTime2.getSdf();
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(simpleDateFormat14);
        org.junit.Assert.assertNotNull(simpleDateFormat18);
        org.junit.Assert.assertNotNull(simpleDateFormat24);
    }

    @Test
    public void test7070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7070");
        java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readTextFilefalse);
        org.junit.Assert.assertNotNull(strList2);
    }

    @Test
    public void test7071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7071");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat5 = null;
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat5);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        boolean boolean10 = dateTime3.isLessThan(dateTime8);
        java.lang.String str11 = dateTime8.toFullString();
        dateTime8.add(10, (int) (byte) -1);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(100L);
        dateTime16.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(100L);
        double double27 = dateTime24.getDeltaYears(dateTime26);
        boolean boolean28 = dateTime26.isWeekday();
        java.util.Date date29 = dateTime26.getTime();
        dateTime16.set(dateTime26);
        boolean boolean31 = net.ajaskey.common.Utils.sameDate(dateTime8, dateTime16);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime(dateTime16);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str11, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-1972.041095890411d) + "'", double27 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(date29);
        org.junit.Assert.assertEquals(date29.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test7072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7072");
        java.lang.String str2 = net.ajaskey.common.Utils.lfmt((long) (-239), 161);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                                                                                                                                             -239" + "'", str2, "                                                                                                                                                             -239");
    }

    @Test
    public void test7073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7073");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(13, (-1870), 1869);
        int int4 = dateTime3.getHour();
        int int5 = dateTime3.getDayOfYear();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 10 + "'", int4 == 10);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 102 + "'", int5 == 102);
    }

    @Test
    public void test7074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7074");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        int int7 = dateTime3.getHour();
        int int8 = dateTime3.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(100L);
        double double15 = dateTime12.getDeltaYears(dateTime14);
        boolean boolean16 = dateTime14.isWeekday();
        boolean boolean17 = net.ajaskey.common.Utils.sameDate(dateTime3, dateTime14);
        java.lang.String str18 = dateTime3.getMonth();
        java.lang.String str19 = dateTime3.format();
        java.text.SimpleDateFormat simpleDateFormat21 = null;
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat21);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double25 = dateTime22.getDeltaYears(dateTime24);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean30 = dateTime24.isEqual(dateTime29);
        java.util.Calendar calendar31 = dateTime24.getCal();
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime(1, (int) '4', 5);
        double double36 = dateTime24.getDeltaYears(dateTime35);
        java.lang.String str37 = dateTime35.format();
        boolean boolean38 = dateTime3.isLessThan(dateTime35);
        java.lang.String str39 = dateTime35.getDay();
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime(12, 42, (int) (byte) 1);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean48 = dateTime47.isNull();
        int int49 = dateTime47.getDayOfYear();
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime(100L);
        long long60 = dateTime57.getDeltaDays(dateTime59);
        int int61 = dateTime57.getHour();
        dateTime57.add((int) (byte) 100, (int) (byte) 0);
        double double65 = dateTime53.getDeltaYears(dateTime57);
        boolean boolean66 = dateTime47.isLessThanOrEqual(dateTime53);
        boolean boolean67 = dateTime43.sameDate(dateTime53);
        java.util.Date date68 = dateTime53.getTime();
        boolean boolean69 = dateTime35.isGreaterThanOrEqual(dateTime53);
        java.lang.String str70 = dateTime53.toString();
        java.lang.String str71 = dateTime53.getMonth();
        java.text.SimpleDateFormat simpleDateFormat73 = null;
        net.ajaskey.common.DateTime dateTime74 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat73);
        net.ajaskey.common.DateTime dateTime76 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double77 = dateTime74.getDeltaYears(dateTime76);
        net.ajaskey.common.DateTime dateTime81 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean82 = dateTime76.isEqual(dateTime81);
        java.util.Calendar calendar83 = dateTime76.getCal();
        java.lang.String str84 = dateTime76.format();
        dateTime76.add(12, 2020);
        boolean boolean88 = dateTime53.isLessThanOrEqual(dateTime76);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10 + "'", int8 == 10);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-1972.041095890411d) + "'", double15 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "April" + "'", str18, "April");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "BAD-DATE-FORMAT" + "'", str19, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(calendar31);
        org.junit.Assert.assertEquals(calendar31.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1965.9671232876713d + "'", double36 == 1965.9671232876713d);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "BAD-DATE-FORMAT" + "'", str37, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Tuesday" + "'", str39, "Tuesday");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-719795L) + "'", long60 == (-719795L));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 10 + "'", int61 == 10);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(date68);
// flaky:         org.junit.Assert.assertEquals(date68.toString(), "Thu Apr 10 10:47:17 MST 2");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "10-Apr-0002" + "'", str70, "10-Apr-0002");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "April" + "'", str71, "April");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(calendar83);
        org.junit.Assert.assertEquals(calendar83.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "BAD-DATE-FORMAT" + "'", str84, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
    }

    @Test
    public void test7075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7075");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        dateTime1.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str6 = dateTime1.getMonth();
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        dateTime8.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str13 = dateTime8.getMonth();
        int int14 = dateTime8.getMs();
        net.ajaskey.common.DateTime dateTime15 = dateTime1.copy(dateTime8);
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(100L);
        int int18 = dateTime17.getMs();
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime(100L);
        double double25 = dateTime22.getDeltaYears(dateTime24);
        java.text.SimpleDateFormat simpleDateFormat26 = dateTime22.getSdf();
        boolean boolean27 = dateTime17.isLessThanOrEqual(dateTime22);
        java.text.SimpleDateFormat simpleDateFormat29 = null;
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat29);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double33 = dateTime30.getDeltaYears(dateTime32);
        boolean boolean34 = dateTime30.isWeekday();
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long39 = dateTime30.getDeltaDays(dateTime38);
        long long40 = dateTime17.getDeltaDays(dateTime38);
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat46 = null;
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat46);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double50 = dateTime47.getDeltaYears(dateTime49);
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean55 = dateTime49.isEqual(dateTime54);
        java.util.Calendar calendar56 = dateTime49.getCal();
        boolean boolean57 = dateTime44.isLessThan(dateTime49);
        boolean boolean58 = net.ajaskey.common.Utils.sameDate(dateTime17, dateTime44);
        boolean boolean59 = dateTime8.isEqual(dateTime17);
        int int60 = dateTime8.getHour();
        java.lang.String str62 = dateTime8.format(" 252");
        int int63 = dateTime8.getSecond();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "January" + "'", str6, "January");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "January" + "'", str13, "January");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + (-1972.041095890411d) + "'", double25 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 719795L + "'", long40 == 719795L);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(calendar56);
        org.junit.Assert.assertEquals(calendar56.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 5 + "'", int60 == 5);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + " 252" + "'", str62, " 252");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
    }

    @Test
    public void test7076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7076");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        boolean boolean7 = dateTime5.isWeekday();
        java.util.Date date8 = dateTime5.getTime();
        int int9 = dateTime5.getDayOfWeek();
        java.lang.String str10 = dateTime5.toFullString();
        boolean boolean11 = dateTime5.isWeekday();
        java.lang.String str13 = dateTime5.format("");
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(62190310536144L);
        dateTime15.set(345, 36, 98);
        net.ajaskey.common.DateTime dateTime20 = dateTime5.copy(dateTime15);
        int int21 = dateTime20.getMinute();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(date8);
        org.junit.Assert.assertEquals(date8.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 4 + "'", int9 == 4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str10, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(dateTime20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 15 + "'", int21 == 15);
    }

    @Test
    public void test7077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7077");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(7, 14, (int) (short) -1);
        dateTime3.setFirstWorkDay();
    }

    @Test
    public void test7078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7078");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        java.text.SimpleDateFormat simpleDateFormat8 = null;
        java.text.SimpleDateFormat simpleDateFormat9 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("January", simpleDateFormat8, simpleDateFormat9);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime("Thursday", simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(dateTime11);
        boolean boolean13 = dateTime2.isEqual(dateTime11);
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(100L);
        double double20 = dateTime17.getDeltaYears(dateTime19);
        int int21 = dateTime17.getHour();
        java.util.Calendar calendar22 = dateTime17.getCal();
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime(calendar22);
        dateTime11.set(calendar22);
        java.lang.String str26 = dateTime11.format("     35");
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(100L);
        int int29 = dateTime28.getMs();
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime(100L);
        double double36 = dateTime33.getDeltaYears(dateTime35);
        java.text.SimpleDateFormat simpleDateFormat37 = dateTime33.getSdf();
        boolean boolean38 = dateTime28.isLessThanOrEqual(dateTime33);
        boolean boolean39 = dateTime28.isWeekday();
        java.util.Calendar calendar40 = dateTime28.getCal();
        java.text.SimpleDateFormat simpleDateFormat42 = null;
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat42);
        dateTime43.set((int) ' ', 0, 11);
        boolean boolean48 = dateTime43.isWeekday();
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime(100L);
        int int51 = dateTime50.getMs();
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime(100L);
        double double58 = dateTime55.getDeltaYears(dateTime57);
        java.text.SimpleDateFormat simpleDateFormat59 = dateTime55.getSdf();
        boolean boolean60 = dateTime50.isLessThanOrEqual(dateTime55);
        java.util.Date date61 = dateTime55.getTime();
        dateTime43.set(date61);
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime(date61);
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime(date61);
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime(date61);
        dateTime28.set(date61);
        dateTime11.set(date61);
        net.ajaskey.common.DateTime dateTime68 = null;
        net.ajaskey.common.DateTime dateTime69 = dateTime11.copy(dateTime68);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(simpleDateFormat9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-1972.041095890411d) + "'", double20 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
        org.junit.Assert.assertNotNull(calendar22);
// flaky:         org.junit.Assert.assertEquals(calendar22.toString(), "java.util.GregorianCalendar[time=-62190310362367,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=17,MILLISECOND=633,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "     35" + "'", str26, "     35");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-1972.041095890411d) + "'", double36 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(calendar40);
// flaky:         org.junit.Assert.assertEquals(calendar40.toString(), "java.util.GregorianCalendar[time=-62190310362367,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=17,MILLISECOND=633,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 100 + "'", int51 == 100);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-1972.041095890411d) + "'", double58 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(date61);
// flaky:         org.junit.Assert.assertEquals(date61.toString(), "Thu Apr 10 10:47:17 MST 2");
        org.junit.Assert.assertNull(dateTime69);
    }

    @Test
    public void test7079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7079");
        java.text.SimpleDateFormat simpleDateFormat2 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat5 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("", simpleDateFormat4, simpleDateFormat5);
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat2, simpleDateFormat5);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat14 = null;
        java.text.SimpleDateFormat simpleDateFormat15 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("January", simpleDateFormat14, simpleDateFormat15);
        java.text.SimpleDateFormat simpleDateFormat19 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("January", simpleDateFormat19);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("", simpleDateFormat19);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime("", simpleDateFormat15, simpleDateFormat19);
        dateTime11.setSdf(simpleDateFormat15);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("", simpleDateFormat5, simpleDateFormat15);
        java.lang.String str26 = dateTime24.format("25-Jun-2020");
        int int27 = dateTime24.getDayOfWeek();
        int int28 = dateTime24.getSecond();
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime(100L);
        double double35 = dateTime32.getDeltaYears(dateTime34);
        int int36 = dateTime32.getHour();
        dateTime32.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat41 = null;
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat41);
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double45 = dateTime42.getDeltaYears(dateTime44);
        boolean boolean46 = dateTime32.isEqual(dateTime44);
        java.lang.String str47 = dateTime32.toString();
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime(100L);
        int int50 = dateTime49.getMs();
        java.lang.String str51 = dateTime49.toString();
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime(100L);
        int int54 = dateTime53.getMs();
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime(100L);
        double double61 = dateTime58.getDeltaYears(dateTime60);
        java.text.SimpleDateFormat simpleDateFormat62 = dateTime58.getSdf();
        boolean boolean63 = dateTime53.isLessThanOrEqual(dateTime58);
        boolean boolean64 = dateTime53.isWeekday();
        java.util.Calendar calendar65 = dateTime53.getCal();
        dateTime49.set(calendar65);
        int int67 = dateTime49.getMs();
        int int68 = dateTime49.getSecond();
        int int69 = dateTime49.getDayOfWeek();
        net.ajaskey.common.DateTime dateTime70 = dateTime32.copy(dateTime49);
        java.lang.String str71 = dateTime32.getMonth();
        java.lang.String str72 = dateTime32.getDay();
        int int73 = dateTime32.getMs();
        boolean boolean74 = net.ajaskey.common.Utils.sameDate(dateTime24, dateTime32);
        int int75 = dateTime24.getDayOfYear();
        org.junit.Assert.assertNotNull(simpleDateFormat2);
        org.junit.Assert.assertNotNull(simpleDateFormat4);
        org.junit.Assert.assertNotNull(simpleDateFormat5);
        org.junit.Assert.assertNotNull(simpleDateFormat15);
        org.junit.Assert.assertNotNull(simpleDateFormat19);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "BAD-DATE-FORMAT" + "'", str26, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-1972.041095890411d) + "'", double35 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 10 + "'", int36 == 10);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "10-Apr-0002" + "'", str47, "10-Apr-0002");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "31-Dec-1969" + "'", str51, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 100 + "'", int54 == 100);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-1972.041095890411d) + "'", double61 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(calendar65);
        org.junit.Assert.assertEquals(calendar65.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 100 + "'", int67 == 100);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 4 + "'", int69 == 4);
        org.junit.Assert.assertNotNull(dateTime70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "April" + "'", str71, "April");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Thursday" + "'", str72, "Thursday");
// flaky:         org.junit.Assert.assertTrue("'" + int73 + "' != '" + 656 + "'", int73 == 656);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
    }

    @Test
    public void test7080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7080");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(100L);
        boolean boolean4 = dateTime3.isWeekday();
        java.lang.String str5 = dateTime3.getMonth();
        dateTime3.add(7, 10);
        java.text.SimpleDateFormat simpleDateFormat11 = null;
        java.text.SimpleDateFormat simpleDateFormat12 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("January", simpleDateFormat11, simpleDateFormat12);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime("100.00", simpleDateFormat11);
        java.text.SimpleDateFormat simpleDateFormat16 = null;
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double20 = dateTime17.getDeltaYears(dateTime19);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean25 = dateTime19.isEqual(dateTime24);
        long long26 = dateTime14.getDeltaDays(dateTime24);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(dateTime14);
        boolean boolean28 = dateTime3.isGreaterThan(dateTime14);
        boolean boolean29 = net.ajaskey.common.Utils.sameDate(dateTime1, dateTime3);
        int int30 = dateTime3.getMs();
        java.util.Calendar calendar31 = dateTime3.getCal();
        java.util.Date date32 = dateTime3.getTime();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "December" + "'", str5, "December");
        org.junit.Assert.assertNotNull(simpleDateFormat12);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertNotNull(calendar31);
        org.junit.Assert.assertEquals(calendar31.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(date32);
        org.junit.Assert.assertEquals(date32.toString(), "Wed Dec 31 17:00:00 MST 1969");
    }

    @Test
    public void test7081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7081");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        java.text.SimpleDateFormat simpleDateFormat3 = net.ajaskey.common.Utils.sdf;
        dateTime1.setSdf(simpleDateFormat3);
        int int5 = dateTime1.getDayOfWeek();
        java.text.SimpleDateFormat simpleDateFormat7 = null;
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat7);
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double11 = dateTime8.getDeltaYears(dateTime10);
        boolean boolean12 = dateTime8.isWeekday();
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long17 = dateTime8.getDeltaDays(dateTime16);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(dateTime8);
        boolean boolean19 = dateTime1.isGreaterThan(dateTime18);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime(100L);
        double double26 = dateTime23.getDeltaYears(dateTime25);
        java.text.SimpleDateFormat simpleDateFormat28 = null;
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat28);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double32 = dateTime29.getDeltaYears(dateTime31);
        boolean boolean33 = dateTime29.isWeekday();
        boolean boolean34 = dateTime23.sameDate(dateTime29);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime(100L);
        double double41 = dateTime38.getDeltaYears(dateTime40);
        java.text.SimpleDateFormat simpleDateFormat43 = null;
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat43);
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double47 = dateTime44.getDeltaYears(dateTime46);
        boolean boolean48 = dateTime44.isWeekday();
        boolean boolean49 = dateTime38.sameDate(dateTime44);
        java.text.SimpleDateFormat simpleDateFormat51 = null;
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat51);
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double55 = dateTime52.getDeltaYears(dateTime54);
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean60 = dateTime54.isEqual(dateTime59);
        dateTime38.set(dateTime59);
        long long62 = dateTime23.getDeltaMilliSeconds(dateTime59);
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime(100L);
        int int65 = dateTime64.getMs();
        net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime(100L);
        double double72 = dateTime69.getDeltaYears(dateTime71);
        java.text.SimpleDateFormat simpleDateFormat73 = dateTime69.getSdf();
        boolean boolean74 = dateTime64.isLessThanOrEqual(dateTime69);
        int int75 = dateTime69.getDayOfYear();
        boolean boolean76 = dateTime69.isWeekday();
        boolean boolean77 = dateTime23.sameDate(dateTime69);
        java.util.Date date78 = dateTime69.getTime();
        net.ajaskey.common.DateTime dateTime79 = new net.ajaskey.common.DateTime(date78);
        net.ajaskey.common.DateTime dateTime80 = new net.ajaskey.common.DateTime(date78);
        net.ajaskey.common.DateTime dateTime81 = new net.ajaskey.common.DateTime(date78);
        boolean boolean82 = dateTime1.isGreaterThan(dateTime81);
        dateTime81.add(99, (-2005));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 4 + "'", int5 == 4);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-1972.041095890411d) + "'", double26 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-1972.041095890411d) + "'", double41 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long62 + "' != '" + 0L + "'", long62 == 0L);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 100 + "'", int65 == 100);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + (-1972.041095890411d) + "'", double72 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 100 + "'", int75 == 100);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(date78);
// flaky:         org.junit.Assert.assertEquals(date78.toString(), "Thu Apr 10 10:47:17 MST 2");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test7082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7082");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("", "");
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:43:36", "                                                                                               52.00");
        long long6 = dateTime2.getDeltaMilliSeconds(dateTime5);
        java.text.SimpleDateFormat simpleDateFormat8 = null;
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
        dateTime9.set((int) ' ', 0, 11);
        boolean boolean14 = dateTime9.isWeekday();
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(100L);
        int int17 = dateTime16.getMs();
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime(100L);
        double double24 = dateTime21.getDeltaYears(dateTime23);
        java.text.SimpleDateFormat simpleDateFormat25 = dateTime21.getSdf();
        boolean boolean26 = dateTime16.isLessThanOrEqual(dateTime21);
        java.util.Date date27 = dateTime21.getTime();
        dateTime9.set(date27);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(date27);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime(date27);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(date27);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(100L);
        double double38 = dateTime35.getDeltaYears(dateTime37);
        int int39 = dateTime35.getHour();
        int int40 = dateTime35.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime(100L);
        double double47 = dateTime44.getDeltaYears(dateTime46);
        boolean boolean48 = dateTime46.isWeekday();
        boolean boolean49 = net.ajaskey.common.Utils.sameDate(dateTime35, dateTime46);
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime(100L);
        dateTime51.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime(100L);
        double double62 = dateTime59.getDeltaYears(dateTime61);
        boolean boolean63 = dateTime61.isWeekday();
        java.util.Date date64 = dateTime61.getTime();
        dateTime51.set(dateTime61);
        int int66 = dateTime51.getYear();
        boolean boolean67 = dateTime46.isGreaterThanOrEqual(dateTime51);
        int int68 = dateTime51.getSecond();
        java.lang.String str69 = dateTime51.getMonth();
        int int70 = dateTime51.getYear();
        java.lang.String str72 = dateTime51.format("                              10");
        boolean boolean73 = net.ajaskey.common.Utils.sameMonth(dateTime31, dateTime51);
        boolean boolean74 = dateTime51.isNull();
        boolean boolean75 = dateTime5.isLessThanOrEqual(dateTime51);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1972.041095890411d) + "'", double24 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(date27);
// flaky:         org.junit.Assert.assertEquals(date27.toString(), "Thu Apr 10 10:47:17 MST 2");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1972.041095890411d) + "'", double38 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 10 + "'", int39 == 10);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-1972.041095890411d) + "'", double47 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-1972.041095890411d) + "'", double62 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(date64);
        org.junit.Assert.assertEquals(date64.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1969 + "'", int66 == 1969);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "December" + "'", str69, "December");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1969 + "'", int70 == 1969);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "                              10" + "'", str72, "                              10");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test7083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7083");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        java.lang.String str3 = dateTime1.toString();
        java.text.SimpleDateFormat simpleDateFormat5 = null;
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat5);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        boolean boolean10 = dateTime6.isWeekday();
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long15 = dateTime6.getDeltaDays(dateTime14);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(dateTime6);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(100L);
        double double23 = dateTime20.getDeltaYears(dateTime22);
        boolean boolean24 = dateTime22.isWeekday();
        java.util.Date date25 = dateTime22.getTime();
        dateTime6.set(date25);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(100L);
        int int29 = dateTime28.getMs();
        java.lang.String str30 = dateTime28.toString();
        boolean boolean31 = dateTime6.isLessThanOrEqual(dateTime28);
        boolean boolean32 = dateTime1.isLessThanOrEqual(dateTime28);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("January", "11");
        double double36 = dateTime1.getDeltaYears(dateTime35);
        java.text.SimpleDateFormat simpleDateFormat37 = dateTime1.getSdf();
        java.text.SimpleDateFormat simpleDateFormat39 = null;
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat39);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double43 = dateTime40.getDeltaYears(dateTime42);
        boolean boolean44 = dateTime40.isWeekday();
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long49 = dateTime40.getDeltaDays(dateTime48);
        dateTime48.set((int) (short) -1, (int) (byte) 0, (int) ' ');
        java.text.SimpleDateFormat simpleDateFormat54 = dateTime48.getSdf();
        int int55 = dateTime48.getMinute();
        boolean boolean56 = dateTime1.isEqual(dateTime48);
        dateTime1.add(78, 262);
        java.util.Calendar calendar60 = dateTime1.getCal();
        java.util.Date date61 = dateTime1.getTime();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "31-Dec-1969" + "'", str3, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-1972.041095890411d) + "'", double23 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(date25);
        org.junit.Assert.assertEquals(date25.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "31-Dec-1969" + "'", str30, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(simpleDateFormat37);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertNull(simpleDateFormat54);
// flaky:         org.junit.Assert.assertTrue("'" + int55 + "' != '" + 47 + "'", int55 == 47);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(calendar60);
        org.junit.Assert.assertEquals(calendar60.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(date61);
        org.junit.Assert.assertEquals(date61.toString(), "Wed Dec 31 17:00:00 MST 1969");
    }

    @Test
    public void test7084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7084");
        java.lang.String str2 = net.ajaskey.common.Utils.ifmt(9, 205);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                                                                                                                                                                                            9" + "'", str2, "                                                                                                                                                                                                            9");
    }

    @Test
    public void test7085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7085");
        java.lang.String str2 = net.ajaskey.common.Utils.ifmt(791, 454);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                                                                                                                                                                                                                                                                                                                                                                                                                                                   791" + "'", str2, "                                                                                                                                                                                                                                                                                                                                                                                                                                                                   791");
    }

    @Test
    public void test7086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7086");
        net.ajaskey.common.Utils.makeDir("                                                                                           26");
    }

    @Test
    public void test7087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7087");
        java.text.SimpleDateFormat simpleDateFormat3 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime("", simpleDateFormat3, simpleDateFormat4);
        java.text.SimpleDateFormat simpleDateFormat7 = null;
        java.text.SimpleDateFormat simpleDateFormat8 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("January", simpleDateFormat7, simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat3, simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime("Mon 06-Jan-0100 17:00:00", simpleDateFormat8);
        java.text.SimpleDateFormat simpleDateFormat14 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat15 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("", simpleDateFormat14, simpleDateFormat15);
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:42:54", simpleDateFormat14);
        double double18 = dateTime11.getDeltaYears(dateTime17);
        java.text.SimpleDateFormat simpleDateFormat19 = dateTime17.getSdf();
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(100L);
        int int22 = dateTime21.getMs();
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(100L);
        double double29 = dateTime26.getDeltaYears(dateTime28);
        java.text.SimpleDateFormat simpleDateFormat30 = dateTime26.getSdf();
        boolean boolean31 = dateTime21.isLessThanOrEqual(dateTime26);
        java.lang.String str32 = dateTime21.toString();
        int int33 = dateTime21.getHour();
        int int34 = dateTime21.getYear();
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime(100L);
        double double41 = dateTime38.getDeltaYears(dateTime40);
        int int42 = dateTime38.getHour();
        dateTime38.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat47 = null;
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat47);
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double51 = dateTime48.getDeltaYears(dateTime50);
        boolean boolean52 = dateTime38.isEqual(dateTime50);
        int int53 = dateTime38.getMinute();
        boolean boolean54 = dateTime21.isGreaterThanOrEqual(dateTime38);
        java.util.Calendar calendar55 = dateTime38.getCal();
        dateTime17.set(dateTime38);
        dateTime17.set(205, 933, 0);
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime("Tuesday", "                                    26");
        long long64 = dateTime17.getDeltaDays(dateTime63);
        org.junit.Assert.assertNotNull(simpleDateFormat3);
        org.junit.Assert.assertNotNull(simpleDateFormat4);
        org.junit.Assert.assertNotNull(simpleDateFormat8);
        org.junit.Assert.assertNotNull(simpleDateFormat14);
        org.junit.Assert.assertNotNull(simpleDateFormat15);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNull(simpleDateFormat19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-1972.041095890411d) + "'", double29 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "31-Dec-1969" + "'", str32, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 5 + "'", int33 == 5);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1969 + "'", int34 == 1969);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-1972.041095890411d) + "'", double41 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10 + "'", int42 == 10);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int53 + "' != '" + 47 + "'", int53 == 47);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(calendar55);
// flaky:         org.junit.Assert.assertEquals(calendar55.toString(), "java.util.GregorianCalendar[time=-62190310362190,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=17,MILLISECOND=810,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 0L + "'", long64 == 0L);
    }

    @Test
    public void test7088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7088");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime(100L);
        int int3 = dateTime2.getMs();
        java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdf;
        dateTime2.setSdf(simpleDateFormat4);
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat4);
        java.text.SimpleDateFormat simpleDateFormat8 = null;
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double12 = dateTime9.getDeltaYears(dateTime11);
        boolean boolean13 = dateTime11.isNull();
        java.text.SimpleDateFormat simpleDateFormat15 = null;
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat15);
        dateTime16.set((int) ' ', 0, 11);
        boolean boolean21 = dateTime11.isGreaterThanOrEqual(dateTime16);
        double double22 = dateTime6.getDeltaYears(dateTime11);
        java.text.SimpleDateFormat simpleDateFormat24 = null;
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat24);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double28 = dateTime25.getDeltaYears(dateTime27);
        boolean boolean29 = dateTime27.isNull();
        boolean boolean30 = dateTime11.isGreaterThan(dateTime27);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(dateTime11);
        int int32 = dateTime31.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime(594, 45, 264);
        net.ajaskey.common.DateTime dateTime37 = dateTime31.copy(dateTime36);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat4);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 31 + "'", int32 == 31);
        org.junit.Assert.assertNotNull(dateTime37);
    }

    @Test
    public void test7089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7089");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        java.text.SimpleDateFormat simpleDateFormat8 = null;
        java.text.SimpleDateFormat simpleDateFormat9 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("January", simpleDateFormat8, simpleDateFormat9);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime("Thursday", simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(dateTime11);
        boolean boolean13 = dateTime2.isEqual(dateTime11);
        java.text.SimpleDateFormat simpleDateFormat15 = null;
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat15);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double19 = dateTime16.getDeltaYears(dateTime18);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean24 = dateTime18.isEqual(dateTime23);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(100L);
        int int27 = dateTime26.getMs();
        boolean boolean28 = dateTime23.isGreaterThanOrEqual(dateTime26);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime(100L);
        dateTime30.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime(100L);
        double double41 = dateTime38.getDeltaYears(dateTime40);
        boolean boolean42 = dateTime40.isWeekday();
        java.util.Date date43 = dateTime40.getTime();
        dateTime30.set(dateTime40);
        boolean boolean45 = net.ajaskey.common.Utils.sameDate(dateTime23, dateTime30);
        dateTime23.add((int) '#', 6);
        int int49 = dateTime2.getYears(dateTime23);
        java.lang.String str50 = dateTime2.getDay();
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime(dateTime2);
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime((long) (short) 0);
        int int54 = dateTime53.getHour();
        boolean boolean55 = dateTime53.isNull();
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime(dateTime53);
        dateTime56.set(0, 12, 12);
        boolean boolean61 = dateTime51.isGreaterThan(dateTime56);
        java.lang.String str62 = dateTime51.getDay();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(simpleDateFormat9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-1972.041095890411d) + "'", double41 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(date43);
        org.junit.Assert.assertEquals(date43.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "UNKNOWN" + "'", str50, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 5 + "'", int54 == 5);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Thursday" + "'", str62, "Thursday");
    }

    @Test
    public void test7090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7090");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        long long6 = dateTime3.getDeltaDays(dateTime5);
        int int7 = dateTime3.getHour();
        dateTime3.add((int) (byte) 100, (int) (byte) 0);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(100L);
        int int13 = dateTime12.getMs();
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(100L);
        double double20 = dateTime17.getDeltaYears(dateTime19);
        java.text.SimpleDateFormat simpleDateFormat21 = dateTime17.getSdf();
        boolean boolean22 = dateTime12.isLessThanOrEqual(dateTime17);
        java.text.SimpleDateFormat simpleDateFormat24 = null;
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat24);
        boolean boolean26 = dateTime17.isLessThanOrEqual(dateTime25);
        boolean boolean27 = dateTime3.sameDate(dateTime17);
        java.util.Calendar calendar28 = dateTime3.getCal();
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(calendar28);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime(calendar28);
        int int31 = dateTime30.getYear();
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-719795L) + "'", long6 == (-719795L));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-1972.041095890411d) + "'", double20 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(calendar28);
// flaky:         org.junit.Assert.assertEquals(calendar28.toString(), "java.util.GregorianCalendar[time=-62190310362136,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=17,MILLISECOND=864,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
    }

    @Test
    public void test7091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7091");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        java.text.SimpleDateFormat simpleDateFormat10 = dateTime6.getSdf();
        boolean boolean11 = dateTime1.isLessThanOrEqual(dateTime6);
        boolean boolean12 = dateTime1.isWeekday();
        java.text.SimpleDateFormat simpleDateFormat14 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat15 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("", simpleDateFormat14, simpleDateFormat15);
        int int17 = dateTime16.getHour();
        long long18 = dateTime1.getDeltaMilliSeconds(dateTime16);
        java.lang.String str19 = dateTime1.toFullString();
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat25 = null;
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat25);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double29 = dateTime26.getDeltaYears(dateTime28);
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean34 = dateTime28.isEqual(dateTime33);
        java.util.Calendar calendar35 = dateTime28.getCal();
        boolean boolean36 = dateTime23.isLessThan(dateTime28);
        dateTime23.setFirstWorkDay();
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime(100L);
        double double44 = dateTime41.getDeltaYears(dateTime43);
        java.text.SimpleDateFormat simpleDateFormat46 = null;
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat46);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double50 = dateTime47.getDeltaYears(dateTime49);
        boolean boolean51 = dateTime47.isWeekday();
        boolean boolean52 = dateTime41.sameDate(dateTime47);
        boolean boolean53 = dateTime23.sameDate(dateTime41);
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime(100L);
        int int56 = dateTime55.getMs();
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime(100L);
        double double63 = dateTime60.getDeltaYears(dateTime62);
        java.text.SimpleDateFormat simpleDateFormat64 = dateTime60.getSdf();
        boolean boolean65 = dateTime55.isLessThanOrEqual(dateTime60);
        boolean boolean66 = dateTime60.isWeekday();
        java.lang.String str67 = dateTime60.toString();
        double double68 = dateTime23.getDeltaYears(dateTime60);
        boolean boolean69 = dateTime1.isEqual(dateTime60);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(simpleDateFormat14);
        org.junit.Assert.assertNotNull(simpleDateFormat15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str19, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(calendar35);
        org.junit.Assert.assertEquals(calendar35.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-1972.041095890411d) + "'", double44 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-1972.041095890411d) + "'", double63 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "10-Apr-0002" + "'", str67, "10-Apr-0002");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test7092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7092");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        dateTime1.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str6 = dateTime1.getMonth();
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        dateTime8.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str13 = dateTime8.getMonth();
        int int14 = dateTime8.getMs();
        net.ajaskey.common.DateTime dateTime15 = dateTime1.copy(dateTime8);
        boolean boolean16 = dateTime1.isWeekday();
        java.lang.String str17 = dateTime1.format();
        int int18 = dateTime1.getMinute();
        int int19 = dateTime1.getMinute();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "January" + "'", str6, "January");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "January" + "'", str13, "January");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "BAD-DATE-FORMAT" + "'", str17, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test7093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7093");
        net.ajaskey.common.Utils.sleep(98);
    }

    @Test
    public void test7094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7094");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        int int3 = dateTime1.getHour();
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat9 = null;
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat9);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double13 = dateTime10.getDeltaYears(dateTime12);
        boolean boolean14 = dateTime7.isLessThan(dateTime12);
        java.lang.String str15 = dateTime12.toFullString();
        dateTime12.add(10, (int) (byte) -1);
        java.text.SimpleDateFormat simpleDateFormat20 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat22 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat23 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("", simpleDateFormat22, simpleDateFormat23);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat20, simpleDateFormat23);
        boolean boolean26 = dateTime12.isGreaterThan(dateTime25);
        boolean boolean27 = dateTime1.isEqual(dateTime12);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.lang.String str32 = dateTime31.toFullString();
        dateTime31.add(7, 53);
        net.ajaskey.common.DateTime dateTime36 = dateTime1.copy(dateTime31);
        int int37 = dateTime1.getMinute();
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime((long) (-1969));
        net.ajaskey.common.DateTime dateTime40 = dateTime1.copy(dateTime39);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 5 + "'", int3 == 5);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str15, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertNotNull(simpleDateFormat20);
        org.junit.Assert.assertNotNull(simpleDateFormat22);
        org.junit.Assert.assertNotNull(simpleDateFormat23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Thu 10-Apr-0002 10:47:18" + "'", str32, "Thu 10-Apr-0002 10:47:18");
        org.junit.Assert.assertNotNull(dateTime36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(dateTime40);
    }

    @Test
    public void test7095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7095");
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime(100L);
        double double7 = dateTime4.getDeltaYears(dateTime6);
        int int8 = dateTime4.getHour();
        dateTime4.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat13 = null;
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat13);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double17 = dateTime14.getDeltaYears(dateTime16);
        boolean boolean18 = dateTime4.isEqual(dateTime16);
        java.text.SimpleDateFormat simpleDateFormat20 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat22 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat23 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("", simpleDateFormat22, simpleDateFormat23);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat20, simpleDateFormat23);
        dateTime4.setSdf(simpleDateFormat20);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat33 = null;
        java.text.SimpleDateFormat simpleDateFormat34 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("January", simpleDateFormat33, simpleDateFormat34);
        java.text.SimpleDateFormat simpleDateFormat38 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime("January", simpleDateFormat38);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime("", simpleDateFormat38);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime("", simpleDateFormat34, simpleDateFormat38);
        dateTime30.setSdf(simpleDateFormat34);
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime("December", simpleDateFormat20, simpleDateFormat34);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(100L);
        int int46 = dateTime45.getMs();
        java.text.SimpleDateFormat simpleDateFormat47 = net.ajaskey.common.Utils.sdf;
        dateTime45.setSdf(simpleDateFormat47);
        java.lang.String str49 = dateTime45.format();
        boolean boolean50 = dateTime43.isLessThanOrEqual(dateTime45);
        int int51 = dateTime43.getMs();
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime(100L);
        int int54 = dateTime53.getMs();
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime(100L);
        double double61 = dateTime58.getDeltaYears(dateTime60);
        java.text.SimpleDateFormat simpleDateFormat62 = dateTime58.getSdf();
        boolean boolean63 = dateTime53.isLessThanOrEqual(dateTime58);
        boolean boolean64 = dateTime53.isWeekday();
        java.util.Calendar calendar65 = dateTime53.getCal();
        net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime(calendar65);
        net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime("10-Apr-0002", "5.00");
        boolean boolean70 = dateTime66.isEqual(dateTime69);
        long long71 = dateTime43.getDeltaMilliSeconds(dateTime69);
        int int72 = dateTime69.getMs();
        java.text.SimpleDateFormat simpleDateFormat73 = dateTime69.getSdf();
        java.text.SimpleDateFormat simpleDateFormat75 = null;
        net.ajaskey.common.DateTime dateTime76 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat75);
        net.ajaskey.common.DateTime dateTime78 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double79 = dateTime76.getDeltaYears(dateTime78);
        boolean boolean80 = dateTime76.isWeekday();
        net.ajaskey.common.DateTime dateTime84 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long85 = dateTime76.getDeltaDays(dateTime84);
        net.ajaskey.common.DateTime dateTime86 = new net.ajaskey.common.DateTime(dateTime76);
        dateTime86.setFirstWorkDay();
        java.util.Date date88 = dateTime86.getTime();
        net.ajaskey.common.DateTime dateTime89 = dateTime69.copy(dateTime86);
        boolean boolean90 = dateTime86.isNull();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-1972.041095890411d) + "'", double7 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10 + "'", int8 == 10);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(simpleDateFormat20);
        org.junit.Assert.assertNotNull(simpleDateFormat22);
        org.junit.Assert.assertNotNull(simpleDateFormat23);
        org.junit.Assert.assertNotNull(simpleDateFormat34);
        org.junit.Assert.assertNotNull(simpleDateFormat38);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "31-Dec-1969" + "'", str49, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 100 + "'", int54 == 100);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-1972.041095890411d) + "'", double61 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(calendar65);
        org.junit.Assert.assertEquals(calendar65.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 0L + "'", long71 == 0L);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNull(simpleDateFormat73);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 0L + "'", long85 == 0L);
        org.junit.Assert.assertNotNull(date88);
// flaky:         org.junit.Assert.assertEquals(date88.toString(), "Thu Jun 25 10:47:18 MDT 2020");
        org.junit.Assert.assertNotNull(dateTime89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test7096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7096");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(245, 76, 258);
        int int4 = dateTime3.getDayOfYear();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 13 + "'", int4 == 13);
    }

    @Test
    public void test7097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7097");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) 522);
    }

    @Test
    public void test7098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7098");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        java.text.SimpleDateFormat simpleDateFormat8 = null;
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double12 = dateTime9.getDeltaYears(dateTime11);
        boolean boolean13 = dateTime9.isWeekday();
        boolean boolean14 = dateTime3.sameDate(dateTime9);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime(100L);
        double double21 = dateTime18.getDeltaYears(dateTime20);
        java.text.SimpleDateFormat simpleDateFormat23 = null;
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat23);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double27 = dateTime24.getDeltaYears(dateTime26);
        boolean boolean28 = dateTime24.isWeekday();
        boolean boolean29 = dateTime18.sameDate(dateTime24);
        java.text.SimpleDateFormat simpleDateFormat31 = null;
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat31);
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double35 = dateTime32.getDeltaYears(dateTime34);
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean40 = dateTime34.isEqual(dateTime39);
        dateTime18.set(dateTime39);
        long long42 = dateTime3.getDeltaMilliSeconds(dateTime39);
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat48 = null;
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat48);
        boolean boolean50 = net.ajaskey.common.Utils.sameDate(dateTime46, dateTime49);
        boolean boolean51 = net.ajaskey.common.Utils.sameDate(dateTime3, dateTime49);
        int int52 = dateTime49.getHour();
        dateTime49.add((int) (short) 1, 454);
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime("     62,190,310,586,261", "  31");
        int int59 = dateTime49.getYears(dateTime58);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-1972.041095890411d) + "'", double21 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
    }

    @Test
    public void test7099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7099");
        java.lang.String str2 = net.ajaskey.common.Utils.fmt((double) 62190310389931L, 69);
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Invalid fmt" + "'", str2, "Invalid fmt");
    }

    @Test
    public void test7100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7100");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        java.text.SimpleDateFormat simpleDateFormat10 = dateTime6.getSdf();
        boolean boolean11 = dateTime1.isLessThanOrEqual(dateTime6);
        int int12 = dateTime1.getDayOfWeek();
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(100L);
        int int15 = dateTime14.getMs();
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(100L);
        double double22 = dateTime19.getDeltaYears(dateTime21);
        java.text.SimpleDateFormat simpleDateFormat23 = dateTime19.getSdf();
        boolean boolean24 = dateTime14.isLessThanOrEqual(dateTime19);
        java.text.SimpleDateFormat simpleDateFormat26 = null;
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat26);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double30 = dateTime27.getDeltaYears(dateTime29);
        boolean boolean31 = dateTime27.isWeekday();
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long36 = dateTime27.getDeltaDays(dateTime35);
        long long37 = dateTime14.getDeltaDays(dateTime35);
        java.lang.String str38 = dateTime35.toFullString();
        java.util.Calendar calendar39 = dateTime35.getCal();
        int int40 = dateTime35.getSecond();
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime("                                                                                                                                                                                                                                                                     252", "            32");
        boolean boolean44 = dateTime35.isEqual(dateTime43);
        net.ajaskey.common.DateTime dateTime45 = dateTime1.copy(dateTime43);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 4 + "'", int12 == 4);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-1972.041095890411d) + "'", double22 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 719795L + "'", long37 == 719795L);
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Thu 10-Apr-0002 10:47:18" + "'", str38, "Thu 10-Apr-0002 10:47:18");
        org.junit.Assert.assertNotNull(calendar39);
// flaky:         org.junit.Assert.assertEquals(calendar39.toString(), "java.util.GregorianCalendar[time=-62190310361887,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=18,MILLISECOND=113,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
// flaky:         org.junit.Assert.assertTrue("'" + int40 + "' != '" + 18 + "'", int40 == 18);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(dateTime45);
    }

    @Test
    public void test7101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7101");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean10 = dateTime4.isEqual(dateTime9);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(100L);
        int int13 = dateTime12.getMs();
        boolean boolean14 = dateTime9.isGreaterThanOrEqual(dateTime12);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime(100L);
        double double21 = dateTime18.getDeltaYears(dateTime20);
        java.util.Date date22 = dateTime18.getTime();
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime(date22);
        net.ajaskey.common.DateTime dateTime26 = dateTime23.parse("31-Dec-1969", "January");
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(100L);
        int int29 = dateTime28.getMs();
        java.lang.String str30 = dateTime28.toString();
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime(100L);
        double double37 = dateTime34.getDeltaYears(dateTime36);
        int int38 = dateTime34.getHour();
        int int39 = dateTime34.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(100L);
        double double46 = dateTime43.getDeltaYears(dateTime45);
        boolean boolean47 = dateTime45.isWeekday();
        boolean boolean48 = net.ajaskey.common.Utils.sameDate(dateTime34, dateTime45);
        boolean boolean49 = net.ajaskey.common.Utils.sameDate(dateTime28, dateTime34);
        dateTime23.set(dateTime34);
        java.util.Calendar calendar51 = dateTime34.getCal();
        dateTime9.set(calendar51);
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime(dateTime9);
        net.ajaskey.common.DateTime dateTime55 = dateTime53.parse("Invalid Time");
        dateTime53.setFirstWorkDay();
        boolean boolean57 = dateTime53.isWeekday();
        java.lang.String str58 = dateTime53.getDay();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-1972.041095890411d) + "'", double21 == (-1972.041095890411d));
        org.junit.Assert.assertNotNull(date22);
// flaky:         org.junit.Assert.assertEquals(date22.toString(), "Thu Apr 10 10:47:18 MST 2");
        org.junit.Assert.assertNull(dateTime26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "31-Dec-1969" + "'", str30, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-1972.041095890411d) + "'", double37 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 10 + "'", int38 == 10);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 10 + "'", int39 == 10);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-1972.041095890411d) + "'", double46 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(calendar51);
// flaky:         org.junit.Assert.assertEquals(calendar51.toString(), "java.util.GregorianCalendar[time=-62190310361849,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=18,MILLISECOND=151,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNull(dateTime55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Thursday" + "'", str58, "Thursday");
    }

    @Test
    public void test7102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7102");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean4 = dateTime3.isNull();
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime();
        boolean boolean6 = dateTime3.sameDate(dateTime5);
        java.text.SimpleDateFormat simpleDateFormat8 = null;
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double12 = dateTime9.getDeltaYears(dateTime11);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean17 = dateTime11.isEqual(dateTime16);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(100L);
        int int20 = dateTime19.getMs();
        boolean boolean21 = dateTime16.isGreaterThanOrEqual(dateTime19);
        java.text.SimpleDateFormat simpleDateFormat23 = null;
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat23);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double27 = dateTime24.getDeltaYears(dateTime26);
        boolean boolean28 = dateTime24.isWeekday();
        boolean boolean29 = dateTime19.isLessThanOrEqual(dateTime24);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(100L);
        dateTime31.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean36 = dateTime31.isWeekday();
        boolean boolean37 = dateTime19.isGreaterThanOrEqual(dateTime31);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime(100L);
        double double44 = dateTime41.getDeltaYears(dateTime43);
        java.text.SimpleDateFormat simpleDateFormat46 = null;
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat46);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double50 = dateTime47.getDeltaYears(dateTime49);
        boolean boolean51 = dateTime47.isWeekday();
        boolean boolean52 = dateTime41.sameDate(dateTime47);
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime(100L);
        double double59 = dateTime56.getDeltaYears(dateTime58);
        java.text.SimpleDateFormat simpleDateFormat61 = null;
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat61);
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double65 = dateTime62.getDeltaYears(dateTime64);
        boolean boolean66 = dateTime62.isWeekday();
        boolean boolean67 = dateTime56.sameDate(dateTime62);
        java.text.SimpleDateFormat simpleDateFormat69 = null;
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat69);
        net.ajaskey.common.DateTime dateTime72 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double73 = dateTime70.getDeltaYears(dateTime72);
        net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean78 = dateTime72.isEqual(dateTime77);
        dateTime56.set(dateTime77);
        long long80 = dateTime41.getDeltaMilliSeconds(dateTime77);
        net.ajaskey.common.DateTime dateTime84 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat86 = null;
        net.ajaskey.common.DateTime dateTime87 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat86);
        boolean boolean88 = net.ajaskey.common.Utils.sameDate(dateTime84, dateTime87);
        boolean boolean89 = net.ajaskey.common.Utils.sameDate(dateTime41, dateTime87);
        dateTime31.set(dateTime87);
        net.ajaskey.common.DateTime dateTime92 = dateTime87.parse("January");
        boolean boolean93 = dateTime5.isGreaterThanOrEqual(dateTime87);
        dateTime87.setFirstWorkDay();
        dateTime87.set(166, (-1933), 510);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-1972.041095890411d) + "'", double44 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-1972.041095890411d) + "'", double59 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long80 + "' != '" + 0L + "'", long80 == 0L);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNull(dateTime92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test7103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7103");
        java.util.zip.ZipOutputStream zipOutputStream1 = null;
        // The following exception was thrown during execution in test generation
        try {
            net.ajaskey.common.Utils.writeToZipFile("-1", zipOutputStream1);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: -1 (The system cannot find the file specified)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
    }

    @Test
    public void test7104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7104");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        boolean boolean3 = dateTime1.isWeekday();
        int int4 = dateTime1.getHour();
        dateTime1.setFirstWorkDay();
        java.lang.String str6 = dateTime1.format();
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(62190310608217L);
        boolean boolean9 = dateTime1.isGreaterThanOrEqual(dateTime8);
        boolean boolean10 = dateTime1.isNull();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "BAD-DATE-FORMAT" + "'", str6, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test7105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7105");
        net.ajaskey.common.DateTime dateTime0 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime(100L);
        int int3 = dateTime2.getMs();
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(100L);
        double double10 = dateTime7.getDeltaYears(dateTime9);
        java.text.SimpleDateFormat simpleDateFormat11 = dateTime7.getSdf();
        boolean boolean12 = dateTime2.isLessThanOrEqual(dateTime7);
        int int13 = dateTime2.getMinute();
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(100L);
        double double20 = dateTime17.getDeltaYears(dateTime19);
        int int21 = dateTime17.getHour();
        dateTime17.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat26 = null;
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat26);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double30 = dateTime27.getDeltaYears(dateTime29);
        boolean boolean31 = dateTime17.isEqual(dateTime29);
        java.text.SimpleDateFormat simpleDateFormat33 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat35 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat36 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime("", simpleDateFormat35, simpleDateFormat36);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat33, simpleDateFormat36);
        dateTime17.setSdf(simpleDateFormat33);
        dateTime2.setSdf(simpleDateFormat33);
        int int41 = dateTime2.getMs();
        boolean boolean42 = net.ajaskey.common.Utils.sameMonth(dateTime0, dateTime2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1972.041095890411d) + "'", double10 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-1972.041095890411d) + "'", double20 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(simpleDateFormat33);
        org.junit.Assert.assertNotNull(simpleDateFormat35);
        org.junit.Assert.assertNotNull(simpleDateFormat36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test7106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7106");
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime(100L);
        int int5 = dateTime4.getMs();
        java.text.SimpleDateFormat simpleDateFormat6 = net.ajaskey.common.Utils.sdf;
        dateTime4.setSdf(simpleDateFormat6);
        java.text.SimpleDateFormat simpleDateFormat8 = net.ajaskey.common.Utils.sdfFull;
        dateTime4.setSdf(simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
        int int12 = dateTime11.getMs();
        java.lang.String str13 = dateTime11.toString();
        java.util.Date date14 = dateTime11.getTime();
        int int15 = dateTime11.getDayOfYear();
        java.text.SimpleDateFormat simpleDateFormat17 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat18 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime("", simpleDateFormat17, simpleDateFormat18);
        dateTime11.setSdf(simpleDateFormat17);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("", simpleDateFormat8, simpleDateFormat17);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime(100L);
        int int26 = dateTime25.getMs();
        java.text.SimpleDateFormat simpleDateFormat27 = net.ajaskey.common.Utils.sdf;
        dateTime25.setSdf(simpleDateFormat27);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat27);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((long) 53);
        boolean boolean32 = dateTime31.isWeekday();
        boolean boolean33 = dateTime29.sameDate(dateTime31);
        java.util.Date date34 = dateTime31.getTime();
        java.text.SimpleDateFormat simpleDateFormat36 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime("January", simpleDateFormat36);
        dateTime31.setSdf(simpleDateFormat36);
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat36);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime("Wed 12-Apr-0139 10:44:24", simpleDateFormat8, simpleDateFormat36);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime("JanuarySun 31-Dec-0237 10:46:08Sun 31-Dec-0237 10:46:08                                                                                               52.00Sun 31-Dec-0237 10:46:08hi!Sun 31-Dec-0237 10:46:08", simpleDateFormat36);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat6);
        org.junit.Assert.assertNotNull(simpleDateFormat8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "31-Dec-1969" + "'", str13, "31-Dec-1969");
        org.junit.Assert.assertNotNull(date14);
        org.junit.Assert.assertEquals(date14.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 365 + "'", int15 == 365);
        org.junit.Assert.assertNotNull(simpleDateFormat17);
        org.junit.Assert.assertNotNull(simpleDateFormat18);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(date34);
        org.junit.Assert.assertEquals(date34.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertNotNull(simpleDateFormat36);
    }

    @Test
    public void test7107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7107");
        net.ajaskey.common.Utils.TAB = "Thu 10-Apr-0002 10:47:09";
    }

    @Test
    public void test7108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7108");
        net.ajaskey.common.DateTime dateTime0 = null;
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(dateTime0);
        dateTime1.set(42, 10, 10);
        java.util.Date date6 = dateTime1.getTime();
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat12 = null;
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat12);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double16 = dateTime13.getDeltaYears(dateTime15);
        boolean boolean17 = dateTime10.isLessThan(dateTime15);
        java.lang.String str18 = dateTime15.toFullString();
        int int19 = dateTime15.getSecond();
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime(dateTime15);
        java.text.SimpleDateFormat simpleDateFormat22 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat23 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("", simpleDateFormat22, simpleDateFormat23);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime(100L);
        double double31 = dateTime28.getDeltaYears(dateTime30);
        int int32 = dateTime28.getHour();
        java.text.SimpleDateFormat simpleDateFormat34 = null;
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat34);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double38 = dateTime35.getDeltaYears(dateTime37);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean43 = dateTime37.isEqual(dateTime42);
        java.util.Calendar calendar44 = dateTime37.getCal();
        dateTime28.set(calendar44);
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime(calendar44);
        boolean boolean47 = dateTime24.isLessThan(dateTime46);
        double double48 = dateTime15.getDeltaYears(dateTime46);
        net.ajaskey.common.DateTime dateTime49 = dateTime1.copy(dateTime46);
        int int50 = dateTime46.getSecond();
        java.lang.String str51 = dateTime46.getDay();
        dateTime46.add(265, 7);
        org.junit.Assert.assertNotNull(date6);
// flaky:         org.junit.Assert.assertEquals(date6.toString(), "Sat Nov 10 10:47:18 MST 42");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str18, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(simpleDateFormat22);
        org.junit.Assert.assertNotNull(simpleDateFormat23);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-1972.041095890411d) + "'", double31 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10 + "'", int32 == 10);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(calendar44);
        org.junit.Assert.assertEquals(calendar44.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(dateTime49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Wednesday" + "'", str51, "Wednesday");
    }

    @Test
    public void test7109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7109");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        boolean boolean3 = dateTime1.isWeekday();
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime((long) (short) 0);
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime(100L);
        int int8 = dateTime7.getMs();
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(100L);
        double double15 = dateTime12.getDeltaYears(dateTime14);
        java.text.SimpleDateFormat simpleDateFormat16 = dateTime12.getSdf();
        boolean boolean17 = dateTime7.isLessThanOrEqual(dateTime12);
        java.text.SimpleDateFormat simpleDateFormat19 = null;
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat19);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double23 = dateTime20.getDeltaYears(dateTime22);
        boolean boolean24 = dateTime20.isWeekday();
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long29 = dateTime20.getDeltaDays(dateTime28);
        long long30 = dateTime7.getDeltaDays(dateTime28);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime(100L);
        dateTime32.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean37 = dateTime32.isWeekday();
        int int38 = dateTime7.getYears(dateTime32);
        int int39 = dateTime7.getYear();
        java.util.Calendar calendar40 = dateTime7.getCal();
        net.ajaskey.common.DateTime dateTime41 = dateTime5.copy(dateTime7);
        boolean boolean42 = dateTime1.isGreaterThan(dateTime7);
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime(100L);
        double double49 = dateTime46.getDeltaYears(dateTime48);
        boolean boolean50 = dateTime48.isWeekday();
        java.util.Date date51 = dateTime48.getTime();
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime(date51);
        java.text.SimpleDateFormat simpleDateFormat54 = null;
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat54);
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double58 = dateTime55.getDeltaYears(dateTime57);
        boolean boolean59 = dateTime55.isWeekday();
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long64 = dateTime55.getDeltaDays(dateTime63);
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime(dateTime55);
        boolean boolean66 = dateTime52.isGreaterThan(dateTime55);
        boolean boolean67 = dateTime7.sameDate(dateTime52);
        int int68 = dateTime7.getDayOfWeek();
        net.ajaskey.common.DateTime dateTime72 = new net.ajaskey.common.DateTime((int) (byte) 0, 13, 9);
        int int73 = dateTime72.getDayOfMonth();
        boolean boolean74 = net.ajaskey.common.Utils.sameDate(dateTime7, dateTime72);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-1972.041095890411d) + "'", double15 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 719795L + "'", long30 == 719795L);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1870) + "'", int38 == (-1870));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1969 + "'", int39 == 1969);
        org.junit.Assert.assertNotNull(calendar40);
        org.junit.Assert.assertEquals(calendar40.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(dateTime41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-1972.041095890411d) + "'", double49 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(date51);
        org.junit.Assert.assertEquals(date51.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 0L + "'", long64 == 0L);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 4 + "'", int68 == 4);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 9 + "'", int73 == 9);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test7110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7110");
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime(2020, (-1), (int) 'a');
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat10 = null;
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat10);
        boolean boolean12 = net.ajaskey.common.Utils.sameDate(dateTime8, dateTime11);
        boolean boolean13 = dateTime4.isEqual(dateTime8);
        java.text.SimpleDateFormat simpleDateFormat18 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat20 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat21 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime("", simpleDateFormat20, simpleDateFormat21);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat18, simpleDateFormat21);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("10-Apr-0002", simpleDateFormat21);
        java.text.SimpleDateFormat simpleDateFormat27 = null;
        java.text.SimpleDateFormat simpleDateFormat28 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime("January", simpleDateFormat27, simpleDateFormat28);
        java.text.SimpleDateFormat simpleDateFormat32 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime("January", simpleDateFormat32);
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime("", simpleDateFormat32);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("", simpleDateFormat28, simpleDateFormat32);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime("January                                                                                               52.00                                                                                               52.00                                                                                               52.00                                                                                               52.00hi!                                                                                               52.00", simpleDateFormat21, simpleDateFormat32);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime(100L);
        double double43 = dateTime40.getDeltaYears(dateTime42);
        int int44 = dateTime40.getHour();
        dateTime40.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat49 = null;
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat49);
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double53 = dateTime50.getDeltaYears(dateTime52);
        boolean boolean54 = dateTime40.isEqual(dateTime52);
        java.text.SimpleDateFormat simpleDateFormat56 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat58 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat59 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime("", simpleDateFormat58, simpleDateFormat59);
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat56, simpleDateFormat59);
        dateTime40.setSdf(simpleDateFormat56);
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime("", simpleDateFormat21, simpleDateFormat56);
        dateTime8.setSdf(simpleDateFormat21);
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime("Wed 31-Dec-1969 17:00:00", simpleDateFormat21);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(simpleDateFormat18);
        org.junit.Assert.assertNotNull(simpleDateFormat20);
        org.junit.Assert.assertNotNull(simpleDateFormat21);
        org.junit.Assert.assertNotNull(simpleDateFormat28);
        org.junit.Assert.assertNotNull(simpleDateFormat32);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-1972.041095890411d) + "'", double43 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 10 + "'", int44 == 10);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(simpleDateFormat56);
        org.junit.Assert.assertNotNull(simpleDateFormat58);
        org.junit.Assert.assertNotNull(simpleDateFormat59);
    }

    @Test
    public void test7111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7111");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        boolean boolean6 = dateTime2.isWeekday();
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long11 = dateTime2.getDeltaDays(dateTime10);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(dateTime2);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(100L);
        double double19 = dateTime16.getDeltaYears(dateTime18);
        boolean boolean20 = dateTime18.isWeekday();
        java.util.Date date21 = dateTime18.getTime();
        dateTime2.set(date21);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime(100L);
        int int25 = dateTime24.getMs();
        java.lang.String str26 = dateTime24.toString();
        boolean boolean27 = dateTime2.isLessThanOrEqual(dateTime24);
        boolean boolean28 = dateTime2.isWeekday();
        net.ajaskey.common.DateTime dateTime31 = dateTime2.parse("                              -1", "                              86");
        net.ajaskey.common.DateTime dateTime34 = dateTime2.parse("January                                                                                               52.00                                                                                               52.00                                                                                               52.00                                                                                               52.00hi!                                                                                               52.00", "Fri 31-Dec-0001 10:43:48");
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-1972.041095890411d) + "'", double19 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(date21);
        org.junit.Assert.assertEquals(date21.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "31-Dec-1969" + "'", str26, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(dateTime31);
        org.junit.Assert.assertNull(dateTime34);
    }

    @Test
    public void test7112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7112");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) 8);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime(100L);
        double double8 = dateTime5.getDeltaYears(dateTime7);
        int int9 = dateTime5.getHour();
        dateTime5.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat14 = null;
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat14);
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double18 = dateTime15.getDeltaYears(dateTime17);
        boolean boolean19 = dateTime5.isEqual(dateTime17);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat25 = null;
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat25);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double29 = dateTime26.getDeltaYears(dateTime28);
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean34 = dateTime28.isEqual(dateTime33);
        java.util.Calendar calendar35 = dateTime28.getCal();
        boolean boolean36 = dateTime23.isLessThan(dateTime28);
        dateTime23.setFirstWorkDay();
        boolean boolean38 = dateTime5.sameDate(dateTime23);
        boolean boolean39 = net.ajaskey.common.Utils.sameMonth(dateTime1, dateTime23);
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(100L);
        double double46 = dateTime43.getDeltaYears(dateTime45);
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime(100L);
        double double53 = dateTime50.getDeltaYears(dateTime52);
        int int54 = dateTime50.getHour();
        int int55 = dateTime50.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime(100L);
        double double62 = dateTime59.getDeltaYears(dateTime61);
        boolean boolean63 = dateTime61.isWeekday();
        boolean boolean64 = net.ajaskey.common.Utils.sameDate(dateTime50, dateTime61);
        net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime(100L);
        dateTime66.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime74 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime76 = new net.ajaskey.common.DateTime(100L);
        double double77 = dateTime74.getDeltaYears(dateTime76);
        boolean boolean78 = dateTime76.isWeekday();
        java.util.Date date79 = dateTime76.getTime();
        dateTime66.set(dateTime76);
        int int81 = dateTime66.getYear();
        boolean boolean82 = dateTime61.isGreaterThanOrEqual(dateTime66);
        boolean boolean83 = dateTime43.sameDate(dateTime61);
        dateTime61.set((int) (short) 0, 8, 161);
        boolean boolean88 = dateTime23.sameDate(dateTime61);
        java.lang.String str89 = dateTime23.toString();
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-1972.041095890411d) + "'", double8 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(calendar35);
        org.junit.Assert.assertEquals(calendar35.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-1972.041095890411d) + "'", double46 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-1972.041095890411d) + "'", double53 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 10 + "'", int54 == 10);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 10 + "'", int55 == 10);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-1972.041095890411d) + "'", double62 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-1972.041095890411d) + "'", double77 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(date79);
        org.junit.Assert.assertEquals(date79.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1969 + "'", int81 == 1969);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "10-Apr-0002" + "'", str89, "10-Apr-0002");
    }

    @Test
    public void test7113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7113");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (byte) 10, (int) (byte) 0, 2);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime(dateTime3);
        int int5 = dateTime4.getMinute();
        int int6 = dateTime4.getSecond();
// flaky:         org.junit.Assert.assertTrue("'" + int5 + "' != '" + 47 + "'", int5 == 47);
// flaky:         org.junit.Assert.assertTrue("'" + int6 + "' != '" + 18 + "'", int6 == 18);
    }

    @Test
    public void test7114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7114");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) 57);
    }

    @Test
    public void test7115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7115");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        java.util.Date date7 = dateTime3.getTime();
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(date7);
        net.ajaskey.common.DateTime dateTime11 = dateTime8.parse("31-Dec-1969", "January");
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(100L);
        int int14 = dateTime13.getMs();
        java.lang.String str15 = dateTime13.toString();
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(100L);
        double double22 = dateTime19.getDeltaYears(dateTime21);
        int int23 = dateTime19.getHour();
        int int24 = dateTime19.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime(100L);
        double double31 = dateTime28.getDeltaYears(dateTime30);
        boolean boolean32 = dateTime30.isWeekday();
        boolean boolean33 = net.ajaskey.common.Utils.sameDate(dateTime19, dateTime30);
        boolean boolean34 = net.ajaskey.common.Utils.sameDate(dateTime13, dateTime19);
        dateTime8.set(dateTime19);
        java.util.Date date36 = dateTime8.getTime();
        dateTime8.add(100, 38);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime(dateTime8);
        int int41 = dateTime8.getMs();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertNotNull(date7);
// flaky:         org.junit.Assert.assertEquals(date7.toString(), "Thu Apr 10 10:47:18 MST 2");
        org.junit.Assert.assertNull(dateTime11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "31-Dec-1969" + "'", str15, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-1972.041095890411d) + "'", double22 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-1972.041095890411d) + "'", double31 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(date36);
// flaky:         org.junit.Assert.assertEquals(date36.toString(), "Thu Apr 10 10:47:18 MST 2");
// flaky:         org.junit.Assert.assertTrue("'" + int41 + "' != '" + 411 + "'", int41 == 411);
    }

    @Test
    public void test7116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7116");
        java.lang.String str1 = net.ajaskey.common.Utils.getFromUrl("-62,190,310,610,288");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
    }

    @Test
    public void test7117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7117");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(345, 31, 31);
        java.util.Date date4 = dateTime3.getTime();
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(date4);
        org.junit.Assert.assertNotNull(date4);
// flaky:         org.junit.Assert.assertEquals(date4.toString(), "Mon Aug 31 10:47:18 MST 347");
    }

    @Test
    public void test7118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7118");
        java.lang.String str2 = net.ajaskey.common.Utils.fmt((double) 1593103612082L, 530);
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Invalid fmt" + "'", str2, "Invalid fmt");
    }

    @Test
    public void test7119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7119");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) 100, 286, 558);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        int int6 = dateTime5.getMs();
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(100L);
        double double13 = dateTime10.getDeltaYears(dateTime12);
        java.text.SimpleDateFormat simpleDateFormat14 = dateTime10.getSdf();
        boolean boolean15 = dateTime5.isLessThanOrEqual(dateTime10);
        java.text.SimpleDateFormat simpleDateFormat17 = null;
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat17);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double21 = dateTime18.getDeltaYears(dateTime20);
        boolean boolean22 = dateTime18.isWeekday();
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long27 = dateTime18.getDeltaDays(dateTime26);
        long long28 = dateTime5.getDeltaDays(dateTime26);
        java.lang.String str29 = dateTime26.toString();
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(100L);
        double double38 = dateTime35.getDeltaYears(dateTime37);
        int int39 = dateTime35.getHour();
        dateTime35.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat44 = null;
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat44);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double48 = dateTime45.getDeltaYears(dateTime47);
        boolean boolean49 = dateTime35.isEqual(dateTime47);
        java.text.SimpleDateFormat simpleDateFormat51 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat53 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat54 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime("", simpleDateFormat53, simpleDateFormat54);
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat51, simpleDateFormat54);
        dateTime35.setSdf(simpleDateFormat51);
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat64 = null;
        java.text.SimpleDateFormat simpleDateFormat65 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime("January", simpleDateFormat64, simpleDateFormat65);
        java.text.SimpleDateFormat simpleDateFormat69 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime("January", simpleDateFormat69);
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime("", simpleDateFormat69);
        net.ajaskey.common.DateTime dateTime72 = new net.ajaskey.common.DateTime("", simpleDateFormat65, simpleDateFormat69);
        dateTime61.setSdf(simpleDateFormat65);
        net.ajaskey.common.DateTime dateTime74 = new net.ajaskey.common.DateTime("December", simpleDateFormat51, simpleDateFormat65);
        net.ajaskey.common.DateTime dateTime75 = new net.ajaskey.common.DateTime("5.00", simpleDateFormat65);
        net.ajaskey.common.DateTime dateTime79 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime81 = new net.ajaskey.common.DateTime(100L);
        double double82 = dateTime79.getDeltaYears(dateTime81);
        int int83 = dateTime79.getHour();
        int int84 = dateTime79.getDayOfMonth();
        int int85 = dateTime79.getMinute();
        long long86 = dateTime75.getDeltaMilliSeconds(dateTime79);
        boolean boolean87 = dateTime79.isNull();
        java.lang.String str88 = dateTime79.getDay();
        java.util.Calendar calendar89 = dateTime79.getCal();
        dateTime26.set(calendar89);
        dateTime3.set(calendar89);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-1972.041095890411d) + "'", double13 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 719795L + "'", long28 == 719795L);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "10-Apr-0002" + "'", str29, "10-Apr-0002");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1972.041095890411d) + "'", double38 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 10 + "'", int39 == 10);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(simpleDateFormat51);
        org.junit.Assert.assertNotNull(simpleDateFormat53);
        org.junit.Assert.assertNotNull(simpleDateFormat54);
        org.junit.Assert.assertNotNull(simpleDateFormat65);
        org.junit.Assert.assertNotNull(simpleDateFormat69);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-1972.041095890411d) + "'", double82 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 10 + "'", int83 == 10);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 10 + "'", int84 == 10);
// flaky:         org.junit.Assert.assertTrue("'" + int85 + "' != '" + 47 + "'", int85 == 47);
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + 0L + "'", long86 == 0L);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "Thursday" + "'", str88, "Thursday");
        org.junit.Assert.assertNotNull(calendar89);
// flaky:         org.junit.Assert.assertEquals(calendar89.toString(), "java.util.GregorianCalendar[time=-62190310361544,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=18,MILLISECOND=456,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    }

    @Test
    public void test7120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7120");
        java.util.zip.ZipOutputStream zipOutputStream1 = null;
        // The following exception was thrown during execution in test generation
        try {
            net.ajaskey.common.Utils.writeToZipFile("       -18,438", zipOutputStream1);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:        -18,438 (The system cannot find the file specified)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
    }

    @Test
    public void test7121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7121");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat5 = null;
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat5);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        boolean boolean10 = dateTime3.isLessThan(dateTime8);
        java.lang.String str11 = dateTime8.toFullString();
        int int12 = dateTime8.getSecond();
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(dateTime8);
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean18 = dateTime17.isNull();
        java.lang.String str19 = dateTime17.getDay();
        java.text.SimpleDateFormat simpleDateFormat20 = dateTime17.getSdf();
        int int21 = dateTime17.getHour();
        boolean boolean22 = dateTime8.isGreaterThanOrEqual(dateTime17);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime(100L);
        dateTime24.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime(100L);
        double double35 = dateTime32.getDeltaYears(dateTime34);
        boolean boolean36 = dateTime34.isWeekday();
        java.util.Date date37 = dateTime34.getTime();
        dateTime24.set(dateTime34);
        int int39 = dateTime24.getYear();
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(100L);
        double double46 = dateTime43.getDeltaYears(dateTime45);
        int int47 = dateTime43.getHour();
        java.util.Calendar calendar48 = dateTime43.getCal();
        boolean boolean49 = dateTime24.isGreaterThan(dateTime43);
        java.lang.String str50 = dateTime43.getDay();
        dateTime17.set(dateTime43);
        java.util.Date date52 = dateTime43.getTime();
        java.text.SimpleDateFormat simpleDateFormat53 = dateTime43.getSdf();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str11, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Thursday" + "'", str19, "Thursday");
        org.junit.Assert.assertNull(simpleDateFormat20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-1972.041095890411d) + "'", double35 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(date37);
        org.junit.Assert.assertEquals(date37.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1969 + "'", int39 == 1969);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-1972.041095890411d) + "'", double46 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 10 + "'", int47 == 10);
        org.junit.Assert.assertNotNull(calendar48);
// flaky:         org.junit.Assert.assertEquals(calendar48.toString(), "java.util.GregorianCalendar[time=-62190310361511,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=18,MILLISECOND=489,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Thursday" + "'", str50, "Thursday");
        org.junit.Assert.assertNotNull(date52);
// flaky:         org.junit.Assert.assertEquals(date52.toString(), "Thu Apr 10 10:47:18 MST 2");
        org.junit.Assert.assertNull(simpleDateFormat53);
    }

    @Test
    public void test7122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7122");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (byte) 1, 6, (int) (short) 1);
        int int4 = dateTime3.getHour();
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime(100L);
        int int7 = dateTime6.getMs();
        java.lang.String str8 = dateTime6.toString();
        dateTime6.set(25, (-1), (int) (short) 10);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(100L);
        double double19 = dateTime16.getDeltaYears(dateTime18);
        boolean boolean20 = dateTime18.isWeekday();
        boolean boolean21 = net.ajaskey.common.Utils.sameMonth(dateTime6, dateTime18);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat27 = null;
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat27);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double31 = dateTime28.getDeltaYears(dateTime30);
        boolean boolean32 = dateTime25.isLessThan(dateTime30);
        java.text.SimpleDateFormat simpleDateFormat34 = null;
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat34);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double38 = dateTime35.getDeltaYears(dateTime37);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean43 = dateTime37.isEqual(dateTime42);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(100L);
        int int46 = dateTime45.getMs();
        boolean boolean47 = dateTime42.isGreaterThanOrEqual(dateTime45);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime(100L);
        dateTime49.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime(100L);
        double double60 = dateTime57.getDeltaYears(dateTime59);
        boolean boolean61 = dateTime59.isWeekday();
        java.util.Date date62 = dateTime59.getTime();
        dateTime49.set(dateTime59);
        boolean boolean64 = net.ajaskey.common.Utils.sameDate(dateTime42, dateTime49);
        boolean boolean65 = dateTime42.isNull();
        double double66 = dateTime30.getDeltaYears(dateTime42);
        boolean boolean67 = dateTime6.isLessThan(dateTime30);
        boolean boolean68 = dateTime30.isNull();
        int int69 = dateTime3.getYears(dateTime30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 10 + "'", int4 == 10);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "31-Dec-1969" + "'", str8, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-1972.041095890411d) + "'", double19 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-1972.041095890411d) + "'", double60 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(date62);
        org.junit.Assert.assertEquals(date62.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1972.041095890411d + "'", double66 == 1972.041095890411d);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1968 + "'", int69 == 1968);
    }

    @Test
    public void test7123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7123");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        java.text.SimpleDateFormat simpleDateFormat10 = dateTime6.getSdf();
        boolean boolean11 = dateTime1.isLessThanOrEqual(dateTime6);
        int int12 = dateTime1.getDayOfMonth();
        java.util.Date date13 = dateTime1.getTime();
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(100L);
        double double20 = dateTime17.getDeltaYears(dateTime19);
        int int21 = dateTime17.getHour();
        java.text.SimpleDateFormat simpleDateFormat23 = null;
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat23);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double27 = dateTime24.getDeltaYears(dateTime26);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean32 = dateTime26.isEqual(dateTime31);
        java.util.Calendar calendar33 = dateTime26.getCal();
        dateTime17.set(calendar33);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime(calendar33);
        dateTime35.add(14, 2020);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime(100L);
        double double45 = dateTime42.getDeltaYears(dateTime44);
        boolean boolean46 = dateTime44.isWeekday();
        java.util.Date date47 = dateTime44.getTime();
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime(date47);
        java.text.SimpleDateFormat simpleDateFormat50 = null;
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat50);
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double54 = dateTime51.getDeltaYears(dateTime53);
        boolean boolean55 = dateTime51.isWeekday();
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long60 = dateTime51.getDeltaDays(dateTime59);
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime(dateTime51);
        boolean boolean62 = dateTime48.isGreaterThan(dateTime51);
        java.lang.String str63 = dateTime51.getMonth();
        boolean boolean64 = dateTime35.sameDate(dateTime51);
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime(100L);
        double double71 = dateTime68.getDeltaYears(dateTime70);
        net.ajaskey.common.DateTime dateTime73 = new net.ajaskey.common.DateTime((long) (short) 0);
        int int74 = dateTime73.getHour();
        boolean boolean75 = net.ajaskey.common.Utils.sameDate(dateTime70, dateTime73);
        java.lang.String str76 = dateTime70.getDay();
        boolean boolean77 = dateTime35.isLessThan(dateTime70);
        boolean boolean78 = dateTime1.isGreaterThan(dateTime35);
        java.lang.String str80 = dateTime35.format("                       25");
        java.lang.String str81 = dateTime35.toFullString();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 31 + "'", int12 == 31);
        org.junit.Assert.assertNotNull(date13);
        org.junit.Assert.assertEquals(date13.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-1972.041095890411d) + "'", double20 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(calendar33);
        org.junit.Assert.assertEquals(calendar33.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-1972.041095890411d) + "'", double45 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(date47);
        org.junit.Assert.assertEquals(date47.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "UNKNOWN" + "'", str63, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-1972.041095890411d) + "'", double71 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 5 + "'", int74 == 5);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "Wednesday" + "'", str76, "Wednesday");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "                       25" + "'", str80, "                       25");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str81, "Wed 31-Dec-1969 17:00:00");
    }

    @Test
    public void test7124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7124");
        java.text.SimpleDateFormat simpleDateFormat1 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat2 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime("", simpleDateFormat1, simpleDateFormat2);
        int int4 = dateTime3.getHour();
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(dateTime3);
        java.text.SimpleDateFormat simpleDateFormat7 = null;
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat7);
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double11 = dateTime8.getDeltaYears(dateTime10);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean16 = dateTime10.isEqual(dateTime15);
        java.util.Calendar calendar17 = dateTime10.getCal();
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(calendar17);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(calendar17);
        net.ajaskey.common.DateTime dateTime20 = dateTime5.copy(dateTime19);
        dateTime19.setFirstWorkDay();
        net.ajaskey.common.DateTime dateTime24 = dateTime19.parse("       718", "Thu 10-Apr-0002 10:43:17");
        org.junit.Assert.assertNotNull(simpleDateFormat1);
        org.junit.Assert.assertNotNull(simpleDateFormat2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(calendar17);
        org.junit.Assert.assertEquals(calendar17.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(dateTime20);
        org.junit.Assert.assertNull(dateTime24);
    }

    @Test
    public void test7125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7125");
        java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readGzipFile("                                     53.00", false);
        org.junit.Assert.assertNull(strList2);
    }

    @Test
    public void test7126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7126");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean4 = dateTime3.isNull();
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime(100L);
        dateTime6.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str11 = dateTime6.getMonth();
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(100L);
        dateTime13.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str18 = dateTime13.getMonth();
        int int19 = dateTime13.getMs();
        net.ajaskey.common.DateTime dateTime20 = dateTime6.copy(dateTime13);
        boolean boolean21 = dateTime3.isGreaterThanOrEqual(dateTime20);
        int int22 = dateTime20.getDayOfMonth();
        java.lang.String str23 = dateTime20.toFullString();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "January" + "'", str11, "January");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "January" + "'", str18, "January");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        org.junit.Assert.assertNotNull(dateTime20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 4 + "'", int22 == 4);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Sat 04-Jan-0100 17:00:00" + "'", str23, "Sat 04-Jan-0100 17:00:00");
    }

    @Test
    public void test7127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7127");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(46, 182, 515);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime((long) (byte) 100);
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime(100L);
        java.util.Calendar calendar8 = dateTime7.getCal();
        java.text.SimpleDateFormat simpleDateFormat10 = null;
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat10);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double14 = dateTime11.getDeltaYears(dateTime13);
        boolean boolean15 = dateTime11.isWeekday();
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long20 = dateTime11.getDeltaDays(dateTime19);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(dateTime11);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(100L);
        double double28 = dateTime25.getDeltaYears(dateTime27);
        boolean boolean29 = dateTime27.isWeekday();
        java.util.Date date30 = dateTime27.getTime();
        dateTime11.set(date30);
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime(100L);
        int int34 = dateTime33.getMs();
        java.lang.String str35 = dateTime33.toString();
        boolean boolean36 = dateTime11.isLessThanOrEqual(dateTime33);
        net.ajaskey.common.DateTime dateTime39 = dateTime11.parse("", "100.00");
        dateTime11.add((int) (short) 0, (int) (short) -1);
        double double43 = dateTime7.getDeltaYears(dateTime11);
        double double44 = dateTime5.getDeltaYears(dateTime11);
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime(100L);
        double double51 = dateTime48.getDeltaYears(dateTime50);
        int int52 = dateTime48.getHour();
        dateTime48.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat57 = null;
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat57);
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double61 = dateTime58.getDeltaYears(dateTime60);
        boolean boolean62 = dateTime48.isEqual(dateTime60);
        boolean boolean63 = dateTime5.isLessThan(dateTime48);
        java.util.Calendar calendar64 = dateTime5.getCal();
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime(calendar64);
        boolean boolean66 = dateTime3.isLessThanOrEqual(dateTime65);
        java.lang.String str67 = dateTime3.toFullString();
        java.text.SimpleDateFormat simpleDateFormat73 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat74 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime75 = new net.ajaskey.common.DateTime("", simpleDateFormat73, simpleDateFormat74);
        java.text.SimpleDateFormat simpleDateFormat77 = null;
        java.text.SimpleDateFormat simpleDateFormat78 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime79 = new net.ajaskey.common.DateTime("January", simpleDateFormat77, simpleDateFormat78);
        net.ajaskey.common.DateTime dateTime80 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat73, simpleDateFormat78);
        java.text.SimpleDateFormat simpleDateFormat83 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat84 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime85 = new net.ajaskey.common.DateTime("", simpleDateFormat83, simpleDateFormat84);
        net.ajaskey.common.DateTime dateTime87 = new net.ajaskey.common.DateTime(100L);
        int int88 = dateTime87.getMs();
        java.text.SimpleDateFormat simpleDateFormat89 = net.ajaskey.common.Utils.sdf;
        dateTime87.setSdf(simpleDateFormat89);
        net.ajaskey.common.DateTime dateTime91 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat84, simpleDateFormat89);
        net.ajaskey.common.DateTime dateTime92 = new net.ajaskey.common.DateTime("                             100", simpleDateFormat78, simpleDateFormat84);
        net.ajaskey.common.DateTime dateTime93 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:42:58", simpleDateFormat78);
        net.ajaskey.common.DateTime dateTime94 = new net.ajaskey.common.DateTime("1.00", simpleDateFormat78);
        boolean boolean95 = dateTime3.isGreaterThan(dateTime94);
        org.junit.Assert.assertNotNull(calendar8);
        org.junit.Assert.assertEquals(calendar8.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + (-1972.041095890411d) + "'", double28 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(date30);
        org.junit.Assert.assertEquals(date30.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "31-Dec-1969" + "'", str35, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(dateTime39);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-1972.041095890411d) + "'", double51 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 10 + "'", int52 == 10);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(calendar64);
        org.junit.Assert.assertEquals(calendar64.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Wed 28-Jul-0062 10:47:18" + "'", str67, "Wed 28-Jul-0062 10:47:18");
        org.junit.Assert.assertNotNull(simpleDateFormat73);
        org.junit.Assert.assertNotNull(simpleDateFormat74);
        org.junit.Assert.assertNotNull(simpleDateFormat78);
        org.junit.Assert.assertNotNull(simpleDateFormat83);
        org.junit.Assert.assertNotNull(simpleDateFormat84);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 100 + "'", int88 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat89);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test7128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7128");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) (short) 0);
        int int2 = dateTime1.getHour();
        boolean boolean3 = dateTime1.isNull();
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime(dateTime1);
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:43:10", "   8.00");
        boolean boolean8 = net.ajaskey.common.Utils.sameDate(dateTime1, dateTime7);
        java.lang.String str9 = dateTime1.toString();
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime("5.00", "     10");
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(100L);
        double double19 = dateTime16.getDeltaYears(dateTime18);
        int int20 = dateTime16.getHour();
        java.text.SimpleDateFormat simpleDateFormat22 = null;
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat22);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double26 = dateTime23.getDeltaYears(dateTime25);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean31 = dateTime25.isEqual(dateTime30);
        java.util.Calendar calendar32 = dateTime25.getCal();
        dateTime16.set(calendar32);
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime(calendar32);
        dateTime12.set(calendar32);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(100L);
        int int38 = dateTime37.getMs();
        java.lang.String str39 = dateTime37.toString();
        java.lang.String str41 = dateTime37.format("         1");
        net.ajaskey.common.DateTime dateTime42 = dateTime12.copy(dateTime37);
        boolean boolean43 = dateTime12.isNull();
        int int44 = dateTime12.getDayOfWeek();
        java.util.Date date45 = dateTime12.getTime();
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime(date45);
        dateTime1.set(date45);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 5 + "'", int2 == 5);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "31-Dec-1969" + "'", str9, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-1972.041095890411d) + "'", double19 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(calendar32);
        org.junit.Assert.assertEquals(calendar32.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "31-Dec-1969" + "'", str39, "31-Dec-1969");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "         1" + "'", str41, "         1");
        org.junit.Assert.assertNotNull(dateTime42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 4 + "'", int44 == 4);
        org.junit.Assert.assertNotNull(date45);
        org.junit.Assert.assertEquals(date45.toString(), "Wed Dec 31 17:00:00 MST 1969");
    }

    @Test
    public void test7129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7129");
        java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat5 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("", simpleDateFormat4, simpleDateFormat5);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        int int9 = dateTime8.getMs();
        java.text.SimpleDateFormat simpleDateFormat10 = net.ajaskey.common.Utils.sdf;
        dateTime8.setSdf(simpleDateFormat10);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat5, simpleDateFormat10);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:46:29", simpleDateFormat5);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(100L);
        double double23 = dateTime20.getDeltaYears(dateTime22);
        int int24 = dateTime20.getHour();
        dateTime20.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat29 = null;
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat29);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double33 = dateTime30.getDeltaYears(dateTime32);
        boolean boolean34 = dateTime20.isEqual(dateTime32);
        java.text.SimpleDateFormat simpleDateFormat36 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat38 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat39 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime("", simpleDateFormat38, simpleDateFormat39);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat36, simpleDateFormat39);
        dateTime20.setSdf(simpleDateFormat36);
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat49 = null;
        java.text.SimpleDateFormat simpleDateFormat50 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime("January", simpleDateFormat49, simpleDateFormat50);
        java.text.SimpleDateFormat simpleDateFormat54 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime("January", simpleDateFormat54);
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime("", simpleDateFormat54);
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime("", simpleDateFormat50, simpleDateFormat54);
        dateTime46.setSdf(simpleDateFormat50);
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime("December", simpleDateFormat36, simpleDateFormat50);
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime("5.00", simpleDateFormat50);
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:43:56", simpleDateFormat50);
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:43:44", simpleDateFormat5, simpleDateFormat50);
        int int63 = dateTime62.getMs();
        org.junit.Assert.assertNotNull(simpleDateFormat4);
        org.junit.Assert.assertNotNull(simpleDateFormat5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat10);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-1972.041095890411d) + "'", double23 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(simpleDateFormat36);
        org.junit.Assert.assertNotNull(simpleDateFormat38);
        org.junit.Assert.assertNotNull(simpleDateFormat39);
        org.junit.Assert.assertNotNull(simpleDateFormat50);
        org.junit.Assert.assertNotNull(simpleDateFormat54);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
    }

    @Test
    public void test7130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7130");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime(100L);
        int int3 = dateTime2.getMs();
        java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdf;
        dateTime2.setSdf(simpleDateFormat4);
        java.text.SimpleDateFormat simpleDateFormat6 = net.ajaskey.common.Utils.sdfFull;
        dateTime2.setSdf(simpleDateFormat6);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTimesimpleDateFormat6);
        java.lang.String str10 = dateTime8.format("Thu 10-Apr-0002 10:45:25");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat4);
        org.junit.Assert.assertNotNull(simpleDateFormat6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "BAD-DATE-FORMAT" + "'", str10, "BAD-DATE-FORMAT");
    }

    @Test
    public void test7131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7131");
        java.text.SimpleDateFormat simpleDateFormat5 = null;
        java.text.SimpleDateFormat simpleDateFormat6 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("January", simpleDateFormat5, simpleDateFormat6);
        java.text.SimpleDateFormat simpleDateFormat10 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime("January", simpleDateFormat10);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime("", simpleDateFormat10);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("", simpleDateFormat6, simpleDateFormat10);
        java.text.SimpleDateFormat simpleDateFormat16 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat18 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat19 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("", simpleDateFormat18, simpleDateFormat19);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat16, simpleDateFormat19);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat28 = null;
        java.text.SimpleDateFormat simpleDateFormat29 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime("January", simpleDateFormat28, simpleDateFormat29);
        java.text.SimpleDateFormat simpleDateFormat33 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime("January", simpleDateFormat33);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("", simpleDateFormat33);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime("", simpleDateFormat29, simpleDateFormat33);
        dateTime25.setSdf(simpleDateFormat29);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime("", simpleDateFormat19, simpleDateFormat29);
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime("   -18,438", simpleDateFormat10, simpleDateFormat29);
        java.text.SimpleDateFormat simpleDateFormat44 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat45 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime("", simpleDateFormat44, simpleDateFormat45);
        java.text.SimpleDateFormat simpleDateFormat48 = null;
        java.text.SimpleDateFormat simpleDateFormat49 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime("January", simpleDateFormat48, simpleDateFormat49);
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat44, simpleDateFormat49);
        java.text.SimpleDateFormat simpleDateFormat54 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat55 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime("", simpleDateFormat54, simpleDateFormat55);
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime(100L);
        int int59 = dateTime58.getMs();
        java.text.SimpleDateFormat simpleDateFormat60 = net.ajaskey.common.Utils.sdf;
        dateTime58.setSdf(simpleDateFormat60);
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat55, simpleDateFormat60);
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime("                             100", simpleDateFormat49, simpleDateFormat55);
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime("11", simpleDateFormat49);
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime("10-Apr-0002", simpleDateFormat29, simpleDateFormat49);
        net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime("", simpleDateFormat29);
        int int67 = dateTime66.getDayOfMonth();
        java.util.Date date68 = dateTime66.getTime();
        org.junit.Assert.assertNotNull(simpleDateFormat6);
        org.junit.Assert.assertNotNull(simpleDateFormat10);
        org.junit.Assert.assertNotNull(simpleDateFormat16);
        org.junit.Assert.assertNotNull(simpleDateFormat18);
        org.junit.Assert.assertNotNull(simpleDateFormat19);
        org.junit.Assert.assertNotNull(simpleDateFormat29);
        org.junit.Assert.assertNotNull(simpleDateFormat33);
        org.junit.Assert.assertNotNull(simpleDateFormat44);
        org.junit.Assert.assertNotNull(simpleDateFormat45);
        org.junit.Assert.assertNotNull(simpleDateFormat49);
        org.junit.Assert.assertNotNull(simpleDateFormat54);
        org.junit.Assert.assertNotNull(simpleDateFormat55);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 100 + "'", int59 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat60);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNull(date68);
    }

    @Test
    public void test7132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7132");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        boolean boolean7 = dateTime5.isWeekday();
        java.util.Date date8 = dateTime5.getTime();
        int int9 = dateTime5.getDayOfWeek();
        boolean boolean10 = dateTime5.isWeekday();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(date8);
        org.junit.Assert.assertEquals(date8.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 4 + "'", int9 == 4);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test7133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7133");
        java.lang.String[] strArray6 = new java.lang.String[] { "     5.00" };
        java.util.List<java.io.File> fileList7 = net.ajaskey.common.Utils.getDirTree("                                                 100", strArray6);
        java.util.List<java.io.File> fileList8 = net.ajaskey.common.Utils.getDirTree(" 9", strArray6);
        java.util.List<java.io.File> fileList9 = net.ajaskey.common.Utils.getDirTree("January                                 42                                 42                                                                                               52.00                                 42hi!                                 42", strArray6);
        java.util.List<java.io.File> fileList10 = net.ajaskey.common.Utils.getDirTree("1.00", strArray6);
        java.util.List<java.io.File> fileList11 = net.ajaskey.common.Utils.getDirTree("Thu 25-Jun-2020 10:45:21", strArray6);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNull(fileList7);
        org.junit.Assert.assertNull(fileList8);
        org.junit.Assert.assertNull(fileList9);
        org.junit.Assert.assertNull(fileList10);
        org.junit.Assert.assertNull(fileList11);
    }

    @Test
    public void test7134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7134");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        java.text.SimpleDateFormat simpleDateFormat3 = net.ajaskey.common.Utils.sdf;
        dateTime1.setSdf(simpleDateFormat3);
        int int5 = dateTime1.getDayOfWeek();
        java.text.SimpleDateFormat simpleDateFormat6 = dateTime1.getSdf();
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("BAD-DATE-FORMAT", "                                                                                               52.00");
        int int10 = dateTime9.getMinute();
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(100L);
        double double17 = dateTime14.getDeltaYears(dateTime16);
        boolean boolean18 = dateTime16.isWeekday();
        int int19 = dateTime16.getDayOfYear();
        boolean boolean20 = dateTime9.isEqual(dateTime16);
        net.ajaskey.common.DateTime dateTime21 = null;
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(dateTime21);
        java.lang.String str24 = dateTime22.format("     5.00");
        net.ajaskey.common.DateTime dateTime25 = null;
        long long26 = dateTime22.getDeltaDays(dateTime25);
        java.lang.String str27 = dateTime22.format();
        boolean boolean28 = dateTime16.isEqual(dateTime22);
        net.ajaskey.common.DateTime dateTime29 = dateTime1.copy(dateTime22);
        java.lang.String str30 = dateTime29.format();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 4 + "'", int5 == 4);
        org.junit.Assert.assertNotNull(simpleDateFormat6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-1972.041095890411d) + "'", double17 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 365 + "'", int19 == 365);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "     5.00" + "'", str24, "     5.00");
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "BAD-DATE-FORMAT" + "'", str27, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(dateTime29);
// flaky:         org.junit.Assert.assertEquals("'" + str30 + "' != '" + "25-Jun-2020" + "'", str30, "25-Jun-2020");
    }

    @Test
    public void test7135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7135");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        int int7 = dateTime3.getHour();
        dateTime3.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat12 = null;
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat12);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double16 = dateTime13.getDeltaYears(dateTime15);
        boolean boolean17 = dateTime3.isEqual(dateTime15);
        java.lang.String str18 = dateTime3.toString();
        dateTime3.add(100, (int) (byte) 0);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("January", "100.00");
        boolean boolean25 = dateTime3.sameDate(dateTime24);
        java.text.SimpleDateFormat simpleDateFormat33 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat35 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat36 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime("", simpleDateFormat35, simpleDateFormat36);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat33, simpleDateFormat36);
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime("10-Apr-0002", simpleDateFormat36);
        java.text.SimpleDateFormat simpleDateFormat42 = null;
        java.text.SimpleDateFormat simpleDateFormat43 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime("January", simpleDateFormat42, simpleDateFormat43);
        java.text.SimpleDateFormat simpleDateFormat47 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime("January", simpleDateFormat47);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime("", simpleDateFormat47);
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime("", simpleDateFormat43, simpleDateFormat47);
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime("January                                                                                               52.00                                                                                               52.00                                                                                               52.00                                                                                               52.00hi!                                                                                               52.00", simpleDateFormat36, simpleDateFormat47);
        java.text.SimpleDateFormat simpleDateFormat53 = null;
        java.text.SimpleDateFormat simpleDateFormat54 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime("January", simpleDateFormat53, simpleDateFormat54);
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime("December", simpleDateFormat47, simpleDateFormat54);
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:43:00", simpleDateFormat54);
        java.text.SimpleDateFormat simpleDateFormat60 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat61 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime("", simpleDateFormat60, simpleDateFormat61);
        java.text.SimpleDateFormat simpleDateFormat64 = null;
        java.text.SimpleDateFormat simpleDateFormat65 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime("January", simpleDateFormat64, simpleDateFormat65);
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat60, simpleDateFormat65);
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime("JanuaryDecemberDecember                                                                                               52.00Decemberhi!December", simpleDateFormat54, simpleDateFormat60);
        net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime("                                     100.00", simpleDateFormat60);
        boolean boolean70 = dateTime24.isGreaterThan(dateTime69);
        java.text.SimpleDateFormat simpleDateFormat71 = dateTime69.getSdf();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "10-Apr-0002" + "'", str18, "10-Apr-0002");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(simpleDateFormat33);
        org.junit.Assert.assertNotNull(simpleDateFormat35);
        org.junit.Assert.assertNotNull(simpleDateFormat36);
        org.junit.Assert.assertNotNull(simpleDateFormat43);
        org.junit.Assert.assertNotNull(simpleDateFormat47);
        org.junit.Assert.assertNotNull(simpleDateFormat54);
        org.junit.Assert.assertNotNull(simpleDateFormat60);
        org.junit.Assert.assertNotNull(simpleDateFormat61);
        org.junit.Assert.assertNotNull(simpleDateFormat65);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(simpleDateFormat71);
    }

    @Test
    public void test7136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7136");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        boolean boolean7 = dateTime5.isWeekday();
        java.util.Date date8 = dateTime5.getTime();
        int int9 = dateTime5.getDayOfWeek();
        java.lang.String str10 = dateTime5.toFullString();
        boolean boolean11 = dateTime5.isWeekday();
        java.lang.String str13 = dateTime5.format("");
        int int14 = dateTime5.getHour();
        net.ajaskey.common.DateTime dateTime16 = dateTime5.parse("Thu 25-Jun-2020 10:44:29");
        dateTime5.add(45, 5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(date8);
        org.junit.Assert.assertEquals(date8.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 4 + "'", int9 == 4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str10, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 5 + "'", int14 == 5);
        org.junit.Assert.assertNull(dateTime16);
    }

    @Test
    public void test7137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7137");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        boolean boolean3 = dateTime1.isWeekday();
        int int4 = dateTime1.getHour();
        java.text.SimpleDateFormat simpleDateFormat6 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("January", simpleDateFormat6);
        dateTime1.setSdf(simpleDateFormat6);
        java.text.SimpleDateFormat simpleDateFormat9 = dateTime1.getSdf();
        java.lang.String str11 = dateTime1.format("Thursday");
        java.lang.String str12 = dateTime1.getMonth();
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(100L);
        double double19 = dateTime16.getDeltaYears(dateTime18);
        int int20 = dateTime16.getHour();
        java.text.SimpleDateFormat simpleDateFormat22 = null;
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat22);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double26 = dateTime23.getDeltaYears(dateTime25);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean31 = dateTime25.isEqual(dateTime30);
        java.util.Calendar calendar32 = dateTime25.getCal();
        dateTime16.set(calendar32);
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime(calendar32);
        dateTime34.add(14, 2020);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime(100L);
        double double44 = dateTime41.getDeltaYears(dateTime43);
        boolean boolean45 = dateTime43.isWeekday();
        java.util.Date date46 = dateTime43.getTime();
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime(date46);
        java.text.SimpleDateFormat simpleDateFormat49 = null;
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat49);
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double53 = dateTime50.getDeltaYears(dateTime52);
        boolean boolean54 = dateTime50.isWeekday();
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long59 = dateTime50.getDeltaDays(dateTime58);
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime(dateTime50);
        boolean boolean61 = dateTime47.isGreaterThan(dateTime50);
        java.lang.String str62 = dateTime50.getMonth();
        boolean boolean63 = dateTime34.sameDate(dateTime50);
        boolean boolean64 = dateTime34.isWeekday();
        net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean70 = dateTime69.isNull();
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime();
        boolean boolean72 = dateTime69.sameDate(dateTime71);
        java.lang.String str73 = dateTime69.toString();
        java.text.SimpleDateFormat simpleDateFormat74 = dateTime69.getSdf();
        java.text.SimpleDateFormat simpleDateFormat76 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat77 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime78 = new net.ajaskey.common.DateTime("", simpleDateFormat76, simpleDateFormat77);
        net.ajaskey.common.DateTime dateTime79 = new net.ajaskey.common.DateTime("   8.00", simpleDateFormat74, simpleDateFormat77);
        boolean boolean80 = net.ajaskey.common.Utils.sameMonth(dateTime34, dateTime79);
        boolean boolean81 = dateTime1.sameDate(dateTime34);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertNotNull(simpleDateFormat6);
        org.junit.Assert.assertNotNull(simpleDateFormat9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "BAD-DATE-FORMAT" + "'", str11, "BAD-DATE-FORMAT");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "December" + "'", str12, "December");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-1972.041095890411d) + "'", double19 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(calendar32);
        org.junit.Assert.assertEquals(calendar32.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-1972.041095890411d) + "'", double44 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(date46);
        org.junit.Assert.assertEquals(date46.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 0L + "'", long59 == 0L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "UNKNOWN" + "'", str62, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "10-Apr-0002" + "'", str73, "10-Apr-0002");
        org.junit.Assert.assertNotNull(simpleDateFormat74);
        org.junit.Assert.assertNotNull(simpleDateFormat76);
        org.junit.Assert.assertNotNull(simpleDateFormat77);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test7138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7138");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        java.text.SimpleDateFormat simpleDateFormat8 = null;
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double12 = dateTime9.getDeltaYears(dateTime11);
        boolean boolean13 = dateTime9.isWeekday();
        boolean boolean14 = dateTime3.sameDate(dateTime9);
        java.text.SimpleDateFormat simpleDateFormat16 = null;
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double20 = dateTime17.getDeltaYears(dateTime19);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean25 = dateTime19.isEqual(dateTime24);
        dateTime3.set(dateTime24);
        int int27 = dateTime24.getDayOfWeek();
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(100L);
        dateTime29.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str34 = dateTime29.getMonth();
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime(100L);
        dateTime36.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str41 = dateTime36.getMonth();
        int int42 = dateTime36.getMs();
        net.ajaskey.common.DateTime dateTime43 = dateTime29.copy(dateTime36);
        int int44 = dateTime36.getSecond();
        java.util.Date date45 = null;
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime(date45);
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime(100L);
        double double53 = dateTime50.getDeltaYears(dateTime52);
        int int54 = dateTime50.getHour();
        java.text.SimpleDateFormat simpleDateFormat56 = null;
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat56);
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double60 = dateTime57.getDeltaYears(dateTime59);
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean65 = dateTime59.isEqual(dateTime64);
        java.util.Calendar calendar66 = dateTime59.getCal();
        dateTime50.set(calendar66);
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime(calendar66);
        net.ajaskey.common.DateTime dateTime69 = dateTime46.copy(dateTime68);
        boolean boolean70 = dateTime36.isLessThan(dateTime68);
        boolean boolean71 = dateTime24.isEqual(dateTime68);
        int int72 = dateTime68.getDayOfWeek();
        int int73 = dateTime68.getDayOfWeek();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 5 + "'", int27 == 5);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "January" + "'", str34, "January");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "January" + "'", str41, "January");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
        org.junit.Assert.assertNotNull(dateTime43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-1972.041095890411d) + "'", double53 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 10 + "'", int54 == 10);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(calendar66);
        org.junit.Assert.assertEquals(calendar66.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(dateTime69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 4 + "'", int72 == 4);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 4 + "'", int73 == 4);
    }

    @Test
    public void test7139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7139");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean10 = dateTime4.isEqual(dateTime9);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(100L);
        int int13 = dateTime12.getMs();
        boolean boolean14 = dateTime9.isGreaterThanOrEqual(dateTime12);
        java.text.SimpleDateFormat simpleDateFormat16 = null;
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double20 = dateTime17.getDeltaYears(dateTime19);
        boolean boolean21 = dateTime17.isWeekday();
        boolean boolean22 = dateTime12.isLessThanOrEqual(dateTime17);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime(100L);
        int int25 = dateTime24.getMs();
        boolean boolean26 = dateTime24.isWeekday();
        int int27 = dateTime24.getHour();
        java.text.SimpleDateFormat simpleDateFormat29 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime("January", simpleDateFormat29);
        dateTime24.setSdf(simpleDateFormat29);
        java.lang.String str32 = dateTime24.toFullString();
        java.lang.String str33 = dateTime24.toFullString();
        double double34 = dateTime12.getDeltaYears(dateTime24);
        java.lang.String str35 = dateTime24.format();
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime(100L);
        double double43 = dateTime40.getDeltaYears(dateTime42);
        int int44 = dateTime40.getHour();
        java.util.Calendar calendar45 = dateTime40.getCal();
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime(calendar45);
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean51 = dateTime50.isNull();
        boolean boolean52 = net.ajaskey.common.Utils.sameDate(dateTime46, dateTime50);
        java.text.SimpleDateFormat simpleDateFormat55 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat56 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime("", simpleDateFormat55, simpleDateFormat56);
        java.text.SimpleDateFormat simpleDateFormat59 = null;
        java.text.SimpleDateFormat simpleDateFormat60 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime("January", simpleDateFormat59, simpleDateFormat60);
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat55, simpleDateFormat60);
        dateTime50.setSdf(simpleDateFormat60);
        java.text.SimpleDateFormat simpleDateFormat66 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat67 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime("", simpleDateFormat66, simpleDateFormat67);
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime(100L);
        int int71 = dateTime70.getMs();
        java.text.SimpleDateFormat simpleDateFormat72 = net.ajaskey.common.Utils.sdf;
        dateTime70.setSdf(simpleDateFormat72);
        net.ajaskey.common.DateTime dateTime74 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat67, simpleDateFormat72);
        net.ajaskey.common.DateTime dateTime75 = new net.ajaskey.common.DateTime("", simpleDateFormat60, simpleDateFormat67);
        dateTime24.setSdf(simpleDateFormat60);
        java.text.SimpleDateFormat simpleDateFormat78 = null;
        net.ajaskey.common.DateTime dateTime79 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat78);
        boolean boolean80 = net.ajaskey.common.Utils.sameDate(dateTime24, dateTime79);
        int int81 = dateTime24.getDayOfWeek();
        dateTime24.add((-1955), 30);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 5 + "'", int27 == 5);
        org.junit.Assert.assertNotNull(simpleDateFormat29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str32, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str33, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "31-Dec-1969" + "'", str35, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-1972.041095890411d) + "'", double43 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 10 + "'", int44 == 10);
        org.junit.Assert.assertNotNull(calendar45);
// flaky:         org.junit.Assert.assertEquals(calendar45.toString(), "java.util.GregorianCalendar[time=-62190310361223,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=18,MILLISECOND=777,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(simpleDateFormat55);
        org.junit.Assert.assertNotNull(simpleDateFormat56);
        org.junit.Assert.assertNotNull(simpleDateFormat60);
        org.junit.Assert.assertNotNull(simpleDateFormat66);
        org.junit.Assert.assertNotNull(simpleDateFormat67);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 100 + "'", int71 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat72);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 4 + "'", int81 == 4);
    }

    @Test
    public void test7140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7140");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        java.text.SimpleDateFormat simpleDateFormat10 = dateTime6.getSdf();
        boolean boolean11 = dateTime1.isLessThanOrEqual(dateTime6);
        int int12 = dateTime6.getDayOfYear();
        boolean boolean13 = dateTime6.isWeekday();
        java.lang.String str14 = dateTime6.toString();
        java.util.Date date15 = dateTime6.getTime();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "10-Apr-0002" + "'", str14, "10-Apr-0002");
        org.junit.Assert.assertNotNull(date15);
// flaky:         org.junit.Assert.assertEquals(date15.toString(), "Thu Apr 10 10:47:18 MST 2");
    }

    @Test
    public void test7141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7141");
        java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readTextFile("    25", false);
        net.ajaskey.common.TextUtils.print(strList2);
        net.ajaskey.common.TextUtils.print(strList2);
        org.junit.Assert.assertNotNull(strList2);
    }

    @Test
    public void test7142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7142");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        java.lang.String str3 = dateTime1.toString();
        java.util.Date date4 = dateTime1.getTime();
        int int5 = dateTime1.getDayOfYear();
        java.lang.String str7 = dateTime1.format("Thu 10-Apr-0002 10:43:03");
        java.text.SimpleDateFormat simpleDateFormat9 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat11 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat12 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("", simpleDateFormat11, simpleDateFormat12);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat9, simpleDateFormat12);
        dateTime1.setSdf(simpleDateFormat9);
        int int16 = dateTime1.getSecond();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "31-Dec-1969" + "'", str3, "31-Dec-1969");
        org.junit.Assert.assertNotNull(date4);
        org.junit.Assert.assertEquals(date4.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 365 + "'", int5 == 365);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "BAD-DATE-FORMAT" + "'", str7, "BAD-DATE-FORMAT");
        org.junit.Assert.assertNotNull(simpleDateFormat9);
        org.junit.Assert.assertNotNull(simpleDateFormat11);
        org.junit.Assert.assertNotNull(simpleDateFormat12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test7143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7143");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        java.text.SimpleDateFormat simpleDateFormat10 = dateTime6.getSdf();
        boolean boolean11 = dateTime1.isLessThanOrEqual(dateTime6);
        java.lang.String str12 = dateTime6.toString();
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(100L);
        int int15 = dateTime14.getMs();
        int int16 = dateTime14.getHour();
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat22 = null;
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat22);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double26 = dateTime23.getDeltaYears(dateTime25);
        boolean boolean27 = dateTime20.isLessThan(dateTime25);
        java.lang.String str28 = dateTime25.toFullString();
        dateTime25.add(10, (int) (byte) -1);
        java.text.SimpleDateFormat simpleDateFormat33 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat35 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat36 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime("", simpleDateFormat35, simpleDateFormat36);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat33, simpleDateFormat36);
        boolean boolean39 = dateTime25.isGreaterThan(dateTime38);
        boolean boolean40 = dateTime14.isEqual(dateTime25);
        net.ajaskey.common.DateTime dateTime41 = null;
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime(dateTime41);
        dateTime42.set(42, 10, 10);
        java.util.Date date47 = dateTime42.getTime();
        net.ajaskey.common.DateTime dateTime48 = dateTime14.copy(dateTime42);
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime(100L);
        int int51 = dateTime50.getMs();
        int int52 = dateTime50.getHour();
        double double53 = dateTime42.getDeltaYears(dateTime50);
        boolean boolean54 = net.ajaskey.common.Utils.sameMonth(dateTime6, dateTime50);
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime(100L);
        dateTime56.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str61 = dateTime56.getMonth();
        int int62 = dateTime56.getMs();
        java.lang.String str64 = dateTime56.format("                                                                                               52.00");
        int int65 = dateTime56.getDayOfMonth();
        long long66 = dateTime6.getDeltaDays(dateTime56);
        java.text.SimpleDateFormat simpleDateFormat67 = dateTime56.getSdf();
        int int68 = dateTime56.getYear();
        int int69 = dateTime56.getDayOfMonth();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10-Apr-0002" + "'", str12, "10-Apr-0002");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 5 + "'", int16 == 5);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str28, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertNotNull(simpleDateFormat33);
        org.junit.Assert.assertNotNull(simpleDateFormat35);
        org.junit.Assert.assertNotNull(simpleDateFormat36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(date47);
// flaky:         org.junit.Assert.assertEquals(date47.toString(), "Sat Nov 10 10:47:18 MST 42");
        org.junit.Assert.assertNotNull(dateTime48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 100 + "'", int51 == 100);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 5 + "'", int52 == 5);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-1928.4246575342465d) + "'", double53 == (-1928.4246575342465d));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "January" + "'", str61, "January");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "                                                                                               52.00" + "'", str64, "                                                                                               52.00");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 4 + "'", int65 == 4);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + (-36794L) + "'", long66 == (-36794L));
        org.junit.Assert.assertNull(simpleDateFormat67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 4 + "'", int69 == 4);
    }

    @Test
    public void test7144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7144");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) (byte) 100);
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(100L);
        java.util.Calendar calendar4 = dateTime3.getCal();
        java.text.SimpleDateFormat simpleDateFormat6 = null;
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat6);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double10 = dateTime7.getDeltaYears(dateTime9);
        boolean boolean11 = dateTime7.isWeekday();
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long16 = dateTime7.getDeltaDays(dateTime15);
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(dateTime7);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime(100L);
        double double24 = dateTime21.getDeltaYears(dateTime23);
        boolean boolean25 = dateTime23.isWeekday();
        java.util.Date date26 = dateTime23.getTime();
        dateTime7.set(date26);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(100L);
        int int30 = dateTime29.getMs();
        java.lang.String str31 = dateTime29.toString();
        boolean boolean32 = dateTime7.isLessThanOrEqual(dateTime29);
        net.ajaskey.common.DateTime dateTime35 = dateTime7.parse("", "100.00");
        dateTime7.add((int) (short) 0, (int) (short) -1);
        double double39 = dateTime3.getDeltaYears(dateTime7);
        double double40 = dateTime1.getDeltaYears(dateTime7);
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime(100L);
        double double47 = dateTime44.getDeltaYears(dateTime46);
        int int48 = dateTime44.getHour();
        dateTime44.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat53 = null;
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat53);
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double57 = dateTime54.getDeltaYears(dateTime56);
        boolean boolean58 = dateTime44.isEqual(dateTime56);
        boolean boolean59 = dateTime1.isLessThan(dateTime44);
        java.util.Calendar calendar60 = dateTime1.getCal();
        java.text.SimpleDateFormat simpleDateFormat62 = null;
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat62);
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double66 = dateTime63.getDeltaYears(dateTime65);
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean71 = dateTime65.isEqual(dateTime70);
        java.util.Calendar calendar72 = dateTime65.getCal();
        java.lang.String str73 = dateTime65.format();
        net.ajaskey.common.DateTime dateTime74 = null;
        long long75 = dateTime65.getDeltaDays(dateTime74);
        int int76 = dateTime65.getSecond();
        java.text.SimpleDateFormat simpleDateFormat78 = null;
        net.ajaskey.common.DateTime dateTime79 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat78);
        net.ajaskey.common.DateTime dateTime81 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double82 = dateTime79.getDeltaYears(dateTime81);
        net.ajaskey.common.DateTime dateTime86 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean87 = dateTime81.isEqual(dateTime86);
        boolean boolean88 = dateTime65.isGreaterThanOrEqual(dateTime86);
        net.ajaskey.common.DateTime dateTime92 = new net.ajaskey.common.DateTime((int) (byte) 10, (int) (byte) 0, 2);
        net.ajaskey.common.DateTime dateTime93 = new net.ajaskey.common.DateTime(dateTime92);
        int int94 = dateTime92.getSecond();
        boolean boolean95 = dateTime86.sameDate(dateTime92);
        boolean boolean96 = dateTime1.isEqual(dateTime92);
        int int97 = dateTime1.getMinute();
        org.junit.Assert.assertNotNull(calendar4);
        org.junit.Assert.assertEquals(calendar4.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1972.041095890411d) + "'", double24 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(date26);
        org.junit.Assert.assertEquals(date26.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "31-Dec-1969" + "'", str31, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(dateTime35);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-1972.041095890411d) + "'", double47 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 10 + "'", int48 == 10);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(calendar60);
        org.junit.Assert.assertEquals(calendar60.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(calendar72);
        org.junit.Assert.assertEquals(calendar72.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "BAD-DATE-FORMAT" + "'", str73, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 0L + "'", long75 == 0L);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int94 + "' != '" + 18 + "'", int94 == 18);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 0 + "'", int97 == 0);
    }

    @Test
    public void test7145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7145");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("5.00", "     10");
        int int3 = dateTime2.getDayOfWeek();
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        int int6 = dateTime5.getMs();
        boolean boolean7 = dateTime5.isWeekday();
        int int8 = dateTime5.getHour();
        java.text.SimpleDateFormat simpleDateFormat10 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime("January", simpleDateFormat10);
        dateTime5.setSdf(simpleDateFormat10);
        java.text.SimpleDateFormat simpleDateFormat16 = null;
        java.text.SimpleDateFormat simpleDateFormat17 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime("January", simpleDateFormat16, simpleDateFormat17);
        java.text.SimpleDateFormat simpleDateFormat21 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime("January", simpleDateFormat21);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime("", simpleDateFormat21);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("", simpleDateFormat17, simpleDateFormat21);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("Wed 31-Dec-1969 17:00:00", simpleDateFormat21);
        boolean boolean26 = net.ajaskey.common.Utils.sameMonth(dateTime5, dateTime25);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime(31, 108, 1969);
        java.text.SimpleDateFormat simpleDateFormat35 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat36 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime("", simpleDateFormat35, simpleDateFormat36);
        java.text.SimpleDateFormat simpleDateFormat39 = null;
        java.text.SimpleDateFormat simpleDateFormat40 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime("January", simpleDateFormat39, simpleDateFormat40);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat35, simpleDateFormat40);
        java.text.SimpleDateFormat simpleDateFormat45 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat46 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime("", simpleDateFormat45, simpleDateFormat46);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime(100L);
        int int50 = dateTime49.getMs();
        java.text.SimpleDateFormat simpleDateFormat51 = net.ajaskey.common.Utils.sdf;
        dateTime49.setSdf(simpleDateFormat51);
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat46, simpleDateFormat51);
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime("                             100", simpleDateFormat40, simpleDateFormat46);
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime("11", simpleDateFormat40);
        dateTime30.setSdf(simpleDateFormat40);
        java.lang.String str57 = dateTime30.getMonth();
        double double58 = dateTime25.getDeltaYears(dateTime30);
        java.util.Date date59 = dateTime30.getTime();
        net.ajaskey.common.DateTime dateTime60 = dateTime2.copy(dateTime30);
        java.lang.String str61 = dateTime60.toFullString();
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime(22, 93, 530);
        int int66 = dateTime60.getYears(dateTime65);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertNotNull(simpleDateFormat10);
        org.junit.Assert.assertNotNull(simpleDateFormat17);
        org.junit.Assert.assertNotNull(simpleDateFormat21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(simpleDateFormat35);
        org.junit.Assert.assertNotNull(simpleDateFormat36);
        org.junit.Assert.assertNotNull(simpleDateFormat40);
        org.junit.Assert.assertNotNull(simpleDateFormat45);
        org.junit.Assert.assertNotNull(simpleDateFormat46);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat51);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "May" + "'", str57, "May");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNotNull(date59);
// flaky:         org.junit.Assert.assertEquals(date59.toString(), "Sat May 22 10:47:18 MST 45");
        org.junit.Assert.assertNotNull(dateTime60);
// flaky:         org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Sat 22-May-0045 10:47:18" + "'", str61, "Sat 22-May-0045 10:47:18");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-15) + "'", int66 == (-15));
    }

    @Test
    public void test7146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7146");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("5.00", "     10");
        dateTime2.add((int) (short) 0, (int) 'a');
        int int6 = dateTime2.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        int int9 = dateTime8.getMs();
        int int10 = dateTime8.getHour();
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat16 = null;
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double20 = dateTime17.getDeltaYears(dateTime19);
        boolean boolean21 = dateTime14.isLessThan(dateTime19);
        java.lang.String str22 = dateTime19.toFullString();
        dateTime19.add(10, (int) (byte) -1);
        java.text.SimpleDateFormat simpleDateFormat27 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat29 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat30 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime("", simpleDateFormat29, simpleDateFormat30);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat27, simpleDateFormat30);
        boolean boolean33 = dateTime19.isGreaterThan(dateTime32);
        boolean boolean34 = dateTime8.isEqual(dateTime19);
        net.ajaskey.common.DateTime dateTime35 = null;
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime(dateTime35);
        dateTime36.set(42, 10, 10);
        java.util.Date date41 = dateTime36.getTime();
        net.ajaskey.common.DateTime dateTime42 = dateTime8.copy(dateTime36);
        net.ajaskey.common.DateTime dateTime43 = dateTime2.copy(dateTime8);
        int int44 = dateTime43.getHour();
        java.lang.String str45 = dateTime43.toFullString();
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime((long) (short) 0);
        int int48 = dateTime47.getHour();
        java.lang.String str49 = dateTime47.toString();
        java.text.SimpleDateFormat simpleDateFormat51 = null;
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat51);
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double55 = dateTime52.getDeltaYears(dateTime54);
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean60 = dateTime54.isEqual(dateTime59);
        java.lang.String str61 = dateTime59.getMonth();
        java.text.SimpleDateFormat simpleDateFormat66 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat67 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime("", simpleDateFormat66, simpleDateFormat67);
        java.text.SimpleDateFormat simpleDateFormat70 = null;
        java.text.SimpleDateFormat simpleDateFormat71 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime72 = new net.ajaskey.common.DateTime("January", simpleDateFormat70, simpleDateFormat71);
        net.ajaskey.common.DateTime dateTime73 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat66, simpleDateFormat71);
        java.text.SimpleDateFormat simpleDateFormat76 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat77 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime78 = new net.ajaskey.common.DateTime("", simpleDateFormat76, simpleDateFormat77);
        net.ajaskey.common.DateTime dateTime80 = new net.ajaskey.common.DateTime(100L);
        int int81 = dateTime80.getMs();
        java.text.SimpleDateFormat simpleDateFormat82 = net.ajaskey.common.Utils.sdf;
        dateTime80.setSdf(simpleDateFormat82);
        net.ajaskey.common.DateTime dateTime84 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat77, simpleDateFormat82);
        net.ajaskey.common.DateTime dateTime85 = new net.ajaskey.common.DateTime("                             100", simpleDateFormat71, simpleDateFormat77);
        net.ajaskey.common.DateTime dateTime86 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:42:58", simpleDateFormat71);
        boolean boolean87 = dateTime59.isLessThan(dateTime86);
        boolean boolean88 = net.ajaskey.common.Utils.sameMonth(dateTime47, dateTime59);
        net.ajaskey.common.DateTime dateTime89 = dateTime43.copy(dateTime59);
        net.ajaskey.common.DateTime dateTime92 = dateTime43.parse("Thu 10-Apr-0002 10:45:09", "                                                                                                                                               0");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str22, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertNotNull(simpleDateFormat27);
        org.junit.Assert.assertNotNull(simpleDateFormat29);
        org.junit.Assert.assertNotNull(simpleDateFormat30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(date41);
// flaky:         org.junit.Assert.assertEquals(date41.toString(), "Sat Nov 10 10:47:18 MST 42");
        org.junit.Assert.assertNotNull(dateTime42);
        org.junit.Assert.assertNotNull(dateTime43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 5 + "'", int44 == 5);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str45, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 5 + "'", int48 == 5);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "31-Dec-1969" + "'", str49, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "April" + "'", str61, "April");
        org.junit.Assert.assertNotNull(simpleDateFormat66);
        org.junit.Assert.assertNotNull(simpleDateFormat67);
        org.junit.Assert.assertNotNull(simpleDateFormat71);
        org.junit.Assert.assertNotNull(simpleDateFormat76);
        org.junit.Assert.assertNotNull(simpleDateFormat77);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 100 + "'", int81 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat82);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(dateTime89);
        org.junit.Assert.assertNull(dateTime92);
    }

    @Test
    public void test7147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7147");
        java.lang.String str1 = net.ajaskey.common.Utils.getFromUrl("Thu 10-Apr-0002 10:46:55");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
    }

    @Test
    public void test7148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7148");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) 2020);
        java.text.SimpleDateFormat simpleDateFormat3 = null;
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat3);
        java.lang.String str5 = dateTime4.getMonth();
        boolean boolean6 = dateTime1.sameDate(dateTime4);
        java.lang.String str7 = dateTime4.getDay();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UNKNOWN" + "'", str5, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UNKNOWN" + "'", str7, "UNKNOWN");
    }

    @Test
    public void test7149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7149");
        java.text.SimpleDateFormat simpleDateFormat1 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat2 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime("", simpleDateFormat1, simpleDateFormat2);
        java.text.SimpleDateFormat simpleDateFormat5 = null;
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat5);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        boolean boolean10 = dateTime8.isNull();
        boolean boolean11 = dateTime8.isWeekday();
        int int12 = dateTime8.getDayOfYear();
        boolean boolean13 = dateTime3.isGreaterThan(dateTime8);
        java.text.SimpleDateFormat simpleDateFormat15 = null;
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat15);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double19 = dateTime16.getDeltaYears(dateTime18);
        java.lang.String str20 = dateTime18.toFullString();
        int int21 = dateTime18.getDayOfMonth();
        boolean boolean22 = net.ajaskey.common.Utils.sameMonth(dateTime3, dateTime18);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime(100L);
        int int25 = dateTime24.getMs();
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(100L);
        double double32 = dateTime29.getDeltaYears(dateTime31);
        java.text.SimpleDateFormat simpleDateFormat33 = dateTime29.getSdf();
        boolean boolean34 = dateTime24.isLessThanOrEqual(dateTime29);
        int int35 = dateTime29.getDayOfYear();
        dateTime29.add(5, 42);
        dateTime29.add((-51), 513);
        dateTime3.set(dateTime29);
        org.junit.Assert.assertNotNull(simpleDateFormat1);
        org.junit.Assert.assertNotNull(simpleDateFormat2);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 365 + "'", int12 == 365);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str20, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 31 + "'", int21 == 31);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-1972.041095890411d) + "'", double32 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
    }

    @Test
    public void test7150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7150");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(0, (int) (byte) -1, (int) (short) 1);
        java.lang.String str4 = dateTime3.getMonth();
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean9 = dateTime8.isNull();
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime();
        boolean boolean11 = dateTime8.sameDate(dateTime10);
        dateTime10.set(43, (int) (byte) 1, 12);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(0, (int) (byte) -1, (int) (short) 1);
        java.lang.String str20 = dateTime19.getMonth();
        boolean boolean21 = dateTime10.isGreaterThanOrEqual(dateTime19);
        java.text.SimpleDateFormat simpleDateFormat23 = null;
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat23);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double27 = dateTime24.getDeltaYears(dateTime26);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean32 = dateTime26.isEqual(dateTime31);
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime(100L);
        int int35 = dateTime34.getMs();
        boolean boolean36 = dateTime31.isGreaterThanOrEqual(dateTime34);
        java.text.SimpleDateFormat simpleDateFormat38 = null;
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat38);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double42 = dateTime39.getDeltaYears(dateTime41);
        boolean boolean43 = dateTime39.isWeekday();
        boolean boolean44 = dateTime34.isLessThanOrEqual(dateTime39);
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime(100L);
        int int47 = dateTime46.getMs();
        boolean boolean48 = dateTime46.isWeekday();
        int int49 = dateTime46.getHour();
        java.text.SimpleDateFormat simpleDateFormat51 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime("January", simpleDateFormat51);
        dateTime46.setSdf(simpleDateFormat51);
        java.lang.String str54 = dateTime46.toFullString();
        java.lang.String str55 = dateTime46.toFullString();
        double double56 = dateTime34.getDeltaYears(dateTime46);
        net.ajaskey.common.DateTime dateTime59 = dateTime34.parse("                                                                                                                                                                                                                                                          22", "Thu 10-Apr-0002 10:44:15");
        boolean boolean60 = net.ajaskey.common.Utils.sameDate(dateTime19, dateTime59);
        long long61 = dateTime3.getDeltaMilliSeconds(dateTime19);
        int int62 = dateTime3.getMs();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "December" + "'", str4, "December");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "December" + "'", str20, "December");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 5 + "'", int49 == 5);
        org.junit.Assert.assertNotNull(simpleDateFormat51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str54, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str55, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNull(dateTime59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 0L + "'", long61 == 0L);
// flaky:         org.junit.Assert.assertTrue("'" + int62 + "' != '" + 3 + "'", int62 == 3);
    }

    @Test
    public void test7151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7151");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean4 = dateTime3.isNull();
        java.lang.String str5 = dateTime3.getDay();
        java.lang.String str6 = dateTime3.getMonth();
        java.lang.String str7 = dateTime3.getDay();
        java.lang.String str8 = dateTime3.toFullString();
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(100L);
        double double15 = dateTime12.getDeltaYears(dateTime14);
        int int16 = dateTime12.getHour();
        dateTime12.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat21 = null;
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat21);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double25 = dateTime22.getDeltaYears(dateTime24);
        boolean boolean26 = dateTime12.isEqual(dateTime24);
        int int27 = dateTime12.getDayOfYear();
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(100L);
        int int30 = dateTime29.getMs();
        boolean boolean31 = dateTime29.isWeekday();
        int int32 = dateTime29.getHour();
        java.text.SimpleDateFormat simpleDateFormat34 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("January", simpleDateFormat34);
        dateTime29.setSdf(simpleDateFormat34);
        java.text.SimpleDateFormat simpleDateFormat37 = dateTime29.getSdf();
        boolean boolean38 = dateTime12.isGreaterThan(dateTime29);
        java.text.SimpleDateFormat simpleDateFormat40 = null;
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat40);
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double44 = dateTime41.getDeltaYears(dateTime43);
        boolean boolean45 = dateTime41.isWeekday();
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long50 = dateTime41.getDeltaDays(dateTime49);
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime(dateTime41);
        dateTime51.setFirstWorkDay();
        boolean boolean53 = dateTime29.sameDate(dateTime51);
        boolean boolean54 = dateTime3.sameDate(dateTime29);
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime("5.00", "     10");
        dateTime57.add((int) (short) 0, (int) 'a');
        int int61 = dateTime57.getDayOfMonth();
        int int62 = dateTime57.getDayOfWeek();
        int int63 = dateTime57.getDayOfMonth();
        java.util.Calendar calendar64 = dateTime57.getCal();
        boolean boolean65 = dateTime29.isLessThanOrEqual(dateTime57);
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime(100L);
        int int68 = dateTime67.getMs();
        java.lang.String str69 = dateTime67.toString();
        dateTime67.set(25, (-1), (int) (short) 10);
        net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime79 = new net.ajaskey.common.DateTime(100L);
        double double80 = dateTime77.getDeltaYears(dateTime79);
        boolean boolean81 = dateTime79.isWeekday();
        boolean boolean82 = net.ajaskey.common.Utils.sameMonth(dateTime67, dateTime79);
        net.ajaskey.common.DateTime dateTime84 = new net.ajaskey.common.DateTime((long) (short) 0);
        int int85 = dateTime84.getHour();
        boolean boolean86 = dateTime84.isNull();
        net.ajaskey.common.DateTime dateTime87 = new net.ajaskey.common.DateTime(dateTime84);
        boolean boolean88 = dateTime79.isGreaterThan(dateTime84);
        java.text.SimpleDateFormat simpleDateFormat89 = dateTime84.getSdf();
        net.ajaskey.common.DateTime dateTime92 = new net.ajaskey.common.DateTime("5.00", "     10");
        dateTime92.add((int) (short) 0, (int) 'a');
        long long96 = dateTime84.getDeltaDays(dateTime92);
        boolean boolean97 = dateTime92.isWeekday();
        int int98 = dateTime29.getYears(dateTime92);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Thursday" + "'", str5, "Thursday");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "April" + "'", str6, "April");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Thursday" + "'", str7, "Thursday");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Thu 10-Apr-0002 10:47:19" + "'", str8, "Thu 10-Apr-0002 10:47:19");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-1972.041095890411d) + "'", double15 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10 + "'", int16 == 10);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 5 + "'", int32 == 5);
        org.junit.Assert.assertNotNull(simpleDateFormat34);
        org.junit.Assert.assertNotNull(simpleDateFormat37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNull(calendar64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "31-Dec-1969" + "'", str69, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + (-1972.041095890411d) + "'", double80 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 5 + "'", int85 == 5);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNull(simpleDateFormat89);
        org.junit.Assert.assertTrue("'" + long96 + "' != '" + 0L + "'", long96 == 0L);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 0 + "'", int98 == 0);
    }

    @Test
    public void test7152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7152");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) 1, 1869, (-1870));
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(100L);
        double double10 = dateTime7.getDeltaYears(dateTime9);
        java.text.SimpleDateFormat simpleDateFormat12 = null;
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat12);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double16 = dateTime13.getDeltaYears(dateTime15);
        boolean boolean17 = dateTime13.isWeekday();
        boolean boolean18 = dateTime7.sameDate(dateTime13);
        java.text.SimpleDateFormat simpleDateFormat20 = null;
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat20);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double24 = dateTime21.getDeltaYears(dateTime23);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean29 = dateTime23.isEqual(dateTime28);
        dateTime7.set(dateTime28);
        java.lang.String str31 = dateTime28.toString();
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((int) (byte) 1, 6, (int) (short) 1);
        boolean boolean36 = dateTime28.isLessThanOrEqual(dateTime35);
        double double37 = dateTime3.getDeltaYears(dateTime28);
        java.lang.String str39 = dateTime3.format("12");
        java.text.SimpleDateFormat simpleDateFormat42 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat43 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime("", simpleDateFormat42, simpleDateFormat43);
        java.text.SimpleDateFormat simpleDateFormat46 = null;
        java.text.SimpleDateFormat simpleDateFormat47 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime("January", simpleDateFormat46, simpleDateFormat47);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat42, simpleDateFormat47);
        java.lang.String str50 = dateTime49.toString();
        java.text.SimpleDateFormat simpleDateFormat53 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat54 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime("", simpleDateFormat53, simpleDateFormat54);
        java.text.SimpleDateFormat simpleDateFormat57 = null;
        java.text.SimpleDateFormat simpleDateFormat61 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat63 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat64 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime("", simpleDateFormat63, simpleDateFormat64);
        net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat61, simpleDateFormat64);
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime("10-Apr-0002", simpleDateFormat64);
        java.text.SimpleDateFormat simpleDateFormat70 = null;
        java.text.SimpleDateFormat simpleDateFormat71 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime72 = new net.ajaskey.common.DateTime("January", simpleDateFormat70, simpleDateFormat71);
        java.text.SimpleDateFormat simpleDateFormat75 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime76 = new net.ajaskey.common.DateTime("January", simpleDateFormat75);
        net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime("", simpleDateFormat75);
        net.ajaskey.common.DateTime dateTime78 = new net.ajaskey.common.DateTime("", simpleDateFormat71, simpleDateFormat75);
        net.ajaskey.common.DateTime dateTime79 = new net.ajaskey.common.DateTime("January                                                                                               52.00                                                                                               52.00                                                                                               52.00                                                                                               52.00hi!                                                                                               52.00", simpleDateFormat64, simpleDateFormat75);
        net.ajaskey.common.DateTime dateTime80 = new net.ajaskey.common.DateTime("January", simpleDateFormat57, simpleDateFormat75);
        net.ajaskey.common.DateTime dateTime81 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:43:06", simpleDateFormat53, simpleDateFormat75);
        dateTime81.setFirstWorkDay();
        net.ajaskey.common.DateTime dateTime83 = new net.ajaskey.common.DateTime(dateTime81);
        double double84 = dateTime49.getDeltaYears(dateTime81);
        dateTime3.set(dateTime49);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1972.041095890411d) + "'", double10 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "10-Apr-0002" + "'", str31, "10-Apr-0002");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
// flaky:         org.junit.Assert.assertTrue("'" + double37 + "' != '" + 152.46027397260275d + "'", double37 == 152.46027397260275d);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "12" + "'", str39, "12");
        org.junit.Assert.assertNotNull(simpleDateFormat42);
        org.junit.Assert.assertNotNull(simpleDateFormat43);
        org.junit.Assert.assertNotNull(simpleDateFormat47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(simpleDateFormat53);
        org.junit.Assert.assertNotNull(simpleDateFormat54);
        org.junit.Assert.assertNotNull(simpleDateFormat61);
        org.junit.Assert.assertNotNull(simpleDateFormat63);
        org.junit.Assert.assertNotNull(simpleDateFormat64);
        org.junit.Assert.assertNotNull(simpleDateFormat71);
        org.junit.Assert.assertNotNull(simpleDateFormat75);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
    }

    @Test
    public void test7153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7153");
        java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readTextFile("Thu 10-Apr-0002 10:44:14", false);
        org.junit.Assert.assertNotNull(strList2);
    }

    @Test
    public void test7154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7154");
        java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readTextFile("Thu 10-Apr-0002 10:45:42", false);
        net.ajaskey.common.TextUtils.print(strList2);
        org.junit.Assert.assertNotNull(strList2);
    }

    @Test
    public void test7155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7155");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        boolean boolean6 = dateTime2.isWeekday();
        java.lang.String str7 = dateTime2.format();
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(100L);
        double double14 = dateTime11.getDeltaYears(dateTime13);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime(100L);
        double double21 = dateTime18.getDeltaYears(dateTime20);
        int int22 = dateTime18.getHour();
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(100L);
        double double29 = dateTime26.getDeltaYears(dateTime28);
        int int30 = dateTime26.getHour();
        dateTime26.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat35 = null;
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat35);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double39 = dateTime36.getDeltaYears(dateTime38);
        boolean boolean40 = dateTime26.isEqual(dateTime38);
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat46 = null;
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat46);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double50 = dateTime47.getDeltaYears(dateTime49);
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean55 = dateTime49.isEqual(dateTime54);
        java.util.Calendar calendar56 = dateTime49.getCal();
        boolean boolean57 = dateTime44.isLessThan(dateTime49);
        dateTime44.setFirstWorkDay();
        boolean boolean59 = dateTime26.sameDate(dateTime44);
        dateTime18.set(dateTime26);
        java.text.SimpleDateFormat simpleDateFormat62 = null;
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat62);
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double66 = dateTime63.getDeltaYears(dateTime65);
        boolean boolean67 = dateTime63.isWeekday();
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long72 = dateTime63.getDeltaDays(dateTime71);
        boolean boolean73 = dateTime26.isLessThanOrEqual(dateTime63);
        int int74 = dateTime26.getYear();
        boolean boolean75 = dateTime13.isLessThan(dateTime26);
        java.lang.String str76 = dateTime26.toString();
        boolean boolean77 = dateTime2.isLessThanOrEqual(dateTime26);
        net.ajaskey.common.DateTime dateTime78 = null;
        net.ajaskey.common.DateTime dateTime79 = new net.ajaskey.common.DateTime(dateTime78);
        dateTime79.set(42, 10, 10);
        java.util.Date date84 = dateTime79.getTime();
        net.ajaskey.common.DateTime dateTime85 = new net.ajaskey.common.DateTime(date84);
        int int86 = dateTime85.getSecond();
        net.ajaskey.common.DateTime dateTime87 = dateTime26.copy(dateTime85);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "BAD-DATE-FORMAT" + "'", str7, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + (-1972.041095890411d) + "'", double14 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-1972.041095890411d) + "'", double21 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 10 + "'", int22 == 10);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-1972.041095890411d) + "'", double29 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(calendar56);
        org.junit.Assert.assertEquals(calendar56.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 0L + "'", long72 == 0L);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 2 + "'", int74 == 2);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "10-Apr-0002" + "'", str76, "10-Apr-0002");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(date84);
// flaky:         org.junit.Assert.assertEquals(date84.toString(), "Sat Nov 10 10:47:19 MST 42");
// flaky:         org.junit.Assert.assertTrue("'" + int86 + "' != '" + 19 + "'", int86 == 19);
        org.junit.Assert.assertNotNull(dateTime87);
    }

    @Test
    public void test7156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7156");
        java.lang.String[] strArray1 = null;
        java.util.List<java.io.File> fileList2 = net.ajaskey.common.Utils.getDirTree("", strArray1);
        org.junit.Assert.assertNull(fileList2);
    }

    @Test
    public void test7157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7157");
        java.lang.String str2 = net.ajaskey.common.Utils.ifmt(845, 442);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                                                                                                                                                                                                                                                                                                                                                                                                                                       845" + "'", str2, "                                                                                                                                                                                                                                                                                                                                                                                                                                                       845");
    }

    @Test
    public void test7158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7158");
        java.text.SimpleDateFormat simpleDateFormat2 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime("January", simpleDateFormat2);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime("", simpleDateFormat2);
        dateTime4.setFirstWorkDay();
        int int6 = dateTime4.getMs();
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(100L);
        double double13 = dateTime10.getDeltaYears(dateTime12);
        java.text.SimpleDateFormat simpleDateFormat15 = null;
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat15);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double19 = dateTime16.getDeltaYears(dateTime18);
        boolean boolean20 = dateTime16.isWeekday();
        boolean boolean21 = dateTime10.sameDate(dateTime16);
        java.text.SimpleDateFormat simpleDateFormat23 = null;
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat23);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double27 = dateTime24.getDeltaYears(dateTime26);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean32 = dateTime26.isEqual(dateTime31);
        dateTime10.set(dateTime31);
        java.lang.String str34 = dateTime31.toString();
        dateTime4.set(dateTime31);
        java.text.SimpleDateFormat simpleDateFormat37 = null;
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat37);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double41 = dateTime38.getDeltaYears(dateTime40);
        boolean boolean42 = dateTime38.isWeekday();
        int int43 = dateTime38.getHour();
        boolean boolean44 = dateTime31.isGreaterThan(dateTime38);
        java.util.Calendar calendar45 = dateTime38.getCal();
        dateTime38.add(38, 274);
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime(100L);
        dateTime50.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str55 = dateTime50.getMonth();
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime(100L);
        dateTime57.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str62 = dateTime57.getMonth();
        int int63 = dateTime57.getMs();
        net.ajaskey.common.DateTime dateTime64 = dateTime50.copy(dateTime57);
        int int65 = dateTime57.getSecond();
        int int66 = dateTime57.getHour();
        java.lang.String str67 = dateTime57.toFullString();
        java.util.Date date68 = dateTime57.getTime();
        dateTime57.set(431, 320, 47);
        boolean boolean73 = dateTime38.isEqual(dateTime57);
        org.junit.Assert.assertNotNull(simpleDateFormat2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-1972.041095890411d) + "'", double13 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "10-Apr-0002" + "'", str34, "10-Apr-0002");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(calendar45);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "January" + "'", str55, "January");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "January" + "'", str62, "January");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 100 + "'", int63 == 100);
        org.junit.Assert.assertNotNull(dateTime64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 5 + "'", int66 == 5);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Sat 04-Jan-0100 17:00:00" + "'", str67, "Sat 04-Jan-0100 17:00:00");
        org.junit.Assert.assertNotNull(date68);
        org.junit.Assert.assertEquals(date68.toString(), "Sat Jan 04 17:00:00 MST 100");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test7159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7159");
        net.ajaskey.common.DateTime dateTime0 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime(100L);
        int int3 = dateTime2.getMs();
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(100L);
        dateTime9.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str14 = dateTime9.getMonth();
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(100L);
        dateTime16.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str21 = dateTime16.getMonth();
        int int22 = dateTime16.getMs();
        net.ajaskey.common.DateTime dateTime23 = dateTime9.copy(dateTime16);
        dateTime7.set(dateTime9);
        boolean boolean25 = dateTime2.isGreaterThanOrEqual(dateTime9);
        net.ajaskey.common.DateTime dateTime27 = dateTime9.parse("                       25");
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(100L);
        int int30 = dateTime29.getMs();
        java.text.SimpleDateFormat simpleDateFormat31 = net.ajaskey.common.Utils.sdf;
        dateTime29.setSdf(simpleDateFormat31);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("5.00", "     10");
        dateTime35.add((int) (short) 0, (int) 'a');
        int int39 = dateTime35.getDayOfMonth();
        java.lang.String str40 = dateTime35.toString();
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime(100L);
        double double47 = dateTime44.getDeltaYears(dateTime46);
        int int48 = dateTime44.getHour();
        java.text.SimpleDateFormat simpleDateFormat50 = null;
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat50);
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double54 = dateTime51.getDeltaYears(dateTime53);
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean59 = dateTime53.isEqual(dateTime58);
        java.util.Calendar calendar60 = dateTime53.getCal();
        java.lang.String str61 = dateTime53.format();
        net.ajaskey.common.DateTime dateTime62 = null;
        long long63 = dateTime53.getDeltaDays(dateTime62);
        int int64 = dateTime53.getSecond();
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime(100L);
        double double71 = dateTime68.getDeltaYears(dateTime70);
        java.text.SimpleDateFormat simpleDateFormat73 = null;
        net.ajaskey.common.DateTime dateTime74 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat73);
        net.ajaskey.common.DateTime dateTime76 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double77 = dateTime74.getDeltaYears(dateTime76);
        boolean boolean78 = dateTime74.isWeekday();
        boolean boolean79 = dateTime68.sameDate(dateTime74);
        int int80 = dateTime74.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime81 = dateTime53.copy(dateTime74);
        dateTime44.set(dateTime74);
        boolean boolean83 = dateTime35.isGreaterThan(dateTime74);
        boolean boolean84 = net.ajaskey.common.Utils.sameMonth(dateTime29, dateTime35);
        int int85 = dateTime9.getYears(dateTime29);
        boolean boolean86 = net.ajaskey.common.Utils.sameDate(dateTime0, dateTime9);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "January" + "'", str14, "January");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "January" + "'", str21, "January");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        org.junit.Assert.assertNotNull(dateTime23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(dateTime27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat31);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-1972.041095890411d) + "'", double47 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 10 + "'", int48 == 10);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(calendar60);
        org.junit.Assert.assertEquals(calendar60.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "BAD-DATE-FORMAT" + "'", str61, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 0L + "'", long63 == 0L);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-1972.041095890411d) + "'", double71 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNull(dateTime81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1869 + "'", int85 == 1869);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test7160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7160");
        java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readTextFile("Thu 10-Apr-0002 10:46:13", true);
        org.junit.Assert.assertNotNull(strList2);
    }

    @Test
    public void test7161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7161");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(2020, (-1), (int) 'a');
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat9 = null;
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat9);
        boolean boolean11 = net.ajaskey.common.Utils.sameDate(dateTime7, dateTime10);
        boolean boolean12 = dateTime3.isEqual(dateTime7);
        java.text.SimpleDateFormat simpleDateFormat13 = dateTime3.getSdf();
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(12, 42, (int) (byte) 1);
        java.util.Calendar calendar18 = dateTime17.getCal();
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime(100L);
        int int21 = dateTime20.getMs();
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(100L);
        double double28 = dateTime25.getDeltaYears(dateTime27);
        java.text.SimpleDateFormat simpleDateFormat29 = dateTime25.getSdf();
        boolean boolean30 = dateTime20.isLessThanOrEqual(dateTime25);
        int int31 = dateTime25.getDayOfYear();
        boolean boolean32 = dateTime25.isWeekday();
        java.lang.String str33 = dateTime25.getMonth();
        boolean boolean34 = dateTime17.isLessThan(dateTime25);
        long long35 = dateTime3.getDeltaMilliSeconds(dateTime25);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(simpleDateFormat13);
        org.junit.Assert.assertNotNull(calendar18);
// flaky:         org.junit.Assert.assertEquals(calendar18.toString(), "java.util.GregorianCalendar[time=?,areFieldsSet=false,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=12,MONTH=42,WEEK_OF_YEAR=26,WEEK_OF_MONTH=4,DAY_OF_MONTH=1,DAY_OF_YEAR=177,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=4,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=19,MILLISECOND=209,ZONE_OFFSET=-25200000,DST_OFFSET=3600000]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + (-1972.041095890411d) + "'", double28 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 100 + "'", int31 == 100);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "April" + "'", str33, "April");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-63773827200000L) + "'", long35 == (-63773827200000L));
    }

    @Test
    public void test7162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7162");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat5 = null;
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat5);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean14 = dateTime8.isEqual(dateTime13);
        java.util.Calendar calendar15 = dateTime8.getCal();
        boolean boolean16 = dateTime3.isLessThan(dateTime8);
        net.ajaskey.common.DateTime dateTime17 = null;
        boolean boolean18 = dateTime3.isEqual(dateTime17);
        java.text.SimpleDateFormat simpleDateFormat19 = dateTime3.getSdf();
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime(100L);
        double double26 = dateTime23.getDeltaYears(dateTime25);
        int int27 = dateTime23.getHour();
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime(100L);
        double double34 = dateTime31.getDeltaYears(dateTime33);
        int int35 = dateTime31.getHour();
        dateTime31.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat40 = null;
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat40);
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double44 = dateTime41.getDeltaYears(dateTime43);
        boolean boolean45 = dateTime31.isEqual(dateTime43);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat51 = null;
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat51);
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double55 = dateTime52.getDeltaYears(dateTime54);
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean60 = dateTime54.isEqual(dateTime59);
        java.util.Calendar calendar61 = dateTime54.getCal();
        boolean boolean62 = dateTime49.isLessThan(dateTime54);
        dateTime49.setFirstWorkDay();
        boolean boolean64 = dateTime31.sameDate(dateTime49);
        dateTime23.set(dateTime31);
        java.lang.String str66 = dateTime23.toFullString();
        boolean boolean67 = dateTime3.sameDate(dateTime23);
        int int68 = dateTime3.getDayOfYear();
        java.util.Calendar calendar69 = null;
        dateTime3.set(calendar69);
        java.lang.Class<?> wildcardClass71 = dateTime3.getClass();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(calendar15);
        org.junit.Assert.assertEquals(calendar15.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(simpleDateFormat19);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-1972.041095890411d) + "'", double26 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 10 + "'", int27 == 10);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-1972.041095890411d) + "'", double34 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(calendar61);
        org.junit.Assert.assertEquals(calendar61.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Thu 10-Apr-0002 10:47:19" + "'", str66, "Thu 10-Apr-0002 10:47:19");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test7163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7163");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(36, 729, 56);
        java.lang.String str5 = dateTime3.format(" 0");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + " 0" + "'", str5, " 0");
    }

    @Test
    public void test7164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7164");
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime(100L);
        int int5 = dateTime4.getMs();
        java.text.SimpleDateFormat simpleDateFormat6 = net.ajaskey.common.Utils.sdf;
        dateTime4.setSdf(simpleDateFormat6);
        java.text.SimpleDateFormat simpleDateFormat8 = net.ajaskey.common.Utils.sdfFull;
        dateTime4.setSdf(simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
        int int12 = dateTime11.getMs();
        java.lang.String str13 = dateTime11.toString();
        java.util.Date date14 = dateTime11.getTime();
        int int15 = dateTime11.getDayOfYear();
        java.text.SimpleDateFormat simpleDateFormat17 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat18 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime("", simpleDateFormat17, simpleDateFormat18);
        dateTime11.setSdf(simpleDateFormat17);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("", simpleDateFormat8, simpleDateFormat17);
        java.text.SimpleDateFormat simpleDateFormat25 = null;
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat25);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double29 = dateTime26.getDeltaYears(dateTime28);
        boolean boolean30 = dateTime28.isNull();
        java.text.SimpleDateFormat simpleDateFormat32 = null;
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat32);
        dateTime33.set((int) ' ', 0, 11);
        boolean boolean38 = dateTime28.isGreaterThanOrEqual(dateTime33);
        java.lang.String str39 = dateTime28.toString();
        java.text.SimpleDateFormat simpleDateFormat41 = null;
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat41);
        boolean boolean43 = dateTime28.isGreaterThanOrEqual(dateTime42);
        java.text.SimpleDateFormat simpleDateFormat44 = dateTime28.getSdf();
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime("Wed 12-Apr-0139 10:44:24", simpleDateFormat44);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime(100L);
        double double52 = dateTime49.getDeltaYears(dateTime51);
        java.text.SimpleDateFormat simpleDateFormat54 = null;
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat54);
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double58 = dateTime55.getDeltaYears(dateTime57);
        boolean boolean59 = dateTime55.isWeekday();
        boolean boolean60 = dateTime49.sameDate(dateTime55);
        int int61 = dateTime55.getDayOfMonth();
        int int62 = dateTime55.getHour();
        java.text.SimpleDateFormat simpleDateFormat64 = null;
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat64);
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double68 = dateTime65.getDeltaYears(dateTime67);
        net.ajaskey.common.DateTime dateTime72 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean73 = dateTime67.isEqual(dateTime72);
        java.lang.String str74 = dateTime72.getDay();
        boolean boolean75 = dateTime72.isWeekday();
        java.lang.String str76 = dateTime72.getMonth();
        boolean boolean77 = dateTime55.isLessThanOrEqual(dateTime72);
        net.ajaskey.common.DateTime dateTime81 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat84 = null;
        java.text.SimpleDateFormat simpleDateFormat85 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime86 = new net.ajaskey.common.DateTime("January", simpleDateFormat84, simpleDateFormat85);
        java.text.SimpleDateFormat simpleDateFormat89 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime90 = new net.ajaskey.common.DateTime("January", simpleDateFormat89);
        net.ajaskey.common.DateTime dateTime91 = new net.ajaskey.common.DateTime("", simpleDateFormat89);
        net.ajaskey.common.DateTime dateTime92 = new net.ajaskey.common.DateTime("", simpleDateFormat85, simpleDateFormat89);
        dateTime81.setSdf(simpleDateFormat85);
        dateTime72.setSdf(simpleDateFormat85);
        net.ajaskey.common.DateTime dateTime95 = new net.ajaskey.common.DateTime("", simpleDateFormat44, simpleDateFormat85);
        net.ajaskey.common.DateTime dateTime96 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:45:37", simpleDateFormat17, simpleDateFormat85);
        net.ajaskey.common.DateTime dateTime97 = new net.ajaskey.common.DateTime("", simpleDateFormat17);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat6);
        org.junit.Assert.assertNotNull(simpleDateFormat8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "31-Dec-1969" + "'", str13, "31-Dec-1969");
        org.junit.Assert.assertNotNull(date14);
        org.junit.Assert.assertEquals(date14.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 365 + "'", int15 == 365);
        org.junit.Assert.assertNotNull(simpleDateFormat17);
        org.junit.Assert.assertNotNull(simpleDateFormat18);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "31-Dec-1969" + "'", str39, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(simpleDateFormat44);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-1972.041095890411d) + "'", double52 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Thursday" + "'", str74, "Thursday");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "April" + "'", str76, "April");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(simpleDateFormat85);
        org.junit.Assert.assertNotNull(simpleDateFormat89);
    }

    @Test
    public void test7165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7165");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime(100L);
        int int3 = dateTime2.getMs();
        java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdf;
        dateTime2.setSdf(simpleDateFormat4);
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat4);
        java.text.SimpleDateFormat simpleDateFormat8 = null;
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double12 = dateTime9.getDeltaYears(dateTime11);
        boolean boolean13 = dateTime11.isNull();
        java.text.SimpleDateFormat simpleDateFormat15 = null;
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat15);
        dateTime16.set((int) ' ', 0, 11);
        boolean boolean21 = dateTime11.isGreaterThanOrEqual(dateTime16);
        double double22 = dateTime6.getDeltaYears(dateTime11);
        java.text.SimpleDateFormat simpleDateFormat24 = null;
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat24);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double28 = dateTime25.getDeltaYears(dateTime27);
        boolean boolean29 = dateTime27.isNull();
        boolean boolean30 = dateTime11.isGreaterThan(dateTime27);
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean35 = dateTime34.isNull();
        java.lang.String str36 = dateTime34.getDay();
        java.lang.String str37 = dateTime34.getMonth();
        java.lang.String str38 = dateTime34.getDay();
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime(100L);
        double double45 = dateTime42.getDeltaYears(dateTime44);
        boolean boolean46 = dateTime44.isWeekday();
        java.util.Date date47 = dateTime44.getTime();
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime(date47);
        dateTime34.set(date47);
        long long50 = dateTime27.getDeltaDays(dateTime34);
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime(100L);
        double double57 = dateTime54.getDeltaYears(dateTime56);
        java.util.Date date58 = dateTime54.getTime();
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime(date58);
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime(date58);
        dateTime27.set(date58);
        dateTime27.set(248, 50, 8);
        java.util.Date date66 = dateTime27.getTime();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat4);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Thursday" + "'", str36, "Thursday");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "April" + "'", str37, "April");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Thursday" + "'", str38, "Thursday");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-1972.041095890411d) + "'", double45 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(date47);
        org.junit.Assert.assertEquals(date47.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-1972.041095890411d) + "'", double57 == (-1972.041095890411d));
        org.junit.Assert.assertNotNull(date58);
// flaky:         org.junit.Assert.assertEquals(date58.toString(), "Thu Apr 10 10:47:19 MST 2");
        org.junit.Assert.assertNotNull(date66);
// flaky:         org.junit.Assert.assertEquals(date66.toString(), "Fri Mar 08 10:47:19 MST 244");
    }

    @Test
    public void test7166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7166");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(439, 348, 0);
    }

    @Test
    public void test7167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7167");
        // The following exception was thrown during execution in test generation
        try {
            net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:44:30", "Thu 10-Apr-0002 10:46:58");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal pattern character 'T'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test7168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7168");
        java.lang.String str2 = net.ajaskey.common.Utils.fmt((double) 62190310438744L, (int) (byte) 0);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Invalid fmt" + "'", str2, "Invalid fmt");
    }

    @Test
    public void test7169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7169");
        java.text.SimpleDateFormat simpleDateFormat2 = null;
        java.text.SimpleDateFormat simpleDateFormat3 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime("January", simpleDateFormat2, simpleDateFormat3);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime("                                                 100", simpleDateFormat3);
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime(100L);
        int int8 = dateTime7.getMs();
        java.lang.String str9 = dateTime7.toString();
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
        int int12 = dateTime11.getMs();
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(100L);
        double double19 = dateTime16.getDeltaYears(dateTime18);
        java.text.SimpleDateFormat simpleDateFormat20 = dateTime16.getSdf();
        boolean boolean21 = dateTime11.isLessThanOrEqual(dateTime16);
        boolean boolean22 = dateTime11.isWeekday();
        java.util.Calendar calendar23 = dateTime11.getCal();
        dateTime7.set(calendar23);
        int int25 = dateTime7.getMs();
        int int26 = dateTime7.getSecond();
        boolean boolean27 = net.ajaskey.common.Utils.sameMonth(dateTime5, dateTime7);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(100L);
        dateTime29.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime(100L);
        double double40 = dateTime37.getDeltaYears(dateTime39);
        boolean boolean41 = dateTime39.isWeekday();
        java.util.Date date42 = dateTime39.getTime();
        dateTime29.set(dateTime39);
        int int44 = dateTime29.getYear();
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime(100L);
        double double51 = dateTime48.getDeltaYears(dateTime50);
        int int52 = dateTime48.getHour();
        java.util.Calendar calendar53 = dateTime48.getCal();
        boolean boolean54 = dateTime29.isGreaterThan(dateTime48);
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime(dateTime48);
        boolean boolean56 = dateTime5.isLessThanOrEqual(dateTime55);
        net.ajaskey.common.DateTime dateTime58 = dateTime55.parse("");
        org.junit.Assert.assertNotNull(simpleDateFormat3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "31-Dec-1969" + "'", str9, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-1972.041095890411d) + "'", double19 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(calendar23);
        org.junit.Assert.assertEquals(calendar23.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-1972.041095890411d) + "'", double40 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(date42);
        org.junit.Assert.assertEquals(date42.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1969 + "'", int44 == 1969);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-1972.041095890411d) + "'", double51 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 10 + "'", int52 == 10);
        org.junit.Assert.assertNotNull(calendar53);
// flaky:         org.junit.Assert.assertEquals(calendar53.toString(), "java.util.GregorianCalendar[time=-62190310360647,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=19,MILLISECOND=353,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(dateTime58);
    }

    @Test
    public void test7170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7170");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(1869, (-1968), 5);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        int int6 = dateTime5.getMs();
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(100L);
        double double13 = dateTime10.getDeltaYears(dateTime12);
        java.text.SimpleDateFormat simpleDateFormat14 = dateTime10.getSdf();
        boolean boolean15 = dateTime5.isLessThanOrEqual(dateTime10);
        int int16 = dateTime5.getDayOfMonth();
        java.util.Date date17 = dateTime5.getTime();
        java.lang.String str18 = dateTime5.toString();
        boolean boolean19 = dateTime3.isGreaterThan(dateTime5);
        java.lang.String str20 = dateTime3.getDay();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-1972.041095890411d) + "'", double13 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 31 + "'", int16 == 31);
        org.junit.Assert.assertNotNull(date17);
        org.junit.Assert.assertEquals(date17.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "31-Dec-1969" + "'", str18, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Monday" + "'", str20, "Monday");
    }

    @Test
    public void test7171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7171");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(36, 14, 1927);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        int int6 = dateTime5.getMs();
        java.text.SimpleDateFormat simpleDateFormat7 = net.ajaskey.common.Utils.sdf;
        dateTime5.setSdf(simpleDateFormat7);
        int int9 = dateTime5.getDayOfWeek();
        java.text.SimpleDateFormat simpleDateFormat11 = null;
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat11);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double15 = dateTime12.getDeltaYears(dateTime14);
        boolean boolean16 = dateTime12.isWeekday();
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long21 = dateTime12.getDeltaDays(dateTime20);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(dateTime12);
        boolean boolean23 = dateTime5.isGreaterThan(dateTime22);
        boolean boolean24 = dateTime3.isGreaterThan(dateTime22);
        dateTime3.set(100, 897, 14);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 4 + "'", int9 == 4);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test7172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7172");
        java.text.SimpleDateFormat simpleDateFormat7 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat8 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("", simpleDateFormat7, simpleDateFormat8);
        java.text.SimpleDateFormat simpleDateFormat11 = null;
        java.text.SimpleDateFormat simpleDateFormat12 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("January", simpleDateFormat11, simpleDateFormat12);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat7, simpleDateFormat12);
        java.text.SimpleDateFormat simpleDateFormat17 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat18 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime("", simpleDateFormat17, simpleDateFormat18);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(100L);
        int int22 = dateTime21.getMs();
        java.text.SimpleDateFormat simpleDateFormat23 = net.ajaskey.common.Utils.sdf;
        dateTime21.setSdf(simpleDateFormat23);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat18, simpleDateFormat23);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime("                             100", simpleDateFormat12, simpleDateFormat18);
        java.text.SimpleDateFormat simpleDateFormat29 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat30 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime("", simpleDateFormat29, simpleDateFormat30);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:42:54", simpleDateFormat29);
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime("5.00", simpleDateFormat12, simpleDateFormat29);
        java.text.SimpleDateFormat simpleDateFormat34 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat12, simpleDateFormat34);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime("                          -1,928.42", simpleDateFormat34);
        java.text.SimpleDateFormat simpleDateFormat43 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat45 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat46 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime("", simpleDateFormat45, simpleDateFormat46);
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat43, simpleDateFormat46);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime("10-Apr-0002", simpleDateFormat46);
        java.text.SimpleDateFormat simpleDateFormat52 = null;
        java.text.SimpleDateFormat simpleDateFormat53 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime("January", simpleDateFormat52, simpleDateFormat53);
        java.text.SimpleDateFormat simpleDateFormat57 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime("January", simpleDateFormat57);
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime("", simpleDateFormat57);
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime("", simpleDateFormat53, simpleDateFormat57);
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime("January                                                                                               52.00                                                                                               52.00                                                                                               52.00                                                                                               52.00hi!                                                                                               52.00", simpleDateFormat46, simpleDateFormat57);
        java.text.SimpleDateFormat simpleDateFormat63 = null;
        java.text.SimpleDateFormat simpleDateFormat64 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime("January", simpleDateFormat63, simpleDateFormat64);
        net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime("December", simpleDateFormat57, simpleDateFormat64);
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:43:00", simpleDateFormat64);
        java.text.SimpleDateFormat simpleDateFormat70 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat71 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime72 = new net.ajaskey.common.DateTime("", simpleDateFormat70, simpleDateFormat71);
        java.text.SimpleDateFormat simpleDateFormat74 = null;
        java.text.SimpleDateFormat simpleDateFormat75 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime76 = new net.ajaskey.common.DateTime("January", simpleDateFormat74, simpleDateFormat75);
        net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat70, simpleDateFormat75);
        net.ajaskey.common.DateTime dateTime78 = new net.ajaskey.common.DateTime("JanuaryDecemberDecember                                                                                               52.00Decemberhi!December", simpleDateFormat64, simpleDateFormat70);
        net.ajaskey.common.DateTime dateTime79 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:44:42", simpleDateFormat34, simpleDateFormat64);
        dateTime79.add(20, 18);
        java.lang.String str83 = dateTime79.getDay();
        org.junit.Assert.assertNotNull(simpleDateFormat7);
        org.junit.Assert.assertNotNull(simpleDateFormat8);
        org.junit.Assert.assertNotNull(simpleDateFormat12);
        org.junit.Assert.assertNotNull(simpleDateFormat17);
        org.junit.Assert.assertNotNull(simpleDateFormat18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat23);
        org.junit.Assert.assertNotNull(simpleDateFormat29);
        org.junit.Assert.assertNotNull(simpleDateFormat30);
        org.junit.Assert.assertNotNull(simpleDateFormat34);
        org.junit.Assert.assertNotNull(simpleDateFormat43);
        org.junit.Assert.assertNotNull(simpleDateFormat45);
        org.junit.Assert.assertNotNull(simpleDateFormat46);
        org.junit.Assert.assertNotNull(simpleDateFormat53);
        org.junit.Assert.assertNotNull(simpleDateFormat57);
        org.junit.Assert.assertNotNull(simpleDateFormat64);
        org.junit.Assert.assertNotNull(simpleDateFormat70);
        org.junit.Assert.assertNotNull(simpleDateFormat71);
        org.junit.Assert.assertNotNull(simpleDateFormat75);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "UNKNOWN" + "'", str83, "UNKNOWN");
    }

    @Test
    public void test7173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7173");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("5.00", "     10");
        java.text.SimpleDateFormat simpleDateFormat3 = dateTime2.getSdf();
        java.text.SimpleDateFormat simpleDateFormat5 = null;
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat5);
        dateTime6.set((int) ' ', 0, 11);
        boolean boolean11 = dateTime6.isWeekday();
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(100L);
        int int14 = dateTime13.getMs();
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime(100L);
        double double21 = dateTime18.getDeltaYears(dateTime20);
        java.text.SimpleDateFormat simpleDateFormat22 = dateTime18.getSdf();
        boolean boolean23 = dateTime13.isLessThanOrEqual(dateTime18);
        java.util.Date date24 = dateTime18.getTime();
        dateTime6.set(date24);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(date24);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(date24);
        dateTime2.set(date24);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(date24);
        java.lang.String str30 = dateTime29.toString();
        boolean boolean31 = dateTime29.isWeekday();
        org.junit.Assert.assertNull(simpleDateFormat3);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-1972.041095890411d) + "'", double21 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(date24);
// flaky:         org.junit.Assert.assertEquals(date24.toString(), "Thu Apr 10 10:47:19 MST 2");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "10-Apr-0002" + "'", str30, "10-Apr-0002");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test7174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7174");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) 2);
        boolean boolean2 = dateTime1.isWeekday();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test7175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7175");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        int int3 = dateTime1.getHour();
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat9 = null;
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat9);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double13 = dateTime10.getDeltaYears(dateTime12);
        boolean boolean14 = dateTime7.isLessThan(dateTime12);
        java.lang.String str15 = dateTime12.toFullString();
        dateTime12.add(10, (int) (byte) -1);
        java.text.SimpleDateFormat simpleDateFormat20 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat22 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat23 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("", simpleDateFormat22, simpleDateFormat23);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat20, simpleDateFormat23);
        boolean boolean26 = dateTime12.isGreaterThan(dateTime25);
        boolean boolean27 = dateTime1.isEqual(dateTime12);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.lang.String str32 = dateTime31.toFullString();
        dateTime31.add(7, 53);
        net.ajaskey.common.DateTime dateTime36 = dateTime1.copy(dateTime31);
        int int37 = dateTime36.getDayOfMonth();
        int int38 = dateTime36.getDayOfWeek();
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime(100L);
        long long49 = dateTime46.getDeltaDays(dateTime48);
        int int50 = dateTime46.getHour();
        dateTime46.add((int) (byte) 100, (int) (byte) 0);
        double double54 = dateTime42.getDeltaYears(dateTime46);
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime("                     8.00", "                             100");
        dateTime46.set(dateTime57);
        dateTime46.setFirstWorkDay();
        int int60 = dateTime46.getDayOfWeek();
        boolean boolean61 = net.ajaskey.common.Utils.sameMonth(dateTime36, dateTime46);
        int int62 = dateTime46.getYear();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 5 + "'", int3 == 5);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str15, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertNotNull(simpleDateFormat20);
        org.junit.Assert.assertNotNull(simpleDateFormat22);
        org.junit.Assert.assertNotNull(simpleDateFormat23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Thu 10-Apr-0002 10:47:19" + "'", str32, "Thu 10-Apr-0002 10:47:19");
        org.junit.Assert.assertNotNull(dateTime36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 10 + "'", int37 == 10);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 5 + "'", int38 == 5);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-719795L) + "'", long49 == (-719795L));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 10 + "'", int50 == 10);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 5 + "'", int60 == 5);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
    }

    @Test
    public void test7176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7176");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        java.util.Date date7 = dateTime3.getTime();
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(date7);
        net.ajaskey.common.DateTime dateTime11 = dateTime8.parse("31-Dec-1969", "January");
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(100L);
        double double18 = dateTime15.getDeltaYears(dateTime17);
        int int19 = dateTime15.getHour();
        dateTime15.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat24 = null;
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat24);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double28 = dateTime25.getDeltaYears(dateTime27);
        boolean boolean29 = dateTime15.isEqual(dateTime27);
        java.text.SimpleDateFormat simpleDateFormat31 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat33 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat34 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("", simpleDateFormat33, simpleDateFormat34);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat31, simpleDateFormat34);
        dateTime15.setSdf(simpleDateFormat31);
        boolean boolean38 = dateTime8.isLessThan(dateTime15);
        java.text.SimpleDateFormat simpleDateFormat39 = dateTime8.getSdf();
        dateTime8.set(264, 1969, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime44 = null;
        boolean boolean45 = dateTime8.isGreaterThanOrEqual(dateTime44);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertNotNull(date7);
// flaky:         org.junit.Assert.assertEquals(date7.toString(), "Thu Apr 10 10:47:19 MST 2");
        org.junit.Assert.assertNull(dateTime11);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1972.041095890411d) + "'", double18 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(simpleDateFormat31);
        org.junit.Assert.assertNotNull(simpleDateFormat33);
        org.junit.Assert.assertNotNull(simpleDateFormat34);
// flaky:         org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(simpleDateFormat39);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test7177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7177");
        // The following exception was thrown during execution in test generation
        try {
            net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:45:08", "Monday");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal pattern character 'o'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test7178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7178");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        dateTime1.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str6 = dateTime1.getMonth();
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        dateTime8.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str13 = dateTime8.getMonth();
        int int14 = dateTime8.getMs();
        net.ajaskey.common.DateTime dateTime15 = dateTime1.copy(dateTime8);
        int int16 = dateTime8.getSecond();
        int int17 = dateTime8.getHour();
        java.lang.String str18 = dateTime8.toFullString();
        int int19 = dateTime8.getMinute();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "January" + "'", str6, "January");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "January" + "'", str13, "January");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 5 + "'", int17 == 5);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Sat 04-Jan-0100 17:00:00" + "'", str18, "Sat 04-Jan-0100 17:00:00");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test7179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7179");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean4 = dateTime3.isNull();
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime(100L);
        dateTime6.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str11 = dateTime6.getMonth();
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(100L);
        dateTime13.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str18 = dateTime13.getMonth();
        int int19 = dateTime13.getMs();
        net.ajaskey.common.DateTime dateTime20 = dateTime6.copy(dateTime13);
        boolean boolean21 = dateTime3.isGreaterThanOrEqual(dateTime20);
        java.lang.String str22 = dateTime20.format();
        java.lang.String str23 = dateTime20.toFullString();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "January" + "'", str11, "January");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "January" + "'", str18, "January");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        org.junit.Assert.assertNotNull(dateTime20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "04-Jan-0100" + "'", str22, "04-Jan-0100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Sat 04-Jan-0100 17:00:00" + "'", str23, "Sat 04-Jan-0100 17:00:00");
    }

    @Test
    public void test7180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7180");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        java.lang.String str3 = dateTime1.toString();
        int int4 = dateTime1.getDayOfYear();
        java.text.SimpleDateFormat simpleDateFormat6 = null;
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat6);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double10 = dateTime7.getDeltaYears(dateTime9);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean15 = dateTime9.isEqual(dateTime14);
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(100L);
        int int18 = dateTime17.getMs();
        boolean boolean19 = dateTime14.isGreaterThanOrEqual(dateTime17);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(100L);
        dateTime21.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(100L);
        double double32 = dateTime29.getDeltaYears(dateTime31);
        boolean boolean33 = dateTime31.isWeekday();
        java.util.Date date34 = dateTime31.getTime();
        dateTime21.set(dateTime31);
        boolean boolean36 = net.ajaskey.common.Utils.sameDate(dateTime14, dateTime21);
        dateTime14.add((int) '#', 6);
        boolean boolean40 = dateTime1.sameDate(dateTime14);
        java.util.Date date41 = dateTime1.getTime();
        java.text.SimpleDateFormat simpleDateFormat45 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat46 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime("", simpleDateFormat45, simpleDateFormat46);
        java.text.SimpleDateFormat simpleDateFormat49 = null;
        java.text.SimpleDateFormat simpleDateFormat50 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime("January", simpleDateFormat49, simpleDateFormat50);
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat45, simpleDateFormat50);
        java.text.SimpleDateFormat simpleDateFormat55 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat56 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime("", simpleDateFormat55, simpleDateFormat56);
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime(100L);
        int int60 = dateTime59.getMs();
        java.text.SimpleDateFormat simpleDateFormat61 = net.ajaskey.common.Utils.sdf;
        dateTime59.setSdf(simpleDateFormat61);
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat56, simpleDateFormat61);
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime("                             100", simpleDateFormat50, simpleDateFormat56);
        java.text.SimpleDateFormat simpleDateFormat65 = dateTime64.getSdf();
        long long66 = dateTime1.getDeltaMilliSeconds(dateTime64);
        int int67 = dateTime1.getMs();
        int int68 = dateTime1.getHour();
        java.lang.String str70 = dateTime1.format("                                                                                                                                                                                                                                                                                                                   314");
        java.util.Calendar calendar71 = dateTime1.getCal();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "31-Dec-1969" + "'", str3, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 365 + "'", int4 == 365);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-1972.041095890411d) + "'", double32 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(date34);
        org.junit.Assert.assertEquals(date34.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(date41);
        org.junit.Assert.assertEquals(date41.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertNotNull(simpleDateFormat45);
        org.junit.Assert.assertNotNull(simpleDateFormat46);
        org.junit.Assert.assertNotNull(simpleDateFormat50);
        org.junit.Assert.assertNotNull(simpleDateFormat55);
        org.junit.Assert.assertNotNull(simpleDateFormat56);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 100 + "'", int60 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat61);
        org.junit.Assert.assertNull(simpleDateFormat65);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 0L + "'", long66 == 0L);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 100 + "'", int67 == 100);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 5 + "'", int68 == 5);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "                                                                                                                                                                                                                                                                                                                   314" + "'", str70, "                                                                                                                                                                                                                                                                                                                   314");
        org.junit.Assert.assertNotNull(calendar71);
        org.junit.Assert.assertEquals(calendar71.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    }

    @Test
    public void test7181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7181");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        int int7 = dateTime3.getHour();
        dateTime3.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat12 = null;
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat12);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double16 = dateTime13.getDeltaYears(dateTime15);
        boolean boolean17 = dateTime3.isEqual(dateTime15);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat23 = null;
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat23);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double27 = dateTime24.getDeltaYears(dateTime26);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean32 = dateTime26.isEqual(dateTime31);
        java.util.Calendar calendar33 = dateTime26.getCal();
        boolean boolean34 = dateTime21.isLessThan(dateTime26);
        dateTime21.setFirstWorkDay();
        boolean boolean36 = dateTime3.sameDate(dateTime21);
        net.ajaskey.common.DateTime dateTime37 = null;
        boolean boolean38 = net.ajaskey.common.Utils.sameMonth(dateTime3, dateTime37);
        java.lang.String str39 = dateTime3.getDay();
        int int40 = dateTime3.getHour();
        int int41 = dateTime3.getDayOfWeek();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(calendar33);
        org.junit.Assert.assertEquals(calendar33.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Thursday" + "'", str39, "Thursday");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 5 + "'", int41 == 5);
    }

    @Test
    public void test7182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7182");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        java.text.SimpleDateFormat simpleDateFormat10 = dateTime6.getSdf();
        boolean boolean11 = dateTime1.isLessThanOrEqual(dateTime6);
        java.lang.String str12 = dateTime6.toString();
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(100L);
        int int15 = dateTime14.getMs();
        int int16 = dateTime14.getHour();
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat22 = null;
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat22);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double26 = dateTime23.getDeltaYears(dateTime25);
        boolean boolean27 = dateTime20.isLessThan(dateTime25);
        java.lang.String str28 = dateTime25.toFullString();
        dateTime25.add(10, (int) (byte) -1);
        java.text.SimpleDateFormat simpleDateFormat33 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat35 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat36 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime("", simpleDateFormat35, simpleDateFormat36);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat33, simpleDateFormat36);
        boolean boolean39 = dateTime25.isGreaterThan(dateTime38);
        boolean boolean40 = dateTime14.isEqual(dateTime25);
        net.ajaskey.common.DateTime dateTime41 = null;
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime(dateTime41);
        dateTime42.set(42, 10, 10);
        java.util.Date date47 = dateTime42.getTime();
        net.ajaskey.common.DateTime dateTime48 = dateTime14.copy(dateTime42);
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime(100L);
        int int51 = dateTime50.getMs();
        int int52 = dateTime50.getHour();
        double double53 = dateTime42.getDeltaYears(dateTime50);
        boolean boolean54 = net.ajaskey.common.Utils.sameMonth(dateTime6, dateTime50);
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime(100L);
        dateTime56.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str61 = dateTime56.getMonth();
        int int62 = dateTime56.getMs();
        java.lang.String str64 = dateTime56.format("                                                                                               52.00");
        int int65 = dateTime56.getDayOfMonth();
        long long66 = dateTime6.getDeltaDays(dateTime56);
        java.text.SimpleDateFormat simpleDateFormat67 = dateTime56.getSdf();
        java.util.Calendar calendar68 = dateTime56.getCal();
        net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime(calendar68);
        int int70 = dateTime69.getMs();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "10-Apr-0002" + "'", str12, "10-Apr-0002");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 5 + "'", int16 == 5);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str28, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertNotNull(simpleDateFormat33);
        org.junit.Assert.assertNotNull(simpleDateFormat35);
        org.junit.Assert.assertNotNull(simpleDateFormat36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(date47);
// flaky:         org.junit.Assert.assertEquals(date47.toString(), "Sat Nov 10 10:47:19 MST 42");
        org.junit.Assert.assertNotNull(dateTime48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 100 + "'", int51 == 100);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 5 + "'", int52 == 5);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-1928.4246575342465d) + "'", double53 == (-1928.4246575342465d));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "January" + "'", str61, "January");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "                                                                                               52.00" + "'", str64, "                                                                                               52.00");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 4 + "'", int65 == 4);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + (-36794L) + "'", long66 == (-36794L));
        org.junit.Assert.assertNull(simpleDateFormat67);
        org.junit.Assert.assertNotNull(calendar68);
        org.junit.Assert.assertEquals(calendar68.toString(), "java.util.GregorianCalendar[time=-59011286399900,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=100,MONTH=0,WEEK_OF_YEAR=1,WEEK_OF_MONTH=1,DAY_OF_MONTH=4,DAY_OF_YEAR=4,DAY_OF_WEEK=7,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 100 + "'", int70 == 100);
    }

    @Test
    public void test7183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7183");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(9, 76, 17);
    }

    @Test
    public void test7184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7184");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime(100L);
        int int3 = dateTime2.getMs();
        java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdf;
        dateTime2.setSdf(simpleDateFormat4);
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat4);
        java.text.SimpleDateFormat simpleDateFormat8 = null;
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double12 = dateTime9.getDeltaYears(dateTime11);
        boolean boolean13 = dateTime11.isNull();
        java.text.SimpleDateFormat simpleDateFormat15 = null;
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat15);
        dateTime16.set((int) ' ', 0, 11);
        boolean boolean21 = dateTime11.isGreaterThanOrEqual(dateTime16);
        double double22 = dateTime6.getDeltaYears(dateTime11);
        java.text.SimpleDateFormat simpleDateFormat24 = null;
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat24);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double28 = dateTime25.getDeltaYears(dateTime27);
        boolean boolean29 = dateTime27.isNull();
        boolean boolean30 = dateTime11.isGreaterThan(dateTime27);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(dateTime11);
        dateTime11.set((-239), 85, 78);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat4);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test7185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7185");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        int int7 = dateTime3.getHour();
        java.util.Calendar calendar8 = dateTime3.getCal();
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(calendar8);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(100L);
        int int14 = dateTime13.getMs();
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime(100L);
        double double21 = dateTime18.getDeltaYears(dateTime20);
        java.text.SimpleDateFormat simpleDateFormat22 = dateTime18.getSdf();
        boolean boolean23 = dateTime13.isLessThanOrEqual(dateTime18);
        java.text.SimpleDateFormat simpleDateFormat25 = null;
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat25);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double29 = dateTime26.getDeltaYears(dateTime28);
        boolean boolean30 = dateTime26.isWeekday();
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long35 = dateTime26.getDeltaDays(dateTime34);
        long long36 = dateTime13.getDeltaDays(dateTime34);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime(100L);
        dateTime38.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean43 = dateTime38.isWeekday();
        int int44 = dateTime13.getYears(dateTime38);
        int int45 = dateTime13.getYear();
        java.util.Calendar calendar46 = dateTime13.getCal();
        net.ajaskey.common.DateTime dateTime47 = dateTime11.copy(dateTime13);
        java.util.Calendar calendar48 = dateTime13.getCal();
        boolean boolean49 = net.ajaskey.common.Utils.sameDate(dateTime9, dateTime13);
        java.util.Calendar calendar50 = null;
        dateTime13.set(calendar50);
        net.ajaskey.common.DateTime dateTime52 = null;
        int int53 = dateTime13.getYears(dateTime52);
        int int54 = dateTime13.getDayOfYear();
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime(100L);
        double double61 = dateTime58.getDeltaYears(dateTime60);
        int int62 = dateTime58.getHour();
        dateTime58.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat67 = null;
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat67);
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double71 = dateTime68.getDeltaYears(dateTime70);
        boolean boolean72 = dateTime58.isEqual(dateTime70);
        java.lang.String str73 = dateTime70.toString();
        int int74 = dateTime70.getHour();
        dateTime70.add(2020, 2);
        java.util.Calendar calendar78 = dateTime70.getCal();
        dateTime13.set(calendar78);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertNotNull(calendar8);
// flaky:         org.junit.Assert.assertEquals(calendar8.toString(), "java.util.GregorianCalendar[time=-62190310360358,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=19,MILLISECOND=642,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-1972.041095890411d) + "'", double21 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 719795L + "'", long36 == 719795L);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1870) + "'", int44 == (-1870));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1969 + "'", int45 == 1969);
        org.junit.Assert.assertNotNull(calendar46);
        org.junit.Assert.assertEquals(calendar46.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(dateTime47);
        org.junit.Assert.assertNotNull(calendar48);
        org.junit.Assert.assertEquals(calendar48.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 365 + "'", int54 == 365);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-1972.041095890411d) + "'", double61 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 10 + "'", int62 == 10);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "31-Dec-1969" + "'", str73, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 5 + "'", int74 == 5);
        org.junit.Assert.assertNotNull(calendar78);
        org.junit.Assert.assertEquals(calendar78.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    }

    @Test
    public void test7186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7186");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        int int7 = dateTime3.getHour();
        int int8 = dateTime3.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(100L);
        double double15 = dateTime12.getDeltaYears(dateTime14);
        boolean boolean16 = dateTime14.isWeekday();
        boolean boolean17 = net.ajaskey.common.Utils.sameDate(dateTime3, dateTime14);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(100L);
        dateTime19.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(100L);
        double double30 = dateTime27.getDeltaYears(dateTime29);
        boolean boolean31 = dateTime29.isWeekday();
        java.util.Date date32 = dateTime29.getTime();
        dateTime19.set(dateTime29);
        int int34 = dateTime19.getYear();
        boolean boolean35 = dateTime14.isGreaterThanOrEqual(dateTime19);
        int int36 = dateTime19.getSecond();
        int int37 = dateTime19.getHour();
        int int38 = dateTime19.getMinute();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10 + "'", int8 == 10);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-1972.041095890411d) + "'", double15 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-1972.041095890411d) + "'", double30 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(date32);
        org.junit.Assert.assertEquals(date32.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1969 + "'", int34 == 1969);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 5 + "'", int37 == 5);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
    }

    @Test
    public void test7187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7187");
        net.ajaskey.common.Utils.sleep(278);
    }

    @Test
    public void test7188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7188");
        java.lang.String str2 = net.ajaskey.common.Utils.ifmt(599, 884);
        org.junit.Assert.assertEquals("'" + strstr
    }

    @Test
    public void test7189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7189");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        java.text.SimpleDateFormat simpleDateFormat10 = dateTime6.getSdf();
        boolean boolean11 = dateTime1.isLessThanOrEqual(dateTime6);
        int int12 = dateTime1.getDayOfWeek();
        java.lang.String str14 = dateTime1.format("Thu 10-Apr-0002 10:45:14");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 4 + "'", int12 == 4);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "BAD-DATE-FORMAT" + "'", str14, "BAD-DATE-FORMAT");
    }

    @Test
    public void test7190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7190");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        java.text.SimpleDateFormat simpleDateFormat8 = null;
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double12 = dateTime9.getDeltaYears(dateTime11);
        boolean boolean13 = dateTime9.isWeekday();
        boolean boolean14 = dateTime3.sameDate(dateTime9);
        java.text.SimpleDateFormat simpleDateFormat16 = null;
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double20 = dateTime17.getDeltaYears(dateTime19);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean25 = dateTime19.isEqual(dateTime24);
        dateTime3.set(dateTime24);
        java.lang.String str27 = dateTime24.toString();
        dateTime24.set((int) (short) 0, 2020, (int) (byte) 10);
        int int32 = dateTime24.getDayOfMonth();
        int int33 = dateTime24.getHour();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "10-Apr-0002" + "'", str27, "10-Apr-0002");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10 + "'", int32 == 10);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 10 + "'", int33 == 10);
    }

    @Test
    public void test7191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7191");
        net.ajaskey.common.Utils.sleep(566);
    }

    @Test
    public void test7192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7192");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        boolean boolean7 = dateTime5.isWeekday();
        java.util.Date date8 = dateTime5.getTime();
        dateTime5.add((int) (byte) 100, 33);
        java.lang.String str12 = dateTime5.getDay();
        java.text.SimpleDateFormat simpleDateFormat14 = null;
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat14);
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double18 = dateTime15.getDeltaYears(dateTime17);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean23 = dateTime17.isEqual(dateTime22);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime(100L);
        int int26 = dateTime25.getMs();
        boolean boolean27 = dateTime22.isGreaterThanOrEqual(dateTime25);
        java.text.SimpleDateFormat simpleDateFormat29 = null;
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat29);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double33 = dateTime30.getDeltaYears(dateTime32);
        boolean boolean34 = dateTime30.isWeekday();
        boolean boolean35 = dateTime25.isLessThanOrEqual(dateTime30);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(100L);
        dateTime37.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean42 = dateTime37.isWeekday();
        boolean boolean43 = dateTime25.isGreaterThanOrEqual(dateTime37);
        java.lang.String str44 = dateTime25.toFullString();
        java.text.SimpleDateFormat simpleDateFormat46 = null;
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat46);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double50 = dateTime47.getDeltaYears(dateTime49);
        boolean boolean51 = dateTime47.isWeekday();
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long56 = dateTime47.getDeltaDays(dateTime55);
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime(dateTime47);
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime(100L);
        double double64 = dateTime61.getDeltaYears(dateTime63);
        boolean boolean65 = dateTime63.isWeekday();
        java.util.Date date66 = dateTime63.getTime();
        dateTime47.set(date66);
        dateTime25.set(date66);
        net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime(date66);
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime(date66);
        boolean boolean71 = dateTime5.isEqual(dateTime70);
        dateTime5.add((-1870), 33);
        net.ajaskey.common.DateTime dateTime76 = new net.ajaskey.common.DateTime(100L);
        int int77 = dateTime76.getMs();
        java.text.SimpleDateFormat simpleDateFormat78 = net.ajaskey.common.Utils.sdf;
        dateTime76.setSdf(simpleDateFormat78);
        dateTime5.setSdf(simpleDateFormat78);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(date8);
        org.junit.Assert.assertEquals(date8.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Wednesday" + "'", str12, "Wednesday");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str44, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 0L + "'", long56 == 0L);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-1972.041095890411d) + "'", double64 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(date66);
        org.junit.Assert.assertEquals(date66.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 100 + "'", int77 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat78);
    }

    @Test
    public void test7193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7193");
        java.lang.String str1 = net.ajaskey.common.Utils.getFromUrl("                                      -4,982");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
    }

    @Test
    public void test7194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7194");
        net.ajaskey.common.Utils.makeDir("                     719,795");
    }

    @Test
    public void test7195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7195");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        int int7 = dateTime3.getHour();
        dateTime3.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat12 = null;
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat12);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double16 = dateTime13.getDeltaYears(dateTime15);
        boolean boolean17 = dateTime3.isEqual(dateTime15);
        int int18 = dateTime3.getMinute();
        dateTime3.setFirstWorkDay();
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(100L);
        dateTime21.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(100L);
        double double32 = dateTime29.getDeltaYears(dateTime31);
        boolean boolean33 = dateTime31.isWeekday();
        java.util.Date date34 = dateTime31.getTime();
        dateTime21.set(dateTime31);
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat41 = null;
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat41);
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double45 = dateTime42.getDeltaYears(dateTime44);
        boolean boolean46 = dateTime39.isLessThan(dateTime44);
        dateTime31.set(dateTime44);
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime(100L);
        int int51 = dateTime50.getMs();
        java.text.SimpleDateFormat simpleDateFormat52 = net.ajaskey.common.Utils.sdf;
        dateTime50.setSdf(simpleDateFormat52);
        java.text.SimpleDateFormat simpleDateFormat56 = null;
        java.text.SimpleDateFormat simpleDateFormat57 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime("January", simpleDateFormat56, simpleDateFormat57);
        java.text.SimpleDateFormat simpleDateFormat61 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime("January", simpleDateFormat61);
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime("", simpleDateFormat61);
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime("", simpleDateFormat57, simpleDateFormat61);
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime("Thursday", simpleDateFormat52, simpleDateFormat61);
        dateTime44.setSdf(simpleDateFormat61);
        net.ajaskey.common.DateTime dateTime67 = dateTime3.copy(dateTime44);
        boolean boolean68 = dateTime3.isNull();
        net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime(dateTime3);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 47 + "'", int18 == 47);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-1972.041095890411d) + "'", double32 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(date34);
        org.junit.Assert.assertEquals(date34.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 100 + "'", int51 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat52);
        org.junit.Assert.assertNotNull(simpleDateFormat57);
        org.junit.Assert.assertNotNull(simpleDateFormat61);
        org.junit.Assert.assertNotNull(dateTime67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test7196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7196");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        dateTime2.set((int) ' ', 0, 11);
        boolean boolean7 = dateTime2.isWeekday();
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(100L);
        int int10 = dateTime9.getMs();
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(100L);
        double double17 = dateTime14.getDeltaYears(dateTime16);
        java.text.SimpleDateFormat simpleDateFormat18 = dateTime14.getSdf();
        boolean boolean19 = dateTime9.isLessThanOrEqual(dateTime14);
        java.util.Date date20 = dateTime14.getTime();
        dateTime2.set(date20);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(date20);
        java.util.Date date23 = dateTime22.getTime();
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime(100L);
        int int26 = dateTime25.getMs();
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime(100L);
        double double33 = dateTime30.getDeltaYears(dateTime32);
        java.text.SimpleDateFormat simpleDateFormat34 = dateTime30.getSdf();
        boolean boolean35 = dateTime25.isLessThanOrEqual(dateTime30);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime(dateTime25);
        dateTime36.add(0, (int) (short) 10);
        int int40 = dateTime22.getYears(dateTime36);
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime(100L);
        double double47 = dateTime44.getDeltaYears(dateTime46);
        int int48 = dateTime44.getHour();
        java.util.Calendar calendar49 = dateTime44.getCal();
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime(calendar49);
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime((long) (short) 0);
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime(100L);
        int int55 = dateTime54.getMs();
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime(100L);
        double double62 = dateTime59.getDeltaYears(dateTime61);
        java.text.SimpleDateFormat simpleDateFormat63 = dateTime59.getSdf();
        boolean boolean64 = dateTime54.isLessThanOrEqual(dateTime59);
        java.text.SimpleDateFormat simpleDateFormat66 = null;
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat66);
        net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double70 = dateTime67.getDeltaYears(dateTime69);
        boolean boolean71 = dateTime67.isWeekday();
        net.ajaskey.common.DateTime dateTime75 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long76 = dateTime67.getDeltaDays(dateTime75);
        long long77 = dateTime54.getDeltaDays(dateTime75);
        net.ajaskey.common.DateTime dateTime79 = new net.ajaskey.common.DateTime(100L);
        dateTime79.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean84 = dateTime79.isWeekday();
        int int85 = dateTime54.getYears(dateTime79);
        int int86 = dateTime54.getYear();
        java.util.Calendar calendar87 = dateTime54.getCal();
        net.ajaskey.common.DateTime dateTime88 = dateTime52.copy(dateTime54);
        java.util.Calendar calendar89 = dateTime54.getCal();
        boolean boolean90 = net.ajaskey.common.Utils.sameDate(dateTime50, dateTime54);
        java.util.Calendar calendar91 = null;
        dateTime54.set(calendar91);
        java.util.Calendar calendar93 = dateTime54.getCal();
        boolean boolean94 = dateTime36.isLessThanOrEqual(dateTime54);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-1972.041095890411d) + "'", double17 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(date20);
// flaky:         org.junit.Assert.assertEquals(date20.toString(), "Thu Apr 10 10:47:20 MST 2");
        org.junit.Assert.assertNotNull(date23);
// flaky:         org.junit.Assert.assertEquals(date23.toString(), "Thu Apr 10 10:47:20 MST 2");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-1972.041095890411d) + "'", double33 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1967 + "'", int40 == 1967);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-1972.041095890411d) + "'", double47 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 10 + "'", int48 == 10);
        org.junit.Assert.assertNotNull(calendar49);
// flaky:         org.junit.Assert.assertEquals(calendar49.toString(), "java.util.GregorianCalendar[time=-62190310359335,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=20,MILLISECOND=665,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-1972.041095890411d) + "'", double62 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 0L + "'", long76 == 0L);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 719795L + "'", long77 == 719795L);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1870) + "'", int85 == (-1870));
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1969 + "'", int86 == 1969);
        org.junit.Assert.assertNotNull(calendar87);
        org.junit.Assert.assertEquals(calendar87.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(dateTime88);
        org.junit.Assert.assertNotNull(calendar89);
        org.junit.Assert.assertEquals(calendar89.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(calendar93);
        org.junit.Assert.assertEquals(calendar93.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }

    @Test
    public void test7197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7197");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        boolean boolean7 = dateTime5.isWeekday();
        java.util.Date date8 = dateTime5.getTime();
        int int9 = dateTime5.getDayOfWeek();
        java.lang.String str10 = dateTime5.getMonth();
        java.lang.String str11 = dateTime5.getDay();
        java.lang.String str13 = dateTime5.format("           35");
        java.util.Calendar calendar14 = dateTime5.getCal();
        int int15 = dateTime5.getMinute();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(date8);
        org.junit.Assert.assertEquals(date8.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 4 + "'", int9 == 4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "December" + "'", str10, "December");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Wednesday" + "'", str11, "Wednesday");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "           35" + "'", str13, "           35");
        org.junit.Assert.assertNotNull(calendar14);
        org.junit.Assert.assertEquals(calendar14.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test7198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7198");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(36, 729, 56);
        boolean boolean4 = dateTime3.isNull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test7199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7199");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime(100L);
        int int3 = dateTime2.getMs();
        java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdf;
        dateTime2.setSdf(simpleDateFormat4);
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat4);
        java.text.SimpleDateFormat simpleDateFormat8 = null;
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double12 = dateTime9.getDeltaYears(dateTime11);
        boolean boolean13 = dateTime11.isNull();
        java.text.SimpleDateFormat simpleDateFormat15 = null;
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat15);
        dateTime16.set((int) ' ', 0, 11);
        boolean boolean21 = dateTime11.isGreaterThanOrEqual(dateTime16);
        double double22 = dateTime6.getDeltaYears(dateTime11);
        java.text.SimpleDateFormat simpleDateFormat24 = null;
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat24);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double28 = dateTime25.getDeltaYears(dateTime27);
        boolean boolean29 = dateTime27.isNull();
        boolean boolean30 = dateTime11.isGreaterThan(dateTime27);
        int int31 = dateTime27.getYear();
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime(100L);
        int int34 = dateTime33.getMs();
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime(100L);
        double double41 = dateTime38.getDeltaYears(dateTime40);
        java.text.SimpleDateFormat simpleDateFormat42 = dateTime38.getSdf();
        boolean boolean43 = dateTime33.isLessThanOrEqual(dateTime38);
        java.lang.String str44 = dateTime33.toString();
        int int45 = dateTime33.getHour();
        int int46 = dateTime33.getYear();
        boolean boolean47 = dateTime33.isNull();
        int int48 = dateTime33.getSecond();
        net.ajaskey.common.DateTime dateTime49 = dateTime27.copy(dateTime33);
        java.lang.String str50 = dateTime49.format();
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime(62190310608217L);
        net.ajaskey.common.DateTime dateTime53 = dateTime49.copy(dateTime52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat4);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1969 + "'", int31 == 1969);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-1972.041095890411d) + "'", double41 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "31-Dec-1969" + "'", str44, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 5 + "'", int45 == 5);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1969 + "'", int46 == 1969);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(dateTime49);
// flaky:         org.junit.Assert.assertEquals("'" + str50 + "' != '" + "31-Dec-1969" + "'", str50, "31-Dec-1969");
        org.junit.Assert.assertNotNull(dateTime53);
    }

    @Test
    public void test7200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7200");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        boolean boolean6 = dateTime2.isWeekday();
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long11 = dateTime2.getDeltaDays(dateTime10);
        int int12 = dateTime10.getYear();
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((int) 'a', 1869, (int) (byte) 0);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(100L);
        double double23 = dateTime20.getDeltaYears(dateTime22);
        java.util.Date date24 = dateTime20.getTime();
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime(date24);
        net.ajaskey.common.DateTime dateTime28 = dateTime25.parse("31-Dec-1969", "January");
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime(100L);
        int int31 = dateTime30.getMs();
        java.lang.String str32 = dateTime30.toString();
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime(100L);
        double double39 = dateTime36.getDeltaYears(dateTime38);
        int int40 = dateTime36.getHour();
        int int41 = dateTime36.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime(100L);
        double double48 = dateTime45.getDeltaYears(dateTime47);
        boolean boolean49 = dateTime47.isWeekday();
        boolean boolean50 = net.ajaskey.common.Utils.sameDate(dateTime36, dateTime47);
        boolean boolean51 = net.ajaskey.common.Utils.sameDate(dateTime30, dateTime36);
        dateTime25.set(dateTime36);
        java.util.Calendar calendar53 = dateTime36.getCal();
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime(calendar53);
        boolean boolean55 = dateTime16.sameDate(dateTime54);
        java.text.SimpleDateFormat simpleDateFormat57 = null;
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat57);
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double61 = dateTime58.getDeltaYears(dateTime60);
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean66 = dateTime60.isEqual(dateTime65);
        java.util.Calendar calendar67 = dateTime60.getCal();
        java.lang.String str68 = dateTime60.format();
        net.ajaskey.common.DateTime dateTime69 = null;
        long long70 = dateTime60.getDeltaDays(dateTime69);
        int int71 = dateTime60.getSecond();
        net.ajaskey.common.DateTime dateTime73 = new net.ajaskey.common.DateTime(100L);
        int int74 = dateTime73.getMs();
        boolean boolean75 = dateTime73.isNull();
        java.util.Calendar calendar76 = dateTime73.getCal();
        dateTime60.set(calendar76);
        net.ajaskey.common.DateTime dateTime78 = new net.ajaskey.common.DateTime(calendar76);
        dateTime54.set(calendar76);
        java.lang.String str80 = dateTime54.toFullString();
        net.ajaskey.common.DateTime dateTime81 = dateTime10.copy(dateTime54);
        int int82 = dateTime54.getDayOfWeek();
        net.ajaskey.common.DateTime dateTime84 = new net.ajaskey.common.DateTime(62190310580941L);
        boolean boolean85 = net.ajaskey.common.Utils.sameMonth(dateTime54, dateTime84);
        net.ajaskey.common.DateTime dateTime87 = new net.ajaskey.common.DateTime((long) 2020);
        double double88 = dateTime84.getDeltaYears(dateTime87);
        int int89 = dateTime87.getMinute();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-1972.041095890411d) + "'", double23 == (-1972.041095890411d));
        org.junit.Assert.assertNotNull(date24);
// flaky:         org.junit.Assert.assertEquals(date24.toString(), "Thu Apr 10 10:47:20 MST 2");
        org.junit.Assert.assertNull(dateTime28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 100 + "'", int31 == 100);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "31-Dec-1969" + "'", str32, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-1972.041095890411d) + "'", double39 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 10 + "'", int41 == 10);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + (-1972.041095890411d) + "'", double48 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(calendar53);
// flaky:         org.junit.Assert.assertEquals(calendar53.toString(), "java.util.GregorianCalendar[time=-62190310359243,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=20,MILLISECOND=757,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(calendar67);
        org.junit.Assert.assertEquals(calendar67.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "BAD-DATE-FORMAT" + "'", str68, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 0L + "'", long70 == 0L);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 100 + "'", int74 == 100);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(calendar76);
        org.junit.Assert.assertEquals(calendar76.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str80, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertNotNull(dateTime81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 4 + "'", int82 == 4);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 1972.041095890411d + "'", double88 == 1972.041095890411d);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
    }

    @Test
    public void test7201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7201");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        long long6 = dateTime3.getDeltaDays(dateTime5);
        int int7 = dateTime3.getHour();
        dateTime3.add((int) (byte) 100, (int) (byte) 0);
        int int11 = dateTime3.getDayOfYear();
        java.util.Date date12 = dateTime3.getTime();
        int int13 = dateTime3.getYear();
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-719795L) + "'", long6 == (-719795L));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        org.junit.Assert.assertNotNull(date12);
// flaky:         org.junit.Assert.assertEquals(date12.toString(), "Thu Apr 10 10:47:20 MST 2");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
    }

    @Test
    public void test7202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7202");
        net.ajaskey.common.Utils.TAB = "Thu 10-Apr-0002 10:46:32";
    }

    @Test
    public void test7203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7203");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        dateTime2.set((int) ' ', 0, 11);
        boolean boolean7 = dateTime2.isWeekday();
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(100L);
        int int10 = dateTime9.getMs();
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(100L);
        double double17 = dateTime14.getDeltaYears(dateTime16);
        java.text.SimpleDateFormat simpleDateFormat18 = dateTime14.getSdf();
        boolean boolean19 = dateTime9.isLessThanOrEqual(dateTime14);
        java.util.Date date20 = dateTime14.getTime();
        dateTime2.set(date20);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(date20);
        net.ajaskey.common.DateTime dateTime23 = null;
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime(dateTime23);
        dateTime24.set(42, 10, 10);
        java.util.Date date29 = dateTime24.getTime();
        dateTime22.set(date29);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(date29);
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:43:10", "   8.00");
        java.text.SimpleDateFormat simpleDateFormat36 = null;
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat36);
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double40 = dateTime37.getDeltaYears(dateTime39);
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean45 = dateTime39.isEqual(dateTime44);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime(100L);
        int int48 = dateTime47.getMs();
        boolean boolean49 = dateTime44.isGreaterThanOrEqual(dateTime47);
        java.text.SimpleDateFormat simpleDateFormat51 = null;
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat51);
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double55 = dateTime52.getDeltaYears(dateTime54);
        boolean boolean56 = dateTime52.isWeekday();
        boolean boolean57 = dateTime47.isLessThanOrEqual(dateTime52);
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime(100L);
        dateTime59.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean64 = dateTime59.isWeekday();
        boolean boolean65 = dateTime47.isGreaterThanOrEqual(dateTime59);
        net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean70 = dateTime47.isGreaterThanOrEqual(dateTime69);
        int int71 = dateTime34.getYears(dateTime47);
        net.ajaskey.common.DateTime dateTime73 = new net.ajaskey.common.DateTime((long) (byte) 100);
        double double74 = dateTime34.getDeltaYears(dateTime73);
        java.lang.String str75 = dateTime73.getMonth();
        java.lang.String str76 = dateTime73.getMonth();
        boolean boolean77 = net.ajaskey.common.Utils.sameMonth(dateTime31, dateTime73);
        dateTime73.add(2, 81);
        java.lang.Class<?> wildcardClass81 = dateTime73.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-1972.041095890411d) + "'", double17 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(date20);
// flaky:         org.junit.Assert.assertEquals(date20.toString(), "Thu Apr 10 10:47:20 MST 2");
        org.junit.Assert.assertNotNull(date29);
// flaky:         org.junit.Assert.assertEquals(date29.toString(), "Sat Nov 10 10:47:20 MST 42");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 100 + "'", int48 == 100);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "December" + "'", str75, "December");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "December" + "'", str76, "December");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test7204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7204");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        int int7 = dateTime3.getHour();
        dateTime3.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat12 = null;
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat12);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double16 = dateTime13.getDeltaYears(dateTime15);
        boolean boolean17 = dateTime3.isEqual(dateTime15);
        java.lang.String str18 = dateTime3.toString();
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime(100L);
        int int21 = dateTime20.getMs();
        java.lang.String str22 = dateTime20.toString();
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime(100L);
        int int25 = dateTime24.getMs();
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(100L);
        double double32 = dateTime29.getDeltaYears(dateTime31);
        java.text.SimpleDateFormat simpleDateFormat33 = dateTime29.getSdf();
        boolean boolean34 = dateTime24.isLessThanOrEqual(dateTime29);
        boolean boolean35 = dateTime24.isWeekday();
        java.util.Calendar calendar36 = dateTime24.getCal();
        dateTime20.set(calendar36);
        int int38 = dateTime20.getMs();
        int int39 = dateTime20.getSecond();
        int int40 = dateTime20.getDayOfWeek();
        net.ajaskey.common.DateTime dateTime41 = dateTime3.copy(dateTime20);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime(100L);
        double double48 = dateTime45.getDeltaYears(dateTime47);
        java.text.SimpleDateFormat simpleDateFormat50 = null;
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat50);
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double54 = dateTime51.getDeltaYears(dateTime53);
        boolean boolean55 = dateTime51.isWeekday();
        boolean boolean56 = dateTime45.sameDate(dateTime51);
        int int57 = dateTime51.getDayOfMonth();
        int int58 = dateTime51.getHour();
        java.text.SimpleDateFormat simpleDateFormat60 = null;
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat60);
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double64 = dateTime61.getDeltaYears(dateTime63);
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean69 = dateTime63.isEqual(dateTime68);
        java.lang.String str70 = dateTime68.getDay();
        boolean boolean71 = dateTime68.isWeekday();
        java.lang.String str72 = dateTime68.getMonth();
        boolean boolean73 = dateTime51.isLessThanOrEqual(dateTime68);
        int int74 = dateTime51.getMs();
        boolean boolean75 = dateTime20.isLessThan(dateTime51);
        int int76 = dateTime51.getSecond();
        int int77 = dateTime51.getSecond();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "10-Apr-0002" + "'", str18, "10-Apr-0002");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "31-Dec-1969" + "'", str22, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-1972.041095890411d) + "'", double32 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(calendar36);
        org.junit.Assert.assertEquals(calendar36.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 4 + "'", int40 == 4);
        org.junit.Assert.assertNotNull(dateTime41);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + (-1972.041095890411d) + "'", double48 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Thursday" + "'", str70, "Thursday");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "April" + "'", str72, "April");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
    }

    @Test
    public void test7205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7205");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("                                                                                                           0", "                     8.00");
        java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat6 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat7 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime("", simpleDateFormat6, simpleDateFormat7);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat4, simpleDateFormat7);
        int int10 = dateTime9.getHour();
        int int11 = dateTime9.getDayOfYear();
        java.lang.String str12 = dateTime9.getDay();
        long long13 = dateTime2.getDeltaDays(dateTime9);
        java.lang.String str14 = dateTime9.toString();
        org.junit.Assert.assertNotNull(simpleDateFormat4);
        org.junit.Assert.assertNotNull(simpleDateFormat6);
        org.junit.Assert.assertNotNull(simpleDateFormat7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UNKNOWN" + "'", str12, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test7206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7206");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        dateTime1.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
        double double12 = dateTime9.getDeltaYears(dateTime11);
        boolean boolean13 = dateTime11.isWeekday();
        java.util.Date date14 = dateTime11.getTime();
        dateTime1.set(dateTime11);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(100L);
        double double22 = dateTime19.getDeltaYears(dateTime21);
        int int23 = dateTime19.getHour();
        java.text.SimpleDateFormat simpleDateFormat25 = null;
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat25);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double29 = dateTime26.getDeltaYears(dateTime28);
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean34 = dateTime28.isEqual(dateTime33);
        java.util.Calendar calendar35 = dateTime28.getCal();
        dateTime19.set(calendar35);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(calendar35);
        boolean boolean38 = dateTime11.isGreaterThan(dateTime37);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((long) (byte) 100);
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime(25, 1, 0);
        boolean boolean45 = net.ajaskey.common.Utils.sameMonth(dateTime40, dateTime44);
        int int46 = dateTime40.getSecond();
        boolean boolean47 = net.ajaskey.common.Utils.sameDate(dateTime37, dateTime40);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime(0L);
        int int50 = dateTime40.getYears(dateTime49);
        boolean boolean51 = dateTime49.isWeekday();
        int int52 = dateTime49.getSecond();
        int int53 = dateTime49.getDayOfWeek();
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1972.041095890411d) + "'", double12 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(date14);
        org.junit.Assert.assertEquals(date14.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-1972.041095890411d) + "'", double22 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(calendar35);
        org.junit.Assert.assertEquals(calendar35.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 4 + "'", int53 == 4);
    }

    @Test
    public void test7207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7207");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(14, (int) '#', (int) '#');
    }

    @Test
    public void test7208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7208");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        boolean boolean7 = dateTime5.isWeekday();
        java.util.Date date8 = dateTime5.getTime();
        int int9 = dateTime5.getDayOfWeek();
        java.lang.String str10 = dateTime5.getMonth();
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(100L);
        int int13 = dateTime12.getMs();
        java.text.SimpleDateFormat simpleDateFormat14 = net.ajaskey.common.Utils.sdf;
        dateTime12.setSdf(simpleDateFormat14);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime("5.00", "     10");
        dateTime18.add((int) (short) 0, (int) 'a');
        int int22 = dateTime18.getDayOfMonth();
        java.lang.String str23 = dateTime18.toString();
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(100L);
        double double30 = dateTime27.getDeltaYears(dateTime29);
        int int31 = dateTime27.getHour();
        java.text.SimpleDateFormat simpleDateFormat33 = null;
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat33);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double37 = dateTime34.getDeltaYears(dateTime36);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean42 = dateTime36.isEqual(dateTime41);
        java.util.Calendar calendar43 = dateTime36.getCal();
        java.lang.String str44 = dateTime36.format();
        net.ajaskey.common.DateTime dateTime45 = null;
        long long46 = dateTime36.getDeltaDays(dateTime45);
        int int47 = dateTime36.getSecond();
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime(100L);
        double double54 = dateTime51.getDeltaYears(dateTime53);
        java.text.SimpleDateFormat simpleDateFormat56 = null;
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat56);
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double60 = dateTime57.getDeltaYears(dateTime59);
        boolean boolean61 = dateTime57.isWeekday();
        boolean boolean62 = dateTime51.sameDate(dateTime57);
        int int63 = dateTime57.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime64 = dateTime36.copy(dateTime57);
        dateTime27.set(dateTime57);
        boolean boolean66 = dateTime18.isGreaterThan(dateTime57);
        boolean boolean67 = net.ajaskey.common.Utils.sameMonth(dateTime12, dateTime18);
        boolean boolean68 = dateTime5.isGreaterThan(dateTime18);
        java.lang.String str69 = dateTime18.getMonth();
        int int70 = dateTime18.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime(dateTime18);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(date8);
        org.junit.Assert.assertEquals(date8.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 4 + "'", int9 == 4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "December" + "'", str10, "December");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat14);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-1972.041095890411d) + "'", double30 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10 + "'", int31 == 10);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(calendar43);
        org.junit.Assert.assertEquals(calendar43.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "BAD-DATE-FORMAT" + "'", str44, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-1972.041095890411d) + "'", double54 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNull(dateTime64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "UNKNOWN" + "'", str69, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
    }

    @Test
    public void test7209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7209");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.util.Calendar calendar4 = null;
        dateTime3.set(calendar4);
        java.text.SimpleDateFormat simpleDateFormat7 = null;
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat7);
        dateTime8.set((int) ' ', 0, 11);
        boolean boolean13 = dateTime8.isWeekday();
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(100L);
        int int16 = dateTime15.getMs();
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(100L);
        double double23 = dateTime20.getDeltaYears(dateTime22);
        java.text.SimpleDateFormat simpleDateFormat24 = dateTime20.getSdf();
        boolean boolean25 = dateTime15.isLessThanOrEqual(dateTime20);
        java.util.Date date26 = dateTime20.getTime();
        dateTime8.set(date26);
        long long28 = dateTime3.getDeltaMilliSeconds(dateTime8);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime(100L);
        int int31 = dateTime30.getMs();
        java.lang.String str32 = dateTime30.toString();
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime(100L);
        double double39 = dateTime36.getDeltaYears(dateTime38);
        int int40 = dateTime36.getHour();
        int int41 = dateTime36.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime(100L);
        double double48 = dateTime45.getDeltaYears(dateTime47);
        boolean boolean49 = dateTime47.isWeekday();
        boolean boolean50 = net.ajaskey.common.Utils.sameDate(dateTime36, dateTime47);
        boolean boolean51 = net.ajaskey.common.Utils.sameDate(dateTime30, dateTime36);
        net.ajaskey.common.DateTime dateTime52 = null;
        boolean boolean53 = dateTime36.isLessThanOrEqual(dateTime52);
        java.lang.String str54 = dateTime36.getDay();
        boolean boolean55 = dateTime8.isGreaterThanOrEqual(dateTime36);
        java.text.SimpleDateFormat simpleDateFormat56 = dateTime36.getSdf();
        net.ajaskey.common.DateTime dateTime57 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean58 = dateTime36.sameDate(dateTime57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-1972.041095890411d) + "'", double23 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(date26);
// flaky:         org.junit.Assert.assertEquals(date26.toString(), "Thu Apr 10 10:47:20 MST 2");
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 100 + "'", int31 == 100);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "31-Dec-1969" + "'", str32, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-1972.041095890411d) + "'", double39 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 10 + "'", int41 == 10);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + (-1972.041095890411d) + "'", double48 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Thursday" + "'", str54, "Thursday");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(simpleDateFormat56);
    }

    @Test
    public void test7210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7210");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        java.lang.String str3 = dateTime1.toString();
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(100L);
        double double10 = dateTime7.getDeltaYears(dateTime9);
        int int11 = dateTime7.getHour();
        int int12 = dateTime7.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(100L);
        double double19 = dateTime16.getDeltaYears(dateTime18);
        boolean boolean20 = dateTime18.isWeekday();
        boolean boolean21 = net.ajaskey.common.Utils.sameDate(dateTime7, dateTime18);
        boolean boolean22 = net.ajaskey.common.Utils.sameDate(dateTime1, dateTime7);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime((int) 'a', 1869, (int) (byte) 0);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime(100L);
        double double33 = dateTime30.getDeltaYears(dateTime32);
        java.util.Date date34 = dateTime30.getTime();
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime(date34);
        net.ajaskey.common.DateTime dateTime38 = dateTime35.parse("31-Dec-1969", "January");
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime(100L);
        int int41 = dateTime40.getMs();
        java.lang.String str42 = dateTime40.toString();
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime(100L);
        double double49 = dateTime46.getDeltaYears(dateTime48);
        int int50 = dateTime46.getHour();
        int int51 = dateTime46.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime(100L);
        double double58 = dateTime55.getDeltaYears(dateTime57);
        boolean boolean59 = dateTime57.isWeekday();
        boolean boolean60 = net.ajaskey.common.Utils.sameDate(dateTime46, dateTime57);
        boolean boolean61 = net.ajaskey.common.Utils.sameDate(dateTime40, dateTime46);
        dateTime35.set(dateTime46);
        java.util.Calendar calendar63 = dateTime46.getCal();
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime(calendar63);
        boolean boolean65 = dateTime26.sameDate(dateTime64);
        java.text.SimpleDateFormat simpleDateFormat67 = null;
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat67);
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double71 = dateTime68.getDeltaYears(dateTime70);
        net.ajaskey.common.DateTime dateTime75 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean76 = dateTime70.isEqual(dateTime75);
        java.util.Calendar calendar77 = dateTime70.getCal();
        java.lang.String str78 = dateTime70.format();
        net.ajaskey.common.DateTime dateTime79 = null;
        long long80 = dateTime70.getDeltaDays(dateTime79);
        int int81 = dateTime70.getSecond();
        net.ajaskey.common.DateTime dateTime83 = new net.ajaskey.common.DateTime(100L);
        int int84 = dateTime83.getMs();
        boolean boolean85 = dateTime83.isNull();
        java.util.Calendar calendar86 = dateTime83.getCal();
        dateTime70.set(calendar86);
        net.ajaskey.common.DateTime dateTime88 = new net.ajaskey.common.DateTime(calendar86);
        dateTime64.set(calendar86);
        java.lang.String str90 = dateTime64.toFullString();
        int int91 = dateTime64.getSecond();
        long long92 = dateTime7.getDeltaDays(dateTime64);
        dateTime7.setFirstWorkDay();
        net.ajaskey.common.DateTime dateTime95 = dateTime7.parse
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "31-Dec-1969" + "'", str3, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1972.041095890411d) + "'", double10 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-1972.041095890411d) + "'", double19 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-1972.041095890411d) + "'", double33 == (-1972.041095890411d));
        org.junit.Assert.assertNotNull(date34);
// flaky:         org.junit.Assert.assertEquals(date34.toString(), "Thu Apr 10 10:47:20 MST 2");
        org.junit.Assert.assertNull(dateTime38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "31-Dec-1969" + "'", str42, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-1972.041095890411d) + "'", double49 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 10 + "'", int50 == 10);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 10 + "'", int51 == 10);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-1972.041095890411d) + "'", double58 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(calendar63);
// flaky:         org.junit.Assert.assertEquals(calendar63.toString(), "java.util.GregorianCalendar[time=-62190310359054,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=20,MILLISECOND=946,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(calendar77);
        org.junit.Assert.assertEquals(calendar77.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "BAD-DATE-FORMAT" + "'", str78, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 0L + "'", long80 == 0L);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 100 + "'", int84 == 100);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(calendar86);
        org.junit.Assert.assertEquals(calendar86.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str90, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertTrue("'" + long92 + "' != '" + (-719795L) + "'", long92 == (-719795L));
        org.junit.Assert.assertNull(dateTime95);
    }

    @Test
    public void test7211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7211");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat5 = null;
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat5);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean14 = dateTime8.isEqual(dateTime13);
        java.util.Calendar calendar15 = dateTime8.getCal();
        boolean boolean16 = dateTime3.isLessThan(dateTime8);
        dateTime3.setFirstWorkDay();
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime(100L);
        double double24 = dateTime21.getDeltaYears(dateTime23);
        java.text.SimpleDateFormat simpleDateFormat26 = null;
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat26);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double30 = dateTime27.getDeltaYears(dateTime29);
        boolean boolean31 = dateTime27.isWeekday();
        boolean boolean32 = dateTime21.sameDate(dateTime27);
        boolean boolean33 = dateTime3.sameDate(dateTime21);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime(100L);
        int int36 = dateTime35.getMs();
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime(100L);
        double double43 = dateTime40.getDeltaYears(dateTime42);
        java.text.SimpleDateFormat simpleDateFormat44 = dateTime40.getSdf();
        boolean boolean45 = dateTime35.isLessThanOrEqual(dateTime40);
        boolean boolean46 = dateTime40.isWeekday();
        java.lang.String str47 = dateTime40.toString();
        double double48 = dateTime3.getDeltaYears(dateTime40);
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime(100L);
        double double55 = dateTime52.getDeltaYears(dateTime54);
        java.text.SimpleDateFormat simpleDateFormat57 = null;
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat57);
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double61 = dateTime58.getDeltaYears(dateTime60);
        boolean boolean62 = dateTime58.isWeekday();
        boolean boolean63 = dateTime52.sameDate(dateTime58);
        java.text.SimpleDateFormat simpleDateFormat65 = null;
        net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat65);
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double69 = dateTime66.getDeltaYears(dateTime68);
        net.ajaskey.common.DateTime dateTime73 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean74 = dateTime68.isEqual(dateTime73);
        dateTime52.set(dateTime73);
        int int76 = dateTime52.getDayOfMonth();
        java.util.Date date77 = dateTime52.getTime();
        dateTime40.set(date77);
        java.util.Calendar calendar79 = dateTime40.getCal();
        net.ajaskey.common.DateTime dateTime80 = new net.ajaskey.common.DateTime(calendar79);
        dateTime80.add(568, 213);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(calendar15);
        org.junit.Assert.assertEquals(calendar15.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1972.041095890411d) + "'", double24 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-1972.041095890411d) + "'", double43 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "10-Apr-0002" + "'", str47, "10-Apr-0002");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-1972.041095890411d) + "'", double55 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 10 + "'", int76 == 10);
        org.junit.Assert.assertNotNull(date77);
// flaky:         org.junit.Assert.assertEquals(date77.toString(), "Thu Apr 10 10:47:20 MST 2");
        org.junit.Assert.assertNotNull(calendar79);
// flaky:         org.junit.Assert.assertEquals(calendar79.toString(), "java.util.GregorianCalendar[time=-62190310359028,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=20,MILLISECOND=972,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    }

    @Test
    public void test7212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7212");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean10 = dateTime4.isEqual(dateTime9);
        java.util.Calendar calendar11 = dateTime4.getCal();
        java.lang.String str12 = dateTime4.format();
        net.ajaskey.common.DateTime dateTime13 = null;
        long long14 = dateTime4.getDeltaDays(dateTime13);
        int int15 = dateTime4.getSecond();
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(100L);
        int int18 = dateTime17.getMs();
        boolean boolean19 = dateTime17.isNull();
        java.util.Calendar calendar20 = dateTime17.getCal();
        dateTime4.set(calendar20);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(calendar20);
        java.util.Date date23 = dateTime22.getTime();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(calendar11);
        org.junit.Assert.assertEquals(calendar11.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "BAD-DATE-FORMAT" + "'", str12, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(calendar20);
        org.junit.Assert.assertEquals(calendar20.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(date23);
        org.junit.Assert.assertEquals(date23.toString(), "Wed Dec 31 17:00:00 MST 1969");
    }

    @Test
    public void test7213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7213");
        net.ajaskey.common.Utils.TAB = "                               3";
    }

    @Test
    public void test7214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7214");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat5 = null;
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat5);
        boolean boolean7 = net.ajaskey.common.Utils.sameDate(dateTime3, dateTime6);
        java.lang.String str8 = dateTime3.toString();
        java.util.Date date9 = dateTime3.getTime();
        java.lang.String str10 = dateTime3.getDay();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "10-Apr-0002" + "'", str8, "10-Apr-0002");
        org.junit.Assert.assertNotNull(date9);
// flaky:         org.junit.Assert.assertEquals(date9.toString(), "Thu Apr 10 10:47:21 MST 2");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Thursday" + "'", str10, "Thursday");
    }

    @Test
    public void test7215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7215");
        net.ajaskey.common.DateTime dateTime0 = null;
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(dateTime0);
        dateTime1.set(42, 10, 10);
        java.util.Date date6 = dateTime1.getTime();
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime(date6);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(date6);
        boolean boolean9 = dateTime8.isNull();
        java.util.Date date10 = dateTime8.getTime();
        int int11 = dateTime8.getMinute();
        org.junit.Assert.assertNotNull(date6);
// flaky:         org.junit.Assert.assertEquals(date6.toString(), "Sat Nov 10 10:47:21 MST 42");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(date10);
// flaky:         org.junit.Assert.assertEquals(date10.toString(), "Sat Nov 10 10:47:21 MST 42");
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 47 + "'", int11 == 47);
    }

    @Test
    public void test7216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7216");
        net.ajaskey.common.Utils.NL = "Thu 10-Apr-0002 10:46:04";
    }

    @Test
    public void test7217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7217");
        java.text.SimpleDateFormat simpleDateFormat2 = null;
        java.text.SimpleDateFormat simpleDateFormat3 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime("January", simpleDateFormat2, simpleDateFormat3);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime("100.00", simpleDateFormat2);
        java.lang.String str7 = dateTime5.format("");
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("5.00", "     10");
        boolean boolean11 = net.ajaskey.common.Utils.sameMonth(dateTime5, dateTime10);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(100L);
        boolean boolean14 = dateTime13.isWeekday();
        long long15 = dateTime5.getDeltaDays(dateTime13);
        java.lang.String str16 = dateTime13.getMonth();
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(100L);
        dateTime19.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(100L);
        double double30 = dateTime27.getDeltaYears(dateTime29);
        boolean boolean31 = dateTime29.isWeekday();
        java.util.Date date32 = dateTime29.getTime();
        dateTime19.set(dateTime29);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat39 = null;
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat39);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double43 = dateTime40.getDeltaYears(dateTime42);
        boolean boolean44 = dateTime37.isLessThan(dateTime42);
        dateTime29.set(dateTime42);
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime(100L);
        int int49 = dateTime48.getMs();
        java.text.SimpleDateFormat simpleDateFormat50 = net.ajaskey.common.Utils.sdf;
        dateTime48.setSdf(simpleDateFormat50);
        java.text.SimpleDateFormat simpleDateFormat54 = null;
        java.text.SimpleDateFormat simpleDateFormat55 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime("January", simpleDateFormat54, simpleDateFormat55);
        java.text.SimpleDateFormat simpleDateFormat59 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime("January", simpleDateFormat59);
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime("", simpleDateFormat59);
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime("", simpleDateFormat55, simpleDateFormat59);
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime("Thursday", simpleDateFormat50, simpleDateFormat59);
        dateTime42.setSdf(simpleDateFormat59);
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime("Thu 25-Jun-2020 10:45:00", simpleDateFormat59);
        int int66 = dateTime65.getMinute();
        double double67 = dateTime13.getDeltaYears(dateTime65);
        org.junit.Assert.assertNotNull(simpleDateFormat3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "BAD-DATE-FORMAT" + "'", str7, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "December" + "'", str16, "December");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-1972.041095890411d) + "'", double30 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(date32);
        org.junit.Assert.assertEquals(date32.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat50);
        org.junit.Assert.assertNotNull(simpleDateFormat55);
        org.junit.Assert.assertNotNull(simpleDateFormat59);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
    }

    @Test
    public void test7218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7218");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = net.ajaskey.common.Utils.ifmt((-1), 0);
            org.junit.Assert.fail("Expected exception of type java.util.FormatFlagsConversionMismatchException; message: Conversion = s, Flags = 0");
        } catch (java.util.FormatFlagsConversionMismatchException e) {
        // Expected exception.
        }
    }

    @Test
    public void test7219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7219");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        dateTime5.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str10 = dateTime5.getMonth();
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(100L);
        dateTime12.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str17 = dateTime12.getMonth();
        int int18 = dateTime12.getMs();
        net.ajaskey.common.DateTime dateTime19 = dateTime5.copy(dateTime12);
        dateTime3.set(dateTime5);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(dateTime5);
        java.text.SimpleDateFormat simpleDateFormat23 = null;
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat23);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double27 = dateTime24.getDeltaYears(dateTime26);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean32 = dateTime26.isEqual(dateTime31);
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime(100L);
        int int35 = dateTime34.getMs();
        boolean boolean36 = dateTime31.isGreaterThanOrEqual(dateTime34);
        java.text.SimpleDateFormat simpleDateFormat38 = null;
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat38);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double42 = dateTime39.getDeltaYears(dateTime41);
        boolean boolean43 = dateTime39.isWeekday();
        boolean boolean44 = dateTime34.isLessThanOrEqual(dateTime39);
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime(100L);
        dateTime46.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean51 = dateTime46.isWeekday();
        boolean boolean52 = dateTime34.isGreaterThanOrEqual(dateTime46);
        boolean boolean53 = net.ajaskey.common.Utils.sameMonth(dateTime5, dateTime34);
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime("                                                 100", "                              10");
        boolean boolean57 = dateTime34.isLessThan(dateTime56);
        java.util.Calendar calendar58 = dateTime34.getCal();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "January" + "'", str10, "January");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "January" + "'", str17, "January");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        org.junit.Assert.assertNotNull(dateTime19);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(calendar58);
        org.junit.Assert.assertEquals(calendar58.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    }

    @Test
    public void test7220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7220");
        net.ajaskey.common.TextUtils.printline("10-Dec-0024");
    }

    @Test
    public void test7221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7221");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.util.Calendar calendar4 = null;
        dateTime3.set(calendar4);
        int int6 = dateTime3.getMs();
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(100L);
        double double13 = dateTime10.getDeltaYears(dateTime12);
        boolean boolean14 = dateTime12.isWeekday();
        java.util.Date date15 = dateTime12.getTime();
        int int16 = dateTime12.getDayOfWeek();
        java.util.Date date17 = dateTime12.getTime();
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(date17);
        dateTime3.set(date17);
// flaky:         org.junit.Assert.assertTrue("'" + int6 + "' != '" + 136 + "'", int6 == 136);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-1972.041095890411d) + "'", double13 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(date15);
        org.junit.Assert.assertEquals(date15.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 4 + "'", int16 == 4);
        org.junit.Assert.assertNotNull(date17);
        org.junit.Assert.assertEquals(date17.toString(), "Wed Dec 31 17:00:00 MST 1969");
    }

    @Test
    public void test7222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7222");
        java.lang.String str1 = net.ajaskey.common.Utils.getFromUrl("                                                                                                                                                                                                                  1,969");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
    }

    @Test
    public void test7223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7223");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        java.lang.String str3 = dateTime1.toString();
        int int4 = dateTime1.getDayOfYear();
        java.text.SimpleDateFormat simpleDateFormat6 = null;
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat6);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double10 = dateTime7.getDeltaYears(dateTime9);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean15 = dateTime9.isEqual(dateTime14);
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(100L);
        int int18 = dateTime17.getMs();
        boolean boolean19 = dateTime14.isGreaterThanOrEqual(dateTime17);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(100L);
        dateTime21.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(100L);
        double double32 = dateTime29.getDeltaYears(dateTime31);
        boolean boolean33 = dateTime31.isWeekday();
        java.util.Date date34 = dateTime31.getTime();
        dateTime21.set(dateTime31);
        boolean boolean36 = net.ajaskey.common.Utils.sameDate(dateTime14, dateTime21);
        dateTime14.add((int) '#', 6);
        boolean boolean40 = dateTime1.sameDate(dateTime14);
        java.util.Date date41 = dateTime1.getTime();
        java.text.SimpleDateFormat simpleDateFormat45 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat46 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime("", simpleDateFormat45, simpleDateFormat46);
        java.text.SimpleDateFormat simpleDateFormat49 = null;
        java.text.SimpleDateFormat simpleDateFormat50 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime("January", simpleDateFormat49, simpleDateFormat50);
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat45, simpleDateFormat50);
        java.text.SimpleDateFormat simpleDateFormat55 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat56 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime("", simpleDateFormat55, simpleDateFormat56);
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime(100L);
        int int60 = dateTime59.getMs();
        java.text.SimpleDateFormat simpleDateFormat61 = net.ajaskey.common.Utils.sdf;
        dateTime59.setSdf(simpleDateFormat61);
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat56, simpleDateFormat61);
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime("                             100", simpleDateFormat50, simpleDateFormat56);
        java.text.SimpleDateFormat simpleDateFormat65 = dateTime64.getSdf();
        long long66 = dateTime1.getDeltaMilliSeconds(dateTime64);
        int int67 = dateTime1.getMs();
        int int68 = dateTime1.getHour();
        java.lang.String str70 = dateTime1.format("                                                                                                                                                                                                                                                                                                                   314");
        java.lang.Class<?> wildcardClass71 = dateTime1.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "31-Dec-1969" + "'", str3, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 365 + "'", int4 == 365);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-1972.041095890411d) + "'", double32 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(date34);
        org.junit.Assert.assertEquals(date34.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(date41);
        org.junit.Assert.assertEquals(date41.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertNotNull(simpleDateFormat45);
        org.junit.Assert.assertNotNull(simpleDateFormat46);
        org.junit.Assert.assertNotNull(simpleDateFormat50);
        org.junit.Assert.assertNotNull(simpleDateFormat55);
        org.junit.Assert.assertNotNull(simpleDateFormat56);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 100 + "'", int60 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat61);
        org.junit.Assert.assertNull(simpleDateFormat65);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 0L + "'", long66 == 0L);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 100 + "'", int67 == 100);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 5 + "'", int68 == 5);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "                                                                                                                                                                                                                                                                                                                   314" + "'", str70, "                                                                                                                                                                                                                                                                                                                   314");
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test7224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7224");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        int int7 = dateTime3.getHour();
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(100L);
        double double14 = dateTime11.getDeltaYears(dateTime13);
        int int15 = dateTime11.getHour();
        dateTime11.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat20 = null;
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat20);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double24 = dateTime21.getDeltaYears(dateTime23);
        boolean boolean25 = dateTime11.isEqual(dateTime23);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat31 = null;
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat31);
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double35 = dateTime32.getDeltaYears(dateTime34);
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean40 = dateTime34.isEqual(dateTime39);
        java.util.Calendar calendar41 = dateTime34.getCal();
        boolean boolean42 = dateTime29.isLessThan(dateTime34);
        dateTime29.setFirstWorkDay();
        boolean boolean44 = dateTime11.sameDate(dateTime29);
        dateTime3.set(dateTime11);
        java.lang.String str46 = dateTime3.toFullString();
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime(100L);
        java.util.Calendar calendar49 = dateTime48.getCal();
        java.text.SimpleDateFormat simpleDateFormat51 = null;
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat51);
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double55 = dateTime52.getDeltaYears(dateTime54);
        boolean boolean56 = dateTime52.isWeekday();
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long61 = dateTime52.getDeltaDays(dateTime60);
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime(dateTime52);
        net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime(100L);
        double double69 = dateTime66.getDeltaYears(dateTime68);
        boolean boolean70 = dateTime68.isWeekday();
        java.util.Date date71 = dateTime68.getTime();
        dateTime52.set(date71);
        net.ajaskey.common.DateTime dateTime74 = new net.ajaskey.common.DateTime(100L);
        int int75 = dateTime74.getMs();
        java.lang.String str76 = dateTime74.toString();
        boolean boolean77 = dateTime52.isLessThanOrEqual(dateTime74);
        net.ajaskey.common.DateTime dateTime80 = dateTime52.parse("", "100.00");
        dateTime52.add((int) (short) 0, (int) (short) -1);
        double double84 = dateTime48.getDeltaYears(dateTime52);
        net.ajaskey.common.DateTime dateTime87 = new net.ajaskey.common.DateTime(" 9", "         1");
        net.ajaskey.common.DateTime dateTime89 = dateTime87.parse("           6");
        boolean boolean90 = dateTime52.sameDate(dateTime87);
        net.ajaskey.common.DateTime dateTime91 = new net.ajaskey.common.DateTime(dateTime87);
        java.lang.String str92 = dateTime91.format();
        boolean boolean93 = net.ajaskey.common.Utils.sameMonth(dateTime3, dateTime91);
        dateTime3.set(11, 302, 58);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + (-1972.041095890411d) + "'", double14 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(calendar41);
        org.junit.Assert.assertEquals(calendar41.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Thu 10-Apr-0002 10:47:21" + "'", str46, "Thu 10-Apr-0002 10:47:21");
        org.junit.Assert.assertNotNull(calendar49);
        org.junit.Assert.assertEquals(calendar49.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 0L + "'", long61 == 0L);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-1972.041095890411d) + "'", double69 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(date71);
        org.junit.Assert.assertEquals(date71.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 100 + "'", int75 == 100);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "31-Dec-1969" + "'", str76, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNull(dateTime80);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        org.junit.Assert.assertNull(dateTime89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "BAD-DATE-FORMAT" + "'", str92, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test7225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7225");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("                                                                                                                                                                                                                                                                                                              62,190,310,577,669", "                                                                                              100");
    }

    @Test
    public void test7226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7226");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        dateTime2.set((int) ' ', 0, 11);
        boolean boolean7 = dateTime2.isWeekday();
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(100L);
        int int10 = dateTime9.getMs();
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(100L);
        double double17 = dateTime14.getDeltaYears(dateTime16);
        java.text.SimpleDateFormat simpleDateFormat18 = dateTime14.getSdf();
        boolean boolean19 = dateTime9.isLessThanOrEqual(dateTime14);
        java.util.Date date20 = dateTime14.getTime();
        dateTime2.set(date20);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime(100L);
        int int24 = dateTime23.getMs();
        int int25 = dateTime23.getHour();
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat31 = null;
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat31);
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double35 = dateTime32.getDeltaYears(dateTime34);
        boolean boolean36 = dateTime29.isLessThan(dateTime34);
        java.lang.String str37 = dateTime34.toFullString();
        dateTime34.add(10, (int) (byte) -1);
        java.text.SimpleDateFormat simpleDateFormat42 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat44 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat45 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime("", simpleDateFormat44, simpleDateFormat45);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat42, simpleDateFormat45);
        boolean boolean48 = dateTime34.isGreaterThan(dateTime47);
        boolean boolean49 = dateTime23.isEqual(dateTime34);
        int int50 = dateTime23.getDayOfYear();
        boolean boolean51 = dateTime2.isLessThanOrEqual(dateTime23);
        int int52 = dateTime2.getSecond();
        int int53 = dateTime2.getMinute();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-1972.041095890411d) + "'", double17 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(date20);
// flaky:         org.junit.Assert.assertEquals(date20.toString(), "Thu Apr 10 10:47:21 MST 2");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 5 + "'", int25 == 5);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str37, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertNotNull(simpleDateFormat42);
        org.junit.Assert.assertNotNull(simpleDateFormat44);
        org.junit.Assert.assertNotNull(simpleDateFormat45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 365 + "'", int50 == 365);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int52 + "' != '" + 21 + "'", int52 == 21);
// flaky:         org.junit.Assert.assertTrue("'" + int53 + "' != '" + 47 + "'", int53 == 47);
    }

    @Test
    public void test7227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7227");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(78, (-1955), 302);
        net.ajaskey.common.DateTime dateTime6 = dateTime3.parse("", "Thu 30-Apr-0268 10:44:56");
        org.junit.Assert.assertNull(dateTime6);
    }

    @Test
    public void test7228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7228");
        net.ajaskey.common.TextUtils.printline("January1,6221,622                                                                                               52.001,622hi!1,622");
    }

    @Test
    public void test7229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7229");
        net.ajaskey.common.Utils.TAB = "                                                                   34";
    }

    @Test
    public void test7230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7230");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime(100L);
        int int3 = dateTime2.getMs();
        java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdf;
        dateTime2.setSdf(simpleDateFormat4);
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat4);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime((long) 53);
        boolean boolean9 = dateTime8.isWeekday();
        boolean boolean10 = dateTime6.sameDate(dateTime8);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(100L);
        int int13 = dateTime12.getMs();
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(100L);
        double double20 = dateTime17.getDeltaYears(dateTime19);
        java.text.SimpleDateFormat simpleDateFormat21 = dateTime17.getSdf();
        boolean boolean22 = dateTime12.isLessThanOrEqual(dateTime17);
        java.text.SimpleDateFormat simpleDateFormat24 = null;
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat24);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double28 = dateTime25.getDeltaYears(dateTime27);
        boolean boolean29 = dateTime25.isWeekday();
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long34 = dateTime25.getDeltaDays(dateTime33);
        long long35 = dateTime12.getDeltaDays(dateTime33);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(100L);
        dateTime37.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean42 = dateTime37.isWeekday();
        int int43 = dateTime12.getYears(dateTime37);
        java.text.SimpleDateFormat simpleDateFormat45 = null;
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat45);
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double49 = dateTime46.getDeltaYears(dateTime48);
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean54 = dateTime48.isEqual(dateTime53);
        int int55 = dateTime48.getDayOfWeek();
        boolean boolean56 = dateTime37.isLessThan(dateTime48);
        boolean boolean57 = dateTime6.isLessThanOrEqual(dateTime37);
        int int58 = dateTime37.getDayOfWeek();
        java.lang.String str60 = dateTime37.format("10-Apr-0002");
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime(100L);
        int int63 = dateTime62.getMs();
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime(100L);
        double double70 = dateTime67.getDeltaYears(dateTime69);
        java.text.SimpleDateFormat simpleDateFormat71 = dateTime67.getSdf();
        boolean boolean72 = dateTime62.isLessThanOrEqual(dateTime67);
        java.text.SimpleDateFormat simpleDateFormat74 = null;
        net.ajaskey.common.DateTime dateTime75 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat74);
        net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double78 = dateTime75.getDeltaYears(dateTime77);
        boolean boolean79 = dateTime75.isWeekday();
        net.ajaskey.common.DateTime dateTime83 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long84 = dateTime75.getDeltaDays(dateTime83);
        long long85 = dateTime62.getDeltaDays(dateTime83);
        java.lang.String str86 = dateTime83.toFullString();
        java.util.Calendar calendar87 = dateTime83.getCal();
        dateTime37.set(calendar87);
        net.ajaskey.common.DateTime dateTime89 = new net.ajaskey.common.DateTime(calendar87);
        int int90 = dateTime89.getDayOfWeek();
        int int91 = dateTime89.getDayOfMonth();
        int int92 = dateTime89.getMinute();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-1972.041095890411d) + "'", double20 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 719795L + "'", long35 == 719795L);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1870) + "'", int43 == (-1870));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 4 + "'", int55 == 4);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 7 + "'", int58 == 7);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "BAD-DATE-FORMAT" + "'", str60, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 100 + "'", int63 == 100);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-1972.041095890411d) + "'", double70 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 0L + "'", long84 == 0L);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 719795L + "'", long85 == 719795L);
// flaky:         org.junit.Assert.assertEquals("'" + str86 + "' != '" + "Thu 10-Apr-0002 10:47:21" + "'", str86, "Thu 10-Apr-0002 10:47:21");
        org.junit.Assert.assertNotNull(calendar87);
// flaky:         org.junit.Assert.assertEquals(calendar87.toString(), "java.util.GregorianCalendar[time=-62190310358721,areFieldsSet=true,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=21,MILLISECOND=279,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 5 + "'", int90 == 5);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 10 + "'", int91 == 10);
// flaky:         org.junit.Assert.assertTrue("'" + int92 + "' != '" + 47 + "'", int92 == 47);
    }

    @Test
    public void test7231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7231");
        java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readTextFile("                                                                                                                                                                                                                                                                                                                                                                                                                                                                         25", false);
        java.lang.Class<?> wildcardClass3 = strList2.getClass();
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test7232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7232");
        java.lang.String str1 = net.ajaskey.common.Utils.getFromUrl("Thu 10-Apr-0002 10:46:52");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
    }

    @Test
    public void test7233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7233");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("Wed 28-Jul-0062 10:46:55", "");
    }

    @Test
    public void test7234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7234");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        int int7 = dateTime3.getHour();
        java.util.Calendar calendar8 = dateTime3.getCal();
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(calendar8);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean14 = dateTime13.isNull();
        boolean boolean15 = net.ajaskey.common.Utils.sameDate(dateTime9, dateTime13);
        java.text.SimpleDateFormat simpleDateFormat18 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat19 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("", simpleDateFormat18, simpleDateFormat19);
        java.text.SimpleDateFormat simpleDateFormat22 = null;
        java.text.SimpleDateFormat simpleDateFormat23 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("January", simpleDateFormat22, simpleDateFormat23);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat18, simpleDateFormat23);
        dateTime13.setSdf(simpleDateFormat23);
        int int27 = dateTime13.getMs();
        java.lang.String str28 = dateTime13.format();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertNotNull(calendar8);
// flaky:         org.junit.Assert.assertEquals(calendar8.toString(), "java.util.GregorianCalendar[time=-62190310358633,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=21,MILLISECOND=367,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(simpleDateFormat18);
        org.junit.Assert.assertNotNull(simpleDateFormat19);
        org.junit.Assert.assertNotNull(simpleDateFormat23);
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 367 + "'", int27 == 367);
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Thu 10-Apr-0002 10:47:21" + "'", str28, "Thu 10-Apr-0002 10:47:21");
    }

    @Test
    public void test7235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7235");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        java.text.SimpleDateFormat simpleDateFormat10 = dateTime6.getSdf();
        boolean boolean11 = dateTime1.isLessThanOrEqual(dateTime6);
        java.text.SimpleDateFormat simpleDateFormat13 = null;
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat13);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double17 = dateTime14.getDeltaYears(dateTime16);
        boolean boolean18 = dateTime14.isWeekday();
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long23 = dateTime14.getDeltaDays(dateTime22);
        long long24 = dateTime1.getDeltaDays(dateTime22);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat30 = null;
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat30);
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double34 = dateTime31.getDeltaYears(dateTime33);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean39 = dateTime33.isEqual(dateTime38);
        java.util.Calendar calendar40 = dateTime33.getCal();
        boolean boolean41 = dateTime28.isLessThan(dateTime33);
        boolean boolean42 = net.ajaskey.common.Utils.sameDate(dateTime1, dateTime28);
        net.ajaskey.common.DateTime dateTime44 = dateTime1.parse("                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     140");
        java.text.SimpleDateFormat simpleDateFormat46 = null;
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat46);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double50 = dateTime47.getDeltaYears(dateTime49);
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean55 = dateTime49.isEqual(dateTime54);
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime(100L);
        int int58 = dateTime57.getMs();
        boolean boolean59 = dateTime54.isGreaterThanOrEqual(dateTime57);
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime(100L);
        dateTime61.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime(100L);
        double double72 = dateTime69.getDeltaYears(dateTime71);
        boolean boolean73 = dateTime71.isWeekday();
        java.util.Date date74 = dateTime71.getTime();
        dateTime61.set(dateTime71);
        boolean boolean76 = net.ajaskey.common.Utils.sameDate(dateTime54, dateTime61);
        int int77 = dateTime1.getYears(dateTime54);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 719795L + "'", long24 == 719795L);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(calendar40);
        org.junit.Assert.assertEquals(calendar40.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(dateTime44);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + (-1972.041095890411d) + "'", double72 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(date74);
        org.junit.Assert.assertEquals(date74.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1968) + "'", int77 == (-1968));
    }

    @Test
    public void test7236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7236");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) 15);
        int int2 = dateTime1.getMs();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 15 + "'", int2 == 15);
    }

    @Test
    public void test7237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7237");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        java.text.SimpleDateFormat simpleDateFormat10 = dateTime6.getSdf();
        boolean boolean11 = dateTime1.isLessThanOrEqual(dateTime6);
        java.text.SimpleDateFormat simpleDateFormat13 = null;
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat13);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double17 = dateTime14.getDeltaYears(dateTime16);
        boolean boolean18 = dateTime14.isWeekday();
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long23 = dateTime14.getDeltaDays(dateTime22);
        long long24 = dateTime1.getDeltaDays(dateTime22);
        java.lang.String str25 = dateTime22.toFullString();
        java.util.Calendar calendar26 = dateTime22.getCal();
        java.util.Calendar calendar27 = dateTime22.getCal();
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(12, 42, (int) (byte) 1);
        net.ajaskey.common.DateTime dateTime34 = dateTime31.parse(" 1.00", "       262");
        boolean boolean35 = net.ajaskey.common.Utils.sameMonth(dateTime22, dateTime34);
        java.lang.Class<?> wildcardClass36 = dateTime22.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 719795L + "'", long24 == 719795L);
// flaky:         org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Thu 10-Apr-0002 10:47:21" + "'", str25, "Thu 10-Apr-0002 10:47:21");
        org.junit.Assert.assertNotNull(calendar26);
// flaky:         org.junit.Assert.assertEquals(calendar26.toString(), "java.util.GregorianCalendar[time=-62190310358587,areFieldsSet=true,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=21,MILLISECOND=413,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(calendar27);
// flaky:         org.junit.Assert.assertEquals(calendar27.toString(), "java.util.GregorianCalendar[time=-62190310358587,areFieldsSet=true,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=21,MILLISECOND=413,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNull(dateTime34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test7238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7238");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean10 = dateTime4.isEqual(dateTime9);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(100L);
        int int13 = dateTime12.getMs();
        boolean boolean14 = dateTime9.isGreaterThanOrEqual(dateTime12);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(100L);
        int int17 = dateTime16.getMs();
        int int18 = dateTime16.getHour();
        java.text.SimpleDateFormat simpleDateFormat20 = null;
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat20);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double24 = dateTime21.getDeltaYears(dateTime23);
        boolean boolean25 = dateTime21.isWeekday();
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long30 = dateTime21.getDeltaDays(dateTime29);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(dateTime21);
        boolean boolean32 = dateTime16.isLessThanOrEqual(dateTime31);
        boolean boolean33 = net.ajaskey.common.Utils.sameDate(dateTime12, dateTime31);
        int int34 = dateTime31.getSecond();
        int int35 = dateTime31.getDayOfWeek();
        java.text.SimpleDateFormat simpleDateFormat37 = null;
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat37);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double41 = dateTime38.getDeltaYears(dateTime40);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean46 = dateTime40.isEqual(dateTime45);
        java.util.Calendar calendar47 = dateTime40.getCal();
        java.lang.String str48 = dateTime40.format();
        net.ajaskey.common.DateTime dateTime49 = null;
        long long50 = dateTime40.getDeltaDays(dateTime49);
        int int51 = dateTime40.getSecond();
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime(100L);
        double double58 = dateTime55.getDeltaYears(dateTime57);
        java.text.SimpleDateFormat simpleDateFormat60 = null;
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat60);
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double64 = dateTime61.getDeltaYears(dateTime63);
        boolean boolean65 = dateTime61.isWeekday();
        boolean boolean66 = dateTime55.sameDate(dateTime61);
        int int67 = dateTime61.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime68 = dateTime40.copy(dateTime61);
        double double69 = dateTime31.getDeltaYears(dateTime40);
        boolean boolean70 = dateTime31.isWeekday();
        int int71 = dateTime31.getHour();
        dateTime31.setFirstWorkDay();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int34 + "' != '" + 21 + "'", int34 == 21);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 5 + "'", int35 == 5);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(calendar47);
        org.junit.Assert.assertEquals(calendar47.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "BAD-DATE-FORMAT" + "'", str48, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-1972.041095890411d) + "'", double58 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNull(dateTime68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 50.515068493150686d + "'", double69 == 50.515068493150686d);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 10 + "'", int71 == 10);
    }

    @Test
    public void test7239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7239");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        dateTime1.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
        double double12 = dateTime9.getDeltaYears(dateTime11);
        boolean boolean13 = dateTime11.isWeekday();
        java.util.Date date14 = dateTime11.getTime();
        dateTime1.set(dateTime11);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(100L);
        double double22 = dateTime19.getDeltaYears(dateTime21);
        int int23 = dateTime19.getHour();
        java.text.SimpleDateFormat simpleDateFormat25 = null;
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat25);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double29 = dateTime26.getDeltaYears(dateTime28);
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean34 = dateTime28.isEqual(dateTime33);
        java.util.Calendar calendar35 = dateTime28.getCal();
        dateTime19.set(calendar35);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(calendar35);
        boolean boolean38 = dateTime11.isGreaterThan(dateTime37);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime((int) (byte) 10, (int) (byte) 0, 2);
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime(dateTime42);
        net.ajaskey.common.DateTime dateTime44 = dateTime37.copy(dateTime43);
        dateTime43.add(14, 193);
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime("", "");
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:43:36", "                                                                                               52.00");
        long long54 = dateTime50.getDeltaMilliSeconds(dateTime53);
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime(13, (-1870), 1869);
        boolean boolean59 = net.ajaskey.common.Utils.sameMonth(dateTime53, dateTime58);
        boolean boolean60 = dateTime43.isLessThan(dateTime58);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1972.041095890411d) + "'", double12 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(date14);
        org.junit.Assert.assertEquals(date14.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-1972.041095890411d) + "'", double22 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(calendar35);
        org.junit.Assert.assertEquals(calendar35.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(dateTime44);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 0L + "'", long54 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test7240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7240");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean10 = dateTime4.isEqual(dateTime9);
        boolean boolean11 = dateTime4.isNull();
        int int12 = dateTime4.getHour();
        net.ajaskey.common.DateTime dateTime14 = dateTime4.parse("hi!");
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat20 = null;
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat20);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double24 = dateTime21.getDeltaYears(dateTime23);
        boolean boolean25 = dateTime18.isLessThan(dateTime23);
        java.lang.String str26 = dateTime23.toFullString();
        dateTime23.add(10, (int) (byte) -1);
        java.text.SimpleDateFormat simpleDateFormat31 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat33 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat34 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("", simpleDateFormat33, simpleDateFormat34);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat31, simpleDateFormat34);
        boolean boolean37 = dateTime23.isGreaterThan(dateTime36);
        java.text.SimpleDateFormat simpleDateFormat39 = null;
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat39);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double43 = dateTime40.getDeltaYears(dateTime42);
        boolean boolean44 = dateTime40.isWeekday();
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long49 = dateTime40.getDeltaDays(dateTime48);
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime(dateTime40);
        boolean boolean51 = dateTime36.sameDate(dateTime40);
        net.ajaskey.common.DateTime dateTime52 = null;
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime(dateTime52);
        int int54 = dateTime53.getYear();
        dateTime40.set(dateTime53);
        dateTime4.set(dateTime53);
        java.lang.String str57 = dateTime53.format();
        java.lang.String str59 = dateTime53.format
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
        org.junit.Assert.assertNull(dateTime14);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str26, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertNotNull(simpleDateFormat31);
        org.junit.Assert.assertNotNull(simpleDateFormat33);
        org.junit.Assert.assertNotNull(simpleDateFormat34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2020 + "'", int54 == 2020);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "BAD-DATE-FORMAT" + "'", str57, "BAD-DATE-FORMAT");
        org.junit.Assert.assertEquals("'" + strstr
    }

    @Test
    public void test7241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7241");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        int int7 = dateTime3.getHour();
        java.text.SimpleDateFormat simpleDateFormat9 = null;
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat9);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double13 = dateTime10.getDeltaYears(dateTime12);
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean18 = dateTime12.isEqual(dateTime17);
        java.util.Calendar calendar19 = dateTime12.getCal();
        dateTime3.set(calendar19);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(calendar19);
        dateTime21.setFirstWorkDay();
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime((-1870), 1969, 1);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime("5.00", "     10");
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime(100L);
        double double36 = dateTime33.getDeltaYears(dateTime35);
        int int37 = dateTime33.getHour();
        java.text.SimpleDateFormat simpleDateFormat39 = null;
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat39);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double43 = dateTime40.getDeltaYears(dateTime42);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean48 = dateTime42.isEqual(dateTime47);
        java.util.Calendar calendar49 = dateTime42.getCal();
        dateTime33.set(calendar49);
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime(calendar49);
        dateTime29.set(calendar49);
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime(100L);
        int int55 = dateTime54.getMs();
        java.lang.String str56 = dateTime54.toString();
        java.lang.String str58 = dateTime54.format("         1");
        net.ajaskey.common.DateTime dateTime59 = dateTime29.copy(dateTime54);
        int int60 = dateTime26.getYears(dateTime59);
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime(dateTime26);
        int int62 = dateTime61.getDayOfYear();
        int int63 = dateTime21.getYears(dateTime61);
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean68 = dateTime67.isNull();
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime(100L);
        dateTime70.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str75 = dateTime70.getMonth();
        net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime(100L);
        dateTime77.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str82 = dateTime77.getMonth();
        int int83 = dateTime77.getMs();
        net.ajaskey.common.DateTime dateTime84 = dateTime70.copy(dateTime77);
        boolean boolean85 = dateTime67.isGreaterThanOrEqual(dateTime84);
        int int86 = dateTime84.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime87 = new net.ajaskey.common.DateTime(dateTime84);
        int int88 = dateTime84.getDayOfWeek();
        double double89 = dateTime21.getDeltaYears(dateTime84);
        net.ajaskey.common.DateTime dateTime90 = null;
        double double91 = dateTime21.getDeltaYears(dateTime90);
        dateTime21.add(830, 991);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(calendar19);
        org.junit.Assert.assertEquals(calendar19.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-1972.041095890411d) + "'", double36 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 10 + "'", int37 == 10);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(calendar49);
        org.junit.Assert.assertEquals(calendar49.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "31-Dec-1969" + "'", str56, "31-Dec-1969");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "         1" + "'", str58, "         1");
        org.junit.Assert.assertNotNull(dateTime59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 262 + "'", int60 == 262);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 32 + "'", int62 == 32);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-263) + "'", int63 == (-263));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "January" + "'", str75, "January");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "January" + "'", str82, "January");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 100 + "'", int83 == 100);
        org.junit.Assert.assertNotNull(dateTime84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 4 + "'", int86 == 4);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 7 + "'", int88 == 7);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 1871.2328767123288d + "'", double89 == 1871.2328767123288d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
    }

    @Test
    public void test7242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7242");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        int int3 = dateTime1.getHour();
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat9 = null;
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat9);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double13 = dateTime10.getDeltaYears(dateTime12);
        boolean boolean14 = dateTime7.isLessThan(dateTime12);
        java.lang.String str15 = dateTime12.toFullString();
        dateTime12.add(10, (int) (byte) -1);
        java.text.SimpleDateFormat simpleDateFormat20 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat22 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat23 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("", simpleDateFormat22, simpleDateFormat23);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat20, simpleDateFormat23);
        boolean boolean26 = dateTime12.isGreaterThan(dateTime25);
        boolean boolean27 = dateTime1.isEqual(dateTime12);
        net.ajaskey.common.DateTime dateTime28 = null;
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(dateTime28);
        dateTime29.set(42, 10, 10);
        java.util.Date date34 = dateTime29.getTime();
        net.ajaskey.common.DateTime dateTime35 = dateTime1.copy(dateTime29);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(100L);
        int int38 = dateTime37.getMs();
        int int39 = dateTime37.getHour();
        double double40 = dateTime29.getDeltaYears(dateTime37);
        java.text.SimpleDateFormat simpleDateFormat42 = null;
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat42);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double46 = dateTime43.getDeltaYears(dateTime45);
        boolean boolean47 = dateTime43.isWeekday();
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long52 = dateTime43.getDeltaDays(dateTime51);
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime(dateTime43);
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime(100L);
        double double60 = dateTime57.getDeltaYears(dateTime59);
        boolean boolean61 = dateTime59.isWeekday();
        java.util.Date date62 = dateTime59.getTime();
        dateTime43.set(date62);
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime(100L);
        int int66 = dateTime65.getMs();
        java.lang.String str67 = dateTime65.toString();
        boolean boolean68 = dateTime43.isLessThanOrEqual(dateTime65);
        int int69 = dateTime43.getHour();
        int int70 = dateTime43.getYear();
        java.util.Calendar calendar71 = dateTime43.getCal();
        java.lang.String str72 = dateTime43.getMonth();
        int int73 = dateTime29.getYears(dateTime43);
        net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat79 = null;
        net.ajaskey.common.DateTime dateTime80 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat79);
        net.ajaskey.common.DateTime dateTime82 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double83 = dateTime80.getDeltaYears(dateTime82);
        boolean boolean84 = dateTime77.isLessThan(dateTime82);
        dateTime82.set(3, 365, 0);
        net.ajaskey.common.DateTime dateTime90 = new net.ajaskey.common.DateTime(100L);
        java.util.Calendar calendar91 = dateTime90.getCal();
        dateTime82.set(calendar91);
        boolean boolean93 = dateTime43.isGreaterThan(dateTime82);
        java.text.SimpleDateFormat simpleDateFormat94 = dateTime43.getSdf();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 5 + "'", int3 == 5);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str15, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertNotNull(simpleDateFormat20);
        org.junit.Assert.assertNotNull(simpleDateFormat22);
        org.junit.Assert.assertNotNull(simpleDateFormat23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(date34);
// flaky:         org.junit.Assert.assertEquals(date34.toString(), "Sat Nov 10 10:47:21 MST 42");
        org.junit.Assert.assertNotNull(dateTime35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 5 + "'", int39 == 5);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-1928.4246575342465d) + "'", double40 == (-1928.4246575342465d));
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-1972.041095890411d) + "'", double60 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(date62);
        org.junit.Assert.assertEquals(date62.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "31-Dec-1969" + "'", str67, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 5 + "'", int69 == 5);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1969 + "'", int70 == 1969);
        org.junit.Assert.assertNotNull(calendar71);
        org.junit.Assert.assertEquals(calendar71.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "December" + "'", str72, "December");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1927 + "'", int73 == 1927);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(calendar91);
        org.junit.Assert.assertEquals(calendar91.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNull(simpleDateFormat94);
    }

    @Test
    public void test7243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7243");
        java.util.zip.ZipOutputStream zipOutputStream1 = null;
        // The following exception was thrown during execution in test generation
        try {
            net.ajaskey.common.Utils.writeToZipFilezipOutputStream1);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; messagehe filename, directory name, or volume label syntax is incorrect)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
    }

    @Test
    public void test7244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7244");
        java.text.SimpleDateFormat simpleDateFormat6 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat7 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime("", simpleDateFormat6, simpleDateFormat7);
        java.text.SimpleDateFormat simpleDateFormat10 = null;
        java.text.SimpleDateFormat simpleDateFormat11 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime("January", simpleDateFormat10, simpleDateFormat11);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat6, simpleDateFormat11);
        java.text.SimpleDateFormat simpleDateFormat16 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat17 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime("", simpleDateFormat16, simpleDateFormat17);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime(100L);
        int int21 = dateTime20.getMs();
        java.text.SimpleDateFormat simpleDateFormat22 = net.ajaskey.common.Utils.sdf;
        dateTime20.setSdf(simpleDateFormat22);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat17, simpleDateFormat22);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("                             100", simpleDateFormat11, simpleDateFormat17);
        java.text.SimpleDateFormat simpleDateFormat28 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat29 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime("", simpleDateFormat28, simpleDateFormat29);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:42:54", simpleDateFormat28);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime("5.00", simpleDateFormat11, simpleDateFormat28);
        java.text.SimpleDateFormat simpleDateFormat33 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat11, simpleDateFormat33);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime(100L);
        int int37 = dateTime36.getMs();
        boolean boolean38 = dateTime36.isWeekday();
        int int39 = dateTime36.getHour();
        java.text.SimpleDateFormat simpleDateFormat41 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime("January", simpleDateFormat41);
        dateTime36.setSdf(simpleDateFormat41);
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime("        1", simpleDateFormat11, simpleDateFormat41);
        net.ajaskey.common.DateTime dateTime47 = dateTime44.parse("        42", "Thu 10-Apr-0002 10:47:14");
        org.junit.Assert.assertNotNull(simpleDateFormat6);
        org.junit.Assert.assertNotNull(simpleDateFormat7);
        org.junit.Assert.assertNotNull(simpleDateFormat11);
        org.junit.Assert.assertNotNull(simpleDateFormat16);
        org.junit.Assert.assertNotNull(simpleDateFormat17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat22);
        org.junit.Assert.assertNotNull(simpleDateFormat28);
        org.junit.Assert.assertNotNull(simpleDateFormat29);
        org.junit.Assert.assertNotNull(simpleDateFormat33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 5 + "'", int39 == 5);
        org.junit.Assert.assertNotNull(simpleDateFormat41);
        org.junit.Assert.assertNull(dateTime47);
    }

    @Test
    public void test7245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7245");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(250, 464, 978);
    }

    @Test
    public void test7246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7246");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean10 = dateTime4.isEqual(dateTime9);
        java.util.Calendar calendar11 = dateTime4.getCal();
        java.lang.String str12 = dateTime4.format();
        net.ajaskey.common.DateTime dateTime13 = null;
        long long14 = dateTime4.getDeltaDays(dateTime13);
        int int15 = dateTime4.getSecond();
        java.text.SimpleDateFormat simpleDateFormat17 = null;
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat17);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double21 = dateTime18.getDeltaYears(dateTime20);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean26 = dateTime20.isEqual(dateTime25);
        boolean boolean27 = dateTime4.isGreaterThanOrEqual(dateTime25);
        boolean boolean28 = dateTime25.isNull();
        int int29 = dateTime25.getDayOfYear();
        int int30 = dateTime25.getHour();
        java.lang.String str32 = dateTime25.format("");
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime(100L);
        double double39 = dateTime36.getDeltaYears(dateTime38);
        int int40 = dateTime36.getHour();
        int int41 = dateTime36.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime(100L);
        double double48 = dateTime45.getDeltaYears(dateTime47);
        boolean boolean49 = dateTime47.isWeekday();
        boolean boolean50 = net.ajaskey.common.Utils.sameDate(dateTime36, dateTime47);
        java.lang.String str51 = dateTime36.getMonth();
        boolean boolean52 = dateTime25.sameDate(dateTime36);
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime(100L);
        double double59 = dateTime56.getDeltaYears(dateTime58);
        int int60 = dateTime56.getHour();
        java.text.SimpleDateFormat simpleDateFormat62 = null;
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat62);
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double66 = dateTime63.getDeltaYears(dateTime65);
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean71 = dateTime65.isEqual(dateTime70);
        java.util.Calendar calendar72 = dateTime65.getCal();
        dateTime56.set(calendar72);
        net.ajaskey.common.DateTime dateTime76 = dateTime56.parse("                                                                                                                                                                                                                                            10", "10-May-0100");
        boolean boolean77 = dateTime25.isEqual(dateTime56);
        java.lang.String str78 = dateTime56.getMonth();
        java.lang.String str79 = dateTime56.toString();
        java.lang.String str80 = dateTime56.toFullString();
        java.util.Calendar calendar81 = dateTime56.getCal();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(calendar11);
        org.junit.Assert.assertEquals(calendar11.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "BAD-DATE-FORMAT" + "'", str12, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-1972.041095890411d) + "'", double39 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 10 + "'", int41 == 10);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + (-1972.041095890411d) + "'", double48 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "April" + "'", str51, "April");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-1972.041095890411d) + "'", double59 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 10 + "'", int60 == 10);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(calendar72);
        org.junit.Assert.assertEquals(calendar72.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNull(dateTime76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "December" + "'", str78, "December");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "31-Dec-1969" + "'", str79, "31-Dec-1969");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str80, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertNotNull(calendar81);
        org.junit.Assert.assertEquals(calendar81.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    }

    @Test
    public void test7247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7247");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(97, 978, 99);
    }

    @Test
    public void test7248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7248");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) 747);
    }

    @Test
    public void test7249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7249");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        boolean boolean2 = dateTime1.isWeekday();
        dateTime1.setFirstWorkDay();
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        dateTime5.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str10 = dateTime5.getMonth();
        boolean boolean11 = dateTime1.isLessThan(dateTime5);
        java.util.Date date12 = dateTime5.getTime();
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(date12);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(date12);
        java.util.Date date15 = dateTime14.getTime();
        java.lang.String str16 = dateTime14.getDay();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "January" + "'", str10, "January");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(date12);
        org.junit.Assert.assertEquals(date12.toString(), "Sat Jan 04 17:00:00 MST 100");
        org.junit.Assert.assertNotNull(date15);
        org.junit.Assert.assertEquals(date15.toString(), "Sat Jan 04 17:00:00 MST 100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Saturday" + "'", str16, "Saturday");
    }

    @Test
    public void test7250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7250");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(48, 238, 342);
        boolean boolean4 = dateTime3.isWeekday();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test7251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7251");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(903, 631, 274);
    }

    @Test
    public void test7252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7252");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        java.text.SimpleDateFormat simpleDateFormat10 = dateTime6.getSdf();
        boolean boolean11 = dateTime1.isLessThanOrEqual(dateTime6);
        java.text.SimpleDateFormat simpleDateFormat13 = null;
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat13);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double17 = dateTime14.getDeltaYears(dateTime16);
        boolean boolean18 = dateTime14.isWeekday();
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long23 = dateTime14.getDeltaDays(dateTime22);
        long long24 = dateTime1.getDeltaDays(dateTime22);
        java.lang.String str25 = dateTime22.toFullString();
        java.lang.String str26 = dateTime22.toFullString();
        java.lang.String str27 = dateTime22.toString();
        java.text.SimpleDateFormat simpleDateFormat29 = null;
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat29);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double33 = dateTime30.getDeltaYears(dateTime32);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean38 = dateTime32.isEqual(dateTime37);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime(100L);
        int int41 = dateTime40.getMs();
        boolean boolean42 = dateTime37.isGreaterThanOrEqual(dateTime40);
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime(100L);
        dateTime44.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime(100L);
        double double55 = dateTime52.getDeltaYears(dateTime54);
        boolean boolean56 = dateTime54.isWeekday();
        java.util.Date date57 = dateTime54.getTime();
        dateTime44.set(dateTime54);
        boolean boolean59 = net.ajaskey.common.Utils.sameDate(dateTime37, dateTime44);
        dateTime37.add((int) '#', 6);
        java.lang.String str64 = dateTime37.format("January                                                                                               52.00                                                                                               52.00                                                                                               52.00                                                                                               52.00hi!                                                                                               52.00");
        java.lang.String str66 = dateTime37.format("                              10");
        boolean boolean67 = net.ajaskey.common.Utils.sameDate(dateTime22, dateTime37);
        int int68 = dateTime22.getMinute();
        int int69 = dateTime22.getDayOfYear();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 719795L + "'", long24 == 719795L);
// flaky:         org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Thu 10-Apr-0002 10:47:21" + "'", str25, "Thu 10-Apr-0002 10:47:21");
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Thu 10-Apr-0002 10:47:21" + "'", str26, "Thu 10-Apr-0002 10:47:21");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "10-Apr-0002" + "'", str27, "10-Apr-0002");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-1972.041095890411d) + "'", double55 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(date57);
        org.junit.Assert.assertEquals(date57.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "BAD-DATE-FORMAT" + "'", str64, "BAD-DATE-FORMAT");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "                              10" + "'", str66, "                              10");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int68 + "' != '" + 47 + "'", int68 == 47);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 100 + "'", int69 == 100);
    }

    @Test
    public void test7253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7253");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = net.ajaskey.common.Utils.lfmt((long) 568, 0);
            org.junit.Assert.fail("Expected exception of type java.util.FormatFlagsConversionMismatchException; message: Conversion = s, Flags = 0");
        } catch (java.util.FormatFlagsConversionMismatchException e) {
        // Expected exception.
        }
    }

    @Test
    public void test7254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7254");
        java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat6 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat7 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime("", simpleDateFormat6, simpleDateFormat7);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat4, simpleDateFormat7);
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("10-Apr-0002", simpleDateFormat7);
        java.text.SimpleDateFormat simpleDateFormat13 = null;
        java.text.SimpleDateFormat simpleDateFormat14 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime("January", simpleDateFormat13, simpleDateFormat14);
        java.text.SimpleDateFormat simpleDateFormat18 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime("January", simpleDateFormat18);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("", simpleDateFormat18);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("", simpleDateFormat14, simpleDateFormat18);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime("January                                                                                               52.00                                                                                               52.00                                                                                               52.00                                                                                               52.00hi!                                                                                               52.00", simpleDateFormat7, simpleDateFormat18);
        java.text.SimpleDateFormat simpleDateFormat24 = null;
        java.text.SimpleDateFormat simpleDateFormat25 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime("January", simpleDateFormat24, simpleDateFormat25);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime("December", simpleDateFormat18, simpleDateFormat25);
        java.util.Date date28 = dateTime27.getTime();
        dateTime27.setFirstWorkDay();
        org.junit.Assert.assertNotNull(simpleDateFormat4);
        org.junit.Assert.assertNotNull(simpleDateFormat6);
        org.junit.Assert.assertNotNull(simpleDateFormat7);
        org.junit.Assert.assertNotNull(simpleDateFormat14);
        org.junit.Assert.assertNotNull(simpleDateFormat18);
        org.junit.Assert.assertNotNull(simpleDateFormat25);
        org.junit.Assert.assertNull(date28);
    }

    @Test
    public void test7255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7255");
        java.text.SimpleDateFormat simpleDateFormat2 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat3 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime("", simpleDateFormat2, simpleDateFormat3);
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime(100L);
        int int7 = dateTime6.getMs();
        java.text.SimpleDateFormat simpleDateFormat8 = net.ajaskey.common.Utils.sdf;
        dateTime6.setSdf(simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat3, simpleDateFormat8);
        java.text.SimpleDateFormat simpleDateFormat12 = null;
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat12);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double16 = dateTime13.getDeltaYears(dateTime15);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean21 = dateTime15.isEqual(dateTime20);
        java.util.Calendar calendar22 = dateTime15.getCal();
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime(calendar22);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime(calendar22);
        boolean boolean25 = dateTime10.isGreaterThan(dateTime24);
        java.util.Date date26 = dateTime10.getTime();
        java.lang.Class<?> wildcardClass27 = date26.getClass();
        org.junit.Assert.assertNotNull(simpleDateFormat2);
        org.junit.Assert.assertNotNull(simpleDateFormat3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat8);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(calendar22);
        org.junit.Assert.assertEquals(calendar22.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(date26);
        org.junit.Assert.assertEquals(date26.toString(), "Wed Dec 31 00:00:00 MST 1969");
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test7256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7256");
        java.util.zip.ZipOutputStream zipOutputStream1 = null;
        // The following exception was thrown during execution in test generation
        try {
            net.ajaskey.common.Utils.writeToZipFile("Thu 10-Apr-0002 10:45:58", zipOutputStream1);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: Thu 10-Apr-0002 10:45:58 (The filename, directory name, or volume label syntax is incorrect)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
    }

    @Test
    public void test7257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7257");
        net.ajaskey.common.TextUtils.printline("Thu 10-Apr-0002 10:43:44");
    }

    @Test
    public void test7258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7258");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("5.00", "     10");
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        int int10 = dateTime6.getHour();
        java.text.SimpleDateFormat simpleDateFormat12 = null;
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat12);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double16 = dateTime13.getDeltaYears(dateTime15);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean21 = dateTime15.isEqual(dateTime20);
        java.util.Calendar calendar22 = dateTime15.getCal();
        dateTime6.set(calendar22);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime(calendar22);
        dateTime2.set(calendar22);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(100L);
        int int28 = dateTime27.getMs();
        java.lang.String str29 = dateTime27.toString();
        java.lang.String str31 = dateTime27.format("         1");
        net.ajaskey.common.DateTime dateTime32 = dateTime2.copy(dateTime27);
        int int33 = dateTime2.getMs();
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((long) (short) 0);
        int int36 = dateTime35.getHour();
        boolean boolean37 = dateTime35.isNull();
        boolean boolean38 = dateTime2.isEqual(dateTime35);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime(100L);
        dateTime40.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime(100L);
        double double51 = dateTime48.getDeltaYears(dateTime50);
        boolean boolean52 = dateTime50.isWeekday();
        java.util.Date date53 = dateTime50.getTime();
        dateTime40.set(dateTime50);
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime(100L);
        double double61 = dateTime58.getDeltaYears(dateTime60);
        int int62 = dateTime58.getHour();
        java.text.SimpleDateFormat simpleDateFormat64 = null;
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat64);
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double68 = dateTime65.getDeltaYears(dateTime67);
        net.ajaskey.common.DateTime dateTime72 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean73 = dateTime67.isEqual(dateTime72);
        java.util.Calendar calendar74 = dateTime67.getCal();
        dateTime58.set(calendar74);
        net.ajaskey.common.DateTime dateTime76 = new net.ajaskey.common.DateTime(calendar74);
        boolean boolean77 = dateTime50.isGreaterThan(dateTime76);
        boolean boolean78 = dateTime2.isGreaterThanOrEqual(dateTime76);
        int int79 = dateTime2.getYear();
        net.ajaskey.common.DateTime dateTime83 = new net.ajaskey.common.DateTime((-1870), 6, (int) (byte) 10);
        int int84 = dateTime83.getMs();
        int int85 = dateTime2.getYears(dateTime83);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(calendar22);
        org.junit.Assert.assertEquals(calendar22.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "31-Dec-1969" + "'", str29, "31-Dec-1969");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "         1" + "'", str31, "         1");
        org.junit.Assert.assertNotNull(dateTime32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 5 + "'", int36 == 5);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-1972.041095890411d) + "'", double51 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(date53);
        org.junit.Assert.assertEquals(date53.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-1972.041095890411d) + "'", double61 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 10 + "'", int62 == 10);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(calendar74);
        org.junit.Assert.assertEquals(calendar74.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1969 + "'", int79 == 1969);
// flaky:         org.junit.Assert.assertTrue("'" + int84 + "' != '" + 765 + "'", int84 == 765);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-99) + "'", int85 == (-99));
    }

    @Test
    public void test7259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7259");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime(100L);
        int int3 = dateTime2.getMs();
        java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdf;
        dateTime2.setSdf(simpleDateFormat4);
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat4);
        java.text.SimpleDateFormat simpleDateFormat8 = null;
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double12 = dateTime9.getDeltaYears(dateTime11);
        boolean boolean13 = dateTime11.isNull();
        java.text.SimpleDateFormat simpleDateFormat15 = null;
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat15);
        dateTime16.set((int) ' ', 0, 11);
        boolean boolean21 = dateTime11.isGreaterThanOrEqual(dateTime16);
        double double22 = dateTime6.getDeltaYears(dateTime11);
        java.text.SimpleDateFormat simpleDateFormat24 = null;
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat24);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double28 = dateTime25.getDeltaYears(dateTime27);
        boolean boolean29 = dateTime27.isNull();
        boolean boolean30 = dateTime11.isGreaterThan(dateTime27);
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean35 = dateTime34.isNull();
        java.lang.String str36 = dateTime34.getDay();
        java.lang.String str37 = dateTime34.getMonth();
        java.lang.String str38 = dateTime34.getDay();
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime(100L);
        double double45 = dateTime42.getDeltaYears(dateTime44);
        boolean boolean46 = dateTime44.isWeekday();
        java.util.Date date47 = dateTime44.getTime();
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime(date47);
        dateTime34.set(date47);
        long long50 = dateTime27.getDeltaDays(dateTime34);
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime(100L);
        double double57 = dateTime54.getDeltaYears(dateTime56);
        java.util.Date date58 = dateTime54.getTime();
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime(date58);
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime(date58);
        dateTime27.set(date58);
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime(date58);
        int int63 = dateTime62.getMinute();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat4);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Thursday" + "'", str36, "Thursday");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "April" + "'", str37, "April");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Thursday" + "'", str38, "Thursday");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-1972.041095890411d) + "'", double45 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(date47);
        org.junit.Assert.assertEquals(date47.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-1972.041095890411d) + "'", double57 == (-1972.041095890411d));
        org.junit.Assert.assertNotNull(date58);
// flaky:         org.junit.Assert.assertEquals(date58.toString(), "Thu Apr 10 10:47:21 MST 2");
// flaky:         org.junit.Assert.assertTrue("'" + int63 + "' != '" + 47 + "'", int63 == 47);
    }

    @Test
    public void test7260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7260");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (byte) 10, (int) (byte) 0, 2);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime(dateTime3);
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("        10", "         1");
        boolean boolean8 = dateTime3.sameDate(dateTime7);
        int int9 = dateTime7.getDayOfYear();
        java.text.SimpleDateFormat simpleDateFormat15 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat16 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("", simpleDateFormat15, simpleDateFormat16);
        java.text.SimpleDateFormat simpleDateFormat19 = null;
        java.text.SimpleDateFormat simpleDateFormat20 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("January", simpleDateFormat19, simpleDateFormat20);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat15, simpleDateFormat20);
        java.text.SimpleDateFormat simpleDateFormat25 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat26 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime("", simpleDateFormat25, simpleDateFormat26);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(100L);
        int int30 = dateTime29.getMs();
        java.text.SimpleDateFormat simpleDateFormat31 = net.ajaskey.common.Utils.sdf;
        dateTime29.setSdf(simpleDateFormat31);
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat26, simpleDateFormat31);
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime("                             100", simpleDateFormat20, simpleDateFormat26);
        java.text.SimpleDateFormat simpleDateFormat37 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat38 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime("", simpleDateFormat37, simpleDateFormat38);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:42:54", simpleDateFormat37);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime("5.00", simpleDateFormat20, simpleDateFormat37);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime("     0", simpleDateFormat20);
        boolean boolean43 = dateTime7.isLessThan(dateTime42);
        net.ajaskey.common.DateTime dateTime45 = dateTime7.parse("Thu 10-Apr-0002 10:43:16");
        // The following exception was thrown during execution in test generation
        try {
            int int46 = dateTime45.getMs();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(simpleDateFormat15);
        org.junit.Assert.assertNotNull(simpleDateFormat16);
        org.junit.Assert.assertNotNull(simpleDateFormat20);
        org.junit.Assert.assertNotNull(simpleDateFormat25);
        org.junit.Assert.assertNotNull(simpleDateFormat26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat31);
        org.junit.Assert.assertNotNull(simpleDateFormat37);
        org.junit.Assert.assertNotNull(simpleDateFormat38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(dateTime45);
    }

    @Test
    public void test7261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7261");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean10 = dateTime4.isEqual(dateTime9);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(100L);
        int int13 = dateTime12.getMs();
        boolean boolean14 = dateTime9.isGreaterThanOrEqual(dateTime12);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(100L);
        dateTime16.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(100L);
        double double27 = dateTime24.getDeltaYears(dateTime26);
        boolean boolean28 = dateTime26.isWeekday();
        java.util.Date date29 = dateTime26.getTime();
        dateTime16.set(dateTime26);
        boolean boolean31 = net.ajaskey.common.Utils.sameDate(dateTime9, dateTime16);
        int int32 = dateTime9.getDayOfYear();
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime(100L);
        dateTime34.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime(100L);
        double double45 = dateTime42.getDeltaYears(dateTime44);
        boolean boolean46 = dateTime44.isWeekday();
        java.util.Date date47 = dateTime44.getTime();
        dateTime34.set(dateTime44);
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime(100L);
        double double55 = dateTime52.getDeltaYears(dateTime54);
        int int56 = dateTime52.getHour();
        java.text.SimpleDateFormat simpleDateFormat58 = null;
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat58);
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double62 = dateTime59.getDeltaYears(dateTime61);
        net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean67 = dateTime61.isEqual(dateTime66);
        java.util.Calendar calendar68 = dateTime61.getCal();
        dateTime52.set(calendar68);
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime(calendar68);
        boolean boolean71 = dateTime44.isGreaterThan(dateTime70);
        boolean boolean72 = dateTime9.isGreaterThan(dateTime44);
        int int73 = dateTime44.getDayOfYear();
        boolean boolean74 = dateTime44.isNull();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-1972.041095890411d) + "'", double27 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(date29);
        org.junit.Assert.assertEquals(date29.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + (-1972.041095890411d) + "'", double45 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(date47);
        org.junit.Assert.assertEquals(date47.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-1972.041095890411d) + "'", double55 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(calendar68);
        org.junit.Assert.assertEquals(calendar68.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 365 + "'", int73 == 365);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test7262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7262");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        int int7 = dateTime3.getHour();
        int int8 = dateTime3.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(100L);
        double double15 = dateTime12.getDeltaYears(dateTime14);
        boolean boolean16 = dateTime14.isWeekday();
        boolean boolean17 = net.ajaskey.common.Utils.sameDate(dateTime3, dateTime14);
        int int18 = dateTime3.getMinute();
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime(100L);
        int int21 = dateTime20.getMs();
        java.lang.String str22 = dateTime20.toString();
        dateTime20.set(25, (-1), (int) (short) 10);
        boolean boolean27 = dateTime3.isEqual(dateTime20);
        int int28 = dateTime3.getDayOfMonth();
        int int29 = dateTime3.getMs();
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean34 = dateTime33.isNull();
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime();
        boolean boolean36 = dateTime33.sameDate(dateTime35);
        dateTime35.set(43, (int) (byte) 1, 12);
        java.util.Date date41 = dateTime35.getTime();
        int int42 = dateTime35.getSecond();
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean47 = dateTime46.isNull();
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime(100L);
        dateTime49.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str54 = dateTime49.getMonth();
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime(100L);
        dateTime56.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str61 = dateTime56.getMonth();
        int int62 = dateTime56.getMs();
        net.ajaskey.common.DateTime dateTime63 = dateTime49.copy(dateTime56);
        boolean boolean64 = dateTime46.isGreaterThanOrEqual(dateTime63);
        double double65 = dateTime35.getDeltaYears(dateTime63);
        boolean boolean66 = net.ajaskey.common.Utils.sameMonth(dateTime3, dateTime63);
        dateTime63.setFirstWorkDay();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10 + "'", int8 == 10);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-1972.041095890411d) + "'", double15 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 47 + "'", int18 == 47);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "31-Dec-1969" + "'", str22, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 10 + "'", int28 == 10);
// flaky:         org.junit.Assert.assertTrue("'" + int29 + "' != '" + 836 + "'", int29 == 836);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(date41);
// flaky:         org.junit.Assert.assertEquals(date41.toString(), "Tue Feb 12 10:47:21 MST 43");
// flaky:         org.junit.Assert.assertTrue("'" + int42 + "' != '" + 21 + "'", int42 == 21);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "January" + "'", str54, "January");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "January" + "'", str61, "January");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        org.junit.Assert.assertNotNull(dateTime63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-56.93150684931507d) + "'", double65 == (-56.93150684931507d));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test7263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7263");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        java.text.SimpleDateFormat simpleDateFormat7 = dateTime3.getSdf();
        java.lang.String str8 = dateTime3.getMonth();
        int int9 = dateTime3.getYear();
        java.util.Date date10 = null;
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(date10);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(100L);
        double double18 = dateTime15.getDeltaYears(dateTime17);
        int int19 = dateTime15.getHour();
        java.text.SimpleDateFormat simpleDateFormat21 = null;
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat21);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double25 = dateTime22.getDeltaYears(dateTime24);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean30 = dateTime24.isEqual(dateTime29);
        java.util.Calendar calendar31 = dateTime24.getCal();
        dateTime15.set(calendar31);
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime(calendar31);
        net.ajaskey.common.DateTime dateTime34 = dateTime11.copy(dateTime33);
        java.text.SimpleDateFormat simpleDateFormat35 = dateTime33.getSdf();
        dateTime3.set(dateTime33);
        net.ajaskey.common.DateTime dateTime37 = null;
        long long38 = dateTime3.getDeltaDays(dateTime37);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime(0, 41, 31);
        boolean boolean43 = dateTime3.isGreaterThanOrEqual(dateTime42);
        java.text.SimpleDateFormat simpleDateFormat44 = dateTime3.getSdf();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "April" + "'", str8, "April");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1972.041095890411d) + "'", double18 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(calendar31);
        org.junit.Assert.assertEquals(calendar31.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(dateTime34);
        org.junit.Assert.assertNull(simpleDateFormat35);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(simpleDateFormat44);
    }

    @Test
    public void test7264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7264");
        java.text.SimpleDateFormat simpleDateFormat1 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat2 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime("", simpleDateFormat1, simpleDateFormat2);
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(100L);
        double double10 = dateTime7.getDeltaYears(dateTime9);
        int int11 = dateTime7.getHour();
        java.text.SimpleDateFormat simpleDateFormat13 = null;
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat13);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double17 = dateTime14.getDeltaYears(dateTime16);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean22 = dateTime16.isEqual(dateTime21);
        java.util.Calendar calendar23 = dateTime16.getCal();
        dateTime7.set(calendar23);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime(calendar23);
        boolean boolean26 = dateTime3.isLessThan(dateTime25);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(100L);
        int int29 = dateTime28.getMs();
        boolean boolean30 = dateTime28.isWeekday();
        int int31 = dateTime28.getHour();
        java.text.SimpleDateFormat simpleDateFormat33 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime("January", simpleDateFormat33);
        dateTime28.setSdf(simpleDateFormat33);
        java.lang.String str36 = dateTime28.toFullString();
        java.lang.String str37 = dateTime28.toFullString();
        boolean boolean38 = dateTime25.isGreaterThan(dateTime28);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime(100L);
        dateTime40.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str45 = dateTime40.getMonth();
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime(100L);
        dateTime47.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str52 = dateTime47.getMonth();
        int int53 = dateTime47.getMs();
        net.ajaskey.common.DateTime dateTime54 = dateTime40.copy(dateTime47);
        boolean boolean55 = dateTime25.isLessThanOrEqual(dateTime54);
        int int56 = dateTime54.getDayOfYear();
        org.junit.Assert.assertNotNull(simpleDateFormat1);
        org.junit.Assert.assertNotNull(simpleDateFormat2);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1972.041095890411d) + "'", double10 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(calendar23);
        org.junit.Assert.assertEquals(calendar23.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 5 + "'", int31 == 5);
        org.junit.Assert.assertNotNull(simpleDateFormat33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str36, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str37, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "January" + "'", str45, "January");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "January" + "'", str52, "January");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 100 + "'", int53 == 100);
        org.junit.Assert.assertNotNull(dateTime54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 4 + "'", int56 == 4);
    }

    @Test
    public void test7265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7265");
        java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readTextFilefalse);
        org.junit.Assert.assertNotNull(strList2);
    }

    @Test
    public void test7266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7266");
        java.util.Map<java.lang.String, java.lang.Integer> strMap0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = net.ajaskey.common.Utils.findName(strMap0, (java.lang.Integer) (-1955));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test7267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7267");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(25, 1, 0);
        boolean boolean6 = net.ajaskey.common.Utils.sameMonth(dateTime1, dateTime5);
        int int7 = dateTime1.getSecond();
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(100L);
        int int10 = dateTime9.getMs();
        java.text.SimpleDateFormat simpleDateFormat11 = net.ajaskey.common.Utils.sdf;
        dateTime9.setSdf(simpleDateFormat11);
        net.ajaskey.common.DateTime dateTime13 = dateTime1.copy(dateTime9);
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(31, 108, 1969);
        java.text.SimpleDateFormat simpleDateFormat22 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat23 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("", simpleDateFormat22, simpleDateFormat23);
        java.text.SimpleDateFormat simpleDateFormat26 = null;
        java.text.SimpleDateFormat simpleDateFormat27 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime("January", simpleDateFormat26, simpleDateFormat27);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat22, simpleDateFormat27);
        java.text.SimpleDateFormat simpleDateFormat32 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat33 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime("", simpleDateFormat32, simpleDateFormat33);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime(100L);
        int int37 = dateTime36.getMs();
        java.text.SimpleDateFormat simpleDateFormat38 = net.ajaskey.common.Utils.sdf;
        dateTime36.setSdf(simpleDateFormat38);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat33, simpleDateFormat38);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime("                             100", simpleDateFormat27, simpleDateFormat33);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime("11", simpleDateFormat27);
        dateTime17.setSdf(simpleDateFormat27);
        java.lang.String str44 = dateTime17.getMonth();
        long long45 = dateTime9.getDeltaDays(dateTime17);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime(100L);
        double double52 = dateTime49.getDeltaYears(dateTime51);
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime(100L);
        double double59 = dateTime56.getDeltaYears(dateTime58);
        int int60 = dateTime56.getHour();
        int int61 = dateTime56.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime(100L);
        double double68 = dateTime65.getDeltaYears(dateTime67);
        boolean boolean69 = dateTime67.isWeekday();
        boolean boolean70 = net.ajaskey.common.Utils.sameDate(dateTime56, dateTime67);
        net.ajaskey.common.DateTime dateTime72 = new net.ajaskey.common.DateTime(100L);
        dateTime72.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime80 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime82 = new net.ajaskey.common.DateTime(100L);
        double double83 = dateTime80.getDeltaYears(dateTime82);
        boolean boolean84 = dateTime82.isWeekday();
        java.util.Date date85 = dateTime82.getTime();
        dateTime72.set(dateTime82);
        int int87 = dateTime72.getYear();
        boolean boolean88 = dateTime67.isGreaterThanOrEqual(dateTime72);
        boolean boolean89 = dateTime49.sameDate(dateTime67);
        boolean boolean90 = dateTime67.isWeekday();
        java.lang.String str91 = dateTime67.getDay();
        int int92 = dateTime17.getYears(dateTime67);
        net.ajaskey.common.DateTime dateTime95 = dateTime67.parse("                                     2", "22-May-0045");
        // The following exception was thrown during execution in test generation
        try {
            int int96 = dateTime95.getDayOfWeek();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat11);
        org.junit.Assert.assertNotNull(dateTime13);
        org.junit.Assert.assertNotNull(simpleDateFormat22);
        org.junit.Assert.assertNotNull(simpleDateFormat23);
        org.junit.Assert.assertNotNull(simpleDateFormat27);
        org.junit.Assert.assertNotNull(simpleDateFormat32);
        org.junit.Assert.assertNotNull(simpleDateFormat33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat38);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "May" + "'", str44, "May");
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 702951L + "'", long45 == 702951L);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-1972.041095890411d) + "'", double52 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-1972.041095890411d) + "'", double59 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 10 + "'", int60 == 10);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 10 + "'", int61 == 10);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-1972.041095890411d) + "'", double68 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-1972.041095890411d) + "'", double83 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(date85);
        org.junit.Assert.assertEquals(date85.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1969 + "'", int87 == 1969);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "Wednesday" + "'", str91, "Wednesday");
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 1924 + "'", int92 == 1924);
        org.junit.Assert.assertNull(dateTime95);
    }

    @Test
    public void test7268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7268");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        java.text.SimpleDateFormat simpleDateFormat10 = dateTime6.getSdf();
        boolean boolean11 = dateTime1.isLessThanOrEqual(dateTime6);
        boolean boolean12 = dateTime1.isWeekday();
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((long) (short) 0);
        int int15 = dateTime14.getHour();
        int int16 = dateTime14.getSecond();
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(100L);
        int int19 = dateTime18.getMs();
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime(100L);
        double double26 = dateTime23.getDeltaYears(dateTime25);
        java.text.SimpleDateFormat simpleDateFormat27 = dateTime23.getSdf();
        boolean boolean28 = dateTime18.isLessThanOrEqual(dateTime23);
        java.text.SimpleDateFormat simpleDateFormat30 = null;
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat30);
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double34 = dateTime31.getDeltaYears(dateTime33);
        boolean boolean35 = dateTime31.isWeekday();
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long40 = dateTime31.getDeltaDays(dateTime39);
        long long41 = dateTime18.getDeltaDays(dateTime39);
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime(100L);
        dateTime43.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean48 = dateTime43.isWeekday();
        int int49 = dateTime18.getYears(dateTime43);
        java.text.SimpleDateFormat simpleDateFormat51 = null;
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat51);
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double55 = dateTime52.getDeltaYears(dateTime54);
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean60 = dateTime54.isEqual(dateTime59);
        int int61 = dateTime54.getDayOfWeek();
        boolean boolean62 = dateTime43.isLessThan(dateTime54);
        long long63 = dateTime14.getDeltaMilliSeconds(dateTime43);
        dateTime14.add(13, 12);
        boolean boolean67 = dateTime1.isLessThanOrEqual(dateTime14);
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime(12, 42, (int) (byte) 1);
        java.util.Calendar calendar72 = dateTime71.getCal();
        net.ajaskey.common.DateTime dateTime73 = new net.ajaskey.common.DateTime(calendar72);
        dateTime1.set(calendar72);
        net.ajaskey.common.DateTime dateTime75 = new net.ajaskey.common.DateTime(calendar72);
        net.ajaskey.common.DateTime dateTime77 = dateTime75.parse("Thu 10-Apr-0002 10:44:52");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-1972.041095890411d) + "'", double26 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 719795L + "'", long41 == 719795L);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1870) + "'", int49 == (-1870));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 4 + "'", int61 == 4);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + (-59011286399900L) + "'", long63 == (-59011286399900L));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(calendar72);
// flaky:         org.junit.Assert.assertEquals(calendar72.toString(), "java.util.GregorianCalendar[time=-61678303958068,areFieldsSet=true,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=15,MONTH=6,WEEK_OF_YEAR=27,WEEK_OF_MONTH=1,DAY_OF_MONTH=1,DAY_OF_YEAR=182,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=1,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=21,MILLISECOND=932,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNull(dateTime77);
    }

    @Test
    public void test7269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7269");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        long long6 = dateTime3.getDeltaDays(dateTime5);
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(100L);
        double double13 = dateTime10.getDeltaYears(dateTime12);
        java.util.Date date14 = dateTime10.getTime();
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(date14);
        net.ajaskey.common.DateTime dateTime18 = dateTime15.parse("31-Dec-1969", "January");
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime(100L);
        int int21 = dateTime20.getMs();
        java.lang.String str22 = dateTime20.toString();
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(100L);
        double double29 = dateTime26.getDeltaYears(dateTime28);
        int int30 = dateTime26.getHour();
        int int31 = dateTime26.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(100L);
        double double38 = dateTime35.getDeltaYears(dateTime37);
        boolean boolean39 = dateTime37.isWeekday();
        boolean boolean40 = net.ajaskey.common.Utils.sameDate(dateTime26, dateTime37);
        boolean boolean41 = net.ajaskey.common.Utils.sameDate(dateTime20, dateTime26);
        dateTime15.set(dateTime26);
        java.util.Calendar calendar43 = dateTime26.getCal();
        boolean boolean44 = dateTime3.isLessThan(dateTime26);
        dateTime3.set(941, 14, (-2005));
        dateTime3.setFirstWorkDay();
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-719795L) + "'", long6 == (-719795L));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-1972.041095890411d) + "'", double13 == (-1972.041095890411d));
        org.junit.Assert.assertNotNull(date14);
// flaky:         org.junit.Assert.assertEquals(date14.toString(), "Thu Apr 10 10:47:21 MST 2");
        org.junit.Assert.assertNull(dateTime18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "31-Dec-1969" + "'", str22, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-1972.041095890411d) + "'", double29 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10 + "'", int31 == 10);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1972.041095890411d) + "'", double38 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(calendar43);
// flaky:         org.junit.Assert.assertEquals(calendar43.toString(), "java.util.GregorianCalendar[time=-62190310358045,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=21,MILLISECOND=955,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
// flaky:         org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test7270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7270");
        java.lang.String str2 = net.ajaskey.common.Utils.ifmt(881, 102);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                                                                                   881" + "'", str2, "                                                                                                   881");
    }

    @Test
    public void test7271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7271");
        net.ajaskey.common.DateTime dateTime0 = null;
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(dateTime0);
        java.lang.String str3 = dateTime1.format("     5.00");
        net.ajaskey.common.DateTime dateTime4 = null;
        long long5 = dateTime1.getDeltaDays(dateTime4);
        java.lang.String str6 = dateTime1.format();
        java.lang.String str7 = dateTime1.format();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "     5.00" + "'", str3, "     5.00");
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "BAD-DATE-FORMAT" + "'", str6, "BAD-DATE-FORMAT");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "BAD-DATE-FORMAT" + "'", str7, "BAD-DATE-FORMAT");
    }

    @Test
    public void test7272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7272");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean10 = dateTime4.isEqual(dateTime9);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(100L);
        int int13 = dateTime12.getMs();
        boolean boolean14 = dateTime9.isGreaterThanOrEqual(dateTime12);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(100L);
        int int17 = dateTime16.getMs();
        int int18 = dateTime16.getHour();
        java.text.SimpleDateFormat simpleDateFormat20 = null;
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat20);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double24 = dateTime21.getDeltaYears(dateTime23);
        boolean boolean25 = dateTime21.isWeekday();
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long30 = dateTime21.getDeltaDays(dateTime29);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(dateTime21);
        boolean boolean32 = dateTime16.isLessThanOrEqual(dateTime31);
        boolean boolean33 = net.ajaskey.common.Utils.sameDate(dateTime12, dateTime31);
        int int34 = dateTime31.getSecond();
        java.lang.String str35 = dateTime31.format();
        net.ajaskey.common.DateTime dateTime37 = dateTime31.parse("Thu 10-Apr-0002 10:43:33");
        // The following exception was thrown during execution in test generation
        try {
            dateTime37.add((-1933), (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int34 + "' != '" + 22 + "'", int34 == 22);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "BAD-DATE-FORMAT" + "'", str35, "BAD-DATE-FORMAT");
        org.junit.Assert.assertNull(dateTime37);
    }

    @Test
    public void test7273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7273");
        java.util.Date date0 = null;
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(date0);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime(100L);
        double double8 = dateTime5.getDeltaYears(dateTime7);
        int int9 = dateTime5.getHour();
        java.text.SimpleDateFormat simpleDateFormat11 = null;
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat11);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double15 = dateTime12.getDeltaYears(dateTime14);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean20 = dateTime14.isEqual(dateTime19);
        java.util.Calendar calendar21 = dateTime14.getCal();
        dateTime5.set(calendar21);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime(calendar21);
        net.ajaskey.common.DateTime dateTime24 = dateTime1.copy(dateTime23);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime(100L);
        double double31 = dateTime28.getDeltaYears(dateTime30);
        boolean boolean32 = dateTime30.isWeekday();
        int int33 = dateTime30.getDayOfYear();
        long long34 = dateTime24.getDeltaMilliSeconds(dateTime30);
        java.util.Calendar calendar35 = dateTime24.getCal();
        java.util.Date date36 = dateTime24.getTime();
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(date36);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime(date36);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime(345, 31, 31);
        java.lang.String str43 = dateTime42.getDay();
        boolean boolean44 = dateTime38.sameDate(dateTime42);
        dateTime38.set(0, (-1969), 213);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-1972.041095890411d) + "'", double8 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(calendar21);
        org.junit.Assert.assertEquals(calendar21.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(dateTime24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-1972.041095890411d) + "'", double31 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 365 + "'", int33 == 365);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 100L + "'", long34 == 100L);
        org.junit.Assert.assertNotNull(calendar35);
        org.junit.Assert.assertEquals(calendar35.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(date36);
        org.junit.Assert.assertEquals(date36.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Monday" + "'", str43, "Monday");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test7274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7274");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(510, (int) (byte) -1, 59);
        int int4 = dateTime3.getDayOfYear();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 28 + "'", int4 == 28);
    }

    @Test
    public void test7275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7275");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean10 = dateTime4.isEqual(dateTime9);
        int int11 = dateTime4.getDayOfMonth();
        int int12 = dateTime4.getHour();
        boolean boolean13 = dateTime4.isWeekday();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 31 + "'", int11 == 31);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test7276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7276");
        net.ajaskey.common.TextUtils.printline("July");
    }

    @Test
    public void test7277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7277");
        java.lang.String str2 = net.ajaskey.common.Utils.fmt((double) 791, 19);
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Invalid fmt" + "'", str2, "Invalid fmt");
    }

    @Test
    public void test7278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7278");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        dateTime1.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
        double double12 = dateTime9.getDeltaYears(dateTime11);
        boolean boolean13 = dateTime11.isWeekday();
        java.util.Date date14 = dateTime11.getTime();
        dateTime1.set(dateTime11);
        int int16 = dateTime1.getYear();
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(100L);
        int int19 = dateTime18.getMs();
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime(100L);
        double double26 = dateTime23.getDeltaYears(dateTime25);
        java.text.SimpleDateFormat simpleDateFormat27 = dateTime23.getSdf();
        boolean boolean28 = dateTime18.isLessThanOrEqual(dateTime23);
        boolean boolean29 = dateTime23.isWeekday();
        boolean boolean30 = dateTime23.isWeekday();
        boolean boolean31 = dateTime1.sameDate(dateTime23);
        java.lang.String str32 = dateTime23.toString();
        java.util.Calendar calendar33 = dateTime23.getCal();
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime(100L);
        long long40 = dateTime37.getDeltaDays(dateTime39);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime(100L);
        int int43 = dateTime42.getMs();
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime(100L);
        double double50 = dateTime47.getDeltaYears(dateTime49);
        java.text.SimpleDateFormat simpleDateFormat51 = dateTime47.getSdf();
        boolean boolean52 = dateTime42.isLessThanOrEqual(dateTime47);
        java.text.SimpleDateFormat simpleDateFormat54 = null;
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat54);
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double58 = dateTime55.getDeltaYears(dateTime57);
        boolean boolean59 = dateTime55.isWeekday();
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long64 = dateTime55.getDeltaDays(dateTime63);
        long long65 = dateTime42.getDeltaDays(dateTime63);
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime(100L);
        dateTime67.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean72 = dateTime67.isWeekday();
        int int73 = dateTime42.getYears(dateTime67);
        net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime79 = new net.ajaskey.common.DateTime(100L);
        double double80 = dateTime77.getDeltaYears(dateTime79);
        int int81 = dateTime77.getHour();
        java.text.SimpleDateFormat simpleDateFormat83 = null;
        net.ajaskey.common.DateTime dateTime84 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat83);
        net.ajaskey.common.DateTime dateTime86 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double87 = dateTime84.getDeltaYears(dateTime86);
        net.ajaskey.common.DateTime dateTime91 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean92 = dateTime86.isEqual(dateTime91);
        java.util.Calendar calendar93 = dateTime86.getCal();
        dateTime77.set(calendar93);
        dateTime42.set(calendar93);
        long long96 = dateTime39.getDeltaMilliSeconds(dateTime42);
        boolean boolean97 = dateTime23.isGreaterThan(dateTime42);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1972.041095890411d) + "'", double12 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(date14);
        org.junit.Assert.assertEquals(date14.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1969 + "'", int16 == 1969);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-1972.041095890411d) + "'", double26 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "10-Apr-0002" + "'", str32, "10-Apr-0002");
        org.junit.Assert.assertNotNull(calendar33);
// flaky:         org.junit.Assert.assertEquals(calendar33.toString(), "java.util.GregorianCalendar[time=-62190310357892,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=22,MILLISECOND=108,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-719795L) + "'", long40 == (-719795L));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + (-1972.041095890411d) + "'", double50 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 0L + "'", long64 == 0L);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 719795L + "'", long65 == 719795L);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1870) + "'", int73 == (-1870));
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + (-1972.041095890411d) + "'", double80 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 10 + "'", int81 == 10);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(calendar93);
        org.junit.Assert.assertEquals(calendar93.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + long96 + "' != '" + (-100L) + "'", long96 == (-100L));
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test7279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7279");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(594, 26, 189);
        java.text.SimpleDateFormat simpleDateFormat5 = null;
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat5);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean14 = dateTime8.isEqual(dateTime13);
        java.util.Calendar calendar15 = dateTime8.getCal();
        java.lang.String str16 = dateTime8.format();
        net.ajaskey.common.DateTime dateTime17 = null;
        long long18 = dateTime8.getDeltaDays(dateTime17);
        int int19 = dateTime8.getSecond();
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime(100L);
        double double26 = dateTime23.getDeltaYears(dateTime25);
        java.text.SimpleDateFormat simpleDateFormat28 = null;
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat28);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double32 = dateTime29.getDeltaYears(dateTime31);
        boolean boolean33 = dateTime29.isWeekday();
        boolean boolean34 = dateTime23.sameDate(dateTime29);
        int int35 = dateTime29.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime36 = dateTime8.copy(dateTime29);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime(100L);
        int int39 = dateTime38.getMs();
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(100L);
        double double46 = dateTime43.getDeltaYears(dateTime45);
        java.text.SimpleDateFormat simpleDateFormat47 = dateTime43.getSdf();
        boolean boolean48 = dateTime38.isLessThanOrEqual(dateTime43);
        java.text.SimpleDateFormat simpleDateFormat50 = null;
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat50);
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double54 = dateTime51.getDeltaYears(dateTime53);
        boolean boolean55 = dateTime51.isWeekday();
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long60 = dateTime51.getDeltaDays(dateTime59);
        long long61 = dateTime38.getDeltaDays(dateTime59);
        java.lang.String str62 = dateTime59.toFullString();
        java.util.Calendar calendar63 = dateTime59.getCal();
        dateTime8.set(calendar63);
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime(calendar63);
        java.text.SimpleDateFormat simpleDateFormat67 = null;
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat67);
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double71 = dateTime68.getDeltaYears(dateTime70);
        boolean boolean72 = dateTime68.isWeekday();
        net.ajaskey.common.DateTime dateTime76 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long77 = dateTime68.getDeltaDays(dateTime76);
        dateTime76.set((int) (short) -1, (int) (byte) 0, (int) ' ');
        java.lang.String str82 = dateTime76.getDay();
        net.ajaskey.common.DateTime dateTime83 = new net.ajaskey.common.DateTime(dateTime76);
        boolean boolean84 = net.ajaskey.common.Utils.sameDate(dateTime65, dateTime76);
        int int85 = dateTime76.getMs();
        net.ajaskey.common.DateTime dateTime86 = new net.ajaskey.common.DateTime(dateTime76);
        boolean boolean87 = net.ajaskey.common.Utils.sameDate(dateTime3, dateTime86);
        java.lang.String str88 = dateTime3.format();
        java.lang.Class<?> wildcardClass89 = dateTime3.getClass();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(calendar15);
// flaky:         org.junit.Assert.assertEquals(calendar15.toString(), "java.util.GregorianCalendar[time=-62190310357866,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=22,MILLISECOND=134,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "BAD-DATE-FORMAT" + "'", str16, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-1972.041095890411d) + "'", double26 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(dateTime36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-1972.041095890411d) + "'", double46 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 719795L + "'", long61 == 719795L);
// flaky:         org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Thu 10-Apr-0002 10:47:22" + "'", str62, "Thu 10-Apr-0002 10:47:22");
        org.junit.Assert.assertNotNull(calendar63);
// flaky:         org.junit.Assert.assertEquals(calendar63.toString(), "java.util.GregorianCalendar[time=-62190310357866,areFieldsSet=true,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=22,MILLISECOND=134,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 0L + "'", long77 == 0L);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "Wednesday" + "'", str82, "Wednesday");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int85 + "' != '" + 134 + "'", int85 == 134);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "BAD-DATE-FORMAT" + "'", str88, "BAD-DATE-FORMAT");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test7280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7280");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("5.00", "     10");
        dateTime2.add((int) (short) 0, (int) 'a');
        int int6 = dateTime2.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        int int9 = dateTime8.getMs();
        int int10 = dateTime8.getHour();
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat16 = null;
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double20 = dateTime17.getDeltaYears(dateTime19);
        boolean boolean21 = dateTime14.isLessThan(dateTime19);
        java.lang.String str22 = dateTime19.toFullString();
        dateTime19.add(10, (int) (byte) -1);
        java.text.SimpleDateFormat simpleDateFormat27 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat29 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat30 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime("", simpleDateFormat29, simpleDateFormat30);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat27, simpleDateFormat30);
        boolean boolean33 = dateTime19.isGreaterThan(dateTime32);
        boolean boolean34 = dateTime8.isEqual(dateTime19);
        net.ajaskey.common.DateTime dateTime35 = null;
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime(dateTime35);
        dateTime36.set(42, 10, 10);
        java.util.Date date41 = dateTime36.getTime();
        net.ajaskey.common.DateTime dateTime42 = dateTime8.copy(dateTime36);
        net.ajaskey.common.DateTime dateTime43 = dateTime2.copy(dateTime8);
        java.text.SimpleDateFormat simpleDateFormat45 = null;
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat45);
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double49 = dateTime46.getDeltaYears(dateTime48);
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean54 = dateTime48.isEqual(dateTime53);
        java.util.Calendar calendar55 = dateTime48.getCal();
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime(1, (int) '4', 5);
        double double60 = dateTime48.getDeltaYears(dateTime59);
        double double61 = dateTime43.getDeltaYears(dateTime59);
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime(100L);
        long long72 = dateTime69.getDeltaDays(dateTime71);
        int int73 = dateTime69.getHour();
        dateTime69.add((int) (byte) 100, (int) (byte) 0);
        double double77 = dateTime65.getDeltaYears(dateTime69);
        java.lang.String str78 = dateTime69.toFullString();
        java.lang.String str79 = dateTime69.toFullString();
        net.ajaskey.common.DateTime dateTime80 = new net.ajaskey.common.DateTime(dateTime69);
        boolean boolean81 = dateTime59.isLessThanOrEqual(dateTime69);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str22, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertNotNull(simpleDateFormat27);
        org.junit.Assert.assertNotNull(simpleDateFormat29);
        org.junit.Assert.assertNotNull(simpleDateFormat30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(date41);
// flaky:         org.junit.Assert.assertEquals(date41.toString(), "Sat Nov 10 10:47:22 MST 42");
        org.junit.Assert.assertNotNull(dateTime42);
        org.junit.Assert.assertNotNull(dateTime43);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(calendar55);
        org.junit.Assert.assertEquals(calendar55.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1965.9671232876713d + "'", double60 == 1965.9671232876713d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1965.9671232876713d + "'", double61 == 1965.9671232876713d);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + (-719795L) + "'", long72 == (-719795L));
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 10 + "'", int73 == 10);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str78 + "' != '" + "Thu 10-Apr-0002 10:47:22" + "'", str78, "Thu 10-Apr-0002 10:47:22");
// flaky:         org.junit.Assert.assertEquals("'" + str79 + "' != '" + "Thu 10-Apr-0002 10:47:22" + "'", str79, "Thu 10-Apr-0002 10:47:22");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test7281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7281");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        java.lang.String str3 = dateTime1.toString();
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(100L);
        double double10 = dateTime7.getDeltaYears(dateTime9);
        int int11 = dateTime7.getHour();
        int int12 = dateTime7.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(100L);
        double double19 = dateTime16.getDeltaYears(dateTime18);
        boolean boolean20 = dateTime18.isWeekday();
        boolean boolean21 = net.ajaskey.common.Utils.sameDate(dateTime7, dateTime18);
        boolean boolean22 = net.ajaskey.common.Utils.sameDate(dateTime1, dateTime7);
        net.ajaskey.common.DateTime dateTime23 = null;
        boolean boolean24 = dateTime7.isLessThanOrEqual(dateTime23);
        java.lang.String str25 = dateTime7.getDay();
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime(100L);
        double double34 = dateTime31.getDeltaYears(dateTime33);
        int int35 = dateTime31.getHour();
        dateTime31.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat40 = null;
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat40);
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double44 = dateTime41.getDeltaYears(dateTime43);
        boolean boolean45 = dateTime31.isEqual(dateTime43);
        java.text.SimpleDateFormat simpleDateFormat47 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat49 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat50 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime("", simpleDateFormat49, simpleDateFormat50);
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat47, simpleDateFormat50);
        dateTime31.setSdf(simpleDateFormat47);
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat60 = null;
        java.text.SimpleDateFormat simpleDateFormat61 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime("January", simpleDateFormat60, simpleDateFormat61);
        java.text.SimpleDateFormat simpleDateFormat65 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime("January", simpleDateFormat65);
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime("", simpleDateFormat65);
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime("", simpleDateFormat61, simpleDateFormat65);
        dateTime57.setSdf(simpleDateFormat61);
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime("December", simpleDateFormat47, simpleDateFormat61);
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime("5.00", simpleDateFormat61);
        dateTime7.setSdf(simpleDateFormat61);
        java.text.SimpleDateFormat simpleDateFormat73 = dateTime7.getSdf();
        java.lang.String str74 = dateTime7.getDay();
        java.text.SimpleDateFormat simpleDateFormat76 = null;
        net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat76);
        net.ajaskey.common.DateTime dateTime79 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double80 = dateTime77.getDeltaYears(dateTime79);
        net.ajaskey.common.DateTime dateTime81 = new net.ajaskey.common.DateTime(dateTime77);
        java.text.SimpleDateFormat simpleDateFormat82 = dateTime77.getSdf();
        boolean boolean83 = dateTime77.isNull();
        net.ajaskey.common.DateTime dateTime86 = new net.ajaskey.common.DateTime(100L);
        int int87 = dateTime86.getMs();
        java.text.SimpleDateFormat simpleDateFormat88 = net.ajaskey.common.Utils.sdf;
        dateTime86.setSdf(simpleDateFormat88);
        net.ajaskey.common.DateTime dateTime90 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat88);
        net.ajaskey.common.DateTime dateTime92 = new net.ajaskey.common.DateTime((long) 53);
        boolean boolean93 = dateTime92.isWeekday();
        boolean boolean94 = dateTime90.sameDate(dateTime92);
        java.util.Date date95 = dateTime92.getTime();
        net.ajaskey.common.DateTime dateTime96 = new net.ajaskey.common.DateTime(date95);
        net.ajaskey.common.DateTime dateTime97 = new net.ajaskey.common.DateTime(date95);
        dateTime77.set(date95);
        boolean boolean99 = dateTime7.isLessThanOrEqual(dateTime77);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "31-Dec-1969" + "'", str3, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1972.041095890411d) + "'", double10 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-1972.041095890411d) + "'", double19 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Thursday" + "'", str25, "Thursday");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-1972.041095890411d) + "'", double34 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(simpleDateFormat47);
        org.junit.Assert.assertNotNull(simpleDateFormat49);
        org.junit.Assert.assertNotNull(simpleDateFormat50);
        org.junit.Assert.assertNotNull(simpleDateFormat61);
        org.junit.Assert.assertNotNull(simpleDateFormat65);
        org.junit.Assert.assertNotNull(simpleDateFormat73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Thursday" + "'", str74, "Thursday");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertNull(simpleDateFormat82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 100 + "'", int87 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat88);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(date95);
        org.junit.Assert.assertEquals(date95.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test7282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7282");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean10 = dateTime4.isEqual(dateTime9);
        java.lang.String str11 = dateTime9.getDay();
        net.ajaskey.common.DateTime dateTime13 = dateTime9.parse("                                      1");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = dateTime13.getDay();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Thursday" + "'", str11, "Thursday");
        org.junit.Assert.assertNull(dateTime13);
    }

    @Test
    public void test7283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7283");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(25, 17, 1869);
        java.util.Calendar calendar4 = null;
        dateTime3.set(calendar4);
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime(dateTime3);
        int int7 = dateTime3.getDayOfMonth();
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 13 + "'", int7 == 13);
    }

    @Test
    public void test7284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7284");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean10 = dateTime4.isEqual(dateTime9);
        int int11 = dateTime4.getDayOfWeek();
        int int12 = dateTime4.getDayOfWeek();
        int int13 = dateTime4.getDayOfYear();
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(100L);
        int int16 = dateTime15.getMs();
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(100L);
        double double23 = dateTime20.getDeltaYears(dateTime22);
        java.text.SimpleDateFormat simpleDateFormat24 = dateTime20.getSdf();
        boolean boolean25 = dateTime15.isLessThanOrEqual(dateTime20);
        int int26 = dateTime15.getDayOfMonth();
        int int27 = dateTime15.getSecond();
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(100L);
        int int30 = dateTime29.getMs();
        java.text.SimpleDateFormat simpleDateFormat31 = net.ajaskey.common.Utils.sdf;
        dateTime29.setSdf(simpleDateFormat31);
        int int33 = dateTime29.getDayOfWeek();
        java.text.SimpleDateFormat simpleDateFormat34 = dateTime29.getSdf();
        java.util.Date date35 = dateTime29.getTime();
        dateTime15.set(date35);
        dateTime4.set(date35);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 4 + "'", int11 == 4);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 4 + "'", int12 == 4);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 365 + "'", int13 == 365);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-1972.041095890411d) + "'", double23 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 31 + "'", int26 == 31);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 4 + "'", int33 == 4);
        org.junit.Assert.assertNotNull(simpleDateFormat34);
        org.junit.Assert.assertNotNull(date35);
        org.junit.Assert.assertEquals(date35.toString(), "Wed Dec 31 17:00:00 MST 1969");
    }

    @Test
    public void test7285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7285");
        net.ajaskey.common.Utils.TAB = "Thu 10-Apr-0002 10:46:55";
    }

    @Test
    public void test7286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7286");
        java.text.SimpleDateFormat simpleDateFormat2 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime("January", simpleDateFormat2);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime("", simpleDateFormat2);
        dateTime4.setFirstWorkDay();
        int int6 = dateTime4.getMs();
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(100L);
        double double13 = dateTime10.getDeltaYears(dateTime12);
        java.text.SimpleDateFormat simpleDateFormat15 = null;
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat15);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double19 = dateTime16.getDeltaYears(dateTime18);
        boolean boolean20 = dateTime16.isWeekday();
        boolean boolean21 = dateTime10.sameDate(dateTime16);
        java.text.SimpleDateFormat simpleDateFormat23 = null;
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat23);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double27 = dateTime24.getDeltaYears(dateTime26);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean32 = dateTime26.isEqual(dateTime31);
        dateTime10.set(dateTime31);
        java.lang.String str34 = dateTime31.toString();
        dateTime4.set(dateTime31);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime((long) (byte) 100);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime(25, 1, 0);
        boolean boolean42 = net.ajaskey.common.Utils.sameMonth(dateTime37, dateTime41);
        int int43 = dateTime37.getSecond();
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(100L);
        int int46 = dateTime45.getMs();
        java.text.SimpleDateFormat simpleDateFormat47 = net.ajaskey.common.Utils.sdf;
        dateTime45.setSdf(simpleDateFormat47);
        net.ajaskey.common.DateTime dateTime49 = dateTime37.copy(dateTime45);
        java.lang.String str50 = dateTime45.toFullString();
        double double51 = dateTime31.getDeltaYears(dateTime45);
        boolean boolean52 = dateTime31.isNull();
        net.ajaskey.common.DateTime dateTime53 = null;
        double double54 = dateTime31.getDeltaYears(dateTime53);
        org.junit.Assert.assertNotNull(simpleDateFormat2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-1972.041095890411d) + "'", double13 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "10-Apr-0002" + "'", str34, "10-Apr-0002");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat47);
        org.junit.Assert.assertNotNull(dateTime49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str50, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-1972.041095890411d) + "'", double51 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
    }

    @Test
    public void test7287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7287");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        boolean boolean7 = dateTime5.isWeekday();
        java.util.Date date8 = dateTime5.getTime();
        int int9 = dateTime5.getDayOfWeek();
        java.lang.String str10 = dateTime5.getMonth();
        java.lang.String str11 = dateTime5.getDay();
        net.ajaskey.common.DateTime dateTime12 = null;
        long long13 = dateTime5.getDeltaDays(dateTime12);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(dateTime5);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((-289304L));
        boolean boolean17 = dateTime5.isEqual(dateTime16);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(date8);
        org.junit.Assert.assertEquals(date8.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 4 + "'", int9 == 4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "December" + "'", str10, "December");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Wednesday" + "'", str11, "Wednesday");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test7288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7288");
        java.text.SimpleDateFormat simpleDateFormat3 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat3);
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime(100L);
        int int7 = dateTime6.getMs();
        java.lang.String str8 = dateTime6.toString();
        java.util.Date date9 = dateTime6.getTime();
        int int10 = dateTime6.getDayOfYear();
        java.text.SimpleDateFormat simpleDateFormat12 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat13 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime("", simpleDateFormat12, simpleDateFormat13);
        dateTime6.setSdf(simpleDateFormat12);
        dateTime4.setSdf(simpleDateFormat12);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime(100L);
        double double26 = dateTime23.getDeltaYears(dateTime25);
        int int27 = dateTime23.getHour();
        dateTime23.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat32 = null;
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat32);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double36 = dateTime33.getDeltaYears(dateTime35);
        boolean boolean37 = dateTime23.isEqual(dateTime35);
        java.text.SimpleDateFormat simpleDateFormat39 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat41 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat42 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime("", simpleDateFormat41, simpleDateFormat42);
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat39, simpleDateFormat42);
        dateTime23.setSdf(simpleDateFormat39);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat52 = null;
        java.text.SimpleDateFormat simpleDateFormat53 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime("January", simpleDateFormat52, simpleDateFormat53);
        java.text.SimpleDateFormat simpleDateFormat57 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime("January", simpleDateFormat57);
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime("", simpleDateFormat57);
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime("", simpleDateFormat53, simpleDateFormat57);
        dateTime49.setSdf(simpleDateFormat53);
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime("December", simpleDateFormat39, simpleDateFormat53);
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime("5.00", simpleDateFormat53);
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime(100L);
        int int66 = dateTime65.getMs();
        java.text.SimpleDateFormat simpleDateFormat67 = net.ajaskey.common.Utils.sdf;
        dateTime65.setSdf(simpleDateFormat67);
        int int69 = dateTime65.getDayOfWeek();
        java.text.SimpleDateFormat simpleDateFormat70 = dateTime65.getSdf();
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime("Sat 04-Jan-0100 17:00:00", simpleDateFormat53, simpleDateFormat70);
        net.ajaskey.common.DateTime dateTime72 = new net.ajaskey.common.DateTime("                             365", simpleDateFormat12, simpleDateFormat70);
        net.ajaskey.common.DateTime dateTime73 = new net.ajaskey.common.DateTime("", simpleDateFormat70);
        java.text.SimpleDateFormat simpleDateFormat74 = null;
        dateTime73.setSdf(simpleDateFormat74);
        org.junit.Assert.assertNotNull(simpleDateFormat3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "31-Dec-1969" + "'", str8, "31-Dec-1969");
        org.junit.Assert.assertNotNull(date9);
        org.junit.Assert.assertEquals(date9.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 365 + "'", int10 == 365);
        org.junit.Assert.assertNotNull(simpleDateFormat12);
        org.junit.Assert.assertNotNull(simpleDateFormat13);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-1972.041095890411d) + "'", double26 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 10 + "'", int27 == 10);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(simpleDateFormat39);
        org.junit.Assert.assertNotNull(simpleDateFormat41);
        org.junit.Assert.assertNotNull(simpleDateFormat42);
        org.junit.Assert.assertNotNull(simpleDateFormat53);
        org.junit.Assert.assertNotNull(simpleDateFormat57);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 4 + "'", int69 == 4);
        org.junit.Assert.assertNotNull(simpleDateFormat70);
    }

    @Test
    public void test7289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7289");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(530, 1959, 46);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
        double double12 = dateTime9.getDeltaYears(dateTime11);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(100L);
        double double19 = dateTime16.getDeltaYears(dateTime18);
        int int20 = dateTime16.getHour();
        int int21 = dateTime16.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(100L);
        double double28 = dateTime25.getDeltaYears(dateTime27);
        boolean boolean29 = dateTime27.isWeekday();
        boolean boolean30 = net.ajaskey.common.Utils.sameDate(dateTime16, dateTime27);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime(100L);
        dateTime32.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime(100L);
        double double43 = dateTime40.getDeltaYears(dateTime42);
        boolean boolean44 = dateTime42.isWeekday();
        java.util.Date date45 = dateTime42.getTime();
        dateTime32.set(dateTime42);
        int int47 = dateTime32.getYear();
        boolean boolean48 = dateTime27.isGreaterThanOrEqual(dateTime32);
        boolean boolean49 = dateTime9.sameDate(dateTime27);
        net.ajaskey.common.DateTime dateTime50 = dateTime5.copy(dateTime9);
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime(100L);
        long long57 = dateTime54.getDeltaDays(dateTime56);
        int int58 = dateTime54.getHour();
        dateTime54.add((int) (byte) 100, (int) (byte) 0);
        net.ajaskey.common.DateTime dateTime63 = dateTime54.parse("10-Apr-0002");
        int int64 = dateTime54.getDayOfMonth();
        boolean boolean65 = dateTime9.isLessThan(dateTime54);
        java.text.SimpleDateFormat simpleDateFormat66 = dateTime9.getSdf();
        dateTime9.add(189, 137);
        boolean boolean70 = net.ajaskey.common.Utils.sameDate(dateTime3, dateTime9);
        net.ajaskey.common.DateTime dateTime71 = null;
        boolean boolean72 = dateTime3.isEqual(dateTime71);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1972.041095890411d) + "'", double12 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-1972.041095890411d) + "'", double19 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + (-1972.041095890411d) + "'", double28 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-1972.041095890411d) + "'", double43 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(date45);
        org.junit.Assert.assertEquals(date45.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1969 + "'", int47 == 1969);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(dateTime50);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-719795L) + "'", long57 == (-719795L));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 10 + "'", int58 == 10);
        org.junit.Assert.assertNull(dateTime63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 10 + "'", int64 == 10);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(simpleDateFormat66);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test7290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7290");
        java.text.SimpleDateFormat simpleDateFormat8 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat10 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat11 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime("", simpleDateFormat10, simpleDateFormat11);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat8, simpleDateFormat11);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime("10-Apr-0002", simpleDateFormat11);
        java.text.SimpleDateFormat simpleDateFormat17 = null;
        java.text.SimpleDateFormat simpleDateFormat18 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime("January", simpleDateFormat17, simpleDateFormat18);
        java.text.SimpleDateFormat simpleDateFormat22 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime("January", simpleDateFormat22);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("", simpleDateFormat22);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("", simpleDateFormat18, simpleDateFormat22);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime("January                                                                                               52.00                                                                                               52.00                                                                                               52.00                                                                                               52.00hi!                                                                                               52.00", simpleDateFormat11, simpleDateFormat22);
        java.text.SimpleDateFormat simpleDateFormat28 = null;
        java.text.SimpleDateFormat simpleDateFormat29 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime("January", simpleDateFormat28, simpleDateFormat29);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime("December", simpleDateFormat22, simpleDateFormat29);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:43:00", simpleDateFormat29);
        java.text.SimpleDateFormat simpleDateFormat35 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat36 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime("", simpleDateFormat35, simpleDateFormat36);
        java.text.SimpleDateFormat simpleDateFormat39 = null;
        java.text.SimpleDateFormat simpleDateFormat40 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime("January", simpleDateFormat39, simpleDateFormat40);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat35, simpleDateFormat40);
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime("JanuaryDecemberDecember                                                                                               52.00Decemberhi!December", simpleDateFormat29, simpleDateFormat35);
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime("             1", simpleDateFormat35);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime("                                                                                              100", "100");
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime(100L);
        int int51 = dateTime50.getMs();
        java.text.SimpleDateFormat simpleDateFormat52 = net.ajaskey.common.Utils.sdf;
        dateTime50.setSdf(simpleDateFormat52);
        java.text.SimpleDateFormat simpleDateFormat54 = net.ajaskey.common.Utils.sdfFull;
        dateTime50.setSdf(simpleDateFormat54);
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime("Mon 10-Apr-0002 00:00:00", simpleDateFormat54);
        dateTime47.setSdf(simpleDateFormat54);
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime("-62,190,310,579,395", simpleDateFormat35, simpleDateFormat54);
        org.junit.Assert.assertNotNull(simpleDateFormat8);
        org.junit.Assert.assertNotNull(simpleDateFormat10);
        org.junit.Assert.assertNotNull(simpleDateFormat11);
        org.junit.Assert.assertNotNull(simpleDateFormat18);
        org.junit.Assert.assertNotNull(simpleDateFormat22);
        org.junit.Assert.assertNotNull(simpleDateFormat29);
        org.junit.Assert.assertNotNull(simpleDateFormat35);
        org.junit.Assert.assertNotNull(simpleDateFormat36);
        org.junit.Assert.assertNotNull(simpleDateFormat40);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 100 + "'", int51 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat52);
        org.junit.Assert.assertNotNull(simpleDateFormat54);
    }

    @Test
    public void test7291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7291");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        java.text.SimpleDateFormat simpleDateFormat8 = null;
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double12 = dateTime9.getDeltaYears(dateTime11);
        boolean boolean13 = dateTime9.isWeekday();
        boolean boolean14 = dateTime3.sameDate(dateTime9);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime(100L);
        double double21 = dateTime18.getDeltaYears(dateTime20);
        java.text.SimpleDateFormat simpleDateFormat23 = null;
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat23);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double27 = dateTime24.getDeltaYears(dateTime26);
        boolean boolean28 = dateTime24.isWeekday();
        boolean boolean29 = dateTime18.sameDate(dateTime24);
        java.text.SimpleDateFormat simpleDateFormat31 = null;
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat31);
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double35 = dateTime32.getDeltaYears(dateTime34);
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean40 = dateTime34.isEqual(dateTime39);
        dateTime18.set(dateTime39);
        long long42 = dateTime3.getDeltaMilliSeconds(dateTime39);
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat48 = null;
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat48);
        boolean boolean50 = net.ajaskey.common.Utils.sameDate(dateTime46, dateTime49);
        boolean boolean51 = net.ajaskey.common.Utils.sameDate(dateTime3, dateTime49);
        int int52 = dateTime49.getHour();
        dateTime49.add((int) (short) 1, 454);
        int int56 = dateTime49.getYear();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-1972.041095890411d) + "'", double21 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long42 + "' != '" + 1L + "'", long42 == 1L);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
    }

    @Test
    public void test7292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7292");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) (short) 0);
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(100L);
        int int4 = dateTime3.getMs();
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime(100L);
        double double11 = dateTime8.getDeltaYears(dateTime10);
        java.text.SimpleDateFormat simpleDateFormat12 = dateTime8.getSdf();
        boolean boolean13 = dateTime3.isLessThanOrEqual(dateTime8);
        java.text.SimpleDateFormat simpleDateFormat15 = null;
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat15);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double19 = dateTime16.getDeltaYears(dateTime18);
        boolean boolean20 = dateTime16.isWeekday();
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long25 = dateTime16.getDeltaDays(dateTime24);
        long long26 = dateTime3.getDeltaDays(dateTime24);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(100L);
        dateTime28.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean33 = dateTime28.isWeekday();
        int int34 = dateTime3.getYears(dateTime28);
        int int35 = dateTime3.getYear();
        java.util.Calendar calendar36 = dateTime3.getCal();
        net.ajaskey.common.DateTime dateTime37 = dateTime1.copy(dateTime3);
        java.util.Calendar calendar38 = dateTime3.getCal();
        int int39 = dateTime3.getDayOfMonth();
        java.util.Date date40 = dateTime3.getTime();
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime(date40);
        java.text.SimpleDateFormat simpleDateFormat44 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat46 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat47 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime("", simpleDateFormat46, simpleDateFormat47);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat44, simpleDateFormat47);
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime("10-Apr-0002", simpleDateFormat47);
        java.text.SimpleDateFormat simpleDateFormat52 = null;
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat52);
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double56 = dateTime53.getDeltaYears(dateTime55);
        boolean boolean57 = dateTime53.isWeekday();
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long62 = dateTime53.getDeltaDays(dateTime61);
        boolean boolean63 = net.ajaskey.common.Utils.sameDate(dateTime50, dateTime53);
        java.text.SimpleDateFormat simpleDateFormat66 = null;
        java.text.SimpleDateFormat simpleDateFormat67 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime("January", simpleDateFormat66, simpleDateFormat67);
        net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime("100.00", simpleDateFormat66);
        java.text.SimpleDateFormat simpleDateFormat71 = null;
        net.ajaskey.common.DateTime dateTime72 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat71);
        net.ajaskey.common.DateTime dateTime74 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double75 = dateTime72.getDeltaYears(dateTime74);
        net.ajaskey.common.DateTime dateTime79 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean80 = dateTime74.isEqual(dateTime79);
        long long81 = dateTime69.getDeltaDays(dateTime79);
        boolean boolean82 = dateTime53.isEqual(dateTime79);
        boolean boolean83 = dateTime41.sameDate(dateTime53);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + (-1972.041095890411d) + "'", double11 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 719795L + "'", long26 == 719795L);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1870) + "'", int34 == (-1870));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1969 + "'", int35 == 1969);
        org.junit.Assert.assertNotNull(calendar36);
        org.junit.Assert.assertEquals(calendar36.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(dateTime37);
        org.junit.Assert.assertNotNull(calendar38);
        org.junit.Assert.assertEquals(calendar38.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 31 + "'", int39 == 31);
        org.junit.Assert.assertNotNull(date40);
        org.junit.Assert.assertEquals(date40.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertNotNull(simpleDateFormat44);
        org.junit.Assert.assertNotNull(simpleDateFormat46);
        org.junit.Assert.assertNotNull(simpleDateFormat47);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 0L + "'", long62 == 0L);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(simpleDateFormat67);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 0L + "'", long81 == 0L);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test7293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7293");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        int int3 = dateTime1.getMinute();
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime(100L);
        int int7 = dateTime6.getMs();
        java.text.SimpleDateFormat simpleDateFormat8 = net.ajaskey.common.Utils.sdf;
        dateTime6.setSdf(simpleDateFormat8);
        int int10 = dateTime6.getDayOfWeek();
        java.text.SimpleDateFormat simpleDateFormat11 = dateTime6.getSdf();
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(100L);
        int int15 = dateTime14.getMs();
        java.text.SimpleDateFormat simpleDateFormat16 = net.ajaskey.common.Utils.sdf;
        dateTime14.setSdf(simpleDateFormat16);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat16);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:42:55", simpleDateFormat11, simpleDateFormat16);
        dateTime1.setSdf(simpleDateFormat16);
        net.ajaskey.common.DateTime dateTime21 = null;
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime(100L);
        int int25 = dateTime24.getMs();
        java.text.SimpleDateFormat simpleDateFormat26 = net.ajaskey.common.Utils.sdf;
        dateTime24.setSdf(simpleDateFormat26);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat26);
        java.text.SimpleDateFormat simpleDateFormat30 = null;
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat30);
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double34 = dateTime31.getDeltaYears(dateTime33);
        boolean boolean35 = dateTime33.isNull();
        java.text.SimpleDateFormat simpleDateFormat37 = null;
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat37);
        dateTime38.set((int) ' ', 0, 11);
        boolean boolean43 = dateTime33.isGreaterThanOrEqual(dateTime38);
        double double44 = dateTime28.getDeltaYears(dateTime33);
        java.text.SimpleDateFormat simpleDateFormat46 = null;
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat46);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double50 = dateTime47.getDeltaYears(dateTime49);
        boolean boolean51 = dateTime49.isNull();
        boolean boolean52 = dateTime33.isGreaterThan(dateTime49);
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime(dateTime33);
        int int54 = dateTime53.getDayOfMonth();
        int int55 = dateTime53.getMinute();
        boolean boolean56 = net.ajaskey.common.Utils.sameMonth(dateTime21, dateTime53);
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime(100L);
        double double63 = dateTime60.getDeltaYears(dateTime62);
        java.util.Date date64 = dateTime60.getTime();
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime(date64);
        net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime(date64);
        java.lang.String str67 = dateTime66.getDay();
        java.lang.String str68 = dateTime66.getDay();
        boolean boolean69 = dateTime53.sameDate(dateTime66);
        long long70 = dateTime1.getDeltaMilliSeconds(dateTime66);
        java.lang.Class<?> wildcardClass71 = dateTime66.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 4 + "'", int10 == 4);
        org.junit.Assert.assertNotNull(simpleDateFormat11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat16);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat26);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 31 + "'", int54 == 31);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-1972.041095890411d) + "'", double63 == (-1972.041095890411d));
        org.junit.Assert.assertNotNull(date64);
// flaky:         org.junit.Assert.assertEquals(date64.toString(), "Thu Apr 10 10:47:22 MST 2");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Thursday" + "'", str67, "Thursday");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Thursday" + "'", str68, "Thursday");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long70 + "' != '" + (-62190310357669L) + "'", long70 == (-62190310357669L));
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test7294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7294");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((-1870), 1969, 1);
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("5.00", "     10");
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(100L);
        double double13 = dateTime10.getDeltaYears(dateTime12);
        int int14 = dateTime10.getHour();
        java.text.SimpleDateFormat simpleDateFormat16 = null;
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double20 = dateTime17.getDeltaYears(dateTime19);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean25 = dateTime19.isEqual(dateTime24);
        java.util.Calendar calendar26 = dateTime19.getCal();
        dateTime10.set(calendar26);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(calendar26);
        dateTime6.set(calendar26);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(100L);
        int int32 = dateTime31.getMs();
        java.lang.String str33 = dateTime31.toString();
        java.lang.String str35 = dateTime31.format("         1");
        net.ajaskey.common.DateTime dateTime36 = dateTime6.copy(dateTime31);
        int int37 = dateTime3.getYears(dateTime36);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime(dateTime3);
        java.util.Date date39 = dateTime38.getTime();
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime(date39);
        dateTime40.setFirstWorkDay();
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-1972.041095890411d) + "'", double13 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(calendar26);
        org.junit.Assert.assertEquals(calendar26.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "31-Dec-1969" + "'", str33, "31-Dec-1969");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "         1" + "'", str35, "         1");
        org.junit.Assert.assertNotNull(dateTime36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 262 + "'", int37 == 262);
        org.junit.Assert.assertNotNull(date39);
// flaky:         org.junit.Assert.assertEquals(date39.toString(), "Wed Feb 01 10:47:22 MST 1707");
    }

    @Test
    public void test7295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7295");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime
        net.ajaskey.common.DateTime dateTime4 = dateTime2.parse("Fri 11-Jan-0032 10:43:58");
        net.ajaskey.common.DateTime dateTime5 = null;
        long long6 = dateTime2.getDeltaDays(dateTime5);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime((long) (short) 0);
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime(100L);
        int int11 = dateTime10.getMs();
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(100L);
        double double18 = dateTime15.getDeltaYears(dateTime17);
        java.text.SimpleDateFormat simpleDateFormat19 = dateTime15.getSdf();
        boolean boolean20 = dateTime10.isLessThanOrEqual(dateTime15);
        java.text.SimpleDateFormat simpleDateFormat22 = null;
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat22);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double26 = dateTime23.getDeltaYears(dateTime25);
        boolean boolean27 = dateTime23.isWeekday();
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long32 = dateTime23.getDeltaDays(dateTime31);
        long long33 = dateTime10.getDeltaDays(dateTime31);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime(100L);
        dateTime35.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean40 = dateTime35.isWeekday();
        int int41 = dateTime10.getYears(dateTime35);
        int int42 = dateTime10.getYear();
        java.util.Calendar calendar43 = dateTime10.getCal();
        net.ajaskey.common.DateTime dateTime44 = dateTime8.copy(dateTime10);
        net.ajaskey.common.DateTime dateTime45 = null;
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime(dateTime45);
        java.lang.String str48 = dateTime46.format("     5.00");
        net.ajaskey.common.DateTime dateTime49 = null;
        long long50 = dateTime46.getDeltaDays(dateTime49);
        int int51 = dateTime46.getDayOfMonth();
        int int52 = dateTime46.getHour();
        boolean boolean53 = dateTime8.isEqual(dateTime46);
        int int54 = dateTime8.getDayOfWeek();
        net.ajaskey.common.DateTime dateTime55 = dateTime2.copy(dateTime8);
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime("5.00", "     10");
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime(100L);
        double double65 = dateTime62.getDeltaYears(dateTime64);
        int int66 = dateTime62.getHour();
        java.text.SimpleDateFormat simpleDateFormat68 = null;
        net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat68);
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double72 = dateTime69.getDeltaYears(dateTime71);
        net.ajaskey.common.DateTime dateTime76 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean77 = dateTime71.isEqual(dateTime76);
        java.util.Calendar calendar78 = dateTime71.getCal();
        dateTime62.set(calendar78);
        net.ajaskey.common.DateTime dateTime80 = new net.ajaskey.common.DateTime(calendar78);
        dateTime58.set(calendar78);
        net.ajaskey.common.DateTime dateTime82 = new net.ajaskey.common.DateTime(calendar78);
        net.ajaskey.common.DateTime dateTime83 = new net.ajaskey.common.DateTime(calendar78);
        net.ajaskey.common.DateTime dateTime84 = new net.ajaskey.common.DateTime(calendar78);
        net.ajaskey.common.DateTime dateTime85 = new net.ajaskey.common.DateTime(calendar78);
        net.ajaskey.common.DateTime dateTime86 = dateTime2.copy(dateTime85);
        org.junit.Assert.assertNull(dateTime4);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1972.041095890411d) + "'", double18 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 719795L + "'", long33 == 719795L);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1870) + "'", int41 == (-1870));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1969 + "'", int42 == 1969);
        org.junit.Assert.assertNotNull(calendar43);
        org.junit.Assert.assertEquals(calendar43.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(dateTime44);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "     5.00" + "'", str48, "     5.00");
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 25 + "'", int51 == 25);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 10 + "'", int52 == 10);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 4 + "'", int54 == 4);
        org.junit.Assert.assertNotNull(dateTime55);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-1972.041095890411d) + "'", double65 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 10 + "'", int66 == 10);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(calendar78);
        org.junit.Assert.assertEquals(calendar78.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(dateTime86);
    }

    @Test
    public void test7296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7296");
        java.lang.String str2 = net.ajaskey.common.Utils.fmt((double) 99, 908);
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Invalid fmt" + "'", str2, "Invalid fmt");
    }

    @Test
    public void test7297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7297");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:44:57", "                              10");
    }

    @Test
    public void test7298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7298");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        dateTime1.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
        double double12 = dateTime9.getDeltaYears(dateTime11);
        boolean boolean13 = dateTime11.isWeekday();
        java.util.Date date14 = dateTime11.getTime();
        dateTime1.set(dateTime11);
        int int16 = dateTime1.getYear();
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(100L);
        double double23 = dateTime20.getDeltaYears(dateTime22);
        int int24 = dateTime20.getHour();
        java.util.Calendar calendar25 = dateTime20.getCal();
        boolean boolean26 = dateTime1.isGreaterThan(dateTime20);
        java.lang.String str27 = dateTime20.getDay();
        java.text.SimpleDateFormat simpleDateFormat29 = null;
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat29);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime((long) 12);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime(100L);
        double double39 = dateTime36.getDeltaYears(dateTime38);
        boolean boolean40 = dateTime38.isWeekday();
        java.lang.String str42 = dateTime38.format("hi!");
        java.text.SimpleDateFormat simpleDateFormat45 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime("January", simpleDateFormat45);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime("", simpleDateFormat45);
        net.ajaskey.common.DateTime dateTime49 = dateTime47.parse("Wed 31-Dec-1969 17:00:00");
        int int50 = dateTime47.getSecond();
        boolean boolean51 = dateTime38.sameDate(dateTime47);
        net.ajaskey.common.DateTime dateTime52 = dateTime32.copy(dateTime38);
        boolean boolean53 = dateTime30.isLessThanOrEqual(dateTime32);
        java.lang.String str54 = dateTime32.toString();
        net.ajaskey.common.DateTime dateTime57 = dateTime32.parse("Thu 10-Apr-0002 10:43:04", "Thu 10-Apr-0002 10:43:50");
        dateTime20.set(dateTime32);
        java.lang.String str59 = dateTime32.toString();
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1972.041095890411d) + "'", double12 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(date14);
        org.junit.Assert.assertEquals(date14.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1969 + "'", int16 == 1969);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-1972.041095890411d) + "'", double23 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertNotNull(calendar25);
        org.junit.Assert.assertEquals(calendar25.toString(), "java.util.GregorianCalendar[time=12,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=12,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Thursday" + "'", str27, "Thursday");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-1972.041095890411d) + "'", double39 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "BAD-DATE-FORMAT" + "'", str42, "BAD-DATE-FORMAT");
        org.junit.Assert.assertNotNull(simpleDateFormat45);
        org.junit.Assert.assertNull(dateTime49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(dateTime52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "31-Dec-1969" + "'", str54, "31-Dec-1969");
        org.junit.Assert.assertNull(dateTime57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "31-Dec-1969" + "'", str59, "31-Dec-1969");
    }

    @Test
    public void test7299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7299");
        java.text.SimpleDateFormat simpleDateFormat5 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat6 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("", simpleDateFormat5, simpleDateFormat6);
        java.text.SimpleDateFormat simpleDateFormat9 = null;
        java.text.SimpleDateFormat simpleDateFormat10 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime("January", simpleDateFormat9, simpleDateFormat10);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat5, simpleDateFormat10);
        java.text.SimpleDateFormat simpleDateFormat15 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat16 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("", simpleDateFormat15, simpleDateFormat16);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(100L);
        int int20 = dateTime19.getMs();
        java.text.SimpleDateFormat simpleDateFormat21 = net.ajaskey.common.Utils.sdf;
        dateTime19.setSdf(simpleDateFormat21);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat16, simpleDateFormat21);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("                             100", simpleDateFormat10, simpleDateFormat16);
        java.text.SimpleDateFormat simpleDateFormat27 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat28 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime("", simpleDateFormat27, simpleDateFormat28);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:42:54", simpleDateFormat27);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime("5.00", simpleDateFormat10, simpleDateFormat27);
        java.text.SimpleDateFormat simpleDateFormat32 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat10, simpleDateFormat32);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(12, 42, (int) (byte) 1);
        java.util.Calendar calendar38 = dateTime37.getCal();
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime(calendar38);
        long long40 = dateTime33.getDeltaMilliSeconds(dateTime39);
        int int41 = dateTime33.getHour();
        dateTime33.add(286, (-2019));
        java.lang.String str46 = dateTime33.format("                                                                                                                                    -717,578");
        java.util.Date date47 = dateTime33.getTime();
        org.junit.Assert.assertNotNull(simpleDateFormat5);
        org.junit.Assert.assertNotNull(simpleDateFormat6);
        org.junit.Assert.assertNotNull(simpleDateFormat10);
        org.junit.Assert.assertNotNull(simpleDateFormat15);
        org.junit.Assert.assertNotNull(simpleDateFormat16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat21);
        org.junit.Assert.assertNotNull(simpleDateFormat27);
        org.junit.Assert.assertNotNull(simpleDateFormat28);
        org.junit.Assert.assertNotNull(simpleDateFormat32);
        org.junit.Assert.assertNotNull(calendar38);
// flaky:         org.junit.Assert.assertEquals(calendar38.toString(), "java.util.GregorianCalendar[time=-61678303957456,areFieldsSet=true,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=15,MONTH=6,WEEK_OF_YEAR=27,WEEK_OF_MONTH=1,DAY_OF_MONTH=1,DAY_OF_YEAR=182,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=1,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=22,MILLISECOND=544,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "BAD-DATE-FORMAT" + "'", str46, "BAD-DATE-FORMAT");
        org.junit.Assert.assertNull(date47);
    }

    @Test
    public void test7300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7300");
        java.lang.String str2 = net.ajaskey.common.Utils.ifmt(903, 269);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                                                                                                                                                                                                                                                          903" + "'", str2, "                                                                                                                                                                                                                                                                          903");
    }

    @Test
    public void test7301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7301");
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat6 = null;
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat6);
        boolean boolean8 = net.ajaskey.common.Utils.sameDate(dateTime4, dateTime7);
        java.text.SimpleDateFormat simpleDateFormat11 = null;
        java.text.SimpleDateFormat simpleDateFormat12 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("January", simpleDateFormat11, simpleDateFormat12);
        java.text.SimpleDateFormat simpleDateFormat16 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("January", simpleDateFormat16);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime("", simpleDateFormat16);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime("", simpleDateFormat12, simpleDateFormat16);
        dateTime7.setSdf(simpleDateFormat12);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("-716,608.00", simpleDateFormat12);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(simpleDateFormat12);
        org.junit.Assert.assertNotNull(simpleDateFormat16);
    }

    @Test
    public void test7302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7302");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean10 = dateTime4.isEqual(dateTime9);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(100L);
        int int13 = dateTime12.getMs();
        boolean boolean14 = dateTime9.isGreaterThanOrEqual(dateTime12);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(100L);
        dateTime16.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(100L);
        double double27 = dateTime24.getDeltaYears(dateTime26);
        boolean boolean28 = dateTime26.isWeekday();
        java.util.Date date29 = dateTime26.getTime();
        dateTime16.set(dateTime26);
        boolean boolean31 = net.ajaskey.common.Utils.sameDate(dateTime9, dateTime16);
        int int32 = dateTime9.getDayOfYear();
        dateTime9.set((int) 'a', 152, (int) (short) 100);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean41 = dateTime40.isNull();
        java.lang.String str42 = dateTime40.getDay();
        java.lang.String str43 = dateTime40.getMonth();
        java.lang.String str44 = dateTime40.getDay();
        java.lang.String str45 = dateTime40.toFullString();
        java.util.Calendar calendar46 = dateTime40.getCal();
        dateTime9.set(calendar46);
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime(calendar46);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-1972.041095890411d) + "'", double27 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(date29);
        org.junit.Assert.assertEquals(date29.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Thursday" + "'", str42, "Thursday");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "April" + "'", str43, "April");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Thursday" + "'", str44, "Thursday");
// flaky:         org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Thu 10-Apr-0002 10:47:22" + "'", str45, "Thu 10-Apr-0002 10:47:22");
        org.junit.Assert.assertNotNull(calendar46);
// flaky:         org.junit.Assert.assertEquals(calendar46.toString(), "java.util.GregorianCalendar[time=-62190310357414,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=22,MILLISECOND=586,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    }

    @Test
    public void test7303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7303");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("5.00", "     10");
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        int int10 = dateTime6.getHour();
        java.text.SimpleDateFormat simpleDateFormat12 = null;
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat12);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double16 = dateTime13.getDeltaYears(dateTime15);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean21 = dateTime15.isEqual(dateTime20);
        java.util.Calendar calendar22 = dateTime15.getCal();
        dateTime6.set(calendar22);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime(calendar22);
        dateTime2.set(calendar22);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(calendar22);
        net.ajaskey.common.DateTime dateTime28 = dateTime26.parse("JanuaryThu 10-Apr-0002 10:44:47Thu 10-Apr-0002 10:44:47                                                                                               52.00Thu 10-Apr-0002 10:44:47hi!Thu 10-Apr-0002 10:44:47");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(calendar22);
        org.junit.Assert.assertEquals(calendar22.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNull(dateTime28);
    }

    @Test
    public void test7304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7304");
        net.ajaskey.common.DateTime dateTime2 = null;
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(dateTime2);
        dateTime3.set(42, 10, 10);
        java.lang.String str9 = dateTime3.format("                                                                                                                                                                                                                                                                                                                                                                        1,869");
        java.lang.String str10 = dateTime3.toString();
        java.text.SimpleDateFormat simpleDateFormat11 = dateTime3.getSdf();
        java.text.SimpleDateFormat simpleDateFormat15 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("1,969.00", simpleDateFormat15);
        java.text.SimpleDateFormat simpleDateFormat20 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat21 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime("", simpleDateFormat20, simpleDateFormat21);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:42:54", simpleDateFormat20);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:43:09", simpleDateFormat20);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("   -18,438", simpleDateFormat15, simpleDateFormat20);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime((long) (byte) 100);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(25, 1, 0);
        boolean boolean32 = net.ajaskey.common.Utils.sameMonth(dateTime27, dateTime31);
        int int33 = dateTime27.getSecond();
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime(100L);
        int int36 = dateTime35.getMs();
        java.text.SimpleDateFormat simpleDateFormat37 = net.ajaskey.common.Utils.sdf;
        dateTime35.setSdf(simpleDateFormat37);
        net.ajaskey.common.DateTime dateTime39 = dateTime27.copy(dateTime35);
        java.text.SimpleDateFormat simpleDateFormat40 = dateTime35.getSdf();
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTimesimpleDateFormat20, simpleDateFormat40);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:44:27", simpleDateFormat11, simpleDateFormat40);
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime("  62,190,310,586,261.00", simpleDateFormat11);
        int int44 = dateTime43.getMs();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "                                                                                                                                                                                                                                                                                                                                                                        1,869" + "'", str9, "                                                                                                                                                                                                                                                                                                                                                                        1,869");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "10-Nov-0042" + "'", str10, "10-Nov-0042");
        org.junit.Assert.assertNotNull(simpleDateFormat11);
        org.junit.Assert.assertNotNull(simpleDateFormat15);
        org.junit.Assert.assertNotNull(simpleDateFormat20);
        org.junit.Assert.assertNotNull(simpleDateFormat21);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat37);
        org.junit.Assert.assertNotNull(dateTime39);
        org.junit.Assert.assertNotNull(simpleDateFormat40);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
    }

    @Test
    public void test7305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7305");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (byte) 10, (int) (byte) 0, 2);
        int int4 = dateTime3.getDayOfWeek();
        int int5 = dateTime3.getDayOfYear();
        net.ajaskey.common.DateTime dateTime8 = dateTime3.parse("Thu 10-Apr-0002 10:45:22", "Thu 25-Jun-2020 10:46:13");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
        org.junit.Assert.assertNull(dateTime8);
    }

    @Test
    public void test7306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7306");
        java.lang.String str1 = net.ajaskey.common.Utils.getFromUrl("          -1,593,103,388,831");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
    }

    @Test
    public void test7307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7307");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        int int7 = dateTime3.getHour();
        java.text.SimpleDateFormat simpleDateFormat9 = null;
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat9);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double13 = dateTime10.getDeltaYears(dateTime12);
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean18 = dateTime12.isEqual(dateTime17);
        java.util.Calendar calendar19 = dateTime12.getCal();
        dateTime3.set(calendar19);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(calendar19);
        dateTime21.add(14, 2020);
        dateTime21.add(0, (int) (short) 100);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(100L);
        int int30 = dateTime29.getMs();
        boolean boolean31 = dateTime29.isWeekday();
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime((long) (short) 0);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime(100L);
        int int36 = dateTime35.getMs();
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime(100L);
        double double43 = dateTime40.getDeltaYears(dateTime42);
        java.text.SimpleDateFormat simpleDateFormat44 = dateTime40.getSdf();
        boolean boolean45 = dateTime35.isLessThanOrEqual(dateTime40);
        java.text.SimpleDateFormat simpleDateFormat47 = null;
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat47);
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double51 = dateTime48.getDeltaYears(dateTime50);
        boolean boolean52 = dateTime48.isWeekday();
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long57 = dateTime48.getDeltaDays(dateTime56);
        long long58 = dateTime35.getDeltaDays(dateTime56);
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime(100L);
        dateTime60.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean65 = dateTime60.isWeekday();
        int int66 = dateTime35.getYears(dateTime60);
        int int67 = dateTime35.getYear();
        java.util.Calendar calendar68 = dateTime35.getCal();
        net.ajaskey.common.DateTime dateTime69 = dateTime33.copy(dateTime35);
        boolean boolean70 = dateTime29.isGreaterThan(dateTime35);
        boolean boolean71 = dateTime21.sameDate(dateTime35);
        java.text.SimpleDateFormat simpleDateFormat72 = dateTime21.getSdf();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(calendar19);
        org.junit.Assert.assertEquals(calendar19.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-1972.041095890411d) + "'", double43 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 0L + "'", long57 == 0L);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 719795L + "'", long58 == 719795L);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1870) + "'", int66 == (-1870));
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1969 + "'", int67 == 1969);
        org.junit.Assert.assertNotNull(calendar68);
        org.junit.Assert.assertEquals(calendar68.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(dateTime69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(simpleDateFormat72);
    }

    @Test
    public void test7308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7308");
        java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat5 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("", simpleDateFormat4, simpleDateFormat5);
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:42:54", simpleDateFormat5);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:43:59", simpleDateFormat5);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("May", simpleDateFormat5);
        org.junit.Assert.assertNotNull(simpleDateFormat4);
        org.junit.Assert.assertNotNull(simpleDateFormat5);
    }

    @Test
    public void test7309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7309");
        java.text.SimpleDateFormat simpleDateFormat2 = null;
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat2);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        boolean boolean7 = dateTime3.isWeekday();
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long12 = dateTime3.getDeltaDays(dateTime11);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(dateTime3);
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(100L);
        double double20 = dateTime17.getDeltaYears(dateTime19);
        boolean boolean21 = dateTime19.isWeekday();
        java.util.Date date22 = dateTime19.getTime();
        dateTime3.set(date22);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime(date22);
        java.lang.String str26 = dateTime24.format("62,190,310,608,217");
        dateTime24.setFirstWorkDay();
        java.text.SimpleDateFormat simpleDateFormat30 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat32 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat33 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime("", simpleDateFormat32, simpleDateFormat33);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat30, simpleDateFormat33);
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat42 = null;
        java.text.SimpleDateFormat simpleDateFormat43 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime("January", simpleDateFormat42, simpleDateFormat43);
        java.text.SimpleDateFormat simpleDateFormat47 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime("January", simpleDateFormat47);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime("", simpleDateFormat47);
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime("", simpleDateFormat43, simpleDateFormat47);
        dateTime39.setSdf(simpleDateFormat43);
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime("", simpleDateFormat33, simpleDateFormat43);
        dateTime24.setSdf(simpleDateFormat43);
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime("30-Sep-0252", simpleDateFormat43);
        java.lang.Class<?> wildcardClass55 = simpleDateFormat43.getClass();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-1972.041095890411d) + "'", double20 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(date22);
        org.junit.Assert.assertEquals(date22.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "62,190,310,608,217" + "'", str26, "62,190,310,608,217");
        org.junit.Assert.assertNotNull(simpleDateFormat30);
        org.junit.Assert.assertNotNull(simpleDateFormat32);
        org.junit.Assert.assertNotNull(simpleDateFormat33);
        org.junit.Assert.assertNotNull(simpleDateFormat43);
        org.junit.Assert.assertNotNull(simpleDateFormat47);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test7310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7310");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        java.text.SimpleDateFormat simpleDateFormat3 = net.ajaskey.common.Utils.sdf;
        dateTime1.setSdf(simpleDateFormat3);
        net.ajaskey.common.DateTime dateTime5 = null;
        double double6 = dateTime1.getDeltaYears(dateTime5);
        java.util.Date date7 = dateTime1.getTime();
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("5.00", "     10");
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(100L);
        double double17 = dateTime14.getDeltaYears(dateTime16);
        int int18 = dateTime14.getHour();
        java.text.SimpleDateFormat simpleDateFormat20 = null;
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat20);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double24 = dateTime21.getDeltaYears(dateTime23);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean29 = dateTime23.isEqual(dateTime28);
        java.util.Calendar calendar30 = dateTime23.getCal();
        dateTime14.set(calendar30);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime(calendar30);
        dateTime10.set(calendar30);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime(100L);
        int int36 = dateTime35.getMs();
        java.lang.String str37 = dateTime35.toString();
        java.lang.String str39 = dateTime35.format("         1");
        net.ajaskey.common.DateTime dateTime40 = dateTime10.copy(dateTime35);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime(dateTime10);
        net.ajaskey.common.DateTime dateTime42 = null;
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime(dateTime42);
        dateTime43.set(42, 10, 10);
        java.util.Date date48 = dateTime43.getTime();
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat54 = null;
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat54);
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double58 = dateTime55.getDeltaYears(dateTime57);
        boolean boolean59 = dateTime52.isLessThan(dateTime57);
        java.lang.String str60 = dateTime57.toFullString();
        int int61 = dateTime57.getSecond();
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime(dateTime57);
        java.text.SimpleDateFormat simpleDateFormat64 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat65 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime("", simpleDateFormat64, simpleDateFormat65);
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime72 = new net.ajaskey.common.DateTime(100L);
        double double73 = dateTime70.getDeltaYears(dateTime72);
        int int74 = dateTime70.getHour();
        java.text.SimpleDateFormat simpleDateFormat76 = null;
        net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat76);
        net.ajaskey.common.DateTime dateTime79 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double80 = dateTime77.getDeltaYears(dateTime79);
        net.ajaskey.common.DateTime dateTime84 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean85 = dateTime79.isEqual(dateTime84);
        java.util.Calendar calendar86 = dateTime79.getCal();
        dateTime70.set(calendar86);
        net.ajaskey.common.DateTime dateTime88 = new net.ajaskey.common.DateTime(calendar86);
        boolean boolean89 = dateTime66.isLessThan(dateTime88);
        double double90 = dateTime57.getDeltaYears(dateTime88);
        net.ajaskey.common.DateTime dateTime91 = dateTime43.copy(dateTime88);
        dateTime41.set(dateTime43);
        int int93 = dateTime43.getDayOfWeek();
        long long94 = dateTime1.getDeltaDays(dateTime43);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat3);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(date7);
        org.junit.Assert.assertEquals(date7.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-1972.041095890411d) + "'", double17 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10 + "'", int18 == 10);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(calendar30);
        org.junit.Assert.assertEquals(calendar30.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "31-Dec-1969" + "'", str37, "31-Dec-1969");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "         1" + "'", str39, "         1");
        org.junit.Assert.assertNotNull(dateTime40);
        org.junit.Assert.assertNotNull(date48);
// flaky:         org.junit.Assert.assertEquals(date48.toString(), "Sat Nov 10 10:47:22 MST 42");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str60, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(simpleDateFormat64);
        org.junit.Assert.assertNotNull(simpleDateFormat65);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-1972.041095890411d) + "'", double73 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 10 + "'", int74 == 10);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(calendar86);
        org.junit.Assert.assertEquals(calendar86.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        org.junit.Assert.assertNotNull(dateTime91);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 7 + "'", int93 == 7);
        org.junit.Assert.assertTrue("'" + long94 + "' != '" + 703875L + "'", long94 == 703875L);
    }

    @Test
    public void test7311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7311");
        java.lang.String str2 = net.ajaskey.common.Utils.fmt((double) 62190310579087L, 30);
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Invalid fmt" + "'", str2, "Invalid fmt");
    }

    @Test
    public void test7312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7312");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat5 = null;
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat5);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        boolean boolean10 = dateTime3.isLessThan(dateTime8);
        dateTime8.set(3, 365, 0);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime(100L);
        dateTime20.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str25 = dateTime20.getMonth();
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(100L);
        dateTime27.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str32 = dateTime27.getMonth();
        int int33 = dateTime27.getMs();
        net.ajaskey.common.DateTime dateTime34 = dateTime20.copy(dateTime27);
        dateTime18.set(dateTime20);
        dateTime18.setFirstWorkDay();
        net.ajaskey.common.DateTime dateTime37 = dateTime8.copy(dateTime18);
        int int38 = dateTime18.getDayOfMonth();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "January" + "'", str25, "January");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "January" + "'", str32, "January");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        org.junit.Assert.assertNotNull(dateTime34);
        org.junit.Assert.assertNotNull(dateTime37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 6 + "'", int38 == 6);
    }

    @Test
    public void test7313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7313");
        java.text.SimpleDateFormat simpleDateFormat2 = null;
        java.text.SimpleDateFormat simpleDateFormat3 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime("January", simpleDateFormat2, simpleDateFormat3);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime("100.00", simpleDateFormat2);
        java.text.SimpleDateFormat simpleDateFormat7 = null;
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat7);
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double11 = dateTime8.getDeltaYears(dateTime10);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean16 = dateTime10.isEqual(dateTime15);
        long long17 = dateTime5.getDeltaDays(dateTime15);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(dateTime5);
        int int19 = dateTime5.getDayOfYear();
        int int20 = dateTime5.getMinute();
        java.text.SimpleDateFormat simpleDateFormat22 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat23 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("", simpleDateFormat22, simpleDateFormat23);
        int int25 = dateTime24.getHour();
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(100L);
        int int28 = dateTime27.getMs();
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime(100L);
        double double35 = dateTime32.getDeltaYears(dateTime34);
        java.text.SimpleDateFormat simpleDateFormat36 = dateTime32.getSdf();
        boolean boolean37 = dateTime27.isLessThanOrEqual(dateTime32);
        boolean boolean38 = dateTime32.isWeekday();
        java.lang.String str39 = dateTime32.toString();
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime(100L);
        int int42 = dateTime41.getMs();
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime(100L);
        double double49 = dateTime46.getDeltaYears(dateTime48);
        java.text.SimpleDateFormat simpleDateFormat50 = dateTime46.getSdf();
        boolean boolean51 = dateTime41.isLessThanOrEqual(dateTime46);
        java.text.SimpleDateFormat simpleDateFormat53 = null;
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat53);
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double57 = dateTime54.getDeltaYears(dateTime56);
        boolean boolean58 = dateTime54.isWeekday();
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long63 = dateTime54.getDeltaDays(dateTime62);
        long long64 = dateTime41.getDeltaDays(dateTime62);
        java.lang.String str65 = dateTime62.toFullString();
        java.util.Calendar calendar66 = dateTime62.getCal();
        boolean boolean67 = dateTime32.isLessThan(dateTime62);
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime(dateTime62);
        java.lang.String str69 = dateTime62.toString();
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime(dateTime62);
        double double71 = dateTime24.getDeltaYears(dateTime62);
        net.ajaskey.common.DateTime dateTime75 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean76 = dateTime75.isNull();
        java.lang.String str77 = dateTime75.getDay();
        java.lang.String str78 = dateTime75.getMonth();
        java.lang.String str79 = dateTime75.getDay();
        java.lang.String str80 = dateTime75.toFullString();
        java.util.Calendar calendar81 = dateTime75.getCal();
        boolean boolean82 = dateTime24.isLessThan(dateTime75);
        int int83 = dateTime24.getDayOfYear();
        boolean boolean84 = dateTime5.sameDate(dateTime24);
        java.text.SimpleDateFormat simpleDateFormat85 = dateTime24.getSdf();
        org.junit.Assert.assertNotNull(simpleDateFormat3);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(simpleDateFormat22);
        org.junit.Assert.assertNotNull(simpleDateFormat23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-1972.041095890411d) + "'", double35 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "10-Apr-0002" + "'", str39, "10-Apr-0002");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-1972.041095890411d) + "'", double49 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 0L + "'", long63 == 0L);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 719795L + "'", long64 == 719795L);
// flaky:         org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Thu 10-Apr-0002 10:47:22" + "'", str65, "Thu 10-Apr-0002 10:47:22");
        org.junit.Assert.assertNotNull(calendar66);
// flaky:         org.junit.Assert.assertEquals(calendar66.toString(), "java.util.GregorianCalendar[time=-62190310357192,areFieldsSet=true,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=22,MILLISECOND=808,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "10-Apr-0002" + "'", str69, "10-Apr-0002");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "Thursday" + "'", str77, "Thursday");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "April" + "'", str78, "April");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "Thursday" + "'", str79, "Thursday");
// flaky:         org.junit.Assert.assertEquals("'" + str80 + "' != '" + "Thu 10-Apr-0002 10:47:22" + "'", str80, "Thu 10-Apr-0002 10:47:22");
        org.junit.Assert.assertNotNull(calendar81);
// flaky:         org.junit.Assert.assertEquals(calendar81.toString(), "java.util.GregorianCalendar[time=-62190310357192,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=22,MILLISECOND=808,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNull(simpleDateFormat85);
    }

    @Test
    public void test7314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7314");
        net.ajaskey.common.Utils.NL = "                                                                                                                                                                                                                                                   719,528";
    }

    @Test
    public void test7315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7315");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTimesimpleDateFormat1);
    }

    @Test
    public void test7316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7316");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(11, (int) (short) 1, 365);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        int int6 = dateTime5.getMs();
        java.lang.String str7 = dateTime5.toString();
        int int8 = dateTime5.getDayOfYear();
        java.text.SimpleDateFormat simpleDateFormat10 = null;
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat10);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double14 = dateTime11.getDeltaYears(dateTime13);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean19 = dateTime13.isEqual(dateTime18);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(100L);
        int int22 = dateTime21.getMs();
        boolean boolean23 = dateTime18.isGreaterThanOrEqual(dateTime21);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime(100L);
        dateTime25.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime(100L);
        double double36 = dateTime33.getDeltaYears(dateTime35);
        boolean boolean37 = dateTime35.isWeekday();
        java.util.Date date38 = dateTime35.getTime();
        dateTime25.set(dateTime35);
        boolean boolean40 = net.ajaskey.common.Utils.sameDate(dateTime18, dateTime25);
        dateTime18.add((int) '#', 6);
        boolean boolean44 = dateTime5.sameDate(dateTime18);
        java.text.SimpleDateFormat simpleDateFormat46 = null;
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat46);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double50 = dateTime47.getDeltaYears(dateTime49);
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime(dateTime47);
        boolean boolean52 = dateTime18.sameDate(dateTime51);
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime(100L);
        double double59 = dateTime56.getDeltaYears(dateTime58);
        java.text.SimpleDateFormat simpleDateFormat61 = null;
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat61);
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double65 = dateTime62.getDeltaYears(dateTime64);
        boolean boolean66 = dateTime62.isWeekday();
        boolean boolean67 = dateTime56.sameDate(dateTime62);
        int int68 = dateTime56.getSecond();
        boolean boolean69 = net.ajaskey.common.Utils.sameDate(dateTime51, dateTime56);
        long long70 = dateTime3.getDeltaDays(dateTime51);
        int int71 = dateTime3.getHour();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "31-Dec-1969" + "'", str7, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 365 + "'", int8 == 365);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + (-1972.041095890411d) + "'", double36 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(date38);
        org.junit.Assert.assertEquals(date38.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-1972.041095890411d) + "'", double59 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int68 + "' != '" + 22 + "'", int68 == 22);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + (-733554L) + "'", long70 == (-733554L));
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 10 + "'", int71 == 10);
    }

    @Test
    public void test7317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7317");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        java.lang.String str3 = dateTime1.toString();
        int int4 = dateTime1.getDayOfYear();
        java.text.SimpleDateFormat simpleDateFormat6 = null;
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat6);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double10 = dateTime7.getDeltaYears(dateTime9);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean15 = dateTime9.isEqual(dateTime14);
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(100L);
        int int18 = dateTime17.getMs();
        boolean boolean19 = dateTime14.isGreaterThanOrEqual(dateTime17);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(100L);
        dateTime21.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(100L);
        double double32 = dateTime29.getDeltaYears(dateTime31);
        boolean boolean33 = dateTime31.isWeekday();
        java.util.Date date34 = dateTime31.getTime();
        dateTime21.set(dateTime31);
        boolean boolean36 = net.ajaskey.common.Utils.sameDate(dateTime14, dateTime21);
        dateTime14.add((int) '#', 6);
        boolean boolean40 = dateTime1.sameDate(dateTime14);
        java.text.SimpleDateFormat simpleDateFormat42 = null;
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat42);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double46 = dateTime43.getDeltaYears(dateTime45);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime(dateTime43);
        boolean boolean48 = dateTime14.sameDate(dateTime47);
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime(100L);
        double double55 = dateTime52.getDeltaYears(dateTime54);
        java.text.SimpleDateFormat simpleDateFormat57 = null;
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat57);
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double61 = dateTime58.getDeltaYears(dateTime60);
        boolean boolean62 = dateTime58.isWeekday();
        boolean boolean63 = dateTime52.sameDate(dateTime58);
        int int64 = dateTime52.getSecond();
        boolean boolean65 = net.ajaskey.common.Utils.sameDate(dateTime47, dateTime52);
        java.text.SimpleDateFormat simpleDateFormat67 = null;
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat67);
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double71 = dateTime68.getDeltaYears(dateTime70);
        java.text.SimpleDateFormat simpleDateFormat72 = dateTime70.getSdf();
        boolean boolean73 = dateTime47.isLessThanOrEqual(dateTime70);
        net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime((int) (short) 100, (int) (byte) 1, (int) (byte) 100);
        dateTime77.add((int) (short) -1, 5);
        java.lang.String str81 = dateTime77.toString();
        boolean boolean82 = dateTime47.isLessThan(dateTime77);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "31-Dec-1969" + "'", str3, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 365 + "'", int4 == 365);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-1972.041095890411d) + "'", double32 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(date34);
        org.junit.Assert.assertEquals(date34.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-1972.041095890411d) + "'", double55 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int64 + "' != '" + 22 + "'", int64 == 22);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertNull(simpleDateFormat72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "10-May-0100" + "'", str81, "10-May-0100");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test7318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7318");
        java.text.SimpleDateFormat simpleDateFormat1 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("1,969.00", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        java.text.SimpleDateFormat simpleDateFormat11 = null;
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat11);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double15 = dateTime12.getDeltaYears(dateTime14);
        boolean boolean16 = dateTime12.isWeekday();
        boolean boolean17 = dateTime6.sameDate(dateTime12);
        java.text.SimpleDateFormat simpleDateFormat19 = null;
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat19);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double23 = dateTime20.getDeltaYears(dateTime22);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean28 = dateTime22.isEqual(dateTime27);
        dateTime6.set(dateTime27);
        int int30 = dateTime6.getDayOfMonth();
        java.util.Date date31 = dateTime6.getTime();
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime(date31);
        boolean boolean33 = dateTime2.sameDate(dateTime32);
        org.junit.Assert.assertNotNull(simpleDateFormat1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
        org.junit.Assert.assertNotNull(date31);
// flaky:         org.junit.Assert.assertEquals(date31.toString(), "Thu Apr 10 10:47:22 MST 2");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test7319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7319");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) 11);
    }

    @Test
    public void test7320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7320");
        java.lang.String str2 = net.ajaskey.common.Utils.fmt((double) 1881, 362);
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Invalid fmt" + "'", str2, "Invalid fmt");
    }

    @Test
    public void test7321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7321");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(25, 17, 1869);
        java.util.Calendar calendar4 = null;
        dateTime3.set(calendar4);
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime(dateTime3);
        dateTime3.set((int) ' ', (int) (short) -1, 821);
    }

    @Test
    public void test7322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7322");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("5.00", "     10");
        dateTime2.add((int) (short) 0, (int) 'a');
        int int6 = dateTime2.getDayOfMonth();
        int int7 = dateTime2.getDayOfWeek();
        int int8 = dateTime2.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime10 = dateTime2.parse("           4");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(dateTime10);
    }

    @Test
    public void test7323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7323");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        java.text.SimpleDateFormat simpleDateFormat10 = dateTime6.getSdf();
        boolean boolean11 = dateTime1.isLessThanOrEqual(dateTime6);
        boolean boolean12 = dateTime1.isWeekday();
        java.text.SimpleDateFormat simpleDateFormat14 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat15 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("", simpleDateFormat14, simpleDateFormat15);
        int int17 = dateTime16.getHour();
        long long18 = dateTime1.getDeltaMilliSeconds(dateTime16);
        java.text.SimpleDateFormat simpleDateFormat20 = null;
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat20);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double24 = dateTime21.getDeltaYears(dateTime23);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean29 = dateTime23.isEqual(dateTime28);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(100L);
        int int32 = dateTime31.getMs();
        boolean boolean33 = dateTime28.isGreaterThanOrEqual(dateTime31);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime(100L);
        dateTime35.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(100L);
        double double46 = dateTime43.getDeltaYears(dateTime45);
        boolean boolean47 = dateTime45.isWeekday();
        java.util.Date date48 = dateTime45.getTime();
        dateTime35.set(dateTime45);
        boolean boolean50 = net.ajaskey.common.Utils.sameDate(dateTime28, dateTime35);
        int int51 = dateTime28.getDayOfYear();
        dateTime28.set((int) 'a', 152, (int) (short) 100);
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean60 = dateTime59.isNull();
        java.lang.String str61 = dateTime59.getDay();
        java.lang.String str62 = dateTime59.getMonth();
        java.lang.String str63 = dateTime59.getDay();
        java.lang.String str64 = dateTime59.toFullString();
        java.util.Calendar calendar65 = dateTime59.getCal();
        dateTime28.set(calendar65);
        dateTime16.set(calendar65);
        int int68 = dateTime16.getDayOfMonth();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(simpleDateFormat14);
        org.junit.Assert.assertNotNull(simpleDateFormat15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-1972.041095890411d) + "'", double46 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(date48);
        org.junit.Assert.assertEquals(date48.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 100 + "'", int51 == 100);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Thursday" + "'", str61, "Thursday");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "April" + "'", str62, "April");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Thursday" + "'", str63, "Thursday");
// flaky:         org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Thu 10-Apr-0002 10:47:22" + "'", str64, "Thu 10-Apr-0002 10:47:22");
        org.junit.Assert.assertNotNull(calendar65);
// flaky:         org.junit.Assert.assertEquals(calendar65.toString(), "java.util.GregorianCalendar[time=-62190310357048,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=22,MILLISECOND=952,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 10 + "'", int68 == 10);
    }

    @Test
    public void test7324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7324");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(17, (-2019), 302);
    }

    @Test
    public void test7325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7325");
        java.util.zip.ZipOutputStream zipOutputStream1 = null;
        // The following exception was thrown during execution in test generation
        try {
            net.ajaskey.common.Utils.writeToZipFile("Thu 10-Apr-0002 10:45:39", zipOutputStream1);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: Thu 10-Apr-0002 10:45:39 (The filename, directory name, or volume label syntax is incorrect)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
    }

    @Test
    public void test7326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7326");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        java.text.SimpleDateFormat simpleDateFormat10 = dateTime6.getSdf();
        boolean boolean11 = dateTime1.isLessThanOrEqual(dateTime6);
        boolean boolean12 = dateTime1.isWeekday();
        java.util.Calendar calendar13 = dateTime1.getCal();
        java.text.SimpleDateFormat simpleDateFormat15 = null;
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat15);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double19 = dateTime16.getDeltaYears(dateTime18);
        boolean boolean20 = dateTime16.isWeekday();
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long25 = dateTime16.getDeltaDays(dateTime24);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(dateTime16);
        dateTime26.setFirstWorkDay();
        long long28 = dateTime1.getDeltaDays(dateTime26);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(100L);
        int int32 = dateTime31.getMs();
        java.text.SimpleDateFormat simpleDateFormat33 = net.ajaskey.common.Utils.sdf;
        dateTime31.setSdf(simpleDateFormat33);
        java.text.SimpleDateFormat simpleDateFormat35 = net.ajaskey.common.Utils.sdfFull;
        dateTime31.setSdf(simpleDateFormat35);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime("Mon 10-Apr-0002 00:00:00", simpleDateFormat35);
        int int38 = dateTime26.getYears(dateTime37);
        java.lang.String str39 = dateTime37.getDay();
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime((long) 3);
        int int42 = dateTime41.getMs();
        dateTime41.setFirstWorkDay();
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime((long) (short) 0);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime(100L);
        int int48 = dateTime47.getMs();
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime(100L);
        double double55 = dateTime52.getDeltaYears(dateTime54);
        java.text.SimpleDateFormat simpleDateFormat56 = dateTime52.getSdf();
        boolean boolean57 = dateTime47.isLessThanOrEqual(dateTime52);
        java.text.SimpleDateFormat simpleDateFormat59 = null;
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat59);
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double63 = dateTime60.getDeltaYears(dateTime62);
        boolean boolean64 = dateTime60.isWeekday();
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long69 = dateTime60.getDeltaDays(dateTime68);
        long long70 = dateTime47.getDeltaDays(dateTime68);
        net.ajaskey.common.DateTime dateTime72 = new net.ajaskey.common.DateTime(100L);
        dateTime72.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean77 = dateTime72.isWeekday();
        int int78 = dateTime47.getYears(dateTime72);
        int int79 = dateTime47.getYear();
        java.util.Calendar calendar80 = dateTime47.getCal();
        net.ajaskey.common.DateTime dateTime81 = dateTime45.copy(dateTime47);
        java.util.Calendar calendar82 = dateTime47.getCal();
        dateTime41.set(calendar82);
        net.ajaskey.common.DateTime dateTime86 = dateTime41.parse("Thu 10-Apr-0002 10:44:32", "       4");
        net.ajaskey.common.DateTime dateTime90 = new net.ajaskey.common.DateTime((int) (byte) 10, (int) (byte) 0, 2);
        net.ajaskey.common.DateTime dateTime91 = new net.ajaskey.common.DateTime(dateTime90);
        boolean boolean92 = dateTime41.isGreaterThanOrEqual(dateTime91);
        boolean boolean93 = net.ajaskey.common.Utils.sameMonth(dateTime37, dateTime91);
        int int94 = dateTime37.getDayOfYear();
        int int95 = dateTime37.getMinute();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(calendar13);
        org.junit.Assert.assertEquals(calendar13.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-18438L) + "'", long28 == (-18438L));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat33);
        org.junit.Assert.assertNotNull(simpleDateFormat35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-2019) + "'", int38 == (-2019));
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Monday" + "'", str39, "Monday");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 3 + "'", int42 == 3);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 100 + "'", int48 == 100);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-1972.041095890411d) + "'", double55 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 0L + "'", long69 == 0L);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 719795L + "'", long70 == 719795L);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1870) + "'", int78 == (-1870));
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1969 + "'", int79 == 1969);
        org.junit.Assert.assertNotNull(calendar80);
        org.junit.Assert.assertEquals(calendar80.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(dateTime81);
        org.junit.Assert.assertNotNull(calendar82);
        org.junit.Assert.assertEquals(calendar82.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNull(dateTime86);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 100 + "'", int94 == 100);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 0 + "'", int95 == 0);
    }

    @Test
    public void test7327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7327");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        int int7 = dateTime3.getHour();
        java.util.Calendar calendar8 = dateTime3.getCal();
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(calendar8);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean14 = dateTime13.isNull();
        boolean boolean15 = net.ajaskey.common.Utils.sameDate(dateTime9, dateTime13);
        java.lang.String str16 = dateTime9.getMonth();
        java.lang.String str17 = dateTime9.toFullString();
        java.util.Calendar calendar18 = dateTime9.getCal();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertNotNull(calendar8);
// flaky:         org.junit.Assert.assertEquals(calendar8.toString(), "java.util.GregorianCalendar[time=-62190310356979,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=23,MILLISECOND=21,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "April" + "'", str16, "April");
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Thu 10-Apr-0002 10:47:23" + "'", str17, "Thu 10-Apr-0002 10:47:23");
        org.junit.Assert.assertNotNull(calendar18);
// flaky:         org.junit.Assert.assertEquals(calendar18.toString(), "java.util.GregorianCalendar[time=-62190310356979,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=23,MILLISECOND=21,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    }

    @Test
    public void test7328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7328");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        int int7 = dateTime3.getHour();
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(100L);
        double double14 = dateTime11.getDeltaYears(dateTime13);
        int int15 = dateTime11.getHour();
        dateTime11.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat20 = null;
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat20);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double24 = dateTime21.getDeltaYears(dateTime23);
        boolean boolean25 = dateTime11.isEqual(dateTime23);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat31 = null;
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat31);
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double35 = dateTime32.getDeltaYears(dateTime34);
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean40 = dateTime34.isEqual(dateTime39);
        java.util.Calendar calendar41 = dateTime34.getCal();
        boolean boolean42 = dateTime29.isLessThan(dateTime34);
        dateTime29.setFirstWorkDay();
        boolean boolean44 = dateTime11.sameDate(dateTime29);
        dateTime3.set(dateTime11);
        java.text.SimpleDateFormat simpleDateFormat46 = dateTime3.getSdf();
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime(100L);
        int int50 = dateTime49.getMs();
        java.text.SimpleDateFormat simpleDateFormat51 = net.ajaskey.common.Utils.sdf;
        dateTime49.setSdf(simpleDateFormat51);
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat51);
        java.text.SimpleDateFormat simpleDateFormat55 = null;
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat55);
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double59 = dateTime56.getDeltaYears(dateTime58);
        boolean boolean60 = dateTime58.isNull();
        java.text.SimpleDateFormat simpleDateFormat62 = null;
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat62);
        dateTime63.set((int) ' ', 0, 11);
        boolean boolean68 = dateTime58.isGreaterThanOrEqual(dateTime63);
        double double69 = dateTime53.getDeltaYears(dateTime58);
        java.text.SimpleDateFormat simpleDateFormat71 = null;
        net.ajaskey.common.DateTime dateTime72 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat71);
        net.ajaskey.common.DateTime dateTime74 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double75 = dateTime72.getDeltaYears(dateTime74);
        boolean boolean76 = dateTime74.isNull();
        boolean boolean77 = dateTime58.isGreaterThan(dateTime74);
        net.ajaskey.common.DateTime dateTime78 = new net.ajaskey.common.DateTime(dateTime58);
        int int79 = dateTime78.getDayOfMonth();
        java.lang.String str80 = dateTime78.toFullString();
        net.ajaskey.common.DateTime dateTime81 = dateTime3.copy(dateTime78);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + (-1972.041095890411d) + "'", double14 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(calendar41);
        org.junit.Assert.assertEquals(calendar41.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(simpleDateFormat46);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat51);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 31 + "'", int79 == 31);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str80, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertNotNull(dateTime81);
    }

    @Test
    public void test7329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7329");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        java.lang.String str3 = dateTime1.toString();
        java.text.SimpleDateFormat simpleDateFormat5 = null;
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat5);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        boolean boolean10 = dateTime6.isWeekday();
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long15 = dateTime6.getDeltaDays(dateTime14);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(dateTime6);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(100L);
        double double23 = dateTime20.getDeltaYears(dateTime22);
        boolean boolean24 = dateTime22.isWeekday();
        java.util.Date date25 = dateTime22.getTime();
        dateTime6.set(date25);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(100L);
        int int29 = dateTime28.getMs();
        java.lang.String str30 = dateTime28.toString();
        boolean boolean31 = dateTime6.isLessThanOrEqual(dateTime28);
        boolean boolean32 = dateTime1.isLessThanOrEqual(dateTime28);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("December", "   8.00");
        boolean boolean36 = net.ajaskey.common.Utils.sameMonth(dateTime28, dateTime35);
        java.text.SimpleDateFormat simpleDateFormat38 = null;
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat38);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double42 = dateTime39.getDeltaYears(dateTime41);
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean47 = dateTime41.isEqual(dateTime46);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime(100L);
        int int50 = dateTime49.getMs();
        boolean boolean51 = dateTime46.isGreaterThanOrEqual(dateTime49);
        java.text.SimpleDateFormat simpleDateFormat53 = null;
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat53);
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double57 = dateTime54.getDeltaYears(dateTime56);
        boolean boolean58 = dateTime54.isWeekday();
        boolean boolean59 = dateTime49.isLessThanOrEqual(dateTime54);
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime(100L);
        dateTime61.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean66 = dateTime61.isWeekday();
        boolean boolean67 = dateTime49.isGreaterThanOrEqual(dateTime61);
        int int68 = dateTime49.getSecond();
        int int69 = dateTime49.getHour();
        java.util.Date date70 = dateTime49.getTime();
        int int71 = dateTime49.getDayOfYear();
        boolean boolean72 = net.ajaskey.common.Utils.sameMonth(dateTime35, dateTime49);
        int int73 = dateTime35.getMinute();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "31-Dec-1969" + "'", str3, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-1972.041095890411d) + "'", double23 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(date25);
        org.junit.Assert.assertEquals(date25.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "31-Dec-1969" + "'", str30, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 5 + "'", int69 == 5);
        org.junit.Assert.assertNotNull(date70);
        org.junit.Assert.assertEquals(date70.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 365 + "'", int71 == 365);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
    }

    @Test
    public void test7330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7330");
        java.text.SimpleDateFormat simpleDateFormat2 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime("January", simpleDateFormat2);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime("", simpleDateFormat2);
        dateTime4.setFirstWorkDay();
        int int6 = dateTime4.getMs();
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(100L);
        double double13 = dateTime10.getDeltaYears(dateTime12);
        java.text.SimpleDateFormat simpleDateFormat15 = null;
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat15);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double19 = dateTime16.getDeltaYears(dateTime18);
        boolean boolean20 = dateTime16.isWeekday();
        boolean boolean21 = dateTime10.sameDate(dateTime16);
        java.text.SimpleDateFormat simpleDateFormat23 = null;
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat23);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double27 = dateTime24.getDeltaYears(dateTime26);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean32 = dateTime26.isEqual(dateTime31);
        dateTime10.set(dateTime31);
        java.lang.String str34 = dateTime31.toString();
        dateTime4.set(dateTime31);
        java.text.SimpleDateFormat simpleDateFormat37 = null;
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat37);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double41 = dateTime38.getDeltaYears(dateTime40);
        boolean boolean42 = dateTime38.isWeekday();
        int int43 = dateTime38.getHour();
        boolean boolean44 = dateTime31.isGreaterThan(dateTime38);
        java.util.Date date45 = dateTime31.getTime();
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime(100L);
        long long56 = dateTime53.getDeltaDays(dateTime55);
        int int57 = dateTime53.getHour();
        dateTime53.add((int) (byte) 100, (int) (byte) 0);
        double double61 = dateTime49.getDeltaYears(dateTime53);
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime(100L);
        int int64 = dateTime63.getMs();
        java.lang.String str65 = dateTime63.toString();
        dateTime63.set(25, (-1), (int) (short) 10);
        net.ajaskey.common.DateTime dateTime73 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime75 = new net.ajaskey.common.DateTime(100L);
        double double76 = dateTime73.getDeltaYears(dateTime75);
        boolean boolean77 = dateTime75.isWeekday();
        boolean boolean78 = net.ajaskey.common.Utils.sameMonth(dateTime63, dateTime75);
        net.ajaskey.common.DateTime dateTime80 = new net.ajaskey.common.DateTime((long) (short) 0);
        int int81 = dateTime80.getHour();
        boolean boolean82 = dateTime80.isNull();
        net.ajaskey.common.DateTime dateTime83 = new net.ajaskey.common.DateTime(dateTime80);
        boolean boolean84 = dateTime75.isGreaterThan(dateTime80);
        boolean boolean85 = dateTime53.isGreaterThan(dateTime80);
        java.lang.String str86 = dateTime80.toString();
        java.lang.String str87 = dateTime80.toString();
        int int88 = dateTime80.getHour();
        dateTime80.setFirstWorkDay();
        long long90 = dateTime31.getDeltaMilliSeconds(dateTime80);
        boolean boolean91 = dateTime80.isNull();
        org.junit.Assert.assertNotNull(simpleDateFormat2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-1972.041095890411d) + "'", double13 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "10-Apr-0002" + "'", str34, "10-Apr-0002");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(date45);
// flaky:         org.junit.Assert.assertEquals(date45.toString(), "Thu Apr 10 10:47:23 MST 2");
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + (-719795L) + "'", long56 == (-719795L));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 10 + "'", int57 == 10);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 100 + "'", int64 == 100);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "31-Dec-1969" + "'", str65, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-1972.041095890411d) + "'", double76 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 5 + "'", int81 == 5);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "31-Dec-1969" + "'", str86, "31-Dec-1969");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "31-Dec-1969" + "'", str87, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 5 + "'", int88 == 5);
// flaky:         org.junit.Assert.assertTrue("'" + long90 + "' != '" + 62190310356890L + "'", long90 == 62190310356890L);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test7331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7331");
        java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readGzipFile("Thu 10-Apr-0002 10:46:44", true);
        org.junit.Assert.assertNull(strList2);
    }

    @Test
    public void test7332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7332");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat5 = null;
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat5);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        boolean boolean10 = dateTime3.isLessThan(dateTime8);
        java.lang.String str11 = dateTime8.toFullString();
        int int12 = dateTime8.getSecond();
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(dateTime8);
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean18 = dateTime17.isNull();
        java.lang.String str19 = dateTime17.getDay();
        java.text.SimpleDateFormat simpleDateFormat20 = dateTime17.getSdf();
        int int21 = dateTime17.getHour();
        boolean boolean22 = dateTime8.isGreaterThanOrEqual(dateTime17);
        java.text.SimpleDateFormat simpleDateFormat23 = dateTime8.getSdf();
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime(100L);
        dateTime25.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str30 = dateTime25.getMonth();
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime(100L);
        dateTime32.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str37 = dateTime32.getMonth();
        int int38 = dateTime32.getMs();
        net.ajaskey.common.DateTime dateTime39 = dateTime25.copy(dateTime32);
        boolean boolean40 = dateTime25.isWeekday();
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime(100L);
        double double47 = dateTime44.getDeltaYears(dateTime46);
        boolean boolean48 = dateTime46.isWeekday();
        boolean boolean49 = dateTime25.isGreaterThan(dateTime46);
        java.lang.String str51 = dateTime25.format("Thu 25-Jun-2020 10:43:17");
        java.lang.String str52 = dateTime25.format();
        java.text.SimpleDateFormat simpleDateFormat54 = null;
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat54);
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double58 = dateTime55.getDeltaYears(dateTime57);
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean63 = dateTime57.isEqual(dateTime62);
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime(100L);
        int int66 = dateTime65.getMs();
        boolean boolean67 = dateTime62.isGreaterThanOrEqual(dateTime65);
        net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime(100L);
        dateTime69.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime79 = new net.ajaskey.common.DateTime(100L);
        double double80 = dateTime77.getDeltaYears(dateTime79);
        boolean boolean81 = dateTime79.isWeekday();
        java.util.Date date82 = dateTime79.getTime();
        dateTime69.set(dateTime79);
        boolean boolean84 = net.ajaskey.common.Utils.sameDate(dateTime62, dateTime69);
        java.lang.String str86 = dateTime69.format("                             100");
        int int87 = dateTime69.getDayOfWeek();
        net.ajaskey.common.DateTime dateTime89 = new net.ajaskey.common.DateTime(100L);
        int int90 = dateTime89.getMs();
        java.lang.String str91 = dateTime89.toString();
        java.util.Date date92 = dateTime89.getTime();
        java.util.Date date93 = dateTime89.getTime();
        dateTime69.set(date93);
        dateTime25.set(date93);
        dateTime8.set(date93);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str11, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Thursday" + "'", str19, "Thursday");
        org.junit.Assert.assertNull(simpleDateFormat20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(simpleDateFormat23);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "January" + "'", str30, "January");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "January" + "'", str37, "January");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        org.junit.Assert.assertNotNull(dateTime39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-1972.041095890411d) + "'", double47 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "BAD-DATE-FORMAT" + "'", str51, "BAD-DATE-FORMAT");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "BAD-DATE-FORMAT" + "'", str52, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + (-1972.041095890411d) + "'", double80 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(date82);
        org.junit.Assert.assertEquals(date82.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "                             100" + "'", str86, "                             100");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 4 + "'", int87 == 4);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 100 + "'", int90 == 100);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "31-Dec-1969" + "'", str91, "31-Dec-1969");
        org.junit.Assert.assertNotNull(date92);
        org.junit.Assert.assertEquals(date92.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertNotNull(date93);
        org.junit.Assert.assertEquals(date93.toString(), "Wed Dec 31 17:00:00 MST 1969");
    }

    @Test
    public void test7333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7333");
        java.lang.String[] strArray5 = new java.lang.String[] { "     5.00" };
        java.util.List<java.io.File> fileList6 = net.ajaskey.common.Utils.getDirTree("                                                 100", strArray5);
        java.util.List<java.io.File> fileList7 = net.ajaskey.common.Utils.getDirTree("", strArray5);
        java.util.List<java.io.File> fileList8 = net.ajaskey.common.Utils.getDirTree("                                                                                                                                                                                                                      2", strArray5);
        java.util.List<java.io.File> fileList9 = net.ajaskey.common.Utils.getDirTreestrArray5);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNull(fileList6);
        org.junit.Assert.assertNull(fileList7);
        org.junit.Assert.assertNull(fileList8);
        org.junit.Assert.assertNull(fileList9);
    }

    @Test
    public void test7334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7334");
        java.lang.String str2 = net.ajaskey.common.Utils.ifmt((int) (short) 10, (-239));
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "10                                                                                                                                                                                                                                             " + "'", str2, "10                                                                                                                                                                                                                                             ");
    }

    @Test
    public void test7335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7335");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean4 = dateTime3.isNull();
        int int5 = dateTime3.getDayOfYear();
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime("5.00", "     10");
        int int9 = dateTime8.getDayOfWeek();
        int int10 = dateTime8.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(11, (int) (short) 1, 365);
        boolean boolean15 = net.ajaskey.common.Utils.sameMonth(dateTime8, dateTime14);
        net.ajaskey.common.DateTime dateTime17 = dateTime8.parse("June");
        dateTime3.set(dateTime17);
        // The following exception was thrown during execution in test generation
        try {
            net.ajaskey.common.DateTime dateTime21 = dateTime17.parse("      78", "Thu 10-Apr-0002 10:44:19");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(dateTime17);
    }

    @Test
    public void test7336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7336");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime(dateTime2);
        boolean boolean7 = dateTime6.isNull();
        int int8 = dateTime6.getDayOfWeek();
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime((-59011286399903L));
        java.text.SimpleDateFormat simpleDateFormat12 = null;
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat12);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double16 = dateTime13.getDeltaYears(dateTime15);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean21 = dateTime15.isEqual(dateTime20);
        java.util.Calendar calendar22 = dateTime15.getCal();
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime(100L);
        int int25 = dateTime24.getMs();
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(100L);
        double double32 = dateTime29.getDeltaYears(dateTime31);
        java.text.SimpleDateFormat simpleDateFormat33 = dateTime29.getSdf();
        boolean boolean34 = dateTime24.isLessThanOrEqual(dateTime29);
        int int35 = dateTime24.getMinute();
        long long36 = dateTime15.getDeltaMilliSeconds(dateTime24);
        long long37 = dateTime10.getDeltaDays(dateTime15);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:42:54", "                       25");
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime((long) 10);
        boolean boolean43 = dateTime40.isGreaterThan(dateTime42);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat49 = null;
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat49);
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double53 = dateTime50.getDeltaYears(dateTime52);
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean58 = dateTime52.isEqual(dateTime57);
        java.util.Calendar calendar59 = dateTime52.getCal();
        boolean boolean60 = dateTime47.isLessThan(dateTime52);
        dateTime47.setFirstWorkDay();
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime(100L);
        double double68 = dateTime65.getDeltaYears(dateTime67);
        java.text.SimpleDateFormat simpleDateFormat70 = null;
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat70);
        net.ajaskey.common.DateTime dateTime73 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double74 = dateTime71.getDeltaYears(dateTime73);
        boolean boolean75 = dateTime71.isWeekday();
        boolean boolean76 = dateTime65.sameDate(dateTime71);
        boolean boolean77 = dateTime47.sameDate(dateTime65);
        dateTime65.set(0, 0, (int) (short) 0);
        boolean boolean82 = net.ajaskey.common.Utils.sameDate(dateTime40, dateTime65);
        double double83 = dateTime15.getDeltaYears(dateTime40);
        boolean boolean84 = net.ajaskey.common.Utils.sameDate(dateTime6, dateTime15);
        net.ajaskey.common.DateTime dateTime88 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean89 = dateTime88.isNull();
        java.lang.String str90 = dateTime88.getDay();
        java.text.SimpleDateFormat simpleDateFormat91 = dateTime88.getSdf();
        int int92 = dateTime88.getHour();
        net.ajaskey.common.DateTime dateTime93 = new net.ajaskey.common.DateTime(dateTime88);
        boolean boolean94 = dateTime93.isNull();
        long long95 = dateTime15.getDeltaDays(dateTime93);
        net.ajaskey.common.DateTime dateTime96 = null;
        long long97 = dateTime93.getDeltaMilliSeconds(dateTime96);
        net.ajaskey.common.DateTime dateTime99 = dateTime93.parse("Thu 10-Apr-0002 10:46:27");
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(calendar22);
        org.junit.Assert.assertEquals(calendar22.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-1972.041095890411d) + "'", double32 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 100L + "'", long36 == 100L);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-683000L) + "'", long37 == (-683000L));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(calendar59);
        org.junit.Assert.assertEquals(calendar59.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-1972.041095890411d) + "'", double68 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "Thursday" + "'", str90, "Thursday");
        org.junit.Assert.assertNull(simpleDateFormat91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 10 + "'", int92 == 10);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + long95 + "' != '" + 719795L + "'", long95 == 719795L);
        org.junit.Assert.assertTrue("'" + long97 + "' != '" + 0L + "'", long97 == 0L);
        org.junit.Assert.assertNull(dateTime99);
    }

    @Test
    public void test7337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7337");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean10 = dateTime4.isEqual(dateTime9);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(100L);
        int int13 = dateTime12.getMs();
        boolean boolean14 = dateTime9.isGreaterThanOrEqual(dateTime12);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(100L);
        dateTime16.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(100L);
        double double27 = dateTime24.getDeltaYears(dateTime26);
        boolean boolean28 = dateTime26.isWeekday();
        java.util.Date date29 = dateTime26.getTime();
        dateTime16.set(dateTime26);
        boolean boolean31 = net.ajaskey.common.Utils.sameDate(dateTime9, dateTime16);
        int int32 = dateTime9.getDayOfYear();
        dateTime9.set((int) 'a', 152, (int) (short) 100);
        java.util.Calendar calendar37 = dateTime9.getCal();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-1972.041095890411d) + "'", double27 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(date29);
        org.junit.Assert.assertEquals(date29.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        org.junit.Assert.assertNotNull(calendar37);
// flaky:         org.junit.Assert.assertEquals(calendar37.toString(), "java.util.GregorianCalendar[time=?,areFieldsSet=false,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=97,MONTH=152,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=100,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=23,MILLISECOND=232,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    }

    @Test
    public void test7338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7338");
        java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readGzipFile("Thu 10-Apr-0002 10:47:08", true);
        org.junit.Assert.assertNull(strList2);
    }

    @Test
    public void test7339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7339");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        boolean boolean6 = dateTime2.isWeekday();
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long11 = dateTime2.getDeltaDays(dateTime10);
        dateTime10.set((int) (short) -1, (int) (byte) 0, (int) ' ');
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat22 = null;
        java.text.SimpleDateFormat simpleDateFormat23 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("January", simpleDateFormat22, simpleDateFormat23);
        java.text.SimpleDateFormat simpleDateFormat27 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime("January", simpleDateFormat27);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime("", simpleDateFormat27);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime("", simpleDateFormat23, simpleDateFormat27);
        dateTime19.setSdf(simpleDateFormat23);
        java.util.Calendar calendar32 = dateTime19.getCal();
        dateTime10.set(calendar32);
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime(calendar32);
        int int35 = dateTime34.getDayOfWeek();
        java.lang.String str37 = dateTime34.format("                                                                                                                                                                                                                                                                       68");
        java.text.SimpleDateFormat simpleDateFormat38 = dateTime34.getSdf();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(simpleDateFormat23);
        org.junit.Assert.assertNotNull(simpleDateFormat27);
        org.junit.Assert.assertNotNull(calendar32);
// flaky:         org.junit.Assert.assertEquals(calendar32.toString(), "java.util.GregorianCalendar[time=-62190310356737,areFieldsSet=true,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=23,MILLISECOND=263,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 5 + "'", int35 == 5);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "                                                                                                                                                                                                                                                                       68" + "'", str37, "                                                                                                                                                                                                                                                                       68");
        org.junit.Assert.assertNull(simpleDateFormat38);
    }

    @Test
    public void test7340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7340");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean10 = dateTime4.isEqual(dateTime9);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(100L);
        int int13 = dateTime12.getMs();
        boolean boolean14 = dateTime9.isGreaterThanOrEqual(dateTime12);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime(100L);
        double double21 = dateTime18.getDeltaYears(dateTime20);
        int int22 = dateTime18.getHour();
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime();
        net.ajaskey.common.DateTime dateTime24 = null;
        boolean boolean25 = dateTime23.isGreaterThan(dateTime24);
        java.text.SimpleDateFormat simpleDateFormat27 = null;
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat27);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double31 = dateTime28.getDeltaYears(dateTime30);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean36 = dateTime30.isEqual(dateTime35);
        java.util.Calendar calendar37 = dateTime30.getCal();
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime(calendar37);
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime(calendar37);
        boolean boolean40 = dateTime23.isLessThan(dateTime39);
        boolean boolean41 = dateTime18.isLessThan(dateTime23);
        java.lang.String str43 = dateTime18.format("     0");
        long long44 = dateTime12.getDeltaMilliSeconds(dateTime18);
        java.lang.String str45 = dateTime12.toFullString();
        java.lang.String str46 = dateTime12.toFullString();
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime(dateTime12);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-1972.041095890411d) + "'", double21 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 10 + "'", int22 == 10);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(calendar37);
        org.junit.Assert.assertEquals(calendar37.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "     0" + "'", str43, "     0");
// flaky:         org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-62190310356820L) + "'", long44 == (-62190310356820L));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str45, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str46, "Wed 31-Dec-1969 17:00:00");
    }

    @Test
    public void test7341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7341");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(100L);
        long long10 = dateTime7.getDeltaDays(dateTime9);
        int int11 = dateTime7.getHour();
        dateTime7.add((int) (byte) 100, (int) (byte) 0);
        double double15 = dateTime3.getDeltaYears(dateTime7);
        java.lang.String str16 = dateTime3.format();
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-719795L) + "'", long10 == (-719795L));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "BAD-DATE-FORMAT" + "'", str16, "BAD-DATE-FORMAT");
    }

    @Test
    public void test7342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7342");
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat6 = null;
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat6);
        boolean boolean8 = net.ajaskey.common.Utils.sameDate(dateTime4, dateTime7);
        java.lang.String str9 = dateTime4.toString();
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime("                                                                                              100", "100");
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(100L);
        int int16 = dateTime15.getMs();
        java.text.SimpleDateFormat simpleDateFormat17 = net.ajaskey.common.Utils.sdf;
        dateTime15.setSdf(simpleDateFormat17);
        java.text.SimpleDateFormat simpleDateFormat19 = net.ajaskey.common.Utils.sdfFull;
        dateTime15.setSdf(simpleDateFormat19);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("Mon 10-Apr-0002 00:00:00", simpleDateFormat19);
        dateTime12.setSdf(simpleDateFormat19);
        dateTime4.setSdf(simpleDateFormat19);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("                                                                                                                                                                                                                                                                       68", simpleDateFormat19);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "10-Apr-0002" + "'", str9, "10-Apr-0002");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat17);
        org.junit.Assert.assertNotNull(simpleDateFormat19);
    }

    @Test
    public void test7343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7343");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        java.text.SimpleDateFormat simpleDateFormat10 = dateTime6.getSdf();
        boolean boolean11 = dateTime1.isLessThanOrEqual(dateTime6);
        java.text.SimpleDateFormat simpleDateFormat13 = null;
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat13);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double17 = dateTime14.getDeltaYears(dateTime16);
        boolean boolean18 = dateTime14.isWeekday();
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long23 = dateTime14.getDeltaDays(dateTime22);
        long long24 = dateTime1.getDeltaDays(dateTime22);
        java.lang.String str25 = dateTime22.toFullString();
        java.util.Calendar calendar26 = dateTime22.getCal();
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(calendar26);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean32 = dateTime31.isNull();
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime(100L);
        int int35 = dateTime34.getMs();
        boolean boolean36 = dateTime34.isNull();
        java.util.Calendar calendar37 = dateTime34.getCal();
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime(calendar37);
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime(calendar37);
        dateTime31.set(calendar37);
        boolean boolean41 = dateTime27.isEqual(dateTime31);
        int int42 = dateTime31.getMinute();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 719795L + "'", long24 == 719795L);
// flaky:         org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Thu 10-Apr-0002 10:47:23" + "'", str25, "Thu 10-Apr-0002 10:47:23");
        org.junit.Assert.assertNotNull(calendar26);
// flaky:         org.junit.Assert.assertEquals(calendar26.toString(), "java.util.GregorianCalendar[time=-62190310356673,areFieldsSet=true,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=23,MILLISECOND=327,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(calendar37);
        org.junit.Assert.assertEquals(calendar37.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
    }

    @Test
    public void test7344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7344");
        java.text.SimpleDateFormat simpleDateFormat2 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime("January", simpleDateFormat2);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime("", simpleDateFormat2);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
        double double12 = dateTime9.getDeltaYears(dateTime11);
        int int13 = dateTime9.getHour();
        dateTime9.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat18 = null;
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat18);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double22 = dateTime19.getDeltaYears(dateTime21);
        boolean boolean23 = dateTime9.isEqual(dateTime21);
        java.text.SimpleDateFormat simpleDateFormat25 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat27 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat28 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime("", simpleDateFormat27, simpleDateFormat28);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat25, simpleDateFormat28);
        dateTime9.setSdf(simpleDateFormat25);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat38 = null;
        java.text.SimpleDateFormat simpleDateFormat39 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime("January", simpleDateFormat38, simpleDateFormat39);
        java.text.SimpleDateFormat simpleDateFormat43 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime("January", simpleDateFormat43);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime("", simpleDateFormat43);
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime("", simpleDateFormat39, simpleDateFormat43);
        dateTime35.setSdf(simpleDateFormat39);
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime("December", simpleDateFormat25, simpleDateFormat39);
        dateTime4.set(dateTime48);
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime(8, (int) (short) 0, 0);
        java.util.Calendar calendar54 = dateTime53.getCal();
        boolean boolean55 = dateTime48.isLessThan(dateTime53);
        java.text.SimpleDateFormat simpleDateFormat57 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat58 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime("", simpleDateFormat57, simpleDateFormat58);
        java.util.Date date60 = dateTime59.getTime();
        net.ajaskey.common.DateTime dateTime61 = dateTime53.copy(dateTime59);
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime(100L);
        int int64 = dateTime63.getMs();
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime(100L);
        double double71 = dateTime68.getDeltaYears(dateTime70);
        java.text.SimpleDateFormat simpleDateFormat72 = dateTime68.getSdf();
        boolean boolean73 = dateTime63.isLessThanOrEqual(dateTime68);
        net.ajaskey.common.DateTime dateTime74 = new net.ajaskey.common.DateTime(dateTime63);
        java.text.SimpleDateFormat simpleDateFormat76 = null;
        net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat76);
        net.ajaskey.common.DateTime dateTime79 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double80 = dateTime77.getDeltaYears(dateTime79);
        net.ajaskey.common.DateTime dateTime84 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean85 = dateTime79.isEqual(dateTime84);
        java.lang.String str86 = dateTime84.getDay();
        boolean boolean87 = dateTime74.isLessThanOrEqual(dateTime84);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean88 = dateTime61.isGreaterThanOrEqual(dateTime74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(simpleDateFormat2);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1972.041095890411d) + "'", double12 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10 + "'", int13 == 10);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(simpleDateFormat25);
        org.junit.Assert.assertNotNull(simpleDateFormat27);
        org.junit.Assert.assertNotNull(simpleDateFormat28);
        org.junit.Assert.assertNotNull(simpleDateFormat39);
        org.junit.Assert.assertNotNull(simpleDateFormat43);
        org.junit.Assert.assertNotNull(calendar54);
// flaky:         org.junit.Assert.assertEquals(calendar54.toString(), "java.util.GregorianCalendar[time=?,areFieldsSet=false,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=8,MONTH=0,WEEK_OF_YEAR=26,WEEK_OF_MONTH=4,DAY_OF_MONTH=0,DAY_OF_YEAR=177,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=4,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=23,MILLISECOND=345,ZONE_OFFSET=-25200000,DST_OFFSET=3600000]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(simpleDateFormat57);
        org.junit.Assert.assertNotNull(simpleDateFormat58);
        org.junit.Assert.assertNull(date60);
        org.junit.Assert.assertNull(dateTime61);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 100 + "'", int64 == 100);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-1972.041095890411d) + "'", double71 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "Thursday" + "'", str86, "Thursday");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test7345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7345");
        net.ajaskey.common.DateTime dateTime0 = null;
        java.text.SimpleDateFormat simpleDateFormat2 = null;
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat2);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        boolean boolean7 = dateTime3.isWeekday();
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long12 = dateTime3.getDeltaDays(dateTime11);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(dateTime3);
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(100L);
        double double20 = dateTime17.getDeltaYears(dateTime19);
        boolean boolean21 = dateTime19.isWeekday();
        java.util.Date date22 = dateTime19.getTime();
        dateTime3.set(date22);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime(100L);
        int int26 = dateTime25.getMs();
        java.lang.String str27 = dateTime25.toString();
        boolean boolean28 = dateTime3.isLessThanOrEqual(dateTime25);
        net.ajaskey.common.DateTime dateTime31 = dateTime3.parse("           35", "Wed 31-Dec-1969 17:00:00");
        boolean boolean32 = net.ajaskey.common.Utils.sameMonth(dateTime0, dateTime3);
        dateTime3.setFirstWorkDay();
        dateTime3.set(50, (int) ' ', 55);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-1972.041095890411d) + "'", double20 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(date22);
        org.junit.Assert.assertEquals(date22.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "31-Dec-1969" + "'", str27, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(dateTime31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test7346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7346");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        java.text.SimpleDateFormat simpleDateFormat8 = null;
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double12 = dateTime9.getDeltaYears(dateTime11);
        boolean boolean13 = dateTime9.isWeekday();
        boolean boolean14 = dateTime3.sameDate(dateTime9);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime(100L);
        double double21 = dateTime18.getDeltaYears(dateTime20);
        java.text.SimpleDateFormat simpleDateFormat23 = null;
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat23);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double27 = dateTime24.getDeltaYears(dateTime26);
        boolean boolean28 = dateTime24.isWeekday();
        boolean boolean29 = dateTime18.sameDate(dateTime24);
        java.text.SimpleDateFormat simpleDateFormat31 = null;
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat31);
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double35 = dateTime32.getDeltaYears(dateTime34);
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean40 = dateTime34.isEqual(dateTime39);
        dateTime18.set(dateTime39);
        long long42 = dateTime3.getDeltaMilliSeconds(dateTime39);
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat48 = null;
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat48);
        boolean boolean50 = net.ajaskey.common.Utils.sameDate(dateTime46, dateTime49);
        boolean boolean51 = net.ajaskey.common.Utils.sameDate(dateTime3, dateTime49);
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime(100L);
        dateTime53.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime(100L);
        double double64 = dateTime61.getDeltaYears(dateTime63);
        boolean boolean65 = dateTime63.isWeekday();
        java.util.Date date66 = dateTime63.getTime();
        dateTime53.set(dateTime63);
        boolean boolean68 = dateTime49.sameDate(dateTime63);
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime((long) 3);
        boolean boolean71 = dateTime49.isGreaterThanOrEqual(dateTime70);
        java.lang.String str72 = dateTime49.toFullString();
        java.lang.String str73 = dateTime49.getMonth();
        net.ajaskey.common.DateTime dateTime76 = dateTime49.parse("Wed 12-Apr-0139 10:44:34", "");
        int int77 = dateTime49.getSecond();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-1972.041095890411d) + "'", double21 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-1972.041095890411d) + "'", double64 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(date66);
        org.junit.Assert.assertEquals(date66.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Invalid Time" + "'", str72, "Invalid Time");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "UNKNOWN" + "'", str73, "UNKNOWN");
        org.junit.Assert.assertNull(dateTime76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
    }

    @Test
    public void test7347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7347");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("BAD-DATE-FORMAT", "                                                                                               52.00");
        int int3 = dateTime2.getMinute();
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(100L);
        double double10 = dateTime7.getDeltaYears(dateTime9);
        boolean boolean11 = dateTime9.isWeekday();
        int int12 = dateTime9.getDayOfYear();
        boolean boolean13 = dateTime2.isEqual(dateTime9);
        int int14 = dateTime2.getMs();
        java.lang.String str15 = dateTime2.toString();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1972.041095890411d) + "'", double10 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 365 + "'", int12 == 365);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test7348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7348");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(35, 262, 0);
        boolean boolean4 = dateTime3.isWeekday();
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
        double double12 = dateTime9.getDeltaYears(dateTime11);
        int int13 = dateTime9.getHour();
        dateTime9.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat18 = null;
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat18);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double22 = dateTime19.getDeltaYears(dateTime21);
        boolean boolean23 = dateTime9.isEqual(dateTime21);
        int int24 = dateTime9.getMinute();
        dateTime9.setFirstWorkDay();
        int int26 = dateTime9.getMinute();
        java.text.SimpleDateFormat simpleDateFormat29 = null;
        java.text.SimpleDateFormat simpleDateFormat30 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime("January", simpleDateFormat29, simpleDateFormat30);
        java.text.SimpleDateFormat simpleDateFormat34 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("January", simpleDateFormat34);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime("", simpleDateFormat34);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime("", simpleDateFormat30, simpleDateFormat34);
        dateTime9.setSdf(simpleDateFormat30);
        java.text.SimpleDateFormat simpleDateFormat42 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat44 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat45 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime("", simpleDateFormat44, simpleDateFormat45);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat42, simpleDateFormat45);
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat54 = null;
        java.text.SimpleDateFormat simpleDateFormat55 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime("January", simpleDateFormat54, simpleDateFormat55);
        java.text.SimpleDateFormat simpleDateFormat59 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime("January", simpleDateFormat59);
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime("", simpleDateFormat59);
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime("", simpleDateFormat55, simpleDateFormat59);
        dateTime51.setSdf(simpleDateFormat55);
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime("", simpleDateFormat45, simpleDateFormat55);
        java.text.SimpleDateFormat simpleDateFormat67 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat68 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime("", simpleDateFormat67, simpleDateFormat68);
        java.text.SimpleDateFormat simpleDateFormat72 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat73 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime74 = new net.ajaskey.common.DateTime("", simpleDateFormat72, simpleDateFormat73);
        net.ajaskey.common.DateTime dateTime76 = new net.ajaskey.common.DateTime(100L);
        int int77 = dateTime76.getMs();
        java.text.SimpleDateFormat simpleDateFormat78 = net.ajaskey.common.Utils.sdf;
        dateTime76.setSdf(simpleDateFormat78);
        net.ajaskey.common.DateTime dateTime80 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat73, simpleDateFormat78);
        net.ajaskey.common.DateTime dateTime81 = new net.ajaskey.common.DateTime("     0", simpleDateFormat68, simpleDateFormat78);
        net.ajaskey.common.DateTime dateTime82 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:43:16", simpleDateFormat55, simpleDateFormat68);
        net.ajaskey.common.DateTime dateTime83 = new net.ajaskey.common.DateTime("                     8.00", simpleDateFormat30, simpleDateFormat68);
        boolean boolean84 = dateTime3.isGreaterThan(dateTime83);
        java.lang.Class<?> wildcardClass85 = dateTime3.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1972.041095890411d) + "'", double12 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10 + "'", int13 == 10);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 47 + "'", int24 == 47);
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 47 + "'", int26 == 47);
        org.junit.Assert.assertNotNull(simpleDateFormat30);
        org.junit.Assert.assertNotNull(simpleDateFormat34);
        org.junit.Assert.assertNotNull(simpleDateFormat42);
        org.junit.Assert.assertNotNull(simpleDateFormat44);
        org.junit.Assert.assertNotNull(simpleDateFormat45);
        org.junit.Assert.assertNotNull(simpleDateFormat55);
        org.junit.Assert.assertNotNull(simpleDateFormat59);
        org.junit.Assert.assertNotNull(simpleDateFormat67);
        org.junit.Assert.assertNotNull(simpleDateFormat68);
        org.junit.Assert.assertNotNull(simpleDateFormat72);
        org.junit.Assert.assertNotNull(simpleDateFormat73);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 100 + "'", int77 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat78);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test7349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7349");
        java.util.Date date0 = null;
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(date0);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime(100L);
        double double8 = dateTime5.getDeltaYears(dateTime7);
        int int9 = dateTime5.getHour();
        java.text.SimpleDateFormat simpleDateFormat11 = null;
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat11);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double15 = dateTime12.getDeltaYears(dateTime14);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean20 = dateTime14.isEqual(dateTime19);
        java.util.Calendar calendar21 = dateTime14.getCal();
        dateTime5.set(calendar21);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime(calendar21);
        net.ajaskey.common.DateTime dateTime24 = dateTime1.copy(dateTime23);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime(100L);
        double double31 = dateTime28.getDeltaYears(dateTime30);
        boolean boolean32 = dateTime30.isWeekday();
        int int33 = dateTime30.getDayOfYear();
        long long34 = dateTime24.getDeltaMilliSeconds(dateTime30);
        java.util.Calendar calendar35 = dateTime24.getCal();
        java.text.SimpleDateFormat simpleDateFormat36 = null;
        dateTime24.setSdf(simpleDateFormat36);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime(100L);
        double double44 = dateTime41.getDeltaYears(dateTime43);
        int int45 = dateTime41.getHour();
        java.text.SimpleDateFormat simpleDateFormat47 = null;
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat47);
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double51 = dateTime48.getDeltaYears(dateTime50);
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean56 = dateTime50.isEqual(dateTime55);
        java.util.Calendar calendar57 = dateTime50.getCal();
        java.lang.String str58 = dateTime50.format();
        net.ajaskey.common.DateTime dateTime59 = null;
        long long60 = dateTime50.getDeltaDays(dateTime59);
        int int61 = dateTime50.getSecond();
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime(100L);
        double double68 = dateTime65.getDeltaYears(dateTime67);
        java.text.SimpleDateFormat simpleDateFormat70 = null;
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat70);
        net.ajaskey.common.DateTime dateTime73 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double74 = dateTime71.getDeltaYears(dateTime73);
        boolean boolean75 = dateTime71.isWeekday();
        boolean boolean76 = dateTime65.sameDate(dateTime71);
        int int77 = dateTime71.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime78 = dateTime50.copy(dateTime71);
        dateTime41.set(dateTime71);
        net.ajaskey.common.DateTime dateTime83 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat86 = null;
        java.text.SimpleDateFormat simpleDateFormat87 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime88 = new net.ajaskey.common.DateTime("January", simpleDateFormat86, simpleDateFormat87);
        java.text.SimpleDateFormat simpleDateFormat91 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime92 = new net.ajaskey.common.DateTime("January", simpleDateFormat91);
        net.ajaskey.common.DateTime dateTime93 = new net.ajaskey.common.DateTime("", simpleDateFormat91);
        net.ajaskey.common.DateTime dateTime94 = new net.ajaskey.common.DateTime("", simpleDateFormat87, simpleDateFormat91);
        dateTime83.setSdf(simpleDateFormat87);
        java.util.Calendar calendar96 = dateTime83.getCal();
        dateTime71.set(calendar96);
        net.ajaskey.common.DateTime dateTime98 = new net.ajaskey.common.DateTime(calendar96);
        dateTime24.set(calendar96);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-1972.041095890411d) + "'", double8 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(calendar21);
        org.junit.Assert.assertEquals(calendar21.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(dateTime24);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-1972.041095890411d) + "'", double31 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 365 + "'", int33 == 365);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 100L + "'", long34 == 100L);
        org.junit.Assert.assertNotNull(calendar35);
// flaky:         org.junit.Assert.assertEquals(calendar35.toString(), "java.util.GregorianCalendar[time=-62190310356555,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=23,MILLISECOND=445,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-1972.041095890411d) + "'", double44 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 10 + "'", int45 == 10);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(calendar57);
        org.junit.Assert.assertEquals(calendar57.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "BAD-DATE-FORMAT" + "'", str58, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-1972.041095890411d) + "'", double68 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNull(dateTime78);
        org.junit.Assert.assertNotNull(simpleDateFormat87);
        org.junit.Assert.assertNotNull(simpleDateFormat91);
        org.junit.Assert.assertNotNull(calendar96);
// flaky:         org.junit.Assert.assertEquals(calendar96.toString(), "java.util.GregorianCalendar[time=-62190310356555,areFieldsSet=true,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=23,MILLISECOND=445,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    }

    @Test
    public void test7350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7350");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:43:41", "");
        java.lang.String str4 = dateTime2.format("21-Jan-0040");
        dateTime2.set(956, 134, 36);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "BAD-DATE-FORMAT" + "'", str4, "BAD-DATE-FORMAT");
    }

    @Test
    public void test7351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7351");
        java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readTextFile("Fri 11-Jan-0032 10:45:34", true);
        java.lang.String str3 = net.ajaskey.common.TextUtils.toString(strList2);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
    }

    @Test
    public void test7352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7352");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:42:59", "     10");
        net.ajaskey.common.DateTime dateTime5 = dateTime2.parse(" 1.00", "                                                   54");
        java.text.SimpleDateFormat simpleDateFormat7 = null;
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat7);
        java.util.Calendar calendar9 = dateTime8.getCal();
        int int10 = dateTime8.getDayOfWeek();
        boolean boolean11 = dateTime2.isGreaterThanOrEqual(dateTime8);
        org.junit.Assert.assertNull(dateTime5);
        org.junit.Assert.assertNull(calendar9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test7353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7353");
        java.text.SimpleDateFormat simpleDateFormat1 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat3 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime("", simpleDateFormat3, simpleDateFormat4);
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat1, simpleDateFormat4);
        int int7 = dateTime6.getYear();
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(100L);
        double double14 = dateTime11.getDeltaYears(dateTime13);
        java.text.SimpleDateFormat simpleDateFormat16 = null;
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double20 = dateTime17.getDeltaYears(dateTime19);
        boolean boolean21 = dateTime17.isWeekday();
        boolean boolean22 = dateTime11.sameDate(dateTime17);
        java.text.SimpleDateFormat simpleDateFormat24 = null;
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat24);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double28 = dateTime25.getDeltaYears(dateTime27);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean33 = dateTime27.isEqual(dateTime32);
        dateTime11.set(dateTime32);
        int int35 = dateTime32.getDayOfWeek();
        boolean boolean36 = dateTime6.isLessThan(dateTime32);
        dateTime32.add(40, (-1960));
        net.ajaskey.common.DateTime dateTime42 = dateTime32.parse
        org.junit.Assert.assertNotNull(simpleDateFormat1);
        org.junit.Assert.assertNotNull(simpleDateFormat3);
        org.junit.Assert.assertNotNull(simpleDateFormat4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + (-1972.041095890411d) + "'", double14 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 5 + "'", int35 == 5);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(dateTime42);
    }

    @Test
    public void test7354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7354");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(22, 4, 26);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        dateTime5.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str10 = dateTime5.getMonth();
        int int11 = dateTime5.getMs();
        java.text.SimpleDateFormat simpleDateFormat15 = null;
        java.text.SimpleDateFormat simpleDateFormat16 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("January", simpleDateFormat15, simpleDateFormat16);
        java.text.SimpleDateFormat simpleDateFormat20 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("January", simpleDateFormat20);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime("", simpleDateFormat20);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime("", simpleDateFormat16, simpleDateFormat20);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("Wed 31-Dec-1969 17:00:00", simpleDateFormat20);
        int int25 = dateTime24.getMs();
        boolean boolean26 = dateTime5.isEqual(dateTime24);
        int int27 = dateTime5.getDayOfWeek();
        long long28 = dateTime3.getDeltaMilliSeconds(dateTime5);
        boolean boolean29 = dateTime3.isWeekday();
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(100L);
        int int32 = dateTime31.getMs();
        java.lang.String str33 = dateTime31.toString();
        dateTime31.set(25, (-1), (int) (short) 10);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime(100L);
        double double44 = dateTime41.getDeltaYears(dateTime43);
        boolean boolean45 = dateTime43.isWeekday();
        boolean boolean46 = net.ajaskey.common.Utils.sameMonth(dateTime31, dateTime43);
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime((long) (short) 0);
        int int49 = dateTime48.getHour();
        boolean boolean50 = dateTime48.isNull();
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime(dateTime48);
        boolean boolean52 = dateTime43.isGreaterThan(dateTime48);
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime(100L);
        int int55 = dateTime54.getMs();
        boolean boolean56 = dateTime54.isWeekday();
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime((long) (short) 0);
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime(100L);
        int int61 = dateTime60.getMs();
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime(100L);
        double double68 = dateTime65.getDeltaYears(dateTime67);
        java.text.SimpleDateFormat simpleDateFormat69 = dateTime65.getSdf();
        boolean boolean70 = dateTime60.isLessThanOrEqual(dateTime65);
        java.text.SimpleDateFormat simpleDateFormat72 = null;
        net.ajaskey.common.DateTime dateTime73 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat72);
        net.ajaskey.common.DateTime dateTime75 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double76 = dateTime73.getDeltaYears(dateTime75);
        boolean boolean77 = dateTime73.isWeekday();
        net.ajaskey.common.DateTime dateTime81 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long82 = dateTime73.getDeltaDays(dateTime81);
        long long83 = dateTime60.getDeltaDays(dateTime81);
        net.ajaskey.common.DateTime dateTime85 = new net.ajaskey.common.DateTime(100L);
        dateTime85.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean90 = dateTime85.isWeekday();
        int int91 = dateTime60.getYears(dateTime85);
        int int92 = dateTime60.getYear();
        java.util.Calendar calendar93 = dateTime60.getCal();
        net.ajaskey.common.DateTime dateTime94 = dateTime58.copy(dateTime60);
        boolean boolean95 = dateTime54.isGreaterThan(dateTime60);
        boolean boolean96 = dateTime43.sameDate(dateTime60);
        net.ajaskey.common.DateTime dateTime98 = dateTime60.parse("   42.00");
        long long99 = dateTime3.getDeltaMilliSeconds(dateTime60);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "January" + "'", str10, "January");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat16);
        org.junit.Assert.assertNotNull(simpleDateFormat20);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 7 + "'", int27 == 7);
// flaky:         org.junit.Assert.assertTrue("'" + long28 + "' != '" + 2449203156570L + "'", long28 == 2449203156570L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "31-Dec-1969" + "'", str33, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-1972.041095890411d) + "'", double44 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 5 + "'", int49 == 5);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-1972.041095890411d) + "'", double68 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 0L + "'", long82 == 0L);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 719795L + "'", long83 == 719795L);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1870) + "'", int91 == (-1870));
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 1969 + "'", int92 == 1969);
        org.junit.Assert.assertNotNull(calendar93);
        org.junit.Assert.assertEquals(calendar93.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(dateTime94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertNull(dateTime98);
// flaky:         org.junit.Assert.assertTrue("'" + long99 + "' != '" + 61460489556570L + "'", long99 == 61460489556570L);
    }

    @Test
    public void test7355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7355");
        java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat4);
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime(100L);
        int int8 = dateTime7.getMs();
        java.lang.String str9 = dateTime7.toString();
        java.util.Date date10 = dateTime7.getTime();
        int int11 = dateTime7.getDayOfYear();
        java.text.SimpleDateFormat simpleDateFormat13 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat14 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime("", simpleDateFormat13, simpleDateFormat14);
        dateTime7.setSdf(simpleDateFormat13);
        dateTime5.setSdf(simpleDateFormat13);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(100L);
        double double27 = dateTime24.getDeltaYears(dateTime26);
        int int28 = dateTime24.getHour();
        dateTime24.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat33 = null;
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat33);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double37 = dateTime34.getDeltaYears(dateTime36);
        boolean boolean38 = dateTime24.isEqual(dateTime36);
        java.text.SimpleDateFormat simpleDateFormat40 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat42 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat43 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime("", simpleDateFormat42, simpleDateFormat43);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat40, simpleDateFormat43);
        dateTime24.setSdf(simpleDateFormat40);
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat53 = null;
        java.text.SimpleDateFormat simpleDateFormat54 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime("January", simpleDateFormat53, simpleDateFormat54);
        java.text.SimpleDateFormat simpleDateFormat58 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime("January", simpleDateFormat58);
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime("", simpleDateFormat58);
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime("", simpleDateFormat54, simpleDateFormat58);
        dateTime50.setSdf(simpleDateFormat54);
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime("December", simpleDateFormat40, simpleDateFormat54);
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime("5.00", simpleDateFormat54);
        net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime(100L);
        int int67 = dateTime66.getMs();
        java.text.SimpleDateFormat simpleDateFormat68 = net.ajaskey.common.Utils.sdf;
        dateTime66.setSdf(simpleDateFormat68);
        int int70 = dateTime66.getDayOfWeek();
        java.text.SimpleDateFormat simpleDateFormat71 = dateTime66.getSdf();
        net.ajaskey.common.DateTime dateTime72 = new net.ajaskey.common.DateTime("Sat 04-Jan-0100 17:00:00", simpleDateFormat54, simpleDateFormat71);
        net.ajaskey.common.DateTime dateTime73 = new net.ajaskey.common.DateTime("                             365", simpleDateFormat13, simpleDateFormat71);
        net.ajaskey.common.DateTime dateTime74 = new net.ajaskey.common.DateTime("", simpleDateFormat71);
        net.ajaskey.common.DateTime dateTime75 = new net.ajaskey.common.DateTime("Thu 30-Sep-0252 10:44:52", simpleDateFormat71);
        java.lang.String str76 = dateTime75.format();
        java.util.Calendar calendar77 = dateTime75.getCal();
        org.junit.Assert.assertNotNull(simpleDateFormat4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "31-Dec-1969" + "'", str9, "31-Dec-1969");
        org.junit.Assert.assertNotNull(date10);
        org.junit.Assert.assertEquals(date10.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 365 + "'", int11 == 365);
        org.junit.Assert.assertNotNull(simpleDateFormat13);
        org.junit.Assert.assertNotNull(simpleDateFormat14);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-1972.041095890411d) + "'", double27 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 10 + "'", int28 == 10);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(simpleDateFormat40);
        org.junit.Assert.assertNotNull(simpleDateFormat42);
        org.junit.Assert.assertNotNull(simpleDateFormat43);
        org.junit.Assert.assertNotNull(simpleDateFormat54);
        org.junit.Assert.assertNotNull(simpleDateFormat58);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 100 + "'", int67 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat68);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 4 + "'", int70 == 4);
        org.junit.Assert.assertNotNull(simpleDateFormat71);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "BAD-DATE-FORMAT" + "'", str76, "BAD-DATE-FORMAT");
        org.junit.Assert.assertNull(calendar77);
    }

    @Test
    public void test7356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7356");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(33, 1967, 278);
    }

    @Test
    public void test7357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7357");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime7 = dateTime4.parse("January                                                                                               52.00                                                                                               52.00                                                                                               52.00                                                                                               52.00hi!                                                                                               52.00");
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("5.00", "     10");
        int int11 = dateTime10.getDayOfWeek();
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(100L);
        int int14 = dateTime13.getMs();
        boolean boolean15 = dateTime13.isWeekday();
        int int16 = dateTime13.getHour();
        java.text.SimpleDateFormat simpleDateFormat18 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime("January", simpleDateFormat18);
        dateTime13.setSdf(simpleDateFormat18);
        java.text.SimpleDateFormat simpleDateFormat24 = null;
        java.text.SimpleDateFormat simpleDateFormat25 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime("January", simpleDateFormat24, simpleDateFormat25);
        java.text.SimpleDateFormat simpleDateFormat29 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime("January", simpleDateFormat29);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime("", simpleDateFormat29);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime("", simpleDateFormat25, simpleDateFormat29);
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime("Wed 31-Dec-1969 17:00:00", simpleDateFormat29);
        boolean boolean34 = net.ajaskey.common.Utils.sameMonth(dateTime13, dateTime33);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime(31, 108, 1969);
        java.text.SimpleDateFormat simpleDateFormat43 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat44 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime("", simpleDateFormat43, simpleDateFormat44);
        java.text.SimpleDateFormat simpleDateFormat47 = null;
        java.text.SimpleDateFormat simpleDateFormat48 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime("January", simpleDateFormat47, simpleDateFormat48);
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat43, simpleDateFormat48);
        java.text.SimpleDateFormat simpleDateFormat53 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat54 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime("", simpleDateFormat53, simpleDateFormat54);
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime(100L);
        int int58 = dateTime57.getMs();
        java.text.SimpleDateFormat simpleDateFormat59 = net.ajaskey.common.Utils.sdf;
        dateTime57.setSdf(simpleDateFormat59);
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat54, simpleDateFormat59);
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime("                             100", simpleDateFormat48, simpleDateFormat54);
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime("11", simpleDateFormat48);
        dateTime38.setSdf(simpleDateFormat48);
        java.lang.String str65 = dateTime38.getMonth();
        double double66 = dateTime33.getDeltaYears(dateTime38);
        java.util.Date date67 = dateTime38.getTime();
        net.ajaskey.common.DateTime dateTime68 = dateTime10.copy(dateTime38);
        java.lang.String str69 = dateTime68.toFullString();
        net.ajaskey.common.DateTime dateTime73 = new net.ajaskey.common.DateTime((-1928), 861, 57);
        boolean boolean74 = net.ajaskey.common.Utils.sameMonth(dateTime68, dateTime73);
        int int75 = dateTime4.getYears(dateTime68);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNull(dateTime7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 5 + "'", int16 == 5);
        org.junit.Assert.assertNotNull(simpleDateFormat18);
        org.junit.Assert.assertNotNull(simpleDateFormat25);
        org.junit.Assert.assertNotNull(simpleDateFormat29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(simpleDateFormat43);
        org.junit.Assert.assertNotNull(simpleDateFormat44);
        org.junit.Assert.assertNotNull(simpleDateFormat48);
        org.junit.Assert.assertNotNull(simpleDateFormat53);
        org.junit.Assert.assertNotNull(simpleDateFormat54);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat59);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "May" + "'", str65, "May");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(date67);
// flaky:         org.junit.Assert.assertEquals(date67.toString(), "Sat May 22 10:47:23 MST 45");
        org.junit.Assert.assertNotNull(dateTime68);
// flaky:         org.junit.Assert.assertEquals("'" + str69 + "' != '" + "Sat 22-May-0045 10:47:23" + "'", str69, "Sat 22-May-0045 10:47:23");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1925) + "'", int75 == (-1925));
    }

    @Test
    public void test7358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7358");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) 3);
        int int2 = dateTime1.getMs();
        dateTime1.setFirstWorkDay();
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime((long) (short) 0);
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime(100L);
        int int8 = dateTime7.getMs();
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(100L);
        double double15 = dateTime12.getDeltaYears(dateTime14);
        java.text.SimpleDateFormat simpleDateFormat16 = dateTime12.getSdf();
        boolean boolean17 = dateTime7.isLessThanOrEqual(dateTime12);
        java.text.SimpleDateFormat simpleDateFormat19 = null;
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat19);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double23 = dateTime20.getDeltaYears(dateTime22);
        boolean boolean24 = dateTime20.isWeekday();
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long29 = dateTime20.getDeltaDays(dateTime28);
        long long30 = dateTime7.getDeltaDays(dateTime28);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime(100L);
        dateTime32.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean37 = dateTime32.isWeekday();
        int int38 = dateTime7.getYears(dateTime32);
        int int39 = dateTime7.getYear();
        java.util.Calendar calendar40 = dateTime7.getCal();
        net.ajaskey.common.DateTime dateTime41 = dateTime5.copy(dateTime7);
        java.util.Calendar calendar42 = dateTime7.getCal();
        dateTime1.set(calendar42);
        net.ajaskey.common.DateTime dateTime46 = dateTime1.parse("Thu 10-Apr-0002 10:44:32", "       4");
        java.text.SimpleDateFormat simpleDateFormat48 = null;
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat48);
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double52 = dateTime49.getDeltaYears(dateTime51);
        boolean boolean53 = dateTime49.isWeekday();
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long58 = dateTime49.getDeltaDays(dateTime57);
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime(dateTime49);
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime(100L);
        double double66 = dateTime63.getDeltaYears(dateTime65);
        boolean boolean67 = dateTime65.isWeekday();
        java.util.Date date68 = dateTime65.getTime();
        dateTime49.set(date68);
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime(100L);
        int int72 = dateTime71.getMs();
        java.lang.String str73 = dateTime71.toString();
        boolean boolean74 = dateTime49.isLessThanOrEqual(dateTime71);
        net.ajaskey.common.DateTime dateTime77 = dateTime49.parse("", "100.00");
        int int78 = dateTime49.getYear();
        double double79 = dateTime1.getDeltaYears(dateTime49);
        java.util.Calendar calendar80 = dateTime1.getCal();
        net.ajaskey.common.DateTime dateTime82 = new net.ajaskey.common.DateTime(100L);
        int int83 = dateTime82.getMs();
        java.lang.String str84 = dateTime82.toString();
        int int85 = dateTime82.getDayOfYear();
        net.ajaskey.common.DateTime dateTime86 = dateTime1.copy(dateTime82);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 3 + "'", int2 == 3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-1972.041095890411d) + "'", double15 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 719795L + "'", long30 == 719795L);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1870) + "'", int38 == (-1870));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1969 + "'", int39 == 1969);
        org.junit.Assert.assertNotNull(calendar40);
        org.junit.Assert.assertEquals(calendar40.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(dateTime41);
        org.junit.Assert.assertNotNull(calendar42);
        org.junit.Assert.assertEquals(calendar42.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNull(dateTime46);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-1972.041095890411d) + "'", double66 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(date68);
        org.junit.Assert.assertEquals(date68.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 100 + "'", int72 == 100);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "31-Dec-1969" + "'", str73, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(dateTime77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1969 + "'", int78 == 1969);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        org.junit.Assert.assertNotNull(calendar80);
        org.junit.Assert.assertEquals(calendar80.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 100 + "'", int83 == 100);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "31-Dec-1969" + "'", str84, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 365 + "'", int85 == 365);
        org.junit.Assert.assertNotNull(dateTime86);
    }

    @Test
    public void test7359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7359");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        boolean boolean6 = dateTime2.isWeekday();
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long11 = dateTime2.getDeltaDays(dateTime10);
        dateTime10.set((int) (short) -1, (int) (byte) 0, (int) ' ');
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(100L);
        double double22 = dateTime19.getDeltaYears(dateTime21);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(100L);
        double double29 = dateTime26.getDeltaYears(dateTime28);
        int int30 = dateTime26.getHour();
        int int31 = dateTime26.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(100L);
        double double38 = dateTime35.getDeltaYears(dateTime37);
        boolean boolean39 = dateTime37.isWeekday();
        boolean boolean40 = net.ajaskey.common.Utils.sameDate(dateTime26, dateTime37);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime(100L);
        dateTime42.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime(100L);
        double double53 = dateTime50.getDeltaYears(dateTime52);
        boolean boolean54 = dateTime52.isWeekday();
        java.util.Date date55 = dateTime52.getTime();
        dateTime42.set(dateTime52);
        int int57 = dateTime42.getYear();
        boolean boolean58 = dateTime37.isGreaterThanOrEqual(dateTime42);
        boolean boolean59 = dateTime19.sameDate(dateTime37);
        boolean boolean60 = dateTime10.isLessThanOrEqual(dateTime19);
        java.lang.Class<?> wildcardClass61 = dateTime19.getClass();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-1972.041095890411d) + "'", double22 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-1972.041095890411d) + "'", double29 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10 + "'", int31 == 10);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1972.041095890411d) + "'", double38 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-1972.041095890411d) + "'", double53 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(date55);
        org.junit.Assert.assertEquals(date55.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1969 + "'", int57 == 1969);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test7360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7360");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((-1870), 6, (int) (byte) 10);
        int int4 = dateTime3.getMs();
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime(100L);
        int int7 = dateTime6.getMs();
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(100L);
        double double14 = dateTime11.getDeltaYears(dateTime13);
        java.text.SimpleDateFormat simpleDateFormat15 = dateTime11.getSdf();
        boolean boolean16 = dateTime6.isLessThanOrEqual(dateTime11);
        java.lang.String str17 = dateTime11.toString();
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(100L);
        int int20 = dateTime19.getMs();
        int int21 = dateTime19.getHour();
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat27 = null;
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat27);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double31 = dateTime28.getDeltaYears(dateTime30);
        boolean boolean32 = dateTime25.isLessThan(dateTime30);
        java.lang.String str33 = dateTime30.toFullString();
        dateTime30.add(10, (int) (byte) -1);
        java.text.SimpleDateFormat simpleDateFormat38 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat40 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat41 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime("", simpleDateFormat40, simpleDateFormat41);
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat38, simpleDateFormat41);
        boolean boolean44 = dateTime30.isGreaterThan(dateTime43);
        boolean boolean45 = dateTime19.isEqual(dateTime30);
        net.ajaskey.common.DateTime dateTime46 = null;
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime(dateTime46);
        dateTime47.set(42, 10, 10);
        java.util.Date date52 = dateTime47.getTime();
        net.ajaskey.common.DateTime dateTime53 = dateTime19.copy(dateTime47);
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime(100L);
        int int56 = dateTime55.getMs();
        int int57 = dateTime55.getHour();
        double double58 = dateTime47.getDeltaYears(dateTime55);
        boolean boolean59 = net.ajaskey.common.Utils.sameMonth(dateTime11, dateTime55);
        java.util.Calendar calendar60 = dateTime55.getCal();
        dateTime3.set(calendar60);
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 693 + "'", int4 == 693);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + (-1972.041095890411d) + "'", double14 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "10-Apr-0002" + "'", str17, "10-Apr-0002");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 5 + "'", int21 == 5);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str33, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertNotNull(simpleDateFormat38);
        org.junit.Assert.assertNotNull(simpleDateFormat40);
        org.junit.Assert.assertNotNull(simpleDateFormat41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(date52);
// flaky:         org.junit.Assert.assertEquals(date52.toString(), "Sat Nov 10 10:47:23 MST 42");
        org.junit.Assert.assertNotNull(dateTime53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 5 + "'", int57 == 5);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + (-1928.4246575342465d) + "'", double58 == (-1928.4246575342465d));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(calendar60);
        org.junit.Assert.assertEquals(calendar60.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    }

    @Test
    public void test7361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7361");
        net.ajaskey.common.TextUtils.printline("Thu 10-Apr-0002 10:46:26");
    }

    @Test
    public void test7362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7362");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean10 = dateTime4.isEqual(dateTime9);
        java.lang.String str11 = dateTime9.getMonth();
        java.text.SimpleDateFormat simpleDateFormat16 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat17 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime("", simpleDateFormat16, simpleDateFormat17);
        java.text.SimpleDateFormat simpleDateFormat20 = null;
        java.text.SimpleDateFormat simpleDateFormat21 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime("January", simpleDateFormat20, simpleDateFormat21);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat16, simpleDateFormat21);
        java.text.SimpleDateFormat simpleDateFormat26 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat27 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime("", simpleDateFormat26, simpleDateFormat27);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime(100L);
        int int31 = dateTime30.getMs();
        java.text.SimpleDateFormat simpleDateFormat32 = net.ajaskey.common.Utils.sdf;
        dateTime30.setSdf(simpleDateFormat32);
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat27, simpleDateFormat32);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("                             100", simpleDateFormat21, simpleDateFormat27);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:42:58", simpleDateFormat21);
        boolean boolean37 = dateTime9.isLessThan(dateTime36);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime(100L);
        long long44 = dateTime41.getDeltaDays(dateTime43);
        int int45 = dateTime41.getHour();
        dateTime41.add((int) (byte) 100, (int) (byte) 0);
        int int49 = dateTime41.getDayOfYear();
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime(100L);
        long long56 = dateTime53.getDeltaDays(dateTime55);
        int int57 = dateTime53.getHour();
        boolean boolean58 = dateTime41.isLessThan(dateTime53);
        boolean boolean59 = dateTime9.isLessThanOrEqual(dateTime53);
        java.text.SimpleDateFormat simpleDateFormat61 = null;
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat61);
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double65 = dateTime62.getDeltaYears(dateTime64);
        int int66 = dateTime64.getHour();
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime(100L);
        int int69 = dateTime68.getMs();
        net.ajaskey.common.DateTime dateTime73 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime75 = new net.ajaskey.common.DateTime(100L);
        double double76 = dateTime73.getDeltaYears(dateTime75);
        java.text.SimpleDateFormat simpleDateFormat77 = dateTime73.getSdf();
        boolean boolean78 = dateTime68.isLessThanOrEqual(dateTime73);
        boolean boolean79 = dateTime73.isWeekday();
        boolean boolean80 = net.ajaskey.common.Utils.sameMonth(dateTime64, dateTime73);
        int int81 = dateTime53.getYears(dateTime73);
        java.lang.String str83 = dateTime53.format("Thu 25-Jun-2020 10:47:11");
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "April" + "'", str11, "April");
        org.junit.Assert.assertNotNull(simpleDateFormat16);
        org.junit.Assert.assertNotNull(simpleDateFormat17);
        org.junit.Assert.assertNotNull(simpleDateFormat21);
        org.junit.Assert.assertNotNull(simpleDateFormat26);
        org.junit.Assert.assertNotNull(simpleDateFormat27);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 100 + "'", int31 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-719795L) + "'", long44 == (-719795L));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 10 + "'", int45 == 10);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + (-719795L) + "'", long56 == (-719795L));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 10 + "'", int57 == 10);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 5 + "'", int66 == 5);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 100 + "'", int69 == 100);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-1972.041095890411d) + "'", double76 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "BAD-DATE-FORMAT" + "'", str83, "BAD-DATE-FORMAT");
    }

    @Test
    public void test7363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7363");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        java.text.SimpleDateFormat simpleDateFormat10 = dateTime6.getSdf();
        boolean boolean11 = dateTime1.isLessThanOrEqual(dateTime6);
        int int12 = dateTime6.getDayOfYear();
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((long) (short) 0);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(100L);
        int int17 = dateTime16.getMs();
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime(100L);
        double double24 = dateTime21.getDeltaYears(dateTime23);
        java.text.SimpleDateFormat simpleDateFormat25 = dateTime21.getSdf();
        boolean boolean26 = dateTime16.isLessThanOrEqual(dateTime21);
        java.text.SimpleDateFormat simpleDateFormat28 = null;
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat28);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double32 = dateTime29.getDeltaYears(dateTime31);
        boolean boolean33 = dateTime29.isWeekday();
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long38 = dateTime29.getDeltaDays(dateTime37);
        long long39 = dateTime16.getDeltaDays(dateTime37);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime(100L);
        dateTime41.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean46 = dateTime41.isWeekday();
        int int47 = dateTime16.getYears(dateTime41);
        int int48 = dateTime16.getYear();
        java.util.Calendar calendar49 = dateTime16.getCal();
        net.ajaskey.common.DateTime dateTime50 = dateTime14.copy(dateTime16);
        java.util.Calendar calendar51 = dateTime16.getCal();
        dateTime6.set(calendar51);
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime(calendar51);
        java.lang.String str54 = dateTime53.toFullString();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1972.041095890411d) + "'", double24 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 719795L + "'", long39 == 719795L);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1870) + "'", int47 == (-1870));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1969 + "'", int48 == 1969);
        org.junit.Assert.assertNotNull(calendar49);
        org.junit.Assert.assertEquals(calendar49.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(dateTime50);
        org.junit.Assert.assertNotNull(calendar51);
        org.junit.Assert.assertEquals(calendar51.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str54, "Wed 31-Dec-1969 17:00:00");
    }

    @Test
    public void test7364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7364");
        java.text.SimpleDateFormat simpleDateFormat5 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat7 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat8 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("", simpleDateFormat7, simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat5, simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime("10-Apr-0002", simpleDateFormat8);
        java.text.SimpleDateFormat simpleDateFormat14 = null;
        java.text.SimpleDateFormat simpleDateFormat15 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("January", simpleDateFormat14, simpleDateFormat15);
        java.text.SimpleDateFormat simpleDateFormat19 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("January", simpleDateFormat19);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("", simpleDateFormat19);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime("", simpleDateFormat15, simpleDateFormat19);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime("January                                                                                               52.00                                                                                               52.00                                                                                               52.00                                                                                               52.00hi!                                                                                               52.00", simpleDateFormat8, simpleDateFormat19);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime(100L);
        double double30 = dateTime27.getDeltaYears(dateTime29);
        int int31 = dateTime27.getHour();
        dateTime27.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat36 = null;
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat36);
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double40 = dateTime37.getDeltaYears(dateTime39);
        boolean boolean41 = dateTime27.isEqual(dateTime39);
        java.text.SimpleDateFormat simpleDateFormat43 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat45 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat46 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime("", simpleDateFormat45, simpleDateFormat46);
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat43, simpleDateFormat46);
        dateTime27.setSdf(simpleDateFormat43);
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime("", simpleDateFormat8, simpleDateFormat43);
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:47:21", simpleDateFormat43);
        org.junit.Assert.assertNotNull(simpleDateFormat5);
        org.junit.Assert.assertNotNull(simpleDateFormat7);
        org.junit.Assert.assertNotNull(simpleDateFormat8);
        org.junit.Assert.assertNotNull(simpleDateFormat15);
        org.junit.Assert.assertNotNull(simpleDateFormat19);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-1972.041095890411d) + "'", double30 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10 + "'", int31 == 10);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(simpleDateFormat43);
        org.junit.Assert.assertNotNull(simpleDateFormat45);
        org.junit.Assert.assertNotNull(simpleDateFormat46);
    }

    @Test
    public void test7365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7365");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        boolean boolean2 = dateTime1.isWeekday();
        dateTime1.setFirstWorkDay();
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        dateTime5.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str10 = dateTime5.getMonth();
        boolean boolean11 = dateTime1.isLessThan(dateTime5);
        java.util.Date date12 = dateTime5.getTime();
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(date12);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(date12);
        java.util.Date date15 = dateTime14.getTime();
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(date15);
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(date15);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "January" + "'", str10, "January");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(date12);
        org.junit.Assert.assertEquals(date12.toString(), "Sat Jan 04 17:00:00 MST 100");
        org.junit.Assert.assertNotNull(date15);
        org.junit.Assert.assertEquals(date15.toString(), "Sat Jan 04 17:00:00 MST 100");
    }

    @Test
    public void test7366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7366");
        java.lang.String str2 = net.ajaskey.common.Utils.ifmt(54, 477);
        org.junit.Assert.assertEquals("'" + strstr2, "                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           54");
    }

    @Test
    public void test7367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7367");
        net.ajaskey.common.DateTime dateTime0 = null;
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(dateTime0);
        java.lang.String str3 = dateTime1.format("     5.00");
        net.ajaskey.common.DateTime dateTime4 = null;
        long long5 = dateTime1.getDeltaDays(dateTime4);
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime(100L);
        int int8 = dateTime7.getMs();
        java.lang.String str9 = dateTime7.toString();
        int int10 = dateTime7.getDayOfYear();
        java.text.SimpleDateFormat simpleDateFormat12 = null;
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat12);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double16 = dateTime13.getDeltaYears(dateTime15);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean21 = dateTime15.isEqual(dateTime20);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime(100L);
        int int24 = dateTime23.getMs();
        boolean boolean25 = dateTime20.isGreaterThanOrEqual(dateTime23);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(100L);
        dateTime27.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(100L);
        double double38 = dateTime35.getDeltaYears(dateTime37);
        boolean boolean39 = dateTime37.isWeekday();
        java.util.Date date40 = dateTime37.getTime();
        dateTime27.set(dateTime37);
        boolean boolean42 = net.ajaskey.common.Utils.sameDate(dateTime20, dateTime27);
        dateTime20.add((int) '#', 6);
        boolean boolean46 = dateTime7.sameDate(dateTime20);
        boolean boolean47 = net.ajaskey.common.Utils.sameMonth(dateTime1, dateTime20);
        java.text.SimpleDateFormat simpleDateFormat52 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat53 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime("", simpleDateFormat52, simpleDateFormat53);
        java.text.SimpleDateFormat simpleDateFormat56 = null;
        java.text.SimpleDateFormat simpleDateFormat57 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime("January", simpleDateFormat56, simpleDateFormat57);
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat52, simpleDateFormat57);
        java.text.SimpleDateFormat simpleDateFormat62 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat63 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime("", simpleDateFormat62, simpleDateFormat63);
        net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime(100L);
        int int67 = dateTime66.getMs();
        java.text.SimpleDateFormat simpleDateFormat68 = net.ajaskey.common.Utils.sdf;
        dateTime66.setSdf(simpleDateFormat68);
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat63, simpleDateFormat68);
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime("                             100", simpleDateFormat57, simpleDateFormat63);
        net.ajaskey.common.DateTime dateTime72 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:42:58", simpleDateFormat57);
        boolean boolean73 = dateTime20.isGreaterThan(dateTime72);
        int int74 = dateTime72.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime77 = dateTime72.parse("260", "January                                                                                               52.00                                                                                               52.00                                                                                               52.00                                                                                               52.00hi!                                                                                               52.00");
        int int78 = dateTime72.getMinute();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "     5.00" + "'", str3, "     5.00");
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "31-Dec-1969" + "'", str9, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 365 + "'", int10 == 365);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1972.041095890411d) + "'", double38 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(date40);
        org.junit.Assert.assertEquals(date40.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(simpleDateFormat52);
        org.junit.Assert.assertNotNull(simpleDateFormat53);
        org.junit.Assert.assertNotNull(simpleDateFormat57);
        org.junit.Assert.assertNotNull(simpleDateFormat62);
        org.junit.Assert.assertNotNull(simpleDateFormat63);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 100 + "'", int67 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat68);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 10 + "'", int74 == 10);
        org.junit.Assert.assertNull(dateTime77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 42 + "'", int78 == 42);
    }

    @Test
    public void test7368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7368");
        java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat5 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("", simpleDateFormat4, simpleDateFormat5);
        java.text.SimpleDateFormat simpleDateFormat8 = null;
        java.text.SimpleDateFormat simpleDateFormat9 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("January", simpleDateFormat8, simpleDateFormat9);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat4, simpleDateFormat9);
        java.text.SimpleDateFormat simpleDateFormat14 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat15 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("", simpleDateFormat14, simpleDateFormat15);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(100L);
        int int19 = dateTime18.getMs();
        java.text.SimpleDateFormat simpleDateFormat20 = net.ajaskey.common.Utils.sdf;
        dateTime18.setSdf(simpleDateFormat20);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat15, simpleDateFormat20);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime("                             100", simpleDateFormat9, simpleDateFormat15);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:42:58", simpleDateFormat9);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime(100L);
        double double31 = dateTime28.getDeltaYears(dateTime30);
        int int32 = dateTime28.getHour();
        java.text.SimpleDateFormat simpleDateFormat34 = null;
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat34);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double38 = dateTime35.getDeltaYears(dateTime37);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean43 = dateTime37.isEqual(dateTime42);
        java.util.Calendar calendar44 = dateTime37.getCal();
        java.lang.String str45 = dateTime37.format();
        net.ajaskey.common.DateTime dateTime46 = null;
        long long47 = dateTime37.getDeltaDays(dateTime46);
        int int48 = dateTime37.getSecond();
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime(100L);
        double double55 = dateTime52.getDeltaYears(dateTime54);
        java.text.SimpleDateFormat simpleDateFormat57 = null;
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat57);
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double61 = dateTime58.getDeltaYears(dateTime60);
        boolean boolean62 = dateTime58.isWeekday();
        boolean boolean63 = dateTime52.sameDate(dateTime58);
        int int64 = dateTime58.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime65 = dateTime37.copy(dateTime58);
        dateTime28.set(dateTime58);
        long long67 = dateTime24.getDeltaMilliSeconds(dateTime58);
        java.lang.String str69 = dateTime24.format("Thu 10-Apr-0002 10:43:09");
        org.junit.Assert.assertNotNull(simpleDateFormat4);
        org.junit.Assert.assertNotNull(simpleDateFormat5);
        org.junit.Assert.assertNotNull(simpleDateFormat9);
        org.junit.Assert.assertNotNull(simpleDateFormat14);
        org.junit.Assert.assertNotNull(simpleDateFormat15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat20);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-1972.041095890411d) + "'", double31 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10 + "'", int32 == 10);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(calendar44);
        org.junit.Assert.assertEquals(calendar44.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "BAD-DATE-FORMAT" + "'", str45, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-1972.041095890411d) + "'", double55 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNull(dateTime65);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 0L + "'", long67 == 0L);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "BAD-DATE-FORMAT" + "'", str69, "BAD-DATE-FORMAT");
    }

    @Test
    public void test7369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7369");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        java.lang.String str3 = dateTime1.toString();
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        int int6 = dateTime5.getMs();
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(100L);
        double double13 = dateTime10.getDeltaYears(dateTime12);
        java.text.SimpleDateFormat simpleDateFormat14 = dateTime10.getSdf();
        boolean boolean15 = dateTime5.isLessThanOrEqual(dateTime10);
        boolean boolean16 = dateTime5.isWeekday();
        java.util.Calendar calendar17 = dateTime5.getCal();
        dateTime1.set(calendar17);
        int int19 = dateTime1.getMs();
        int int20 = dateTime1.getSecond();
        int int21 = dateTime1.getDayOfWeek();
        java.util.Calendar calendar22 = dateTime1.getCal();
        java.lang.String str23 = dateTime1.getMonth();
        net.ajaskey.common.DateTime dateTime24 = null;
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime(100L);
        double double31 = dateTime28.getDeltaYears(dateTime30);
        java.util.Date date32 = dateTime28.getTime();
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime(date32);
        net.ajaskey.common.DateTime dateTime36 = dateTime33.parse("31-Dec-1969", "January");
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime(100L);
        int int39 = dateTime38.getMs();
        java.lang.String str40 = dateTime38.toString();
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime(100L);
        double double47 = dateTime44.getDeltaYears(dateTime46);
        int int48 = dateTime44.getHour();
        int int49 = dateTime44.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime(100L);
        double double56 = dateTime53.getDeltaYears(dateTime55);
        boolean boolean57 = dateTime55.isWeekday();
        boolean boolean58 = net.ajaskey.common.Utils.sameDate(dateTime44, dateTime55);
        boolean boolean59 = net.ajaskey.common.Utils.sameDate(dateTime38, dateTime44);
        dateTime33.set(dateTime44);
        java.lang.String str61 = dateTime33.toString();
        boolean boolean62 = net.ajaskey.common.Utils.sameDate(dateTime24, dateTime33);
        dateTime1.set(dateTime24);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "31-Dec-1969" + "'", str3, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-1972.041095890411d) + "'", double13 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(calendar17);
        org.junit.Assert.assertEquals(calendar17.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 4 + "'", int21 == 4);
        org.junit.Assert.assertNotNull(calendar22);
        org.junit.Assert.assertEquals(calendar22.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "December" + "'", str23, "December");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-1972.041095890411d) + "'", double31 == (-1972.041095890411d));
        org.junit.Assert.assertNotNull(date32);
// flaky:         org.junit.Assert.assertEquals(date32.toString(), "Thu Apr 10 10:47:23 MST 2");
        org.junit.Assert.assertNull(dateTime36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "31-Dec-1969" + "'", str40, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-1972.041095890411d) + "'", double47 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 10 + "'", int48 == 10);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 10 + "'", int49 == 10);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-1972.041095890411d) + "'", double56 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "10-Apr-0002" + "'", str61, "10-Apr-0002");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test7370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7370");
        java.lang.String[] strArray8 = new java.lang.String[] { "     5.00" };
        java.util.List<java.io.File> fileList9 = net.ajaskey.common.Utils.getDirTree("                                                 100", strArray8);
        java.util.List<java.io.File> fileList10 = net.ajaskey.common.Utils.getDirTree("Sat 04-Jan-0100 17:00:00", strArray8);
        java.util.List<java.io.File> fileList11 = net.ajaskey.common.Utils.getDirTree("30-Sep-0252", strArray8);
        java.util.List<java.io.File> fileList12 = net.ajaskey.common.Utils.getDirTree("Thu 25-Jun-2020 10:43:17", strArray8);
        java.util.List<java.io.File> fileList13 = net.ajaskey.common.Utils.getDirTree("                                                                                                                                                                                                                                                                                                                                                                        1,869", strArray8);
        java.util.List<java.io.File> fileList14 = net.ajaskey.common.Utils.getDirTree("Thu 25-Jun-2020 10:46:08", strArray8);
        java.util.List<java.io.File> fileList15 = net.ajaskey.common.Utils.getDirTree("Thu 25-Jun-2020 10:46:24", strArray8);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNull(fileList9);
        org.junit.Assert.assertNull(fileList10);
        org.junit.Assert.assertNull(fileList11);
        org.junit.Assert.assertNull(fileList12);
        org.junit.Assert.assertNull(fileList13);
        org.junit.Assert.assertNull(fileList14);
        org.junit.Assert.assertNull(fileList15);
    }

    @Test
    public void test7371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7371");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        java.lang.String str3 = dateTime1.toString();
        java.text.SimpleDateFormat simpleDateFormat5 = null;
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat5);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        boolean boolean10 = dateTime6.isWeekday();
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long15 = dateTime6.getDeltaDays(dateTime14);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(dateTime6);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(100L);
        double double23 = dateTime20.getDeltaYears(dateTime22);
        boolean boolean24 = dateTime22.isWeekday();
        java.util.Date date25 = dateTime22.getTime();
        dateTime6.set(date25);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(100L);
        int int29 = dateTime28.getMs();
        java.lang.String str30 = dateTime28.toString();
        boolean boolean31 = dateTime6.isLessThanOrEqual(dateTime28);
        boolean boolean32 = dateTime1.isLessThanOrEqual(dateTime28);
        java.lang.String str33 = dateTime1.format();
        java.lang.String str34 = dateTime1.format();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "31-Dec-1969" + "'", str3, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-1972.041095890411d) + "'", double23 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(date25);
        org.junit.Assert.assertEquals(date25.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "31-Dec-1969" + "'", str30, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "31-Dec-1969" + "'", str33, "31-Dec-1969");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "31-Dec-1969" + "'", str34, "31-Dec-1969");
    }

    @Test
    public void test7372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7372");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (byte) 10, (int) (byte) 0, 2);
        int int4 = dateTime3.getDayOfWeek();
        dateTime3.set(991, 753, 48);
        java.text.SimpleDateFormat simpleDateFormat11 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat13 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat14 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime("", simpleDateFormat13, simpleDateFormat14);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat11, simpleDateFormat14);
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("10-Apr-0002", simpleDateFormat14);
        java.text.SimpleDateFormat simpleDateFormat19 = null;
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat19);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double23 = dateTime20.getDeltaYears(dateTime22);
        boolean boolean24 = dateTime20.isWeekday();
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long29 = dateTime20.getDeltaDays(dateTime28);
        boolean boolean30 = net.ajaskey.common.Utils.sameDate(dateTime17, dateTime20);
        java.text.SimpleDateFormat simpleDateFormat33 = null;
        java.text.SimpleDateFormat simpleDateFormat34 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("January", simpleDateFormat33, simpleDateFormat34);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime("100.00", simpleDateFormat33);
        java.text.SimpleDateFormat simpleDateFormat38 = null;
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat38);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double42 = dateTime39.getDeltaYears(dateTime41);
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean47 = dateTime41.isEqual(dateTime46);
        long long48 = dateTime36.getDeltaDays(dateTime46);
        boolean boolean49 = dateTime20.isEqual(dateTime46);
        java.text.SimpleDateFormat simpleDateFormat51 = null;
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat51);
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double55 = dateTime52.getDeltaYears(dateTime54);
        boolean boolean56 = dateTime54.isNull();
        boolean boolean57 = net.ajaskey.common.Utils.sameMonth(dateTime46, dateTime54);
        java.util.Date date58 = dateTime46.getTime();
        boolean boolean59 = net.ajaskey.common.Utils.sameMonth(dateTime3, dateTime46);
        java.util.Calendar calendar60 = dateTime3.getCal();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertNotNull(simpleDateFormat11);
        org.junit.Assert.assertNotNull(simpleDateFormat13);
        org.junit.Assert.assertNotNull(simpleDateFormat14);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(simpleDateFormat34);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(date58);
// flaky:         org.junit.Assert.assertEquals(date58.toString(), "Thu Apr 10 10:47:23 MST 2");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(calendar60);
// flaky:         org.junit.Assert.assertEquals(calendar60.toString(), "java.util.GregorianCalendar[time=-28909462356082,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1053,MONTH=10,WEEK_OF_YEAR=47,WEEK_OF_MONTH=3,DAY_OF_MONTH=17,DAY_OF_YEAR=321,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=3,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=23,MILLISECOND=918,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    }

    @Test
    public void test7373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7373");
        java.text.SimpleDateFormat simpleDateFormat2 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat5 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("", simpleDateFormat4, simpleDateFormat5);
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat2, simpleDateFormat5);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime("10-Apr-0002", simpleDateFormat5);
        java.text.SimpleDateFormat simpleDateFormat10 = null;
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat10);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double14 = dateTime11.getDeltaYears(dateTime13);
        boolean boolean15 = dateTime13.isNull();
        java.text.SimpleDateFormat simpleDateFormat17 = null;
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat17);
        dateTime18.set((int) ' ', 0, 11);
        boolean boolean23 = dateTime13.isGreaterThanOrEqual(dateTime18);
        boolean boolean24 = dateTime8.sameDate(dateTime13);
        java.lang.String str25 = dateTime8.toFullString();
        java.util.Date date26 = dateTime8.getTime();
        org.junit.Assert.assertNotNull(simpleDateFormat2);
        org.junit.Assert.assertNotNull(simpleDateFormat4);
        org.junit.Assert.assertNotNull(simpleDateFormat5);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Mon 10-Apr-0002 00:00:00" + "'", str25, "Mon 10-Apr-0002 00:00:00");
        org.junit.Assert.assertNotNull(date26);
        org.junit.Assert.assertEquals(date26.toString(), "Mon Apr 10 00:00:00 MST 2");
    }

    @Test
    public void test7374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7374");
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime(100L);
        int int5 = dateTime4.getMs();
        java.lang.String str6 = dateTime4.toString();
        java.text.SimpleDateFormat simpleDateFormat8 = null;
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double12 = dateTime9.getDeltaYears(dateTime11);
        boolean boolean13 = dateTime9.isWeekday();
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long18 = dateTime9.getDeltaDays(dateTime17);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(dateTime9);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime(100L);
        double double26 = dateTime23.getDeltaYears(dateTime25);
        boolean boolean27 = dateTime25.isWeekday();
        java.util.Date date28 = dateTime25.getTime();
        dateTime9.set(date28);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(100L);
        int int32 = dateTime31.getMs();
        java.lang.String str33 = dateTime31.toString();
        boolean boolean34 = dateTime9.isLessThanOrEqual(dateTime31);
        boolean boolean35 = dateTime4.isLessThanOrEqual(dateTime31);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime("January", "11");
        double double39 = dateTime4.getDeltaYears(dateTime38);
        java.text.SimpleDateFormat simpleDateFormat40 = dateTime4.getSdf();
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime("Wed 31-Dec-1969 17:00:00", simpleDateFormat40);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:44:21", simpleDateFormat40);
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime("         1", simpleDateFormat40);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime((long) (byte) 100);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime(25, 1, 0);
        boolean boolean50 = net.ajaskey.common.Utils.sameMonth(dateTime45, dateTime49);
        int int51 = dateTime45.getSecond();
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime(100L);
        int int54 = dateTime53.getMs();
        java.text.SimpleDateFormat simpleDateFormat55 = net.ajaskey.common.Utils.sdf;
        dateTime53.setSdf(simpleDateFormat55);
        net.ajaskey.common.DateTime dateTime57 = dateTime45.copy(dateTime53);
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime(100L);
        int int60 = dateTime59.getMs();
        boolean boolean61 = dateTime59.isWeekday();
        java.util.Calendar calendar62 = dateTime59.getCal();
        dateTime53.set(calendar62);
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime(calendar62);
        dateTime43.set(calendar62);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "31-Dec-1969" + "'", str6, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-1972.041095890411d) + "'", double26 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(date28);
        org.junit.Assert.assertEquals(date28.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "31-Dec-1969" + "'", str33, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(simpleDateFormat40);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 100 + "'", int54 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat55);
        org.junit.Assert.assertNotNull(dateTime57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 100 + "'", int60 == 100);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(calendar62);
        org.junit.Assert.assertEquals(calendar62.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    }

    @Test
    public void test7375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7375");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        java.text.SimpleDateFormat simpleDateFormat10 = dateTime6.getSdf();
        boolean boolean11 = dateTime1.isLessThanOrEqual(dateTime6);
        java.text.SimpleDateFormat simpleDateFormat13 = null;
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat13);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double17 = dateTime14.getDeltaYears(dateTime16);
        boolean boolean18 = dateTime14.isWeekday();
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long23 = dateTime14.getDeltaDays(dateTime22);
        long long24 = dateTime1.getDeltaDays(dateTime22);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat30 = null;
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat30);
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double34 = dateTime31.getDeltaYears(dateTime33);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean39 = dateTime33.isEqual(dateTime38);
        java.util.Calendar calendar40 = dateTime33.getCal();
        boolean boolean41 = dateTime28.isLessThan(dateTime33);
        boolean boolean42 = net.ajaskey.common.Utils.sameDate(dateTime1, dateTime28);
        int int43 = dateTime28.getDayOfWeek();
        java.util.Date date44 = null;
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(date44);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime(100L);
        double double52 = dateTime49.getDeltaYears(dateTime51);
        int int53 = dateTime49.getHour();
        java.text.SimpleDateFormat simpleDateFormat55 = null;
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat55);
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double59 = dateTime56.getDeltaYears(dateTime58);
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean64 = dateTime58.isEqual(dateTime63);
        java.util.Calendar calendar65 = dateTime58.getCal();
        dateTime49.set(calendar65);
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime(calendar65);
        net.ajaskey.common.DateTime dateTime68 = dateTime45.copy(dateTime67);
        net.ajaskey.common.DateTime dateTime72 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime74 = new net.ajaskey.common.DateTime(100L);
        double double75 = dateTime72.getDeltaYears(dateTime74);
        boolean boolean76 = dateTime74.isWeekday();
        int int77 = dateTime74.getDayOfYear();
        long long78 = dateTime68.getDeltaMilliSeconds(dateTime74);
        java.util.Calendar calendar79 = dateTime68.getCal();
        double double80 = dateTime28.getDeltaYears(dateTime68);
        java.text.SimpleDateFormat simpleDateFormat83 = null;
        java.text.SimpleDateFormat simpleDateFormat84 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime85 = new net.ajaskey.common.DateTime("January", simpleDateFormat83, simpleDateFormat84);
        java.text.SimpleDateFormat simpleDateFormat88 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime89 = new net.ajaskey.common.DateTime("January", simpleDateFormat88);
        net.ajaskey.common.DateTime dateTime90 = new net.ajaskey.common.DateTime("", simpleDateFormat88);
        net.ajaskey.common.DateTime dateTime91 = new net.ajaskey.common.DateTime("", simpleDateFormat84, simpleDateFormat88);
        int int92 = dateTime91.getSecond();
        double double93 = dateTime28.getDeltaYears(dateTime91);
        int int94 = dateTime91.getDayOfWeek();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 719795L + "'", long24 == 719795L);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(calendar40);
        org.junit.Assert.assertEquals(calendar40.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 5 + "'", int43 == 5);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-1972.041095890411d) + "'", double52 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 10 + "'", int53 == 10);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(calendar65);
        org.junit.Assert.assertEquals(calendar65.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(dateTime68);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-1972.041095890411d) + "'", double75 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 365 + "'", int77 == 365);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 100L + "'", long78 == 100L);
        org.junit.Assert.assertNotNull(calendar79);
        org.junit.Assert.assertEquals(calendar79.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + (-1972.041095890411d) + "'", double80 == (-1972.041095890411d));
        org.junit.Assert.assertNotNull(simpleDateFormat84);
        org.junit.Assert.assertNotNull(simpleDateFormat88);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.0d + "'", double93 == 0.0d);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
    }

    @Test
    public void test7376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7376");
        java.text.SimpleDateFormat simpleDateFormat2 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime("January", simpleDateFormat2);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime("", simpleDateFormat2);
        dateTime4.setFirstWorkDay();
        int int6 = dateTime4.getMs();
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        int int9 = dateTime8.getMs();
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(100L);
        double double16 = dateTime13.getDeltaYears(dateTime15);
        java.text.SimpleDateFormat simpleDateFormat17 = dateTime13.getSdf();
        boolean boolean18 = dateTime8.isLessThanOrEqual(dateTime13);
        java.text.SimpleDateFormat simpleDateFormat20 = null;
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat20);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double24 = dateTime21.getDeltaYears(dateTime23);
        boolean boolean25 = dateTime21.isWeekday();
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long30 = dateTime21.getDeltaDays(dateTime29);
        long long31 = dateTime8.getDeltaDays(dateTime29);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat37 = null;
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat37);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double41 = dateTime38.getDeltaYears(dateTime40);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean46 = dateTime40.isEqual(dateTime45);
        java.util.Calendar calendar47 = dateTime40.getCal();
        boolean boolean48 = dateTime35.isLessThan(dateTime40);
        boolean boolean49 = net.ajaskey.common.Utils.sameDate(dateTime8, dateTime35);
        int int50 = dateTime35.getDayOfWeek();
        java.lang.String str51 = dateTime35.toFullString();
        boolean boolean52 = dateTime4.isLessThan(dateTime35);
        java.util.Date date53 = dateTime35.getTime();
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime(date53);
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime(date53);
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime(date53);
        org.junit.Assert.assertNotNull(simpleDateFormat2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-1972.041095890411d) + "'", double16 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 719795L + "'", long31 == 719795L);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(calendar47);
        org.junit.Assert.assertEquals(calendar47.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 5 + "'", int50 == 5);
// flaky:         org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Thu 10-Apr-0002 10:47:23" + "'", str51, "Thu 10-Apr-0002 10:47:23");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(date53);
// flaky:         org.junit.Assert.assertEquals(date53.toString(), "Thu Apr 10 10:47:23 MST 2");
    }

    @Test
    public void test7377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7377");
        java.util.Map<java.lang.String, java.lang.Integer> strMap0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = net.ajaskey.common.Utils.findName(strMap0, (java.lang.Integer) 566);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test7378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7378");
        net.ajaskey.common.Utils.sleep(824);
    }

    @Test
    public void test7379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7379");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime(dateTime2);
        int int7 = dateTime2.getDayOfYear();
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(dateTime2);
        net.ajaskey.common.DateTime dateTime11 = dateTime8.parse("Thu 10-Apr-0002 10:43:52", "");
        int int12 = dateTime8.getDayOfWeek();
        boolean boolean13 = dateTime8.isNull();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(dateTime11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test7380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7380");
        java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readTextFile("Thu 10-Apr-0002 10:46:52", false);
        org.junit.Assert.assertNotNull(strList2);
    }

    @Test
    public void test7381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7381");
        java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readTextFile("                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              1,924", false);
        org.junit.Assert.assertNotNull(strList2);
    }

    @Test
    public void test7382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7382");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        java.lang.String str3 = dateTime1.toString();
        int int4 = dateTime1.getDayOfYear();
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime(100L);
        dateTime6.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(100L);
        double double17 = dateTime14.getDeltaYears(dateTime16);
        boolean boolean18 = dateTime16.isWeekday();
        java.util.Date date19 = dateTime16.getTime();
        dateTime6.set(dateTime16);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat26 = null;
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat26);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double30 = dateTime27.getDeltaYears(dateTime29);
        boolean boolean31 = dateTime24.isLessThan(dateTime29);
        dateTime16.set(dateTime29);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime(100L);
        double double39 = dateTime36.getDeltaYears(dateTime38);
        long long40 = dateTime16.getDeltaMilliSeconds(dateTime38);
        java.util.Date date41 = null;
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime(date41);
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime(100L);
        double double49 = dateTime46.getDeltaYears(dateTime48);
        int int50 = dateTime46.getHour();
        java.text.SimpleDateFormat simpleDateFormat52 = null;
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat52);
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double56 = dateTime53.getDeltaYears(dateTime55);
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean61 = dateTime55.isEqual(dateTime60);
        java.util.Calendar calendar62 = dateTime55.getCal();
        dateTime46.set(calendar62);
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime(calendar62);
        net.ajaskey.common.DateTime dateTime65 = dateTime42.copy(dateTime64);
        boolean boolean66 = dateTime38.isLessThan(dateTime42);
        boolean boolean67 = net.ajaskey.common.Utils.sameMonth(dateTime1, dateTime42);
        int int68 = dateTime42.getDayOfWeek();
        net.ajaskey.common.DateTime dateTime71 = dateTime42.parse("                                                                                                                                                                                                                                                                                            26", "                                                                                      -733,554.00");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "31-Dec-1969" + "'", str3, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 365 + "'", int4 == 365);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-1972.041095890411d) + "'", double17 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(date19);
        org.junit.Assert.assertEquals(date19.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-1972.041095890411d) + "'", double39 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 100L + "'", long40 == 100L);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-1972.041095890411d) + "'", double49 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 10 + "'", int50 == 10);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(calendar62);
        org.junit.Assert.assertEquals(calendar62.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(dateTime65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 5 + "'", int68 == 5);
        org.junit.Assert.assertNull(dateTime71);
    }

    @Test
    public void test7383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7383");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        dateTime2.set((int) ' ', 0, 11);
        boolean boolean7 = dateTime2.isWeekday();
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(100L);
        int int10 = dateTime9.getMs();
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(100L);
        double double17 = dateTime14.getDeltaYears(dateTime16);
        java.text.SimpleDateFormat simpleDateFormat18 = dateTime14.getSdf();
        boolean boolean19 = dateTime9.isLessThanOrEqual(dateTime14);
        java.util.Date date20 = dateTime14.getTime();
        dateTime2.set(date20);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime(100L);
        int int24 = dateTime23.getMs();
        int int25 = dateTime23.getHour();
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat31 = null;
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat31);
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double35 = dateTime32.getDeltaYears(dateTime34);
        boolean boolean36 = dateTime29.isLessThan(dateTime34);
        java.lang.String str37 = dateTime34.toFullString();
        dateTime34.add(10, (int) (byte) -1);
        java.text.SimpleDateFormat simpleDateFormat42 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat44 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat45 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime("", simpleDateFormat44, simpleDateFormat45);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat42, simpleDateFormat45);
        boolean boolean48 = dateTime34.isGreaterThan(dateTime47);
        boolean boolean49 = dateTime23.isEqual(dateTime34);
        int int50 = dateTime23.getDayOfYear();
        boolean boolean51 = dateTime2.isLessThanOrEqual(dateTime23);
        java.lang.Class<?> wildcardClass52 = dateTime2.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-1972.041095890411d) + "'", double17 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(date20);
// flaky:         org.junit.Assert.assertEquals(date20.toString(), "Thu Apr 10 10:47:24 MST 2");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 5 + "'", int25 == 5);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str37, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertNotNull(simpleDateFormat42);
        org.junit.Assert.assertNotNull(simpleDateFormat44);
        org.junit.Assert.assertNotNull(simpleDateFormat45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 365 + "'", int50 == 365);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test7384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7384");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        boolean boolean7 = dateTime5.isWeekday();
        java.util.Date date8 = dateTime5.getTime();
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
        int int12 = dateTime11.getMs();
        java.text.SimpleDateFormat simpleDateFormat13 = net.ajaskey.common.Utils.sdf;
        dateTime11.setSdf(simpleDateFormat13);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat13);
        java.text.SimpleDateFormat simpleDateFormat17 = null;
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat17);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double21 = dateTime18.getDeltaYears(dateTime20);
        boolean boolean22 = dateTime20.isNull();
        java.text.SimpleDateFormat simpleDateFormat24 = null;
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat24);
        dateTime25.set((int) ' ', 0, 11);
        boolean boolean30 = dateTime20.isGreaterThanOrEqual(dateTime25);
        double double31 = dateTime15.getDeltaYears(dateTime20);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(100L);
        double double38 = dateTime35.getDeltaYears(dateTime37);
        int int39 = dateTime35.getHour();
        java.text.SimpleDateFormat simpleDateFormat41 = null;
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat41);
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double45 = dateTime42.getDeltaYears(dateTime44);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean50 = dateTime44.isEqual(dateTime49);
        java.util.Calendar calendar51 = dateTime44.getCal();
        java.lang.String str52 = dateTime44.format();
        net.ajaskey.common.DateTime dateTime53 = null;
        long long54 = dateTime44.getDeltaDays(dateTime53);
        int int55 = dateTime44.getSecond();
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime(100L);
        double double62 = dateTime59.getDeltaYears(dateTime61);
        java.text.SimpleDateFormat simpleDateFormat64 = null;
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat64);
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double68 = dateTime65.getDeltaYears(dateTime67);
        boolean boolean69 = dateTime65.isWeekday();
        boolean boolean70 = dateTime59.sameDate(dateTime65);
        int int71 = dateTime65.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime72 = dateTime44.copy(dateTime65);
        dateTime35.set(dateTime65);
        boolean boolean74 = dateTime20.sameDate(dateTime65);
        java.util.Date date75 = null;
        net.ajaskey.common.DateTime dateTime76 = new net.ajaskey.common.DateTime(date75);
        boolean boolean77 = dateTime65.isGreaterThan(dateTime76);
        boolean boolean78 = dateTime5.isGreaterThan(dateTime76);
        net.ajaskey.common.DateTime dateTime81 = dateTime5.parse("                                                                                                                                      62,190,310,556,904", "       -18,438");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(date8);
        org.junit.Assert.assertEquals(date8.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat13);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1972.041095890411d) + "'", double38 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 10 + "'", int39 == 10);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(calendar51);
        org.junit.Assert.assertEquals(calendar51.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "BAD-DATE-FORMAT" + "'", str52, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 0L + "'", long54 == 0L);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-1972.041095890411d) + "'", double62 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNull(dateTime72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(dateTime81);
    }

    @Test
    public void test7385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7385");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime(100L);
        int int3 = dateTime2.getMs();
        java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdf;
        dateTime2.setSdf(simpleDateFormat4);
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat4);
        java.text.SimpleDateFormat simpleDateFormat8 = null;
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double12 = dateTime9.getDeltaYears(dateTime11);
        boolean boolean13 = dateTime11.isNull();
        java.text.SimpleDateFormat simpleDateFormat15 = null;
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat15);
        dateTime16.set((int) ' ', 0, 11);
        boolean boolean21 = dateTime11.isGreaterThanOrEqual(dateTime16);
        double double22 = dateTime6.getDeltaYears(dateTime11);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(100L);
        double double29 = dateTime26.getDeltaYears(dateTime28);
        int int30 = dateTime26.getHour();
        java.text.SimpleDateFormat simpleDateFormat32 = null;
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat32);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double36 = dateTime33.getDeltaYears(dateTime35);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean41 = dateTime35.isEqual(dateTime40);
        java.util.Calendar calendar42 = dateTime35.getCal();
        java.lang.String str43 = dateTime35.format();
        net.ajaskey.common.DateTime dateTime44 = null;
        long long45 = dateTime35.getDeltaDays(dateTime44);
        int int46 = dateTime35.getSecond();
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime(100L);
        double double53 = dateTime50.getDeltaYears(dateTime52);
        java.text.SimpleDateFormat simpleDateFormat55 = null;
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat55);
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double59 = dateTime56.getDeltaYears(dateTime58);
        boolean boolean60 = dateTime56.isWeekday();
        boolean boolean61 = dateTime50.sameDate(dateTime56);
        int int62 = dateTime56.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime63 = dateTime35.copy(dateTime56);
        dateTime26.set(dateTime56);
        boolean boolean65 = dateTime11.sameDate(dateTime56);
        java.util.Date date66 = null;
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime(date66);
        boolean boolean68 = dateTime56.isGreaterThan(dateTime67);
        int int69 = dateTime67.getSecond();
        net.ajaskey.common.DateTime dateTime72 = dateTime67.parse("01-Feb-0002", "Thu 10-Apr-0002 10:45:37");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat4);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-1972.041095890411d) + "'", double29 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(calendar42);
        org.junit.Assert.assertEquals(calendar42.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "BAD-DATE-FORMAT" + "'", str43, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-1972.041095890411d) + "'", double53 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNull(dateTime63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int69 + "' != '" + 24 + "'", int69 == 24);
        org.junit.Assert.assertNull(dateTime72);
    }

    @Test
    public void test7386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7386");
        java.text.SimpleDateFormat simpleDateFormat4 = null;
        java.text.SimpleDateFormat simpleDateFormat5 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("January", simpleDateFormat4, simpleDateFormat5);
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("                                                 100", simpleDateFormat5);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime("                                    26", simpleDateFormat5);
        java.text.SimpleDateFormat simpleDateFormat14 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat15 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("", simpleDateFormat14, simpleDateFormat15);
        java.text.SimpleDateFormat simpleDateFormat18 = null;
        java.text.SimpleDateFormat simpleDateFormat19 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("January", simpleDateFormat18, simpleDateFormat19);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat14, simpleDateFormat19);
        java.text.SimpleDateFormat simpleDateFormat24 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat25 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime("", simpleDateFormat24, simpleDateFormat25);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(100L);
        int int29 = dateTime28.getMs();
        java.text.SimpleDateFormat simpleDateFormat30 = net.ajaskey.common.Utils.sdf;
        dateTime28.setSdf(simpleDateFormat30);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat25, simpleDateFormat30);
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime("                             100", simpleDateFormat19, simpleDateFormat25);
        java.text.SimpleDateFormat simpleDateFormat36 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat37 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime("", simpleDateFormat36, simpleDateFormat37);
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:42:54", simpleDateFormat36);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime("5.00", simpleDateFormat19, simpleDateFormat36);
        java.text.SimpleDateFormat simpleDateFormat42 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat44 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat45 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime("", simpleDateFormat44, simpleDateFormat45);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat42, simpleDateFormat45);
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime("Sat 10-Nov-0042 10:43:44", simpleDateFormat19, simpleDateFormat42);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime("12-Mar-1891", simpleDateFormat5, simpleDateFormat42);
        org.junit.Assert.assertNotNull(simpleDateFormat5);
        org.junit.Assert.assertNotNull(simpleDateFormat14);
        org.junit.Assert.assertNotNull(simpleDateFormat15);
        org.junit.Assert.assertNotNull(simpleDateFormat19);
        org.junit.Assert.assertNotNull(simpleDateFormat24);
        org.junit.Assert.assertNotNull(simpleDateFormat25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat30);
        org.junit.Assert.assertNotNull(simpleDateFormat36);
        org.junit.Assert.assertNotNull(simpleDateFormat37);
        org.junit.Assert.assertNotNull(simpleDateFormat42);
        org.junit.Assert.assertNotNull(simpleDateFormat44);
        org.junit.Assert.assertNotNull(simpleDateFormat45);
    }

    @Test
    public void test7387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7387");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(100L);
        int int4 = dateTime3.getMs();
        java.lang.String str5 = dateTime3.toString();
        java.text.SimpleDateFormat simpleDateFormat7 = null;
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat7);
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double11 = dateTime8.getDeltaYears(dateTime10);
        boolean boolean12 = dateTime8.isWeekday();
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long17 = dateTime8.getDeltaDays(dateTime16);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(dateTime8);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime(100L);
        double double25 = dateTime22.getDeltaYears(dateTime24);
        boolean boolean26 = dateTime24.isWeekday();
        java.util.Date date27 = dateTime24.getTime();
        dateTime8.set(date27);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime(100L);
        int int31 = dateTime30.getMs();
        java.lang.String str32 = dateTime30.toString();
        boolean boolean33 = dateTime8.isLessThanOrEqual(dateTime30);
        boolean boolean34 = dateTime3.isLessThanOrEqual(dateTime30);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime("January", "11");
        double double38 = dateTime3.getDeltaYears(dateTime37);
        java.text.SimpleDateFormat simpleDateFormat39 = dateTime3.getSdf();
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime("January                                                                                               52.00                                                                                               52.00                                                                                               52.00                                                                                               52.00hi!                                                                                               52.00", simpleDateFormat39);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime("JanuaryThu 10-Apr-0002 10:44:47Thu 10-Apr-0002 10:44:47                                                                                               52.00Thu 10-Apr-0002 10:44:47hi!Thu 10-Apr-0002 10:44:47", simpleDateFormat39);
        int int42 = dateTime41.getDayOfWeek();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "31-Dec-1969" + "'", str5, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + (-1972.041095890411d) + "'", double25 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(date27);
        org.junit.Assert.assertEquals(date27.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 100 + "'", int31 == 100);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "31-Dec-1969" + "'", str32, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(simpleDateFormat39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
    }

    @Test
    public void test7388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7388");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        boolean boolean7 = dateTime5.isWeekday();
        java.util.Date date8 = dateTime5.getTime();
        net.ajaskey.common.DateTime dateTime9 = null;
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime(dateTime9);
        net.ajaskey.common.DateTime dateTime11 = dateTime5.copy(dateTime9);
        int int12 = dateTime5.getHour();
        int int13 = dateTime5.getMs();
        dateTime5.set(4, 12, 454);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(date8);
        org.junit.Assert.assertEquals(date8.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertNull(dateTime11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
    }

    @Test
    public void test7389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7389");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        java.lang.String str3 = dateTime1.toString();
        int int4 = dateTime1.getDayOfYear();
        java.text.SimpleDateFormat simpleDateFormat6 = null;
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat6);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double10 = dateTime7.getDeltaYears(dateTime9);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean15 = dateTime9.isEqual(dateTime14);
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(100L);
        int int18 = dateTime17.getMs();
        boolean boolean19 = dateTime14.isGreaterThanOrEqual(dateTime17);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(100L);
        dateTime21.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(100L);
        double double32 = dateTime29.getDeltaYears(dateTime31);
        boolean boolean33 = dateTime31.isWeekday();
        java.util.Date date34 = dateTime31.getTime();
        dateTime21.set(dateTime31);
        boolean boolean36 = net.ajaskey.common.Utils.sameDate(dateTime14, dateTime21);
        dateTime14.add((int) '#', 6);
        boolean boolean40 = dateTime1.sameDate(dateTime14);
        java.util.Date date41 = dateTime1.getTime();
        int int42 = dateTime1.getMinute();
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime(100L);
        double double49 = dateTime46.getDeltaYears(dateTime48);
        java.text.SimpleDateFormat simpleDateFormat50 = dateTime46.getSdf();
        java.lang.String str51 = dateTime46.getMonth();
        int int52 = dateTime46.getYear();
        double double53 = dateTime1.getDeltaYears(dateTime46);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "31-Dec-1969" + "'", str3, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 365 + "'", int4 == 365);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-1972.041095890411d) + "'", double32 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(date34);
        org.junit.Assert.assertEquals(date34.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(date41);
        org.junit.Assert.assertEquals(date41.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + (-1972.041095890411d) + "'", double49 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "April" + "'", str51, "April");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2 + "'", int52 == 2);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1972.041095890411d + "'", double53 == 1972.041095890411d);
    }

    @Test
    public void test7390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7390");
        java.lang.String[] strArray8 = new java.lang.String[] { "     5.00" };
        java.util.List<java.io.File> fileList9 = net.ajaskey.common.Utils.getDirTree("                                                 100", strArray8);
        java.util.List<java.io.File> fileList10 = net.ajaskey.common.Utils.getDirTree("Sat 04-Jan-0100 17:00:00", strArray8);
        java.util.List<java.io.File> fileList11 = net.ajaskey.common.Utils.getDirTree("Thu 10-Apr-0002 10:43:00", strArray8);
        java.util.List<java.io.File> fileList12 = net.ajaskey.common.Utils.getDirTree("                                                                                                           0", strArray8);
        java.util.List<java.io.File> fileList13 = net.ajaskey.common.Utils.getDirTree("", strArray8);
        java.util.List<java.io.File> fileList14 = net.ajaskey.common.Utils.getDirTree("                                                                                                                                                                                                                                                                     -44", strArray8);
        java.util.List<java.io.File> fileList15 = net.ajaskey.common.Utils.getDirTree("Thu 25-Jun-2020 10:45:30", strArray8);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNull(fileList9);
        org.junit.Assert.assertNull(fileList10);
        org.junit.Assert.assertNull(fileList11);
        org.junit.Assert.assertNull(fileList12);
        org.junit.Assert.assertNull(fileList13);
        org.junit.Assert.assertNull(fileList14);
        org.junit.Assert.assertNull(fileList15);
    }

    @Test
    public void test7391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7391");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat5 = null;
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat5);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        boolean boolean10 = dateTime3.isLessThan(dateTime8);
        int int11 = dateTime8.getYear();
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(dateTime8);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(25, 1, 0);
        int int17 = dateTime16.getMinute();
        java.util.Date date18 = dateTime16.getTime();
        int int19 = dateTime16.getMinute();
        double double20 = dateTime12.getDeltaYears(dateTime16);
        java.lang.String str21 = dateTime16.getDay();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1969 + "'", int11 == 1969);
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 47 + "'", int17 == 47);
        org.junit.Assert.assertNotNull(date18);
// flaky:         org.junit.Assert.assertEquals(date18.toString(), "Wed Jan 31 10:47:25 MST 25");
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 47 + "'", int19 == 47);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1946.2109589041097d + "'", double20 == 1946.2109589041097d);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Wednesday" + "'", str21, "Wednesday");
    }

    @Test
    public void test7392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7392");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(5, 19, 81);
        java.text.SimpleDateFormat simpleDateFormat4 = dateTime3.getSdf();
        org.junit.Assert.assertNull(simpleDateFormat4);
    }

    @Test
    public void test7393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7393");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean4 = dateTime3.isNull();
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime();
        boolean boolean6 = dateTime3.sameDate(dateTime5);
        java.text.SimpleDateFormat simpleDateFormat8 = null;
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double12 = dateTime9.getDeltaYears(dateTime11);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean17 = dateTime11.isEqual(dateTime16);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(100L);
        int int20 = dateTime19.getMs();
        boolean boolean21 = dateTime16.isGreaterThanOrEqual(dateTime19);
        java.text.SimpleDateFormat simpleDateFormat23 = null;
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat23);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double27 = dateTime24.getDeltaYears(dateTime26);
        boolean boolean28 = dateTime24.isWeekday();
        boolean boolean29 = dateTime19.isLessThanOrEqual(dateTime24);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(100L);
        dateTime31.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean36 = dateTime31.isWeekday();
        boolean boolean37 = dateTime19.isGreaterThanOrEqual(dateTime31);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime(100L);
        double double44 = dateTime41.getDeltaYears(dateTime43);
        java.text.SimpleDateFormat simpleDateFormat46 = null;
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat46);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double50 = dateTime47.getDeltaYears(dateTime49);
        boolean boolean51 = dateTime47.isWeekday();
        boolean boolean52 = dateTime41.sameDate(dateTime47);
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime(100L);
        double double59 = dateTime56.getDeltaYears(dateTime58);
        java.text.SimpleDateFormat simpleDateFormat61 = null;
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat61);
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double65 = dateTime62.getDeltaYears(dateTime64);
        boolean boolean66 = dateTime62.isWeekday();
        boolean boolean67 = dateTime56.sameDate(dateTime62);
        java.text.SimpleDateFormat simpleDateFormat69 = null;
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat69);
        net.ajaskey.common.DateTime dateTime72 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double73 = dateTime70.getDeltaYears(dateTime72);
        net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean78 = dateTime72.isEqual(dateTime77);
        dateTime56.set(dateTime77);
        long long80 = dateTime41.getDeltaMilliSeconds(dateTime77);
        net.ajaskey.common.DateTime dateTime84 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat86 = null;
        net.ajaskey.common.DateTime dateTime87 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat86);
        boolean boolean88 = net.ajaskey.common.Utils.sameDate(dateTime84, dateTime87);
        boolean boolean89 = net.ajaskey.common.Utils.sameDate(dateTime41, dateTime87);
        dateTime31.set(dateTime87);
        net.ajaskey.common.DateTime dateTime92 = dateTime87.parse("January");
        boolean boolean93 = dateTime5.isGreaterThanOrEqual(dateTime87);
        boolean boolean94 = dateTime87.isNull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-1972.041095890411d) + "'", double44 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-1972.041095890411d) + "'", double59 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long80 + "' != '" + 1L + "'", long80 == 1L);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNull(dateTime92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }

    @Test
    public void test7394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7394");
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime(100L);
        long long7 = dateTime4.getDeltaDays(dateTime6);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat14 = null;
        java.text.SimpleDateFormat simpleDateFormat15 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("January", simpleDateFormat14, simpleDateFormat15);
        java.text.SimpleDateFormat simpleDateFormat19 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("January", simpleDateFormat19);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("", simpleDateFormat19);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime("", simpleDateFormat15, simpleDateFormat19);
        dateTime11.setSdf(simpleDateFormat15);
        dateTime6.setSdf(simpleDateFormat15);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime(100L);
        double double33 = dateTime30.getDeltaYears(dateTime32);
        int int34 = dateTime30.getHour();
        dateTime30.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat39 = null;
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat39);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double43 = dateTime40.getDeltaYears(dateTime42);
        boolean boolean44 = dateTime30.isEqual(dateTime42);
        java.text.SimpleDateFormat simpleDateFormat46 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat48 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat49 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime("", simpleDateFormat48, simpleDateFormat49);
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat46, simpleDateFormat49);
        dateTime30.setSdf(simpleDateFormat46);
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat59 = null;
        java.text.SimpleDateFormat simpleDateFormat60 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime("January", simpleDateFormat59, simpleDateFormat60);
        java.text.SimpleDateFormat simpleDateFormat64 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime("January", simpleDateFormat64);
        net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime("", simpleDateFormat64);
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime("", simpleDateFormat60, simpleDateFormat64);
        dateTime56.setSdf(simpleDateFormat60);
        net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime("December", simpleDateFormat46, simpleDateFormat60);
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime(100L);
        int int72 = dateTime71.getMs();
        java.text.SimpleDateFormat simpleDateFormat73 = net.ajaskey.common.Utils.sdf;
        dateTime71.setSdf(simpleDateFormat73);
        int int75 = dateTime71.getDayOfWeek();
        java.text.SimpleDateFormat simpleDateFormat76 = dateTime71.getSdf();
        net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:43:00", simpleDateFormat60, simpleDateFormat76);
        net.ajaskey.common.DateTime dateTime78 = new net.ajaskey.common.DateTime("05-May-0005", simpleDateFormat15, simpleDateFormat60);
        boolean boolean79 = dateTime78.isNull();
        java.lang.String str81 = dateTime78.format
        java.lang.String str82 = dateTime78.getMonth();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-719795L) + "'", long7 == (-719795L));
        org.junit.Assert.assertNotNull(simpleDateFormat15);
        org.junit.Assert.assertNotNull(simpleDateFormat19);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + (-1972.041095890411d) + "'", double33 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 10 + "'", int34 == 10);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(simpleDateFormat46);
        org.junit.Assert.assertNotNull(simpleDateFormat48);
        org.junit.Assert.assertNotNull(simpleDateFormat49);
        org.junit.Assert.assertNotNull(simpleDateFormat60);
        org.junit.Assert.assertNotNull(simpleDateFormat64);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 100 + "'", int72 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 4 + "'", int75 == 4);
        org.junit.Assert.assertNotNull(simpleDateFormat76);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "BAD-DATE-FORMAT" + "'", str81, "BAD-DATE-FORMAT");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "UNKNOWN" + "'", str82, "UNKNOWN");
    }

    @Test
    public void test7395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7395");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        int int7 = dateTime3.getHour();
        java.util.Calendar calendar8 = dateTime3.getCal();
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(calendar8);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean14 = dateTime13.isNull();
        boolean boolean15 = net.ajaskey.common.Utils.sameDate(dateTime9, dateTime13);
        int int16 = dateTime13.getMinute();
        java.text.SimpleDateFormat simpleDateFormat25 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat27 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat28 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime("", simpleDateFormat27, simpleDateFormat28);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat25, simpleDateFormat28);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime("10-Apr-0002", simpleDateFormat28);
        java.text.SimpleDateFormat simpleDateFormat34 = null;
        java.text.SimpleDateFormat simpleDateFormat35 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime("January", simpleDateFormat34, simpleDateFormat35);
        java.text.SimpleDateFormat simpleDateFormat39 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime("January", simpleDateFormat39);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime("", simpleDateFormat39);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime("", simpleDateFormat35, simpleDateFormat39);
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime("January                                                                                               52.00                                                                                               52.00                                                                                               52.00                                                                                               52.00hi!                                                                                               52.00", simpleDateFormat28, simpleDateFormat39);
        java.text.SimpleDateFormat simpleDateFormat45 = null;
        java.text.SimpleDateFormat simpleDateFormat46 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime("January", simpleDateFormat45, simpleDateFormat46);
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime("December", simpleDateFormat39, simpleDateFormat46);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:43:00", simpleDateFormat46);
        java.text.SimpleDateFormat simpleDateFormat52 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat53 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime("", simpleDateFormat52, simpleDateFormat53);
        java.text.SimpleDateFormat simpleDateFormat56 = null;
        java.text.SimpleDateFormat simpleDateFormat57 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime("January", simpleDateFormat56, simpleDateFormat57);
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat52, simpleDateFormat57);
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime("JanuaryDecemberDecember                                                                                               52.00Decemberhi!December", simpleDateFormat46, simpleDateFormat52);
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime("                                     100.00", simpleDateFormat52);
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime("-62,190,310,610,288", simpleDateFormat52);
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime((long) (short) 0);
        int int65 = dateTime64.getHour();
        boolean boolean66 = dateTime64.isNull();
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime(dateTime64);
        java.lang.String str68 = dateTime67.toString();
        java.text.SimpleDateFormat simpleDateFormat70 = null;
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat70);
        net.ajaskey.common.DateTime dateTime73 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double74 = dateTime71.getDeltaYears(dateTime73);
        java.lang.String str75 = dateTime73.toFullString();
        int int76 = dateTime73.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime78 = new net.ajaskey.common.DateTime(100L);
        int int79 = dateTime78.getMs();
        net.ajaskey.common.DateTime dateTime83 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime85 = new net.ajaskey.common.DateTime(100L);
        double double86 = dateTime83.getDeltaYears(dateTime85);
        java.text.SimpleDateFormat simpleDateFormat87 = dateTime83.getSdf();
        boolean boolean88 = dateTime78.isLessThanOrEqual(dateTime83);
        int int89 = dateTime78.getDayOfMonth();
        java.util.Date date90 = dateTime78.getTime();
        dateTime73.set(date90);
        net.ajaskey.common.DateTime dateTime92 = new net.ajaskey.common.DateTime(date90);
        dateTime67.set(date90);
        dateTime62.set(date90);
        long long95 = dateTime13.getDeltaDays(dateTime62);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertNotNull(calendar8);
// flaky:         org.junit.Assert.assertEquals(calendar8.toString(), "java.util.GregorianCalendar[time=-62190310354843,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=25,MILLISECOND=157,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 47 + "'", int16 == 47);
        org.junit.Assert.assertNotNull(simpleDateFormat25);
        org.junit.Assert.assertNotNull(simpleDateFormat27);
        org.junit.Assert.assertNotNull(simpleDateFormat28);
        org.junit.Assert.assertNotNull(simpleDateFormat35);
        org.junit.Assert.assertNotNull(simpleDateFormat39);
        org.junit.Assert.assertNotNull(simpleDateFormat46);
        org.junit.Assert.assertNotNull(simpleDateFormat52);
        org.junit.Assert.assertNotNull(simpleDateFormat53);
        org.junit.Assert.assertNotNull(simpleDateFormat57);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 5 + "'", int65 == 5);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "31-Dec-1969" + "'", str68, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str75, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 31 + "'", int76 == 31);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 100 + "'", int79 == 100);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-1972.041095890411d) + "'", double86 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 31 + "'", int89 == 31);
        org.junit.Assert.assertNotNull(date90);
        org.junit.Assert.assertEquals(date90.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + long95 + "' != '" + (-719795L) + "'", long95 == (-719795L));
    }

    @Test
    public void test7396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7396");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        java.lang.String str3 = dateTime1.toString();
        dateTime1.set(25, (-1), (int) (short) 10);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(100L);
        double double14 = dateTime11.getDeltaYears(dateTime13);
        boolean boolean15 = dateTime13.isWeekday();
        boolean boolean16 = net.ajaskey.common.Utils.sameMonth(dateTime1, dateTime13);
        int int17 = dateTime1.getDayOfYear();
        java.lang.String str18 = dateTime1.toFullString();
        int int19 = dateTime1.getDayOfYear();
        boolean boolean20 = dateTime1.isWeekday();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "31-Dec-1969" + "'", str3, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + (-1972.041095890411d) + "'", double14 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 345 + "'", int17 == 345);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Sun 10-Dec-0024 17:00:00" + "'", str18, "Sun 10-Dec-0024 17:00:00");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 345 + "'", int19 == 345);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test7397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7397");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        java.text.SimpleDateFormat simpleDateFormat7 = dateTime3.getSdf();
        java.lang.String str8 = dateTime3.getMonth();
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime(100L);
        int int11 = dateTime10.getMs();
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(100L);
        double double18 = dateTime15.getDeltaYears(dateTime17);
        java.text.SimpleDateFormat simpleDateFormat19 = dateTime15.getSdf();
        boolean boolean20 = dateTime10.isLessThanOrEqual(dateTime15);
        java.text.SimpleDateFormat simpleDateFormat22 = null;
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat22);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double26 = dateTime23.getDeltaYears(dateTime25);
        boolean boolean27 = dateTime23.isWeekday();
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long32 = dateTime23.getDeltaDays(dateTime31);
        long long33 = dateTime10.getDeltaDays(dateTime31);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat39 = null;
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat39);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double43 = dateTime40.getDeltaYears(dateTime42);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean48 = dateTime42.isEqual(dateTime47);
        java.util.Calendar calendar49 = dateTime42.getCal();
        boolean boolean50 = dateTime37.isLessThan(dateTime42);
        boolean boolean51 = net.ajaskey.common.Utils.sameDate(dateTime10, dateTime37);
        java.lang.String str52 = dateTime37.getDay();
        java.text.SimpleDateFormat simpleDateFormat54 = null;
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat54);
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double58 = dateTime55.getDeltaYears(dateTime57);
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean63 = dateTime57.isEqual(dateTime62);
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime(100L);
        int int66 = dateTime65.getMs();
        boolean boolean67 = dateTime62.isGreaterThanOrEqual(dateTime65);
        net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime(100L);
        dateTime69.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime79 = new net.ajaskey.common.DateTime(100L);
        double double80 = dateTime77.getDeltaYears(dateTime79);
        boolean boolean81 = dateTime79.isWeekday();
        java.util.Date date82 = dateTime79.getTime();
        dateTime69.set(dateTime79);
        boolean boolean84 = net.ajaskey.common.Utils.sameDate(dateTime62, dateTime69);
        java.lang.String str86 = dateTime69.format("                             100");
        int int87 = dateTime69.getDayOfWeek();
        java.util.Date date88 = dateTime69.getTime();
        dateTime37.set(date88);
        int int90 = dateTime37.getMinute();
        net.ajaskey.common.DateTime dateTime91 = dateTime3.copy(dateTime37);
        java.lang.String str93 = dateTime3.format("                       48");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "April" + "'", str8, "April");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1972.041095890411d) + "'", double18 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 719795L + "'", long33 == 719795L);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(calendar49);
        org.junit.Assert.assertEquals(calendar49.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Thursday" + "'", str52, "Thursday");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + (-1972.041095890411d) + "'", double80 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(date82);
        org.junit.Assert.assertEquals(date82.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "                             100" + "'", str86, "                             100");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 4 + "'", int87 == 4);
        org.junit.Assert.assertNotNull(date88);
        org.junit.Assert.assertEquals(date88.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertNotNull(dateTime91);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "                       48" + "'", str93, "                       48");
    }

    @Test
    public void test7398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7398");
        java.lang.String str2 = net.ajaskey.common.Utils.lfmt(62190310384194L, 9);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "62,190,310,384,194" + "'", str2, "62,190,310,384,194");
    }

    @Test
    public void test7399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7399");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime
        java.util.Calendar calendar3 = dateTime2.getCal();
        org.junit.Assert.assertNull(calendar3);
    }

    @Test
    public void test7400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7400");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        java.text.SimpleDateFormat simpleDateFormat10 = dateTime6.getSdf();
        boolean boolean11 = dateTime1.isLessThanOrEqual(dateTime6);
        int int12 = dateTime1.getMinute();
        java.lang.String str14 = dateTime1.format("Invalid Time");
        int int15 = dateTime1.getHour();
        java.util.Calendar calendar16 = dateTime1.getCal();
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(calendar16);
        int int18 = dateTime17.getDayOfWeek();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "BAD-DATE-FORMAT" + "'", str14, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertNotNull(calendar16);
        org.junit.Assert.assertEquals(calendar16.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 4 + "'", int18 == 4);
    }

    @Test
    public void test7401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7401");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat5 = null;
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat5);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        boolean boolean10 = dateTime3.isLessThan(dateTime8);
        java.lang.String str11 = dateTime8.toFullString();
        dateTime8.add(10, (int) (byte) -1);
        java.text.SimpleDateFormat simpleDateFormat16 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat18 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat19 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("", simpleDateFormat18, simpleDateFormat19);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat16, simpleDateFormat19);
        boolean boolean22 = dateTime8.isGreaterThan(dateTime21);
        net.ajaskey.common.DateTime dateTime25 = dateTime8.parse("                              10", "Mon 06-Jan-0100 17:00:00");
        net.ajaskey.common.DateTime dateTime27 = dateTime8.parse("                                                                                                                                                                                                                                                          16");
        // The following exception was thrown during execution in test generation
        try {
            int int28 = dateTime27.getSecond();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str11, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertNotNull(simpleDateFormat16);
        org.junit.Assert.assertNotNull(simpleDateFormat18);
        org.junit.Assert.assertNotNull(simpleDateFormat19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(dateTime25);
        org.junit.Assert.assertNull(dateTime27);
    }

    @Test
    public void test7402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7402");
        java.util.zip.ZipOutputStream zipOutputStream1 = null;
        // The following exception was thrown during execution in test generation
        try {
            net.ajaskey.common.Utils.writeToZipFile("Thu 10-Apr-0002 10:45:49", zipOutputStream1);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: Thu 10-Apr-0002 10:45:49 (The filename, directory name, or volume label syntax is incorrect)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
    }

    @Test
    public void test7403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7403");
        net.ajaskey.common.Utils.NL = "                        569";
    }

    @Test
    public void test7404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7404");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean10 = dateTime4.isEqual(dateTime9);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(100L);
        int int13 = dateTime12.getMs();
        boolean boolean14 = dateTime9.isGreaterThanOrEqual(dateTime12);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime(100L);
        double double21 = dateTime18.getDeltaYears(dateTime20);
        int int22 = dateTime18.getHour();
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime();
        net.ajaskey.common.DateTime dateTime24 = null;
        boolean boolean25 = dateTime23.isGreaterThan(dateTime24);
        java.text.SimpleDateFormat simpleDateFormat27 = null;
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat27);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double31 = dateTime28.getDeltaYears(dateTime30);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean36 = dateTime30.isEqual(dateTime35);
        java.util.Calendar calendar37 = dateTime30.getCal();
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime(calendar37);
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime(calendar37);
        boolean boolean40 = dateTime23.isLessThan(dateTime39);
        boolean boolean41 = dateTime18.isLessThan(dateTime23);
        java.lang.String str43 = dateTime18.format("     0");
        long long44 = dateTime12.getDeltaMilliSeconds(dateTime18);
        java.lang.String str45 = dateTime12.toFullString();
        java.util.Calendar calendar46 = dateTime12.getCal();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-1972.041095890411d) + "'", double21 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 10 + "'", int22 == 10);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(calendar37);
        org.junit.Assert.assertEquals(calendar37.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "     0" + "'", str43, "     0");
// flaky:         org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-62190310354771L) + "'", long44 == (-62190310354771L));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str45, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertNotNull(calendar46);
        org.junit.Assert.assertEquals(calendar46.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    }

    @Test
    public void test7405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7405");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:44:41", "");
        net.ajaskey.common.DateTime dateTime5 = dateTime2.parse("Thu 10-Apr-0002 10:46:26", "                                        191");
        org.junit.Assert.assertNull(dateTime5);
    }

    @Test
    public void test7406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7406");
        net.ajaskey.common.Utils.NL = "February";
    }

    @Test
    public void test7407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7407");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(530, 1959, 46);
        java.util.Calendar calendar4 = dateTime3.getCal();
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(calendar4);
        org.junit.Assert.assertNotNull(calendar4);
// flaky:         org.junit.Assert.assertEquals(calendar4.toString(), "java.util.GregorianCalendar[time=-40286182354632,areFieldsSet=true,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=693,MONTH=4,WEEK_OF_YEAR=20,WEEK_OF_MONTH=3,DAY_OF_MONTH=16,DAY_OF_YEAR=136,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=3,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=25,MILLISECOND=368,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    }

    @Test
    public void test7408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7408");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) 161);
        int int2 = dateTime1.getDayOfMonth();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 31 + "'", int2 == 31);
    }

    @Test
    public void test7409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7409");
        net.ajaskey.common.Utils.sleep(93);
    }

    @Test
    public void test7410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7410");
        java.util.zip.ZipOutputStream zipOutputStream1 = null;
        // The following exception was thrown during execution in test generation
        try {
            net.ajaskey.common.Utils.writeToZipFile("                                                                                                                                                                                7", zipOutputStream1);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message:                                                                                                                                                                                 7 (The system cannot find the file specified)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
    }

    @Test
    public void test7411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7411");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(350, 477, 0);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        int int6 = dateTime5.getMs();
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(100L);
        double double13 = dateTime10.getDeltaYears(dateTime12);
        java.text.SimpleDateFormat simpleDateFormat14 = dateTime10.getSdf();
        boolean boolean15 = dateTime5.isLessThanOrEqual(dateTime10);
        java.text.SimpleDateFormat simpleDateFormat17 = null;
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat17);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double21 = dateTime18.getDeltaYears(dateTime20);
        boolean boolean22 = dateTime18.isWeekday();
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long27 = dateTime18.getDeltaDays(dateTime26);
        long long28 = dateTime5.getDeltaDays(dateTime26);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat34 = null;
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat34);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double38 = dateTime35.getDeltaYears(dateTime37);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean43 = dateTime37.isEqual(dateTime42);
        java.util.Calendar calendar44 = dateTime37.getCal();
        boolean boolean45 = dateTime32.isLessThan(dateTime37);
        boolean boolean46 = net.ajaskey.common.Utils.sameDate(dateTime5, dateTime32);
        int int47 = dateTime32.getDayOfWeek();
        java.util.Date date48 = null;
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime(date48);
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime(100L);
        double double56 = dateTime53.getDeltaYears(dateTime55);
        int int57 = dateTime53.getHour();
        java.text.SimpleDateFormat simpleDateFormat59 = null;
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat59);
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double63 = dateTime60.getDeltaYears(dateTime62);
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean68 = dateTime62.isEqual(dateTime67);
        java.util.Calendar calendar69 = dateTime62.getCal();
        dateTime53.set(calendar69);
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime(calendar69);
        net.ajaskey.common.DateTime dateTime72 = dateTime49.copy(dateTime71);
        net.ajaskey.common.DateTime dateTime76 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime78 = new net.ajaskey.common.DateTime(100L);
        double double79 = dateTime76.getDeltaYears(dateTime78);
        boolean boolean80 = dateTime78.isWeekday();
        int int81 = dateTime78.getDayOfYear();
        long long82 = dateTime72.getDeltaMilliSeconds(dateTime78);
        java.util.Calendar calendar83 = dateTime72.getCal();
        double double84 = dateTime32.getDeltaYears(dateTime72);
        boolean boolean85 = dateTime72.isWeekday();
        boolean boolean86 = dateTime3.isGreaterThan(dateTime72);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-1972.041095890411d) + "'", double13 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 719795L + "'", long28 == 719795L);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(calendar44);
        org.junit.Assert.assertEquals(calendar44.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 5 + "'", int47 == 5);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-1972.041095890411d) + "'", double56 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 10 + "'", int57 == 10);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(calendar69);
        org.junit.Assert.assertEquals(calendar69.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(dateTime72);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + (-1972.041095890411d) + "'", double79 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 365 + "'", int81 == 365);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 100L + "'", long82 == 100L);
        org.junit.Assert.assertNotNull(calendar83);
        org.junit.Assert.assertEquals(calendar83.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + (-1972.041095890411d) + "'", double84 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test7412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7412");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat5 = null;
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat5);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        boolean boolean10 = dateTime3.isLessThan(dateTime8);
        java.text.SimpleDateFormat simpleDateFormat16 = null;
        java.text.SimpleDateFormat simpleDateFormat17 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime("January", simpleDateFormat16, simpleDateFormat17);
        java.text.SimpleDateFormat simpleDateFormat21 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime("January", simpleDateFormat21);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime("", simpleDateFormat21);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("", simpleDateFormat17, simpleDateFormat21);
        java.text.SimpleDateFormat simpleDateFormat29 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat31 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat32 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime("", simpleDateFormat31, simpleDateFormat32);
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat29, simpleDateFormat32);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("10-Apr-0002", simpleDateFormat32);
        java.text.SimpleDateFormat simpleDateFormat38 = null;
        java.text.SimpleDateFormat simpleDateFormat39 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime("January", simpleDateFormat38, simpleDateFormat39);
        java.text.SimpleDateFormat simpleDateFormat43 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime("January", simpleDateFormat43);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime("", simpleDateFormat43);
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime("", simpleDateFormat39, simpleDateFormat43);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime("January                                                                                               52.00                                                                                               52.00                                                                                               52.00                                                                                               52.00hi!                                                                                               52.00", simpleDateFormat32, simpleDateFormat43);
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime(100L);
        double double54 = dateTime51.getDeltaYears(dateTime53);
        int int55 = dateTime51.getHour();
        dateTime51.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat60 = null;
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat60);
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double64 = dateTime61.getDeltaYears(dateTime63);
        boolean boolean65 = dateTime51.isEqual(dateTime63);
        java.text.SimpleDateFormat simpleDateFormat67 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat69 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat70 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime("", simpleDateFormat69, simpleDateFormat70);
        net.ajaskey.common.DateTime dateTime72 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat67, simpleDateFormat70);
        dateTime51.setSdf(simpleDateFormat67);
        net.ajaskey.common.DateTime dateTime74 = new net.ajaskey.common.DateTime("", simpleDateFormat32, simpleDateFormat67);
        net.ajaskey.common.DateTime dateTime75 = new net.ajaskey.common.DateTime("   8.00", simpleDateFormat17, simpleDateFormat32);
        net.ajaskey.common.DateTime dateTime76 = new net.ajaskey.common.DateTime("Thu 25-Jun-2020 10:43:40", simpleDateFormat32);
        net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime("                               1", simpleDateFormat32);
        dateTime3.setSdf(simpleDateFormat32);
        java.text.SimpleDateFormat simpleDateFormat79 = dateTime3.getSdf();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(simpleDateFormat17);
        org.junit.Assert.assertNotNull(simpleDateFormat21);
        org.junit.Assert.assertNotNull(simpleDateFormat29);
        org.junit.Assert.assertNotNull(simpleDateFormat31);
        org.junit.Assert.assertNotNull(simpleDateFormat32);
        org.junit.Assert.assertNotNull(simpleDateFormat39);
        org.junit.Assert.assertNotNull(simpleDateFormat43);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-1972.041095890411d) + "'", double54 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 10 + "'", int55 == 10);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(simpleDateFormat67);
        org.junit.Assert.assertNotNull(simpleDateFormat69);
        org.junit.Assert.assertNotNull(simpleDateFormat70);
        org.junit.Assert.assertNotNull(simpleDateFormat79);
    }

    @Test
    public void test7413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7413");
        java.util.Map<java.lang.String, java.lang.Integer> strMap0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = net.ajaskey.common.Utils.findName(strMap0, (java.lang.Integer) 145);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test7414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7414");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((-1593103608097L));
    }

    @Test
    public void test7415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7415");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat5 = null;
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat5);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        boolean boolean10 = dateTime3.isLessThan(dateTime8);
        dateTime8.set(3, 365, 0);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime(100L);
        dateTime20.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str25 = dateTime20.getMonth();
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(100L);
        dateTime27.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str32 = dateTime27.getMonth();
        int int33 = dateTime27.getMs();
        net.ajaskey.common.DateTime dateTime34 = dateTime20.copy(dateTime27);
        dateTime18.set(dateTime20);
        dateTime18.setFirstWorkDay();
        net.ajaskey.common.DateTime dateTime37 = dateTime8.copy(dateTime18);
        boolean boolean38 = dateTime37.isNull();
        java.lang.String str40 = dateTime37.format("Thu 10-Apr-0002 10:42:59");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "January" + "'", str25, "January");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "January" + "'", str32, "January");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        org.junit.Assert.assertNotNull(dateTime34);
        org.junit.Assert.assertNotNull(dateTime37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "BAD-DATE-FORMAT" + "'", str40, "BAD-DATE-FORMAT");
    }

    @Test
    public void test7416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7416");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        boolean boolean6 = dateTime2.isWeekday();
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long11 = dateTime2.getDeltaDays(dateTime10);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(dateTime2);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(100L);
        double double19 = dateTime16.getDeltaYears(dateTime18);
        boolean boolean20 = dateTime18.isWeekday();
        java.util.Date date21 = dateTime18.getTime();
        dateTime2.set(date21);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime(100L);
        int int25 = dateTime24.getMs();
        java.lang.String str26 = dateTime24.toString();
        boolean boolean27 = dateTime2.isLessThanOrEqual(dateTime24);
        int int28 = dateTime2.getHour();
        int int29 = dateTime2.getYear();
        java.util.Calendar calendar30 = dateTime2.getCal();
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime(100L);
        int int33 = dateTime32.getMs();
        boolean boolean34 = dateTime32.isWeekday();
        int int35 = dateTime32.getHour();
        java.text.SimpleDateFormat simpleDateFormat37 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime("January", simpleDateFormat37);
        dateTime32.setSdf(simpleDateFormat37);
        dateTime2.setSdf(simpleDateFormat37);
        int int41 = dateTime2.getMs();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-1972.041095890411d) + "'", double19 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(date21);
        org.junit.Assert.assertEquals(date21.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "31-Dec-1969" + "'", str26, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 5 + "'", int28 == 5);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1969 + "'", int29 == 1969);
        org.junit.Assert.assertNotNull(calendar30);
        org.junit.Assert.assertEquals(calendar30.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 5 + "'", int35 == 5);
        org.junit.Assert.assertNotNull(simpleDateFormat37);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
    }

    @Test
    public void test7417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7417");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        boolean boolean3 = dateTime1.isWeekday();
        int int4 = dateTime1.getHour();
        java.text.SimpleDateFormat simpleDateFormat6 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("January", simpleDateFormat6);
        dateTime1.setSdf(simpleDateFormat6);
        java.text.SimpleDateFormat simpleDateFormat9 = dateTime1.getSdf();
        java.util.Calendar calendar10 = dateTime1.getCal();
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(calendar10);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(calendar10);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(100L);
        int int15 = dateTime14.getMs();
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(100L);
        double double22 = dateTime19.getDeltaYears(dateTime21);
        java.text.SimpleDateFormat simpleDateFormat23 = dateTime19.getSdf();
        boolean boolean24 = dateTime14.isLessThanOrEqual(dateTime19);
        java.text.SimpleDateFormat simpleDateFormat26 = null;
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat26);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double30 = dateTime27.getDeltaYears(dateTime29);
        boolean boolean31 = dateTime27.isWeekday();
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long36 = dateTime27.getDeltaDays(dateTime35);
        long long37 = dateTime14.getDeltaDays(dateTime35);
        boolean boolean38 = dateTime14.isWeekday();
        java.text.SimpleDateFormat simpleDateFormat46 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat48 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat49 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime("", simpleDateFormat48, simpleDateFormat49);
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat46, simpleDateFormat49);
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime("10-Apr-0002", simpleDateFormat49);
        java.text.SimpleDateFormat simpleDateFormat55 = null;
        java.text.SimpleDateFormat simpleDateFormat56 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime("January", simpleDateFormat55, simpleDateFormat56);
        java.text.SimpleDateFormat simpleDateFormat60 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime("January", simpleDateFormat60);
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime("", simpleDateFormat60);
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime("", simpleDateFormat56, simpleDateFormat60);
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime("January                                                                                               52.00                                                                                               52.00                                                                                               52.00                                                                                               52.00hi!                                                                                               52.00", simpleDateFormat49, simpleDateFormat60);
        java.text.SimpleDateFormat simpleDateFormat66 = null;
        java.text.SimpleDateFormat simpleDateFormat67 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime("January", simpleDateFormat66, simpleDateFormat67);
        net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime("December", simpleDateFormat60, simpleDateFormat67);
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:43:00", simpleDateFormat67);
        java.text.SimpleDateFormat simpleDateFormat73 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat74 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime75 = new net.ajaskey.common.DateTime("", simpleDateFormat73, simpleDateFormat74);
        java.text.SimpleDateFormat simpleDateFormat77 = null;
        java.text.SimpleDateFormat simpleDateFormat78 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime79 = new net.ajaskey.common.DateTime("January", simpleDateFormat77, simpleDateFormat78);
        net.ajaskey.common.DateTime dateTime80 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat73, simpleDateFormat78);
        net.ajaskey.common.DateTime dateTime81 = new net.ajaskey.common.DateTime("JanuaryDecemberDecember                                                                                               52.00Decemberhi!December", simpleDateFormat67, simpleDateFormat73);
        net.ajaskey.common.DateTime dateTime82 = new net.ajaskey.common.DateTime("             1", simpleDateFormat73);
        boolean boolean83 = dateTime14.isLessThan(dateTime82);
        boolean boolean84 = dateTime12.isGreaterThanOrEqual(dateTime82);
        net.ajaskey.common.DateTime dateTime87 = dateTime12.parse("        1", "                                                                                                         621");
        int int88 = dateTime12.getDayOfMonth();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertNotNull(simpleDateFormat6);
        org.junit.Assert.assertNotNull(simpleDateFormat9);
        org.junit.Assert.assertNotNull(calendar10);
        org.junit.Assert.assertEquals(calendar10.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-1972.041095890411d) + "'", double22 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 719795L + "'", long37 == 719795L);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(simpleDateFormat46);
        org.junit.Assert.assertNotNull(simpleDateFormat48);
        org.junit.Assert.assertNotNull(simpleDateFormat49);
        org.junit.Assert.assertNotNull(simpleDateFormat56);
        org.junit.Assert.assertNotNull(simpleDateFormat60);
        org.junit.Assert.assertNotNull(simpleDateFormat67);
        org.junit.Assert.assertNotNull(simpleDateFormat73);
        org.junit.Assert.assertNotNull(simpleDateFormat74);
        org.junit.Assert.assertNotNull(simpleDateFormat78);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNull(dateTime87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 31 + "'", int88 == 31);
    }

    @Test
    public void test7418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7418");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        int int3 = dateTime1.getHour();
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat9 = null;
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat9);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double13 = dateTime10.getDeltaYears(dateTime12);
        boolean boolean14 = dateTime7.isLessThan(dateTime12);
        java.lang.String str15 = dateTime12.toFullString();
        dateTime12.add(10, (int) (byte) -1);
        java.text.SimpleDateFormat simpleDateFormat20 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat22 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat23 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("", simpleDateFormat22, simpleDateFormat23);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat20, simpleDateFormat23);
        boolean boolean26 = dateTime12.isGreaterThan(dateTime25);
        boolean boolean27 = dateTime1.isEqual(dateTime12);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.lang.String str32 = dateTime31.toFullString();
        dateTime31.add(7, 53);
        net.ajaskey.common.DateTime dateTime36 = dateTime1.copy(dateTime31);
        boolean boolean37 = dateTime31.isNull();
        java.lang.String str38 = dateTime31.format();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 5 + "'", int3 == 5);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str15, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertNotNull(simpleDateFormat20);
        org.junit.Assert.assertNotNull(simpleDateFormat22);
        org.junit.Assert.assertNotNull(simpleDateFormat23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Thu 10-Apr-0002 10:47:25" + "'", str32, "Thu 10-Apr-0002 10:47:25");
        org.junit.Assert.assertNotNull(dateTime36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "BAD-DATE-FORMAT" + "'", str38, "BAD-DATE-FORMAT");
    }

    @Test
    public void test7419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7419");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        boolean boolean7 = dateTime5.isWeekday();
        java.util.Date date8 = dateTime5.getTime();
        java.text.SimpleDateFormat simpleDateFormat10 = null;
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat10);
        dateTime11.set((int) ' ', 0, 11);
        boolean boolean16 = dateTime11.isWeekday();
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(100L);
        dateTime18.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(100L);
        double double29 = dateTime26.getDeltaYears(dateTime28);
        boolean boolean30 = dateTime28.isWeekday();
        java.util.Date date31 = dateTime28.getTime();
        dateTime18.set(dateTime28);
        boolean boolean33 = dateTime11.isEqual(dateTime28);
        boolean boolean34 = dateTime5.isLessThanOrEqual(dateTime28);
        dateTime28.set(1969, 0, (int) '4');
        java.util.Calendar calendar39 = dateTime28.getCal();
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime(calendar39);
        java.text.SimpleDateFormat simpleDateFormat43 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat45 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat46 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime("", simpleDateFormat45, simpleDateFormat46);
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat43, simpleDateFormat46);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime("10-Apr-0002", simpleDateFormat46);
        java.text.SimpleDateFormat simpleDateFormat51 = null;
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat51);
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double55 = dateTime52.getDeltaYears(dateTime54);
        boolean boolean56 = dateTime52.isWeekday();
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long61 = dateTime52.getDeltaDays(dateTime60);
        boolean boolean62 = net.ajaskey.common.Utils.sameDate(dateTime49, dateTime52);
        boolean boolean63 = dateTime40.isGreaterThanOrEqual(dateTime52);
        dateTime40.set((-2005), 28, 313);
        net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime(100L);
        net.ajaskey.common.DateTime dateTime72 = dateTime69.parse("", "");
        long long73 = dateTime40.getDeltaMilliSeconds(dateTime72);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(date8);
        org.junit.Assert.assertEquals(date8.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-1972.041095890411d) + "'", double29 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(date31);
        org.junit.Assert.assertEquals(date31.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(calendar39);
        org.junit.Assert.assertEquals(calendar39.toString(), "java.util.GregorianCalendar[time=-27043199900,areFieldsSet=true,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=1,WEEK_OF_YEAR=8,WEEK_OF_MONTH=4,DAY_OF_MONTH=21,DAY_OF_YEAR=52,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(simpleDateFormat43);
        org.junit.Assert.assertNotNull(simpleDateFormat45);
        org.junit.Assert.assertNotNull(simpleDateFormat46);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 0L + "'", long61 == 0L);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(dateTime72);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 0L + "'", long73 == 0L);
    }

    @Test
    public void test7420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7420");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean10 = dateTime4.isEqual(dateTime9);
        boolean boolean11 = dateTime4.isNull();
        int int12 = dateTime4.getHour();
        java.lang.String str13 = dateTime4.getDay();
        java.text.SimpleDateFormat simpleDateFormat14 = dateTime4.getSdf();
        int int15 = dateTime4.getHour();
        int int16 = dateTime4.getMinute();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Wednesday" + "'", str13, "Wednesday");
        org.junit.Assert.assertNull(simpleDateFormat14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test7421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7421");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("", "         22");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(dateTime2);
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(100L);
        double double10 = dateTime7.getDeltaYears(dateTime9);
        java.text.SimpleDateFormat simpleDateFormat12 = null;
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat12);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double16 = dateTime13.getDeltaYears(dateTime15);
        boolean boolean17 = dateTime13.isWeekday();
        boolean boolean18 = dateTime7.sameDate(dateTime13);
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime(100L);
        double double25 = dateTime22.getDeltaYears(dateTime24);
        java.text.SimpleDateFormat simpleDateFormat27 = null;
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat27);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double31 = dateTime28.getDeltaYears(dateTime30);
        boolean boolean32 = dateTime28.isWeekday();
        boolean boolean33 = dateTime22.sameDate(dateTime28);
        java.text.SimpleDateFormat simpleDateFormat35 = null;
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat35);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double39 = dateTime36.getDeltaYears(dateTime38);
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean44 = dateTime38.isEqual(dateTime43);
        dateTime22.set(dateTime43);
        long long46 = dateTime7.getDeltaMilliSeconds(dateTime43);
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime(100L);
        int int49 = dateTime48.getMs();
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime(100L);
        double double56 = dateTime53.getDeltaYears(dateTime55);
        java.text.SimpleDateFormat simpleDateFormat57 = dateTime53.getSdf();
        boolean boolean58 = dateTime48.isLessThanOrEqual(dateTime53);
        int int59 = dateTime53.getDayOfYear();
        boolean boolean60 = dateTime53.isWeekday();
        boolean boolean61 = dateTime7.sameDate(dateTime53);
        java.util.Calendar calendar62 = dateTime7.getCal();
        boolean boolean63 = dateTime7.isWeekday();
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime(dateTime7);
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat70 = null;
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat70);
        boolean boolean72 = net.ajaskey.common.Utils.sameDate(dateTime68, dateTime71);
        double double73 = dateTime64.getDeltaYears(dateTime71);
        int int74 = dateTime3.getYears(dateTime64);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1972.041095890411d) + "'", double10 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + (-1972.041095890411d) + "'", double25 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-1972.041095890411d) + "'", double56 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 100 + "'", int59 == 100);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(calendar62);
// flaky:         org.junit.Assert.assertEquals(calendar62.toString(), "java.util.GregorianCalendar[time=-62190310354307,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=25,MILLISECOND=693,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-2019) + "'", int74 == (-2019));
    }

    @Test
    public void test7422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7422");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        int int3 = dateTime1.getHour();
        int int4 = dateTime1.getDayOfYear();
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime(100L);
        int int7 = dateTime6.getMs();
        java.lang.String str8 = dateTime6.toString();
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime(100L);
        double double15 = dateTime12.getDeltaYears(dateTime14);
        int int16 = dateTime12.getHour();
        int int17 = dateTime12.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime(100L);
        double double24 = dateTime21.getDeltaYears(dateTime23);
        boolean boolean25 = dateTime23.isWeekday();
        boolean boolean26 = net.ajaskey.common.Utils.sameDate(dateTime12, dateTime23);
        boolean boolean27 = net.ajaskey.common.Utils.sameDate(dateTime6, dateTime12);
        net.ajaskey.common.DateTime dateTime28 = null;
        boolean boolean29 = dateTime12.isLessThanOrEqual(dateTime28);
        java.lang.String str30 = dateTime12.getDay();
        boolean boolean31 = dateTime1.isGreaterThan(dateTime12);
        int int32 = dateTime1.getYear();
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime(100L);
        double double39 = dateTime36.getDeltaYears(dateTime38);
        java.util.Date date40 = dateTime36.getTime();
        dateTime1.set(date40);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime(date40);
        java.lang.String str43 = dateTime42.toFullString();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 5 + "'", int3 == 5);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 365 + "'", int4 == 365);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "31-Dec-1969" + "'", str8, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-1972.041095890411d) + "'", double15 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10 + "'", int16 == 10);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10 + "'", int17 == 10);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1972.041095890411d) + "'", double24 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Thursday" + "'", str30, "Thursday");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1969 + "'", int32 == 1969);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-1972.041095890411d) + "'", double39 == (-1972.041095890411d));
        org.junit.Assert.assertNotNull(date40);
// flaky:         org.junit.Assert.assertEquals(date40.toString(), "Thu Apr 10 10:47:25 MST 2");
// flaky:         org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Thu 10-Apr-0002 10:47:25" + "'", str43, "Thu 10-Apr-0002 10:47:25");
    }

    @Test
    public void test7423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7423");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        dateTime1.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str6 = dateTime1.getMonth();
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        dateTime8.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str13 = dateTime8.getMonth();
        int int14 = dateTime8.getMs();
        net.ajaskey.common.DateTime dateTime15 = dateTime1.copy(dateTime8);
        int int16 = dateTime8.getSecond();
        int int17 = dateTime8.getYear();
        dateTime8.setFirstWorkDay();
        int int19 = dateTime8.getDayOfMonth();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "January" + "'", str6, "January");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "January" + "'", str13, "January");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertNotNull(dateTime15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 6 + "'", int19 == 6);
    }

    @Test
    public void test7424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7424");
        net.ajaskey.common.Utils.NL = "Thu 10-Apr-0002 10:45:05";
    }

    @Test
    public void test7425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7425");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        java.text.SimpleDateFormat simpleDateFormat10 = dateTime6.getSdf();
        boolean boolean11 = dateTime1.isLessThanOrEqual(dateTime6);
        int int12 = dateTime1.getDayOfMonth();
        java.util.Date date13 = dateTime1.getTime();
        java.text.SimpleDateFormat simpleDateFormat15 = null;
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("Invalid fmt", simpleDateFormat15);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(100L);
        int int19 = dateTime18.getMs();
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime(100L);
        double double26 = dateTime23.getDeltaYears(dateTime25);
        java.text.SimpleDateFormat simpleDateFormat27 = dateTime23.getSdf();
        boolean boolean28 = dateTime18.isLessThanOrEqual(dateTime23);
        boolean boolean29 = dateTime23.isWeekday();
        java.lang.String str30 = dateTime23.toString();
        int int31 = dateTime23.getHour();
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(100L);
        double double38 = dateTime35.getDeltaYears(dateTime37);
        int int39 = dateTime35.getHour();
        java.util.Calendar calendar40 = dateTime35.getCal();
        dateTime23.set(calendar40);
        int int42 = dateTime23.getMinute();
        boolean boolean43 = net.ajaskey.common.Utils.sameDate(dateTime16, dateTime23);
        boolean boolean44 = dateTime1.isLessThan(dateTime16);
        dateTime1.set(454, (int) (byte) 100, 593);
        int int49 = dateTime1.getDayOfWeek();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 31 + "'", int12 == 31);
        org.junit.Assert.assertNotNull(date13);
        org.junit.Assert.assertEquals(date13.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-1972.041095890411d) + "'", double26 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "10-Apr-0002" + "'", str30, "10-Apr-0002");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10 + "'", int31 == 10);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1972.041095890411d) + "'", double38 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 10 + "'", int39 == 10);
        org.junit.Assert.assertNotNull(calendar40);
// flaky:         org.junit.Assert.assertEquals(calendar40.toString(), "java.util.GregorianCalendar[time=-62190310354244,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=25,MILLISECOND=756,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
// flaky:         org.junit.Assert.assertTrue("'" + int42 + "' != '" + 47 + "'", int42 == 47);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 7 + "'", int49 == 7);
    }

    @Test
    public void test7426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7426");
        java.lang.String str2 = net.ajaskey.common.Utils.lfmt(62190310443652L, 87);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                                                     62,190,310,443,652" + "'", str2, "                                                                     62,190,310,443,652");
    }

    @Test
    public void test7427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7427");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(53, (int) (byte) 100, 28);
        int int4 = dateTime3.getDayOfMonth();
        dateTime3.add(11, 2);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(100L);
        double double14 = dateTime11.getDeltaYears(dateTime13);
        java.text.SimpleDateFormat simpleDateFormat16 = null;
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double20 = dateTime17.getDeltaYears(dateTime19);
        boolean boolean21 = dateTime17.isWeekday();
        boolean boolean22 = dateTime11.sameDate(dateTime17);
        java.text.SimpleDateFormat simpleDateFormat24 = null;
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat24);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double28 = dateTime25.getDeltaYears(dateTime27);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean33 = dateTime27.isEqual(dateTime32);
        dateTime11.set(dateTime32);
        int int35 = dateTime32.getDayOfWeek();
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime();
        net.ajaskey.common.DateTime dateTime37 = null;
        boolean boolean38 = dateTime36.isGreaterThan(dateTime37);
        java.text.SimpleDateFormat simpleDateFormat40 = null;
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat40);
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double44 = dateTime41.getDeltaYears(dateTime43);
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean49 = dateTime43.isEqual(dateTime48);
        java.util.Calendar calendar50 = dateTime43.getCal();
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime(calendar50);
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime(calendar50);
        boolean boolean53 = dateTime36.isLessThan(dateTime52);
        long long54 = dateTime32.getDeltaDays(dateTime36);
        java.util.Date date55 = dateTime32.getTime();
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime(date55);
        long long57 = dateTime3.getDeltaMilliSeconds(dateTime56);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 28 + "'", int4 == 28);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + (-1972.041095890411d) + "'", double14 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 5 + "'", int35 == 5);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(calendar50);
        org.junit.Assert.assertEquals(calendar50.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-738233L) + "'", long54 == (-738233L));
        org.junit.Assert.assertNotNull(date55);
// flaky:         org.junit.Assert.assertEquals(date55.toString(), "Thu Apr 10 10:47:25 MST 2");
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1960761600000L) + "'", long57 == (-1960761600000L));
    }

    @Test
    public void test7428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7428");
        net.ajaskey.common.Utils.makeDir("Thu 10-Apr-0002 10:45:50");
    }

    @Test
    public void test7429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7429");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        int int7 = dateTime3.getHour();
        java.util.Calendar calendar8 = dateTime3.getCal();
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(calendar8);
        int int10 = dateTime9.getYear();
        int int11 = dateTime9.getHour();
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(100L);
        long long18 = dateTime15.getDeltaDays(dateTime17);
        int int19 = dateTime17.getSecond();
        int int20 = dateTime17.getYear();
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime(100L);
        int int23 = dateTime22.getMs();
        boolean boolean24 = dateTime22.isWeekday();
        java.util.Calendar calendar25 = dateTime22.getCal();
        int int26 = dateTime17.getYears(dateTime22);
        java.util.Calendar calendar27 = dateTime17.getCal();
        int int28 = dateTime9.getYears(dateTime17);
        int int29 = dateTime17.getMs();
        java.lang.String str30 = dateTime17.getMonth();
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime(100L);
        dateTime32.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime(100L);
        double double43 = dateTime40.getDeltaYears(dateTime42);
        boolean boolean44 = dateTime42.isWeekday();
        java.util.Date date45 = dateTime42.getTime();
        dateTime32.set(dateTime42);
        int int47 = dateTime32.getYear();
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime(100L);
        int int50 = dateTime49.getMs();
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime(100L);
        double double57 = dateTime54.getDeltaYears(dateTime56);
        java.text.SimpleDateFormat simpleDateFormat58 = dateTime54.getSdf();
        boolean boolean59 = dateTime49.isLessThanOrEqual(dateTime54);
        boolean boolean60 = dateTime54.isWeekday();
        boolean boolean61 = dateTime54.isWeekday();
        boolean boolean62 = dateTime32.sameDate(dateTime54);
        net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime(12, 42, (int) (byte) 1);
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean71 = dateTime70.isNull();
        int int72 = dateTime70.getDayOfYear();
        net.ajaskey.common.DateTime dateTime76 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime80 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime82 = new net.ajaskey.common.DateTime(100L);
        long long83 = dateTime80.getDeltaDays(dateTime82);
        int int84 = dateTime80.getHour();
        dateTime80.add((int) (byte) 100, (int) (byte) 0);
        double double88 = dateTime76.getDeltaYears(dateTime80);
        boolean boolean89 = dateTime70.isLessThanOrEqual(dateTime76);
        boolean boolean90 = dateTime66.sameDate(dateTime76);
        long long91 = dateTime32.getDeltaMilliSeconds(dateTime76);
        boolean boolean92 = dateTime17.sameDate(dateTime76);
        java.lang.String str93 = dateTime76.getMonth();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertNotNull(calendar8);
// flaky:         org.junit.Assert.assertEquals(calendar8.toString(), "java.util.GregorianCalendar[time=-62190310354184,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=25,MILLISECOND=816,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-719795L) + "'", long18 == (-719795L));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1969 + "'", int20 == 1969);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(calendar25);
        org.junit.Assert.assertEquals(calendar25.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(calendar27);
        org.junit.Assert.assertEquals(calendar27.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1967 + "'", int28 == 1967);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "December" + "'", str30, "December");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-1972.041095890411d) + "'", double43 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(date45);
        org.junit.Assert.assertEquals(date45.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1969 + "'", int47 == 1969);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-1972.041095890411d) + "'", double57 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 100 + "'", int72 == 100);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + (-719795L) + "'", long83 == (-719795L));
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 10 + "'", int84 == 10);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long91 + "' != '" + (-62190310354284L) + "'", long91 == (-62190310354284L));
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "April" + "'", str93, "April");
    }

    @Test
    public void test7430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7430");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime(100L);
        int int3 = dateTime2.getMs();
        java.text.SimpleDateFormat simpleDateFormat4 = net.ajaskey.common.Utils.sdf;
        dateTime2.setSdf(simpleDateFormat4);
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat4);
        java.text.SimpleDateFormat simpleDateFormat8 = null;
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double12 = dateTime9.getDeltaYears(dateTime11);
        boolean boolean13 = dateTime11.isNull();
        java.text.SimpleDateFormat simpleDateFormat15 = null;
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat15);
        dateTime16.set((int) ' ', 0, 11);
        boolean boolean21 = dateTime11.isGreaterThanOrEqual(dateTime16);
        double double22 = dateTime6.getDeltaYears(dateTime11);
        java.text.SimpleDateFormat simpleDateFormat24 = null;
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat24);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double28 = dateTime25.getDeltaYears(dateTime27);
        boolean boolean29 = dateTime27.isNull();
        boolean boolean30 = dateTime11.isGreaterThan(dateTime27);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(dateTime11);
        int int32 = dateTime31.getDayOfMonth();
        int int33 = dateTime31.getMinute();
        boolean boolean34 = dateTime31.isNull();
        java.text.SimpleDateFormat simpleDateFormat36 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat38 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat39 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime("", simpleDateFormat38, simpleDateFormat39);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat36, simpleDateFormat39);
        int int42 = dateTime41.getYear();
        int int43 = dateTime41.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime44 = dateTime31.copy(dateTime41);
        // The following exception was thrown during execution in test generation
        try {
            net.ajaskey.common.DateTime dateTime46 = dateTime44.parse("62,190,310,542,280");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 100 + "'", int3 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat4);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 31 + "'", int32 == 31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(simpleDateFormat36);
        org.junit.Assert.assertNotNull(simpleDateFormat38);
        org.junit.Assert.assertNotNull(simpleDateFormat39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(dateTime44);
    }

    @Test
    public void test7431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7431");
        java.util.Map<java.lang.String, java.lang.Integer> strMap0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = net.ajaskey.common.Utils.findName(strMap0, (java.lang.Integer) 503);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test7432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7432");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) (short) 0);
        int int2 = dateTime1.getHour();
        boolean boolean3 = dateTime1.isNull();
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime(dateTime1);
        java.text.SimpleDateFormat simpleDateFormat5 = dateTime1.getSdf();
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:42:59", "     10");
        net.ajaskey.common.DateTime dateTime11 = dateTime8.parse(" 1.00", "                                                   54");
        boolean boolean12 = dateTime1.sameDate(dateTime8);
        dateTime8.setFirstWorkDay();
        java.lang.String str15 = dateTime8.format("");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 5 + "'", int2 == 5);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(simpleDateFormat5);
        org.junit.Assert.assertNull(dateTime11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "BAD-DATE-FORMAT" + "'", str15, "BAD-DATE-FORMAT");
    }

    @Test
    public void test7433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7433");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        int int7 = dateTime3.getHour();
        dateTime3.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat12 = null;
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat12);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double16 = dateTime13.getDeltaYears(dateTime15);
        boolean boolean17 = dateTime3.isEqual(dateTime15);
        int int18 = dateTime3.getMinute();
        dateTime3.setFirstWorkDay();
        int int20 = dateTime3.getMinute();
        java.text.SimpleDateFormat simpleDateFormat23 = null;
        java.text.SimpleDateFormat simpleDateFormat24 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("January", simpleDateFormat23, simpleDateFormat24);
        java.text.SimpleDateFormat simpleDateFormat28 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime("January", simpleDateFormat28);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime("", simpleDateFormat28);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime("", simpleDateFormat24, simpleDateFormat28);
        dateTime3.setSdf(simpleDateFormat24);
        java.util.Calendar calendar33 = dateTime3.getCal();
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime(calendar33);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat40 = null;
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat40);
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double44 = dateTime41.getDeltaYears(dateTime43);
        boolean boolean45 = dateTime38.isLessThan(dateTime43);
        java.lang.String str46 = dateTime43.toFullString();
        int int47 = dateTime43.getSecond();
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime(dateTime43);
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean53 = dateTime52.isNull();
        java.lang.String str54 = dateTime52.getDay();
        java.text.SimpleDateFormat simpleDateFormat55 = dateTime52.getSdf();
        int int56 = dateTime52.getHour();
        boolean boolean57 = dateTime43.isGreaterThanOrEqual(dateTime52);
        java.text.SimpleDateFormat simpleDateFormat58 = dateTime43.getSdf();
        net.ajaskey.common.DateTime dateTime59 = dateTime34.copy(dateTime43);
        int int60 = dateTime59.getDayOfWeek();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 47 + "'", int18 == 47);
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 47 + "'", int20 == 47);
        org.junit.Assert.assertNotNull(simpleDateFormat24);
        org.junit.Assert.assertNotNull(simpleDateFormat28);
        org.junit.Assert.assertNotNull(calendar33);
// flaky:         org.junit.Assert.assertEquals(calendar33.toString(), "java.util.GregorianCalendar[time=-62190310354094,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=25,MILLISECOND=906,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str46, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Thursday" + "'", str54, "Thursday");
        org.junit.Assert.assertNull(simpleDateFormat55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(simpleDateFormat58);
        org.junit.Assert.assertNotNull(dateTime59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 4 + "'", int60 == 4);
    }

    @Test
    public void test7434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7434");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        java.lang.String str3 = dateTime1.toString();
        dateTime1.set(25, (-1), (int) (short) 10);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(100L);
        double double14 = dateTime11.getDeltaYears(dateTime13);
        boolean boolean15 = dateTime13.isWeekday();
        boolean boolean16 = net.ajaskey.common.Utils.sameMonth(dateTime1, dateTime13);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((long) (short) 0);
        int int19 = dateTime18.getHour();
        boolean boolean20 = dateTime18.isNull();
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(dateTime18);
        boolean boolean22 = dateTime13.isGreaterThan(dateTime18);
        java.text.SimpleDateFormat simpleDateFormat23 = dateTime18.getSdf();
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime("5.00", "     10");
        dateTime26.add((int) (short) 0, (int) 'a');
        long long30 = dateTime18.getDeltaDays(dateTime26);
        java.lang.String str31 = dateTime26.toFullString();
        java.text.SimpleDateFormat simpleDateFormat33 = null;
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat33);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double37 = dateTime34.getDeltaYears(dateTime36);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean42 = dateTime36.isEqual(dateTime41);
        java.util.Calendar calendar43 = dateTime36.getCal();
        java.text.SimpleDateFormat simpleDateFormat45 = null;
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat45);
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double49 = dateTime46.getDeltaYears(dateTime48);
        boolean boolean50 = dateTime48.isNull();
        java.lang.String str51 = dateTime48.format();
        dateTime48.setFirstWorkDay();
        java.text.SimpleDateFormat simpleDateFormat56 = null;
        java.text.SimpleDateFormat simpleDateFormat57 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime("January", simpleDateFormat56, simpleDateFormat57);
        java.text.SimpleDateFormat simpleDateFormat61 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime("January", simpleDateFormat61);
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime("", simpleDateFormat61);
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime("", simpleDateFormat57, simpleDateFormat61);
        java.text.SimpleDateFormat simpleDateFormat67 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat69 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat70 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime("", simpleDateFormat69, simpleDateFormat70);
        net.ajaskey.common.DateTime dateTime72 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat67, simpleDateFormat70);
        net.ajaskey.common.DateTime dateTime76 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat79 = null;
        java.text.SimpleDateFormat simpleDateFormat80 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime81 = new net.ajaskey.common.DateTime("January", simpleDateFormat79, simpleDateFormat80);
        java.text.SimpleDateFormat simpleDateFormat84 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime85 = new net.ajaskey.common.DateTime("January", simpleDateFormat84);
        net.ajaskey.common.DateTime dateTime86 = new net.ajaskey.common.DateTime("", simpleDateFormat84);
        net.ajaskey.common.DateTime dateTime87 = new net.ajaskey.common.DateTime("", simpleDateFormat80, simpleDateFormat84);
        dateTime76.setSdf(simpleDateFormat80);
        net.ajaskey.common.DateTime dateTime89 = new net.ajaskey.common.DateTime("", simpleDateFormat70, simpleDateFormat80);
        net.ajaskey.common.DateTime dateTime90 = new net.ajaskey.common.DateTime("   -18,438", simpleDateFormat61, simpleDateFormat80);
        dateTime48.setSdf(simpleDateFormat61);
        java.lang.String str92 = dateTime48.toString();
        dateTime36.set(dateTime48);
        long long94 = dateTime26.getDeltaMilliSeconds(dateTime36);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "31-Dec-1969" + "'", str3, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + (-1972.041095890411d) + "'", double14 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 5 + "'", int19 == 5);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(simpleDateFormat23);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Invalid Time" + "'", str31, "Invalid Time");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(calendar43);
        org.junit.Assert.assertEquals(calendar43.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "BAD-DATE-FORMAT" + "'", str51, "BAD-DATE-FORMAT");
        org.junit.Assert.assertNotNull(simpleDateFormat57);
        org.junit.Assert.assertNotNull(simpleDateFormat61);
        org.junit.Assert.assertNotNull(simpleDateFormat67);
        org.junit.Assert.assertNotNull(simpleDateFormat69);
        org.junit.Assert.assertNotNull(simpleDateFormat70);
        org.junit.Assert.assertNotNull(simpleDateFormat80);
        org.junit.Assert.assertNotNull(simpleDateFormat84);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "31-Dec-1969" + "'", str92, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + long94 + "' != '" + 0L + "'", long94 == 0L);
    }

    @Test
    public void test7435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7435");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(874, 12, 294);
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("5.00", "     10");
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(100L);
        double double13 = dateTime10.getDeltaYears(dateTime12);
        int int14 = dateTime10.getHour();
        java.text.SimpleDateFormat simpleDateFormat16 = null;
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double20 = dateTime17.getDeltaYears(dateTime19);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean25 = dateTime19.isEqual(dateTime24);
        java.util.Calendar calendar26 = dateTime19.getCal();
        dateTime10.set(calendar26);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(calendar26);
        dateTime6.set(calendar26);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime(calendar26);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(calendar26);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime(calendar26);
        int int33 = dateTime32.getSecond();
        java.text.SimpleDateFormat simpleDateFormat35 = null;
        java.text.SimpleDateFormat simpleDateFormat36 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime("January", simpleDateFormat35, simpleDateFormat36);
        java.lang.String str38 = dateTime37.toString();
        java.text.SimpleDateFormat simpleDateFormat40 = net.ajaskey.common.Utils.sdfFull;
        java.text.SimpleDateFormat simpleDateFormat42 = null;
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat42);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double46 = dateTime43.getDeltaYears(dateTime45);
        boolean boolean47 = dateTime43.isWeekday();
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long52 = dateTime43.getDeltaDays(dateTime51);
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime(dateTime43);
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime(100L);
        double double60 = dateTime57.getDeltaYears(dateTime59);
        boolean boolean61 = dateTime59.isWeekday();
        java.util.Date date62 = dateTime59.getTime();
        dateTime43.set(date62);
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime(100L);
        int int66 = dateTime65.getMs();
        java.lang.String str67 = dateTime65.toString();
        boolean boolean68 = dateTime43.isLessThanOrEqual(dateTime65);
        int int69 = dateTime43.getHour();
        int int70 = dateTime43.getYear();
        java.util.Calendar calendar71 = dateTime43.getCal();
        net.ajaskey.common.DateTime dateTime73 = new net.ajaskey.common.DateTime(100L);
        int int74 = dateTime73.getMs();
        boolean boolean75 = dateTime73.isWeekday();
        int int76 = dateTime73.getHour();
        java.text.SimpleDateFormat simpleDateFormat78 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime79 = new net.ajaskey.common.DateTime("January", simpleDateFormat78);
        dateTime73.setSdf(simpleDateFormat78);
        dateTime43.setSdf(simpleDateFormat78);
        net.ajaskey.common.DateTime dateTime82 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:42:59", simpleDateFormat40, simpleDateFormat78);
        int int83 = dateTime82.getSecond();
        dateTime37.set(dateTime82);
        boolean boolean85 = net.ajaskey.common.Utils.sameDate(dateTime32, dateTime82);
        int int86 = dateTime32.getDayOfWeek();
        boolean boolean87 = net.ajaskey.common.Utils.sameMonth(dateTime3, dateTime32);
        java.util.Date date88 = dateTime3.getTime();
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-1972.041095890411d) + "'", double13 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(calendar26);
        org.junit.Assert.assertEquals(calendar26.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(simpleDateFormat36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(simpleDateFormat40);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-1972.041095890411d) + "'", double60 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(date62);
        org.junit.Assert.assertEquals(date62.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "31-Dec-1969" + "'", str67, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 5 + "'", int69 == 5);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1969 + "'", int70 == 1969);
        org.junit.Assert.assertNotNull(calendar71);
        org.junit.Assert.assertEquals(calendar71.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 100 + "'", int74 == 100);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 5 + "'", int76 == 5);
        org.junit.Assert.assertNotNull(simpleDateFormat78);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 59 + "'", int83 == 59);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 4 + "'", int86 == 4);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(date88);
// flaky:         org.junit.Assert.assertEquals(date88.toString(), "Fri Oct 21 10:47:25 MST 875");
    }

    @Test
    public void test7436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7436");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat6 = null;
        java.text.SimpleDateFormat simpleDateFormat7 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime("January", simpleDateFormat6, simpleDateFormat7);
        java.text.SimpleDateFormat simpleDateFormat11 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime("January", simpleDateFormat11);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("", simpleDateFormat11);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime("", simpleDateFormat7, simpleDateFormat11);
        dateTime3.setSdf(simpleDateFormat7);
        java.util.Calendar calendar16 = dateTime3.getCal();
        java.lang.String str17 = dateTime3.format();
        dateTime3.add(8, 753);
        org.junit.Assert.assertNotNull(simpleDateFormat7);
        org.junit.Assert.assertNotNull(simpleDateFormat11);
        org.junit.Assert.assertNotNull(calendar16);
// flaky:         org.junit.Assert.assertEquals(calendar16.toString(), "java.util.GregorianCalendar[time=-62190310354025,areFieldsSet=true,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=25,MILLISECOND=975,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Thu 10-Apr-0002 10:47:25" + "'", str17, "Thu 10-Apr-0002 10:47:25");
    }

    @Test
    public void test7437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7437");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) (byte) 0);
        dateTime1.setFirstWorkDay();
    }

    @Test
    public void test7438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7438");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        java.text.SimpleDateFormat simpleDateFormat10 = dateTime6.getSdf();
        boolean boolean11 = dateTime1.isLessThanOrEqual(dateTime6);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(dateTime1);
        net.ajaskey.common.DateTime dateTime14 = dateTime1.parse("Thu 25-Jun-2020 10:46:24");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(dateTime14);
    }

    @Test
    public void test7439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7439");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        int int7 = dateTime3.getHour();
        dateTime3.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat12 = null;
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat12);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double16 = dateTime13.getDeltaYears(dateTime15);
        boolean boolean17 = dateTime3.isEqual(dateTime15);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat23 = null;
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat23);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double27 = dateTime24.getDeltaYears(dateTime26);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean32 = dateTime26.isEqual(dateTime31);
        java.util.Calendar calendar33 = dateTime26.getCal();
        boolean boolean34 = dateTime21.isLessThan(dateTime26);
        dateTime21.setFirstWorkDay();
        boolean boolean36 = dateTime3.sameDate(dateTime21);
        net.ajaskey.common.DateTime dateTime37 = null;
        boolean boolean38 = net.ajaskey.common.Utils.sameMonth(dateTime3, dateTime37);
        java.text.SimpleDateFormat simpleDateFormat39 = dateTime3.getSdf();
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime(dateTime3);
        int int41 = dateTime40.getYear();
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime((long) 42);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime(3, 1869, (int) (byte) 1);
        net.ajaskey.common.DateTime dateTime50 = dateTime47.parse("Thu 10-Apr-0002 10:43:43", "JanuaryDecemberDecember                                                                                               52.00Decemberhi!December");
        dateTime43.set(dateTime50);
        double double52 = dateTime40.getDeltaYears(dateTime50);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Date date53 = dateTime50.getTime();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(calendar33);
        org.junit.Assert.assertEquals(calendar33.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(simpleDateFormat39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2 + "'", int41 == 2);
        org.junit.Assert.assertNull(dateTime50);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
    }

    @Test
    public void test7440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7440");
        java.util.List<java.lang.String> strList2 = net.ajaskey.common.TextUtils.readTextFile("                                                      718", true);
        org.junit.Assert.assertNotNull(strList2);
    }

    @Test
    public void test7441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7441");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        java.text.SimpleDateFormat simpleDateFormat10 = dateTime6.getSdf();
        boolean boolean11 = dateTime1.isLessThanOrEqual(dateTime6);
        java.text.SimpleDateFormat simpleDateFormat13 = null;
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat13);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double17 = dateTime14.getDeltaYears(dateTime16);
        boolean boolean18 = dateTime14.isWeekday();
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long23 = dateTime14.getDeltaDays(dateTime22);
        long long24 = dateTime1.getDeltaDays(dateTime22);
        java.lang.String str25 = dateTime22.toFullString();
        java.lang.String str26 = dateTime22.toFullString();
        int int27 = dateTime22.getDayOfMonth();
        java.text.SimpleDateFormat simpleDateFormat30 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime("January", simpleDateFormat30);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime("", simpleDateFormat30);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime(100L);
        double double40 = dateTime37.getDeltaYears(dateTime39);
        int int41 = dateTime37.getHour();
        dateTime37.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat46 = null;
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat46);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double50 = dateTime47.getDeltaYears(dateTime49);
        boolean boolean51 = dateTime37.isEqual(dateTime49);
        java.text.SimpleDateFormat simpleDateFormat53 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat55 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat56 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime("", simpleDateFormat55, simpleDateFormat56);
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat53, simpleDateFormat56);
        dateTime37.setSdf(simpleDateFormat53);
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat66 = null;
        java.text.SimpleDateFormat simpleDateFormat67 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime("January", simpleDateFormat66, simpleDateFormat67);
        java.text.SimpleDateFormat simpleDateFormat71 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime72 = new net.ajaskey.common.DateTime("January", simpleDateFormat71);
        net.ajaskey.common.DateTime dateTime73 = new net.ajaskey.common.DateTime("", simpleDateFormat71);
        net.ajaskey.common.DateTime dateTime74 = new net.ajaskey.common.DateTime("", simpleDateFormat67, simpleDateFormat71);
        dateTime63.setSdf(simpleDateFormat67);
        net.ajaskey.common.DateTime dateTime76 = new net.ajaskey.common.DateTime("December", simpleDateFormat53, simpleDateFormat67);
        dateTime32.set(dateTime76);
        java.lang.String str79 = dateTime76.format("                     62,190,310,608,217.00");
        long long80 = dateTime22.getDeltaDays(dateTime76);
        int int81 = dateTime76.getDayOfMonth();
        java.lang.String str82 = dateTime76.toFullString();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 719795L + "'", long24 == 719795L);
// flaky:         org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Thu 10-Apr-0002 10:47:26" + "'", str25, "Thu 10-Apr-0002 10:47:26");
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Thu 10-Apr-0002 10:47:26" + "'", str26, "Thu 10-Apr-0002 10:47:26");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 10 + "'", int27 == 10);
        org.junit.Assert.assertNotNull(simpleDateFormat30);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-1972.041095890411d) + "'", double40 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 10 + "'", int41 == 10);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(simpleDateFormat53);
        org.junit.Assert.assertNotNull(simpleDateFormat55);
        org.junit.Assert.assertNotNull(simpleDateFormat56);
        org.junit.Assert.assertNotNull(simpleDateFormat67);
        org.junit.Assert.assertNotNull(simpleDateFormat71);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "BAD-DATE-FORMAT" + "'", str79, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 0L + "'", long80 == 0L);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "Invalid Time" + "'", str82, "Invalid Time");
    }

    @Test
    public void test7442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7442");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(100L);
        int int4 = dateTime3.getMs();
        java.text.SimpleDateFormat simpleDateFormat5 = net.ajaskey.common.Utils.sdf;
        dateTime3.setSdf(simpleDateFormat5);
        int int7 = dateTime3.getDayOfWeek();
        java.text.SimpleDateFormat simpleDateFormat8 = dateTime3.getSdf();
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
        int int12 = dateTime11.getMs();
        java.text.SimpleDateFormat simpleDateFormat13 = net.ajaskey.common.Utils.sdf;
        dateTime11.setSdf(simpleDateFormat13);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat13);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:42:55", simpleDateFormat8, simpleDateFormat13);
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("    25", simpleDateFormat8);
        int int18 = dateTime17.getDayOfYear();
        int int19 = dateTime17.getYear();
        java.lang.String str20 = dateTime17.toString();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(simpleDateFormat8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat13);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
    }

    @Test
    public void test7443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7443");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(29, 378, (-15));
    }

    @Test
    public void test7444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7444");
        java.text.SimpleDateFormat simpleDateFormat7 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat8 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("", simpleDateFormat7, simpleDateFormat8);
        java.text.SimpleDateFormat simpleDateFormat11 = null;
        java.text.SimpleDateFormat simpleDateFormat12 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("January", simpleDateFormat11, simpleDateFormat12);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat7, simpleDateFormat12);
        java.text.SimpleDateFormat simpleDateFormat17 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat18 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime("", simpleDateFormat17, simpleDateFormat18);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(100L);
        int int22 = dateTime21.getMs();
        java.text.SimpleDateFormat simpleDateFormat23 = net.ajaskey.common.Utils.sdf;
        dateTime21.setSdf(simpleDateFormat23);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat18, simpleDateFormat23);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime("                             100", simpleDateFormat12, simpleDateFormat18);
        java.text.SimpleDateFormat simpleDateFormat29 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat30 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime("", simpleDateFormat29, simpleDateFormat30);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:42:54", simpleDateFormat29);
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime("5.00", simpleDateFormat12, simpleDateFormat29);
        java.text.SimpleDateFormat simpleDateFormat34 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat12, simpleDateFormat34);
        java.text.SimpleDateFormat simpleDateFormat40 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat41 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime("", simpleDateFormat40, simpleDateFormat41);
        java.text.SimpleDateFormat simpleDateFormat44 = null;
        java.text.SimpleDateFormat simpleDateFormat45 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime("January", simpleDateFormat44, simpleDateFormat45);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat40, simpleDateFormat45);
        java.text.SimpleDateFormat simpleDateFormat50 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat51 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime("", simpleDateFormat50, simpleDateFormat51);
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime(100L);
        int int55 = dateTime54.getMs();
        java.text.SimpleDateFormat simpleDateFormat56 = net.ajaskey.common.Utils.sdf;
        dateTime54.setSdf(simpleDateFormat56);
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat51, simpleDateFormat56);
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime("                             100", simpleDateFormat45, simpleDateFormat51);
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:42:58", simpleDateFormat45);
        dateTime60.set((int) (byte) 10, 5, 42);
        net.ajaskey.common.DateTime dateTime67 = dateTime60.parse("                     8.00", "                                         0");
        java.lang.String str68 = dateTime60.getDay();
        java.text.SimpleDateFormat simpleDateFormat69 = dateTime60.getSdf();
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:43:33", simpleDateFormat12, simpleDateFormat69);
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime("                              86", simpleDateFormat69);
        org.junit.Assert.assertNotNull(simpleDateFormat7);
        org.junit.Assert.assertNotNull(simpleDateFormat8);
        org.junit.Assert.assertNotNull(simpleDateFormat12);
        org.junit.Assert.assertNotNull(simpleDateFormat17);
        org.junit.Assert.assertNotNull(simpleDateFormat18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat23);
        org.junit.Assert.assertNotNull(simpleDateFormat29);
        org.junit.Assert.assertNotNull(simpleDateFormat30);
        org.junit.Assert.assertNotNull(simpleDateFormat34);
        org.junit.Assert.assertNotNull(simpleDateFormat40);
        org.junit.Assert.assertNotNull(simpleDateFormat41);
        org.junit.Assert.assertNotNull(simpleDateFormat45);
        org.junit.Assert.assertNotNull(simpleDateFormat50);
        org.junit.Assert.assertNotNull(simpleDateFormat51);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat56);
        org.junit.Assert.assertNull(dateTime67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Saturday" + "'", str68, "Saturday");
        org.junit.Assert.assertNotNull(simpleDateFormat69);
    }

    @Test
    public void test7445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7445");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) 44);
    }

    @Test
    public void test7446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7446");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean4 = dateTime3.isNull();
        java.lang.String str5 = dateTime3.getDay();
        java.lang.String str6 = dateTime3.getMonth();
        java.lang.String str7 = dateTime3.getDay();
        java.lang.String str8 = dateTime3.toFullString();
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime(100L);
        int int11 = dateTime10.getMs();
        java.lang.String str12 = dateTime10.toString();
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(100L);
        double double19 = dateTime16.getDeltaYears(dateTime18);
        int int20 = dateTime16.getHour();
        int int21 = dateTime16.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(100L);
        double double28 = dateTime25.getDeltaYears(dateTime27);
        boolean boolean29 = dateTime27.isWeekday();
        boolean boolean30 = net.ajaskey.common.Utils.sameDate(dateTime16, dateTime27);
        boolean boolean31 = net.ajaskey.common.Utils.sameDate(dateTime10, dateTime16);
        boolean boolean32 = net.ajaskey.common.Utils.sameMonth(dateTime3, dateTime16);
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime(100L);
        int int35 = dateTime34.getMs();
        java.lang.String str36 = dateTime34.toString();
        java.util.Date date37 = dateTime34.getTime();
        java.util.Date date38 = dateTime34.getTime();
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime(100L);
        int int42 = dateTime41.getMs();
        java.text.SimpleDateFormat simpleDateFormat43 = net.ajaskey.common.Utils.sdf;
        dateTime41.setSdf(simpleDateFormat43);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat43);
        java.lang.String str46 = dateTime45.toString();
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime(100L);
        int int49 = dateTime48.getMs();
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime(100L);
        double double56 = dateTime53.getDeltaYears(dateTime55);
        java.text.SimpleDateFormat simpleDateFormat57 = dateTime53.getSdf();
        boolean boolean58 = dateTime48.isLessThanOrEqual(dateTime53);
        java.lang.String str59 = dateTime48.toString();
        java.lang.String str60 = dateTime48.getMonth();
        java.text.SimpleDateFormat simpleDateFormat62 = null;
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat62);
        java.lang.String str65 = dateTime63.format("January");
        boolean boolean66 = dateTime48.isGreaterThanOrEqual(dateTime63);
        int int67 = dateTime45.getYears(dateTime48);
        boolean boolean68 = dateTime34.isLessThan(dateTime48);
        boolean boolean69 = dateTime3.isLessThan(dateTime48);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Thursday" + "'", str5, "Thursday");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "April" + "'", str6, "April");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Thursday" + "'", str7, "Thursday");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Thu 10-Apr-0002 10:47:26" + "'", str8, "Thu 10-Apr-0002 10:47:26");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "31-Dec-1969" + "'", str12, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-1972.041095890411d) + "'", double19 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + (-1972.041095890411d) + "'", double28 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "31-Dec-1969" + "'", str36, "31-Dec-1969");
        org.junit.Assert.assertNotNull(date37);
        org.junit.Assert.assertEquals(date37.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertNotNull(date38);
        org.junit.Assert.assertEquals(date38.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-1972.041095890411d) + "'", double56 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "31-Dec-1969" + "'", str59, "31-Dec-1969");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "December" + "'", str60, "December");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "BAD-DATE-FORMAT" + "'", str65, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
    }

    @Test
    public void test7447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7447");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean4 = dateTime3.isNull();
        java.lang.String str5 = dateTime3.getDay();
        java.lang.String str6 = dateTime3.getMonth();
        java.lang.String str7 = dateTime3.getDay();
        java.lang.String str8 = dateTime3.toFullString();
        java.util.Calendar calendar9 = dateTime3.getCal();
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime(calendar9);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Thursday" + "'", str5, "Thursday");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "April" + "'", str6, "April");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Thursday" + "'", str7, "Thursday");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Thu 10-Apr-0002 10:47:26" + "'", str8, "Thu 10-Apr-0002 10:47:26");
        org.junit.Assert.assertNotNull(calendar9);
// flaky:         org.junit.Assert.assertEquals(calendar9.toString(), "java.util.GregorianCalendar[time=-62190310353854,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=26,MILLISECOND=146,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    }

    @Test
    public void test7448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7448");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean10 = dateTime4.isEqual(dateTime9);
        java.util.Calendar calendar11 = dateTime4.getCal();
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(1, (int) '4', 5);
        double double16 = dateTime4.getDeltaYears(dateTime15);
        java.lang.String str17 = dateTime15.format();
        net.ajaskey.common.DateTime dateTime20 = dateTime15.parse("Mon 06-Jan-0100 17:00:00", "JanuaryInvalid fmtInvalid fmt                                                                                               52.00Invalid fmthi!Invalid fmt");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass21 = dateTime20.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(calendar11);
        org.junit.Assert.assertEquals(calendar11.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1965.9671232876713d + "'", double16 == 1965.9671232876713d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "BAD-DATE-FORMAT" + "'", str17, "BAD-DATE-FORMAT");
        org.junit.Assert.assertNull(dateTime20);
    }

    @Test
    public void test7449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7449");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(100L);
        long long10 = dateTime7.getDeltaDays(dateTime9);
        int int11 = dateTime7.getHour();
        dateTime7.add((int) (byte) 100, (int) (byte) 0);
        double double15 = dateTime3.getDeltaYears(dateTime7);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat21 = null;
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat21);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double25 = dateTime22.getDeltaYears(dateTime24);
        boolean boolean26 = dateTime19.isLessThan(dateTime24);
        java.lang.String str27 = dateTime24.toFullString();
        int int28 = dateTime24.getSecond();
        java.text.SimpleDateFormat simpleDateFormat29 = dateTime24.getSdf();
        long long30 = dateTime7.getDeltaMilliSeconds(dateTime24);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime(dateTime24);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-719795L) + "'", long10 == (-719795L));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str27, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNull(simpleDateFormat29);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 62190310353823L + "'", long30 == 62190310353823L);
    }

    @Test
    public void test7450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7450");
        net.ajaskey.common.Utils.sleep((-1955));
    }

    @Test
    public void test7451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7451");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) (short) 0);
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(100L);
        int int4 = dateTime3.getMs();
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime(100L);
        double double11 = dateTime8.getDeltaYears(dateTime10);
        java.text.SimpleDateFormat simpleDateFormat12 = dateTime8.getSdf();
        boolean boolean13 = dateTime3.isLessThanOrEqual(dateTime8);
        java.text.SimpleDateFormat simpleDateFormat15 = null;
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat15);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double19 = dateTime16.getDeltaYears(dateTime18);
        boolean boolean20 = dateTime16.isWeekday();
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long25 = dateTime16.getDeltaDays(dateTime24);
        long long26 = dateTime3.getDeltaDays(dateTime24);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(100L);
        dateTime28.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean33 = dateTime28.isWeekday();
        int int34 = dateTime3.getYears(dateTime28);
        int int35 = dateTime3.getYear();
        java.util.Calendar calendar36 = dateTime3.getCal();
        net.ajaskey.common.DateTime dateTime37 = dateTime1.copy(dateTime3);
        java.util.Calendar calendar38 = dateTime3.getCal();
        int int39 = dateTime3.getDayOfMonth();
        java.text.SimpleDateFormat simpleDateFormat41 = null;
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat41);
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double45 = dateTime42.getDeltaYears(dateTime44);
        boolean boolean46 = dateTime42.isWeekday();
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime(100L);
        int int49 = dateTime48.getMs();
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime(100L);
        double double56 = dateTime53.getDeltaYears(dateTime55);
        java.text.SimpleDateFormat simpleDateFormat57 = dateTime53.getSdf();
        boolean boolean58 = dateTime48.isLessThanOrEqual(dateTime53);
        boolean boolean59 = dateTime42.isLessThanOrEqual(dateTime48);
        java.text.SimpleDateFormat simpleDateFormat60 = dateTime48.getSdf();
        boolean boolean61 = dateTime3.isGreaterThanOrEqual(dateTime48);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + (-1972.041095890411d) + "'", double11 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 719795L + "'", long26 == 719795L);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1870) + "'", int34 == (-1870));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1969 + "'", int35 == 1969);
        org.junit.Assert.assertNotNull(calendar36);
        org.junit.Assert.assertEquals(calendar36.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(dateTime37);
        org.junit.Assert.assertNotNull(calendar38);
        org.junit.Assert.assertEquals(calendar38.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 31 + "'", int39 == 31);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-1972.041095890411d) + "'", double56 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(simpleDateFormat60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test7452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7452");
        java.util.zip.ZipOutputStream zipOutputStream1 = null;
        // The following exception was thrown during execution in test generation
        try {
            net.ajaskey.common.Utils.writeToZipFile("Fri 01-Jul-0001 10:46:31", zipOutputStream1);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: Fri 01-Jul-0001 10:46:31 (The filename, directory name, or volume label syntax is incorrect)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
    }

    @Test
    public void test7453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7453");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        java.util.Calendar calendar2 = dateTime1.getCal();
        java.text.SimpleDateFormat simpleDateFormat4 = null;
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat4);
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double8 = dateTime5.getDeltaYears(dateTime7);
        boolean boolean9 = dateTime5.isWeekday();
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long14 = dateTime5.getDeltaDays(dateTime13);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(dateTime5);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(100L);
        double double22 = dateTime19.getDeltaYears(dateTime21);
        boolean boolean23 = dateTime21.isWeekday();
        java.util.Date date24 = dateTime21.getTime();
        dateTime5.set(date24);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(100L);
        int int28 = dateTime27.getMs();
        java.lang.String str29 = dateTime27.toString();
        boolean boolean30 = dateTime5.isLessThanOrEqual(dateTime27);
        net.ajaskey.common.DateTime dateTime33 = dateTime5.parse("", "100.00");
        dateTime5.add((int) (short) 0, (int) (short) -1);
        double double37 = dateTime1.getDeltaYears(dateTime5);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime(" 9", "         1");
        net.ajaskey.common.DateTime dateTime42 = dateTime40.parse("           6");
        boolean boolean43 = dateTime5.sameDate(dateTime40);
        java.lang.String str44 = dateTime40.format();
        boolean boolean45 = dateTime40.isWeekday();
        org.junit.Assert.assertNotNull(calendar2);
        org.junit.Assert.assertEquals(calendar2.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-1972.041095890411d) + "'", double22 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(date24);
        org.junit.Assert.assertEquals(date24.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "31-Dec-1969" + "'", str29, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(dateTime33);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNull(dateTime42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "BAD-DATE-FORMAT" + "'", str44, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test7454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7454");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(62190310488507L);
    }

    @Test
    public void test7455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7455");
        java.lang.String str2 = net.ajaskey.common.Utils.fmt(1871.2356164383561d, 362);
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Invalid fmt" + "'", str2, "Invalid fmt");
    }

    @Test
    public void test7456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7456");
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime(100L);
        int int5 = dateTime4.getMs();
        java.text.SimpleDateFormat simpleDateFormat6 = net.ajaskey.common.Utils.sdf;
        dateTime4.setSdf(simpleDateFormat6);
        java.text.SimpleDateFormat simpleDateFormat8 = net.ajaskey.common.Utils.sdfFull;
        dateTime4.setSdf(simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
        int int12 = dateTime11.getMs();
        java.lang.String str13 = dateTime11.toString();
        java.util.Date date14 = dateTime11.getTime();
        int int15 = dateTime11.getDayOfYear();
        java.text.SimpleDateFormat simpleDateFormat17 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat18 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime("", simpleDateFormat17, simpleDateFormat18);
        dateTime11.setSdf(simpleDateFormat17);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("", simpleDateFormat8, simpleDateFormat17);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime(100L);
        int int26 = dateTime25.getMs();
        java.text.SimpleDateFormat simpleDateFormat27 = net.ajaskey.common.Utils.sdf;
        dateTime25.setSdf(simpleDateFormat27);
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat27);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((long) 53);
        boolean boolean32 = dateTime31.isWeekday();
        boolean boolean33 = dateTime29.sameDate(dateTime31);
        java.util.Date date34 = dateTime31.getTime();
        java.text.SimpleDateFormat simpleDateFormat36 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime("January", simpleDateFormat36);
        dateTime31.setSdf(simpleDateFormat36);
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat36);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime("Wed 12-Apr-0139 10:44:24", simpleDateFormat8, simpleDateFormat36);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:43:50", simpleDateFormat36);
        int int42 = dateTime41.getYear();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat6);
        org.junit.Assert.assertNotNull(simpleDateFormat8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "31-Dec-1969" + "'", str13, "31-Dec-1969");
        org.junit.Assert.assertNotNull(date14);
        org.junit.Assert.assertEquals(date14.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 365 + "'", int15 == 365);
        org.junit.Assert.assertNotNull(simpleDateFormat17);
        org.junit.Assert.assertNotNull(simpleDateFormat18);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(date34);
        org.junit.Assert.assertEquals(date34.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertNotNull(simpleDateFormat36);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
    }

    @Test
    public void test7457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7457");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        java.text.SimpleDateFormat simpleDateFormat8 = null;
        java.text.SimpleDateFormat simpleDateFormat9 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("January", simpleDateFormat8, simpleDateFormat9);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime("Thursday", simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(dateTime11);
        boolean boolean13 = dateTime2.isEqual(dateTime11);
        java.text.SimpleDateFormat simpleDateFormat15 = null;
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat15);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double19 = dateTime16.getDeltaYears(dateTime18);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean24 = dateTime18.isEqual(dateTime23);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(100L);
        int int27 = dateTime26.getMs();
        boolean boolean28 = dateTime23.isGreaterThanOrEqual(dateTime26);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime(100L);
        dateTime30.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime(100L);
        double double41 = dateTime38.getDeltaYears(dateTime40);
        boolean boolean42 = dateTime40.isWeekday();
        java.util.Date date43 = dateTime40.getTime();
        dateTime30.set(dateTime40);
        boolean boolean45 = net.ajaskey.common.Utils.sameDate(dateTime23, dateTime30);
        dateTime23.add((int) '#', 6);
        int int49 = dateTime2.getYears(dateTime23);
        java.lang.String str50 = dateTime2.getDay();
        int int51 = dateTime2.getDayOfWeek();
        int int52 = dateTime2.getDayOfMonth();
        int int53 = dateTime2.getDayOfYear();
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime("5.00", "     10");
        int int57 = dateTime56.getDayOfWeek();
        int int58 = dateTime56.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime(11, (int) (short) 1, 365);
        boolean boolean63 = net.ajaskey.common.Utils.sameMonth(dateTime56, dateTime62);
        net.ajaskey.common.DateTime dateTime65 = dateTime56.parse("June");
        boolean boolean66 = dateTime2.isGreaterThan(dateTime56);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(simpleDateFormat9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-1972.041095890411d) + "'", double41 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(date43);
        org.junit.Assert.assertEquals(date43.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "UNKNOWN" + "'", str50, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(dateTime65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test7458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7458");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("5.00", "     10");
        int int3 = dateTime2.getDayOfWeek();
        int int4 = dateTime2.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(11, (int) (short) 1, 365);
        boolean boolean9 = net.ajaskey.common.Utils.sameMonth(dateTime2, dateTime8);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(100L);
        int int12 = dateTime11.getMs();
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(100L);
        double double19 = dateTime16.getDeltaYears(dateTime18);
        java.text.SimpleDateFormat simpleDateFormat20 = dateTime16.getSdf();
        boolean boolean21 = dateTime11.isLessThanOrEqual(dateTime16);
        boolean boolean22 = dateTime11.isWeekday();
        java.util.Calendar calendar23 = dateTime11.getCal();
        java.text.SimpleDateFormat simpleDateFormat25 = null;
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat25);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double29 = dateTime26.getDeltaYears(dateTime28);
        boolean boolean30 = dateTime26.isWeekday();
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long35 = dateTime26.getDeltaDays(dateTime34);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime(dateTime26);
        dateTime36.setFirstWorkDay();
        long long38 = dateTime11.getDeltaDays(dateTime36);
        boolean boolean39 = net.ajaskey.common.Utils.sameDate(dateTime8, dateTime11);
        java.lang.String str40 = dateTime8.toString();
        boolean boolean41 = dateTime8.isNull();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-1972.041095890411d) + "'", double19 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(calendar23);
        org.junit.Assert.assertEquals(calendar23.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-18438L) + "'", long38 == (-18438L));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "31-Jan-0012" + "'", str40, "31-Jan-0012");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test7459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7459");
        java.lang.String[] strArray9 = new java.lang.String[] { "                                                   -733,554", "                                                  32", "                            0.00", "                                                                                                                                                                                7", "Wed 31-Dec-1969 17:00:00" };
        java.util.List<java.io.File> fileList10 = net.ajaskey.common.Utils.getDirTree("                                                                                                                                                                                                                                                          22", strArray9);
        java.util.List<java.io.File> fileList11 = net.ajaskey.common.Utils.getDirTree(" 252", strArray9);
        java.util.List<java.io.File> fileList12 = net.ajaskey.common.Utils.getDirTree("Thu 10-Apr-0002 10:45:53", strArray9);
        java.util.List<java.io.File> fileList13 = net.ajaskey.common.Utils.getDirTree("1,622", strArray9);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNull(fileList10);
        org.junit.Assert.assertNull(fileList11);
        org.junit.Assert.assertNull(fileList12);
        org.junit.Assert.assertNull(fileList13);
    }

    @Test
    public void test7460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7460");
        java.text.SimpleDateFormat simpleDateFormat2 = null;
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        int int5 = dateTime4.getHour();
        boolean boolean6 = dateTime4.isNull();
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime(dateTime4);
        java.text.SimpleDateFormat simpleDateFormat8 = dateTime4.getSdf();
        java.text.SimpleDateFormat simpleDateFormat14 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat15 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("", simpleDateFormat14, simpleDateFormat15);
        java.text.SimpleDateFormat simpleDateFormat18 = null;
        java.text.SimpleDateFormat simpleDateFormat19 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("January", simpleDateFormat18, simpleDateFormat19);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat14, simpleDateFormat19);
        java.text.SimpleDateFormat simpleDateFormat24 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat25 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime("", simpleDateFormat24, simpleDateFormat25);
        net.ajaskey.common.DateTime dateTime28 = new net.ajaskey.common.DateTime(100L);
        int int29 = dateTime28.getMs();
        java.text.SimpleDateFormat simpleDateFormat30 = net.ajaskey.common.Utils.sdf;
        dateTime28.setSdf(simpleDateFormat30);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat25, simpleDateFormat30);
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime("                             100", simpleDateFormat19, simpleDateFormat25);
        java.text.SimpleDateFormat simpleDateFormat36 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat37 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime("", simpleDateFormat36, simpleDateFormat37);
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:42:54", simpleDateFormat36);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime("5.00", simpleDateFormat19, simpleDateFormat36);
        java.text.SimpleDateFormat simpleDateFormat42 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat44 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat45 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime("", simpleDateFormat44, simpleDateFormat45);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat42, simpleDateFormat45);
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime("Sat 10-Nov-0042 10:43:44", simpleDateFormat19, simpleDateFormat42);
        dateTime4.setSdf(simpleDateFormat19);
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime("September", simpleDateFormat2, simpleDateFormat19);
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTimesimpleDateFormat19);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(simpleDateFormat8);
        org.junit.Assert.assertNotNull(simpleDateFormat14);
        org.junit.Assert.assertNotNull(simpleDateFormat15);
        org.junit.Assert.assertNotNull(simpleDateFormat19);
        org.junit.Assert.assertNotNull(simpleDateFormat24);
        org.junit.Assert.assertNotNull(simpleDateFormat25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat30);
        org.junit.Assert.assertNotNull(simpleDateFormat36);
        org.junit.Assert.assertNotNull(simpleDateFormat37);
        org.junit.Assert.assertNotNull(simpleDateFormat42);
        org.junit.Assert.assertNotNull(simpleDateFormat44);
        org.junit.Assert.assertNotNull(simpleDateFormat45);
    }

    @Test
    public void test7461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7461");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("5.00", "     10");
        dateTime2.add((int) (short) 0, (int) 'a');
        int int6 = dateTime2.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        int int9 = dateTime8.getMs();
        int int10 = dateTime8.getHour();
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat16 = null;
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double20 = dateTime17.getDeltaYears(dateTime19);
        boolean boolean21 = dateTime14.isLessThan(dateTime19);
        java.lang.String str22 = dateTime19.toFullString();
        dateTime19.add(10, (int) (byte) -1);
        java.text.SimpleDateFormat simpleDateFormat27 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat29 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat30 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime("", simpleDateFormat29, simpleDateFormat30);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat27, simpleDateFormat30);
        boolean boolean33 = dateTime19.isGreaterThan(dateTime32);
        boolean boolean34 = dateTime8.isEqual(dateTime19);
        net.ajaskey.common.DateTime dateTime35 = null;
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime(dateTime35);
        dateTime36.set(42, 10, 10);
        java.util.Date date41 = dateTime36.getTime();
        net.ajaskey.common.DateTime dateTime42 = dateTime8.copy(dateTime36);
        net.ajaskey.common.DateTime dateTime43 = dateTime2.copy(dateTime8);
        int int44 = dateTime2.getDayOfYear();
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime((int) (byte) 10, (int) (byte) 0, 2);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime(dateTime48);
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime("        10", "         1");
        boolean boolean53 = dateTime48.sameDate(dateTime52);
        java.lang.String str54 = dateTime52.getMonth();
        boolean boolean55 = dateTime2.isGreaterThanOrEqual(dateTime52);
        net.ajaskey.common.DateTime dateTime56 = null;
        boolean boolean57 = dateTime2.isLessThan(dateTime56);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str22, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertNotNull(simpleDateFormat27);
        org.junit.Assert.assertNotNull(simpleDateFormat29);
        org.junit.Assert.assertNotNull(simpleDateFormat30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(date41);
// flaky:         org.junit.Assert.assertEquals(date41.toString(), "Sat Nov 10 10:47:26 MST 42");
        org.junit.Assert.assertNotNull(dateTime42);
        org.junit.Assert.assertNotNull(dateTime43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "UNKNOWN" + "'", str54, "UNKNOWN");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test7462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7462");
        net.ajaskey.common.Utils.TAB = "UNKNOWN";
    }

    @Test
    public void test7463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7463");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(100L);
        double double6 = dateTime3.getDeltaYears(dateTime5);
        boolean boolean7 = dateTime5.isWeekday();
        java.util.Date date8 = dateTime5.getTime();
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(date8);
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime(date8);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(date8);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1972.041095890411d) + "'", double6 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(date8);
        org.junit.Assert.assertEquals(date8.toString(), "Wed Dec 31 17:00:00 MST 1969");
    }

    @Test
    public void test7464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7464");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime
    }

    @Test
    public void test7465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7465");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat5 = null;
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat5);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        boolean boolean10 = dateTime3.isLessThan(dateTime8);
        java.lang.String str11 = dateTime8.toFullString();
        int int12 = dateTime8.getSecond();
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(dateTime8);
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean18 = dateTime17.isNull();
        java.lang.String str19 = dateTime17.getDay();
        java.text.SimpleDateFormat simpleDateFormat20 = dateTime17.getSdf();
        int int21 = dateTime17.getHour();
        boolean boolean22 = dateTime8.isGreaterThanOrEqual(dateTime17);
        java.lang.String str23 = dateTime17.getDay();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str11, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Thursday" + "'", str19, "Thursday");
        org.junit.Assert.assertNull(simpleDateFormat20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Thursday" + "'", str23, "Thursday");
    }

    @Test
    public void test7466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7466");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime((long) 100);
        java.text.SimpleDateFormat simpleDateFormat5 = null;
        java.text.SimpleDateFormat simpleDateFormat6 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("January", simpleDateFormat5, simpleDateFormat6);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime("                                                 100", simpleDateFormat6);
        dateTime2.setSdf(simpleDateFormat6);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime(100L);
        int int14 = dateTime13.getMs();
        boolean boolean15 = dateTime13.isWeekday();
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime((long) (short) 0);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime(100L);
        int int20 = dateTime19.getMs();
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(100L);
        double double27 = dateTime24.getDeltaYears(dateTime26);
        java.text.SimpleDateFormat simpleDateFormat28 = dateTime24.getSdf();
        boolean boolean29 = dateTime19.isLessThanOrEqual(dateTime24);
        java.text.SimpleDateFormat simpleDateFormat31 = null;
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat31);
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double35 = dateTime32.getDeltaYears(dateTime34);
        boolean boolean36 = dateTime32.isWeekday();
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long41 = dateTime32.getDeltaDays(dateTime40);
        long long42 = dateTime19.getDeltaDays(dateTime40);
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime(100L);
        dateTime44.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean49 = dateTime44.isWeekday();
        int int50 = dateTime19.getYears(dateTime44);
        int int51 = dateTime19.getYear();
        java.util.Calendar calendar52 = dateTime19.getCal();
        net.ajaskey.common.DateTime dateTime53 = dateTime17.copy(dateTime19);
        boolean boolean54 = dateTime13.isGreaterThan(dateTime19);
        net.ajaskey.common.DateTime dateTime55 = new net.ajaskey.common.DateTime(dateTime13);
        int int56 = dateTime55.getDayOfMonth();
        dateTime55.add(2020, 12);
        java.text.SimpleDateFormat simpleDateFormat62 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat64 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat65 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime("", simpleDateFormat64, simpleDateFormat65);
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat62, simpleDateFormat65);
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat74 = null;
        java.text.SimpleDateFormat simpleDateFormat75 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime76 = new net.ajaskey.common.DateTime("January", simpleDateFormat74, simpleDateFormat75);
        java.text.SimpleDateFormat simpleDateFormat79 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime80 = new net.ajaskey.common.DateTime("January", simpleDateFormat79);
        net.ajaskey.common.DateTime dateTime81 = new net.ajaskey.common.DateTime("", simpleDateFormat79);
        net.ajaskey.common.DateTime dateTime82 = new net.ajaskey.common.DateTime("", simpleDateFormat75, simpleDateFormat79);
        dateTime71.setSdf(simpleDateFormat75);
        net.ajaskey.common.DateTime dateTime84 = new net.ajaskey.common.DateTime("", simpleDateFormat65, simpleDateFormat75);
        dateTime55.setSdf(simpleDateFormat75);
        net.ajaskey.common.DateTime dateTime86 = new net.ajaskey.common.DateTime("Thu 25-Jun-2020 10:43:26", simpleDateFormat75);
        net.ajaskey.common.DateTime dateTime87 = new net.ajaskey.common.DateTime("          264", simpleDateFormat75);
        net.ajaskey.common.DateTime dateTime88 = new net.ajaskey.common.DateTime("JanuaryBAD-DATE-FORMATBAD-DATE-FORMAT                                                                                               52.00BAD-DATE-FORMAThi!BAD-DATE-FORMAT", simpleDateFormat6, simpleDateFormat75);
        org.junit.Assert.assertNotNull(simpleDateFormat6);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-1972.041095890411d) + "'", double27 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 0L + "'", long41 == 0L);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 719795L + "'", long42 == 719795L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1870) + "'", int50 == (-1870));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1969 + "'", int51 == 1969);
        org.junit.Assert.assertNotNull(calendar52);
        org.junit.Assert.assertEquals(calendar52.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(dateTime53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 31 + "'", int56 == 31);
        org.junit.Assert.assertNotNull(simpleDateFormat62);
        org.junit.Assert.assertNotNull(simpleDateFormat64);
        org.junit.Assert.assertNotNull(simpleDateFormat65);
        org.junit.Assert.assertNotNull(simpleDateFormat75);
        org.junit.Assert.assertNotNull(simpleDateFormat79);
    }

    @Test
    public void test7467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7467");
        java.text.SimpleDateFormat simpleDateFormat7 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat9 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat10 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime("", simpleDateFormat9, simpleDateFormat10);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat7, simpleDateFormat10);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("10-Apr-0002", simpleDateFormat10);
        java.text.SimpleDateFormat simpleDateFormat16 = null;
        java.text.SimpleDateFormat simpleDateFormat17 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime("January", simpleDateFormat16, simpleDateFormat17);
        java.text.SimpleDateFormat simpleDateFormat21 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime("January", simpleDateFormat21);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime("", simpleDateFormat21);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("", simpleDateFormat17, simpleDateFormat21);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("January                                                                                               52.00                                                                                               52.00                                                                                               52.00                                                                                               52.00hi!                                                                                               52.00", simpleDateFormat10, simpleDateFormat21);
        java.text.SimpleDateFormat simpleDateFormat27 = null;
        java.text.SimpleDateFormat simpleDateFormat28 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime("January", simpleDateFormat27, simpleDateFormat28);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime("December", simpleDateFormat21, simpleDateFormat28);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:43:00", simpleDateFormat28);
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime(" 1", simpleDateFormat28);
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTimesimpleDateFormat28);
        org.junit.Assert.assertNotNull(simpleDateFormat7);
        org.junit.Assert.assertNotNull(simpleDateFormat9);
        org.junit.Assert.assertNotNull(simpleDateFormat10);
        org.junit.Assert.assertNotNull(simpleDateFormat17);
        org.junit.Assert.assertNotNull(simpleDateFormat21);
        org.junit.Assert.assertNotNull(simpleDateFormat28);
    }

    @Test
    public void test7468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7468");
        java.text.SimpleDateFormat simpleDateFormat2 = null;
        java.text.SimpleDateFormat simpleDateFormat3 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime("January", simpleDateFormat2, simpleDateFormat3);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime("100.00", simpleDateFormat2);
        java.text.SimpleDateFormat simpleDateFormat7 = null;
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat7);
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double11 = dateTime8.getDeltaYears(dateTime10);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean16 = dateTime10.isEqual(dateTime15);
        long long17 = dateTime5.getDeltaDays(dateTime15);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime("5.00", "     10");
        dateTime20.add((int) (short) 0, (int) 'a');
        int int24 = dateTime20.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(100L);
        int int27 = dateTime26.getMs();
        int int28 = dateTime26.getHour();
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat34 = null;
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat34);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double38 = dateTime35.getDeltaYears(dateTime37);
        boolean boolean39 = dateTime32.isLessThan(dateTime37);
        java.lang.String str40 = dateTime37.toFullString();
        dateTime37.add(10, (int) (byte) -1);
        java.text.SimpleDateFormat simpleDateFormat45 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat47 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat48 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime("", simpleDateFormat47, simpleDateFormat48);
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat45, simpleDateFormat48);
        boolean boolean51 = dateTime37.isGreaterThan(dateTime50);
        boolean boolean52 = dateTime26.isEqual(dateTime37);
        net.ajaskey.common.DateTime dateTime53 = null;
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime(dateTime53);
        dateTime54.set(42, 10, 10);
        java.util.Date date59 = dateTime54.getTime();
        net.ajaskey.common.DateTime dateTime60 = dateTime26.copy(dateTime54);
        net.ajaskey.common.DateTime dateTime61 = dateTime20.copy(dateTime26);
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime((long) (byte) 100);
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime(25, 1, 0);
        boolean boolean68 = net.ajaskey.common.Utils.sameMonth(dateTime63, dateTime67);
        boolean boolean69 = net.ajaskey.common.Utils.sameDate(dateTime20, dateTime63);
        net.ajaskey.common.DateTime dateTime70 = dateTime15.copy(dateTime20);
        java.text.SimpleDateFormat simpleDateFormat72 = null;
        net.ajaskey.common.DateTime dateTime73 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat72);
        net.ajaskey.common.DateTime dateTime75 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double76 = dateTime73.getDeltaYears(dateTime75);
        net.ajaskey.common.DateTime dateTime80 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean81 = dateTime75.isEqual(dateTime80);
        java.util.Calendar calendar82 = dateTime75.getCal();
        net.ajaskey.common.DateTime dateTime83 = new net.ajaskey.common.DateTime(calendar82);
        net.ajaskey.common.DateTime dateTime84 = new net.ajaskey.common.DateTime(calendar82);
        net.ajaskey.common.DateTime dateTime85 = new net.ajaskey.common.DateTime(calendar82);
        java.text.SimpleDateFormat simpleDateFormat87 = null;
        net.ajaskey.common.DateTime dateTime88 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat87);
        net.ajaskey.common.DateTime dateTime90 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double91 = dateTime88.getDeltaYears(dateTime90);
        boolean boolean92 = dateTime90.isNull();
        boolean boolean93 = net.ajaskey.common.Utils.sameDate(dateTime85, dateTime90);
        java.lang.String str94 = dateTime90.format();
        int int95 = dateTime90.getHour();
        boolean boolean96 = dateTime15.isEqual(dateTime90);
        int int97 = dateTime15.getMinute();
        org.junit.Assert.assertNotNull(simpleDateFormat3);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 5 + "'", int28 == 5);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str40, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertNotNull(simpleDateFormat45);
        org.junit.Assert.assertNotNull(simpleDateFormat47);
        org.junit.Assert.assertNotNull(simpleDateFormat48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(date59);
// flaky:         org.junit.Assert.assertEquals(date59.toString(), "Sat Nov 10 10:47:26 MST 42");
        org.junit.Assert.assertNotNull(dateTime60);
        org.junit.Assert.assertNotNull(dateTime61);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(dateTime70);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(calendar82);
        org.junit.Assert.assertEquals(calendar82.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "BAD-DATE-FORMAT" + "'", str94, "BAD-DATE-FORMAT");
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 5 + "'", int95 == 5);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
// flaky:         org.junit.Assert.assertTrue("'" + int97 + "' != '" + 47 + "'", int97 == 47);
    }

    @Test
    public void test7469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7469");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        java.text.SimpleDateFormat simpleDateFormat8 = null;
        java.text.SimpleDateFormat simpleDateFormat9 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("January", simpleDateFormat8, simpleDateFormat9);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime("Thursday", simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime(dateTime11);
        boolean boolean13 = dateTime2.isEqual(dateTime11);
        java.text.SimpleDateFormat simpleDateFormat15 = null;
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat15);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double19 = dateTime16.getDeltaYears(dateTime18);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean24 = dateTime18.isEqual(dateTime23);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(100L);
        int int27 = dateTime26.getMs();
        boolean boolean28 = dateTime23.isGreaterThanOrEqual(dateTime26);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime(100L);
        dateTime30.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime(100L);
        double double41 = dateTime38.getDeltaYears(dateTime40);
        boolean boolean42 = dateTime40.isWeekday();
        java.util.Date date43 = dateTime40.getTime();
        dateTime30.set(dateTime40);
        boolean boolean45 = net.ajaskey.common.Utils.sameDate(dateTime23, dateTime30);
        dateTime23.add((int) '#', 6);
        int int49 = dateTime2.getYears(dateTime23);
        int int50 = dateTime23.getDayOfWeek();
        java.text.SimpleDateFormat simpleDateFormat56 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat57 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime("", simpleDateFormat56, simpleDateFormat57);
        java.text.SimpleDateFormat simpleDateFormat60 = null;
        java.text.SimpleDateFormat simpleDateFormat61 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime62 = new net.ajaskey.common.DateTime("January", simpleDateFormat60, simpleDateFormat61);
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat56, simpleDateFormat61);
        java.text.SimpleDateFormat simpleDateFormat66 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat67 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime("", simpleDateFormat66, simpleDateFormat67);
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime(100L);
        int int71 = dateTime70.getMs();
        java.text.SimpleDateFormat simpleDateFormat72 = net.ajaskey.common.Utils.sdf;
        dateTime70.setSdf(simpleDateFormat72);
        net.ajaskey.common.DateTime dateTime74 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat67, simpleDateFormat72);
        net.ajaskey.common.DateTime dateTime75 = new net.ajaskey.common.DateTime("                             100", simpleDateFormat61, simpleDateFormat67);
        java.text.SimpleDateFormat simpleDateFormat78 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat79 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime80 = new net.ajaskey.common.DateTime("", simpleDateFormat78, simpleDateFormat79);
        net.ajaskey.common.DateTime dateTime81 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:42:54", simpleDateFormat78);
        net.ajaskey.common.DateTime dateTime82 = new net.ajaskey.common.DateTime("5.00", simpleDateFormat61, simpleDateFormat78);
        java.text.SimpleDateFormat simpleDateFormat83 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime84 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat61, simpleDateFormat83);
        dateTime23.setSdf(simpleDateFormat61);
        java.lang.String str86 = dateTime23.format();
        java.lang.String str87 = dateTime23.getDay();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(simpleDateFormat9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-1972.041095890411d) + "'", double41 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(date43);
        org.junit.Assert.assertEquals(date43.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 5 + "'", int50 == 5);
        org.junit.Assert.assertNotNull(simpleDateFormat56);
        org.junit.Assert.assertNotNull(simpleDateFormat57);
        org.junit.Assert.assertNotNull(simpleDateFormat61);
        org.junit.Assert.assertNotNull(simpleDateFormat66);
        org.junit.Assert.assertNotNull(simpleDateFormat67);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 100 + "'", int71 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat72);
        org.junit.Assert.assertNotNull(simpleDateFormat78);
        org.junit.Assert.assertNotNull(simpleDateFormat79);
        org.junit.Assert.assertNotNull(simpleDateFormat83);
// flaky:         org.junit.Assert.assertEquals("'" + str86 + "' != '" + "Thu 10-Apr-0002 10:47:26" + "'", str86, "Thu 10-Apr-0002 10:47:26");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "Thursday" + "'", str87, "Thursday");
    }

    @Test
    public void test7470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7470");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(100L);
        boolean boolean4 = dateTime3.isWeekday();
        java.lang.String str5 = dateTime3.getMonth();
        dateTime3.add(7, 10);
        java.text.SimpleDateFormat simpleDateFormat11 = null;
        java.text.SimpleDateFormat simpleDateFormat12 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("January", simpleDateFormat11, simpleDateFormat12);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime("100.00", simpleDateFormat11);
        java.text.SimpleDateFormat simpleDateFormat16 = null;
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat16);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double20 = dateTime17.getDeltaYears(dateTime19);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean25 = dateTime19.isEqual(dateTime24);
        long long26 = dateTime14.getDeltaDays(dateTime24);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(dateTime14);
        boolean boolean28 = dateTime3.isGreaterThan(dateTime14);
        boolean boolean29 = net.ajaskey.common.Utils.sameDate(dateTime1, dateTime3);
        net.ajaskey.common.DateTime dateTime30 = null;
        long long31 = dateTime1.getDeltaDays(dateTime30);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((int) '#', 25, 262);
        dateTime35.setFirstWorkDay();
        net.ajaskey.common.DateTime dateTime37 = dateTime1.copy(dateTime35);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime(100L);
        double double44 = dateTime41.getDeltaYears(dateTime43);
        int int45 = dateTime41.getHour();
        java.util.Calendar calendar46 = dateTime41.getCal();
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime(calendar46);
        net.ajaskey.common.DateTime dateTime49 = new net.ajaskey.common.DateTime(100L);
        dateTime49.set((int) (byte) 100, (-1), (int) '#');
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime(100L);
        double double60 = dateTime57.getDeltaYears(dateTime59);
        boolean boolean61 = dateTime59.isWeekday();
        java.util.Date date62 = dateTime59.getTime();
        dateTime49.set(dateTime59);
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime(100L);
        double double70 = dateTime67.getDeltaYears(dateTime69);
        int int71 = dateTime67.getHour();
        java.text.SimpleDateFormat simpleDateFormat73 = null;
        net.ajaskey.common.DateTime dateTime74 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat73);
        net.ajaskey.common.DateTime dateTime76 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double77 = dateTime74.getDeltaYears(dateTime76);
        net.ajaskey.common.DateTime dateTime81 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean82 = dateTime76.isEqual(dateTime81);
        java.util.Calendar calendar83 = dateTime76.getCal();
        dateTime67.set(calendar83);
        net.ajaskey.common.DateTime dateTime85 = new net.ajaskey.common.DateTime(calendar83);
        boolean boolean86 = dateTime59.isGreaterThan(dateTime85);
        long long87 = dateTime47.getDeltaMilliSeconds(dateTime85);
        net.ajaskey.common.DateTime dateTime88 = dateTime35.copy(dateTime85);
        int int89 = dateTime85.getHour();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "December" + "'", str5, "December");
        org.junit.Assert.assertNotNull(simpleDateFormat12);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertNotNull(dateTime37);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-1972.041095890411d) + "'", double44 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 10 + "'", int45 == 10);
        org.junit.Assert.assertNotNull(calendar46);
// flaky:         org.junit.Assert.assertEquals(calendar46.toString(), "java.util.GregorianCalendar[time=-62190310353473,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=26,MILLISECOND=527,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-1972.041095890411d) + "'", double60 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(date62);
        org.junit.Assert.assertEquals(date62.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-1972.041095890411d) + "'", double70 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 10 + "'", int71 == 10);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(calendar83);
        org.junit.Assert.assertEquals(calendar83.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
// flaky:         org.junit.Assert.assertTrue("'" + long87 + "' != '" + 62190310353473L + "'", long87 == 62190310353473L);
        org.junit.Assert.assertNotNull(dateTime88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 5 + "'", int89 == 5);
    }

    @Test
    public void test7471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7471");
        net.ajaskey.common.TextUtils.printline("                                                 314");
    }

    @Test
    public void test7472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7472");
        java.lang.String str1 = net.ajaskey.common.Utils.getFromUrl("JanuaryThu 10-Apr-0002 10:46:22Thu 10-Apr-0002 10:46:22                                                                                               52.00Thu 10-Apr-0002 10:46:22hi!Thu 10-Apr-0002 10:46:22");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
    }

    @Test
    public void test7473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7473");
        java.lang.String str1 = net.ajaskey.common.Utils.getFromUrl("Thu 10-Apr-0002 10:44:34");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
    }

    @Test
    public void test7474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7474");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.util.Calendar calendar4 = null;
        dateTime3.set(calendar4);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(932, (-68), 19);
        java.lang.String str10 = dateTime9.getDay();
        double double11 = dateTime3.getDeltaYears(dateTime9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Friday" + "'", str10, "Friday");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + (-927.7424657534247d) + "'", double11 == (-927.7424657534247d));
    }

    @Test
    public void test7475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7475");
        java.lang.String str2 = net.ajaskey.common.Utils.fmt((double) 836, (-1955));
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Invalid fmt" + "'", str2, "Invalid fmt");
    }

    @Test
    public void test7476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7476");
        java.util.zip.ZipOutputStream zipOutputStream1 = null;
        // The following exception was thrown during execution in test generation
        try {
            net.ajaskey.common.Utils.writeToZipFile("40", zipOutputStream1);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: 40 (The system cannot find the file specified)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
    }

    @Test
    public void test7477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7477");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(274, 15, 933);
    }

    @Test
    public void test7478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7478");
        java.lang.String str2 = net.ajaskey.common.Utils.ifmt((int) (short) 100, 206);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "                                                                                                                                                                                                           100" + "'", str2, "                                                                                                                                                                                                           100");
    }

    @Test
    public void test7479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7479");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        boolean boolean3 = dateTime1.isWeekday();
        int int4 = dateTime1.getHour();
        java.text.SimpleDateFormat simpleDateFormat6 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime("January", simpleDateFormat6);
        dateTime1.setSdf(simpleDateFormat6);
        java.text.SimpleDateFormat simpleDateFormat10 = null;
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat10);
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double14 = dateTime11.getDeltaYears(dateTime13);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean19 = dateTime13.isEqual(dateTime18);
        java.util.Calendar calendar20 = dateTime13.getCal();
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(calendar20);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(100L);
        double double28 = dateTime25.getDeltaYears(dateTime27);
        java.text.SimpleDateFormat simpleDateFormat30 = null;
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat30);
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double34 = dateTime31.getDeltaYears(dateTime33);
        boolean boolean35 = dateTime31.isWeekday();
        boolean boolean36 = dateTime25.sameDate(dateTime31);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime(100L);
        double double43 = dateTime40.getDeltaYears(dateTime42);
        java.text.SimpleDateFormat simpleDateFormat45 = null;
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat45);
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double49 = dateTime46.getDeltaYears(dateTime48);
        boolean boolean50 = dateTime46.isWeekday();
        boolean boolean51 = dateTime40.sameDate(dateTime46);
        java.text.SimpleDateFormat simpleDateFormat53 = null;
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat53);
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double57 = dateTime54.getDeltaYears(dateTime56);
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean62 = dateTime56.isEqual(dateTime61);
        dateTime40.set(dateTime61);
        long long64 = dateTime25.getDeltaMilliSeconds(dateTime61);
        net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime(100L);
        int int67 = dateTime66.getMs();
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime73 = new net.ajaskey.common.DateTime(100L);
        double double74 = dateTime71.getDeltaYears(dateTime73);
        java.text.SimpleDateFormat simpleDateFormat75 = dateTime71.getSdf();
        boolean boolean76 = dateTime66.isLessThanOrEqual(dateTime71);
        int int77 = dateTime71.getDayOfYear();
        boolean boolean78 = dateTime71.isWeekday();
        boolean boolean79 = dateTime25.sameDate(dateTime71);
        java.util.Date date80 = dateTime71.getTime();
        net.ajaskey.common.DateTime dateTime81 = new net.ajaskey.common.DateTime(date80);
        dateTime21.set(date80);
        boolean boolean83 = dateTime1.isLessThanOrEqual(dateTime21);
        dateTime21.setFirstWorkDay();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertNotNull(simpleDateFormat6);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(calendar20);
        org.junit.Assert.assertEquals(calendar20.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + (-1972.041095890411d) + "'", double28 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-1972.041095890411d) + "'", double43 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 0L + "'", long64 == 0L);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 100 + "'", int67 == 100);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-1972.041095890411d) + "'", double74 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 100 + "'", int77 == 100);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(date80);
// flaky:         org.junit.Assert.assertEquals(date80.toString(), "Thu Apr 10 10:47:26 MST 2");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test7480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7480");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("31-Dec-1969", "0");
        int int3 = dateTime2.getDayOfYear();
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime(dateTime2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test7481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7481");
        java.text.SimpleDateFormat simpleDateFormat1 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("1,969.00", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime(100L);
        int int5 = dateTime4.getMs();
        boolean boolean6 = dateTime4.isNull();
        java.util.Calendar calendar7 = dateTime4.getCal();
        java.lang.String str8 = dateTime4.toString();
        boolean boolean9 = dateTime2.isLessThan(dateTime4);
        net.ajaskey.common.DateTime dateTime10 = null;
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(dateTime10);
        dateTime11.set(42, 10, 10);
        java.util.Date date16 = dateTime11.getTime();
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(date16);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.util.Calendar calendar22 = null;
        dateTime21.set(calendar22);
        java.text.SimpleDateFormat simpleDateFormat25 = null;
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat25);
        dateTime26.set((int) ' ', 0, 11);
        boolean boolean31 = dateTime26.isWeekday();
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime(100L);
        int int34 = dateTime33.getMs();
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime(100L);
        double double41 = dateTime38.getDeltaYears(dateTime40);
        java.text.SimpleDateFormat simpleDateFormat42 = dateTime38.getSdf();
        boolean boolean43 = dateTime33.isLessThanOrEqual(dateTime38);
        java.util.Date date44 = dateTime38.getTime();
        dateTime26.set(date44);
        long long46 = dateTime21.getDeltaMilliSeconds(dateTime26);
        boolean boolean47 = net.ajaskey.common.Utils.sameDate(dateTime17, dateTime21);
        int int48 = dateTime17.getDayOfYear();
        boolean boolean49 = dateTime4.sameDate(dateTime17);
        org.junit.Assert.assertNotNull(simpleDateFormat1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(calendar7);
        org.junit.Assert.assertEquals(calendar7.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "31-Dec-1969" + "'", str8, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(date16);
// flaky:         org.junit.Assert.assertEquals(date16.toString(), "Sat Nov 10 10:47:26 MST 42");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-1972.041095890411d) + "'", double41 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(date44);
// flaky:         org.junit.Assert.assertEquals(date44.toString(), "Thu Apr 10 10:47:26 MST 2");
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 314 + "'", int48 == 314);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test7482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7482");
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:43:44", "62,190,310,577,284.00");
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat8 = null;
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double12 = dateTime9.getDeltaYears(dateTime11);
        boolean boolean13 = dateTime6.isLessThan(dateTime11);
        java.lang.String str14 = dateTime11.toFullString();
        int int15 = dateTime11.getSecond();
        int int16 = dateTime11.getDayOfWeek();
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(100L);
        int int19 = dateTime18.getMs();
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime(100L);
        double double26 = dateTime23.getDeltaYears(dateTime25);
        java.text.SimpleDateFormat simpleDateFormat27 = dateTime23.getSdf();
        boolean boolean28 = dateTime18.isLessThanOrEqual(dateTime23);
        boolean boolean29 = dateTime18.isWeekday();
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((long) (short) 0);
        int int32 = dateTime31.getHour();
        int int33 = dateTime31.getSecond();
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime(100L);
        int int36 = dateTime35.getMs();
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime(100L);
        double double43 = dateTime40.getDeltaYears(dateTime42);
        java.text.SimpleDateFormat simpleDateFormat44 = dateTime40.getSdf();
        boolean boolean45 = dateTime35.isLessThanOrEqual(dateTime40);
        java.text.SimpleDateFormat simpleDateFormat47 = null;
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat47);
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double51 = dateTime48.getDeltaYears(dateTime50);
        boolean boolean52 = dateTime48.isWeekday();
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long57 = dateTime48.getDeltaDays(dateTime56);
        long long58 = dateTime35.getDeltaDays(dateTime56);
        net.ajaskey.common.DateTime dateTime60 = new net.ajaskey.common.DateTime(100L);
        dateTime60.set((int) (byte) 100, (-1), (int) '#');
        boolean boolean65 = dateTime60.isWeekday();
        int int66 = dateTime35.getYears(dateTime60);
        java.text.SimpleDateFormat simpleDateFormat68 = null;
        net.ajaskey.common.DateTime dateTime69 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat68);
        net.ajaskey.common.DateTime dateTime71 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double72 = dateTime69.getDeltaYears(dateTime71);
        net.ajaskey.common.DateTime dateTime76 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean77 = dateTime71.isEqual(dateTime76);
        int int78 = dateTime71.getDayOfWeek();
        boolean boolean79 = dateTime60.isLessThan(dateTime71);
        long long80 = dateTime31.getDeltaMilliSeconds(dateTime60);
        dateTime31.add(13, 12);
        boolean boolean84 = dateTime18.isLessThanOrEqual(dateTime31);
        net.ajaskey.common.DateTime dateTime86 = new net.ajaskey.common.DateTime((-59011286399900L));
        net.ajaskey.common.DateTime dateTime88 = new net.ajaskey.common.DateTime(100L);
        int int89 = dateTime88.getMs();
        boolean boolean90 = dateTime88.isNull();
        java.util.Calendar calendar91 = dateTime88.getCal();
        int int92 = dateTime86.getYears(dateTime88);
        dateTime86.setFirstWorkDay();
        boolean boolean94 = dateTime18.isLessThan(dateTime86);
        boolean boolean95 = dateTime11.isLessThanOrEqual(dateTime86);
        boolean boolean96 = dateTime2.isGreaterThanOrEqual(dateTime11);
        int int97 = dateTime11.getSecond();
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str14, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 4 + "'", int16 == 4);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-1972.041095890411d) + "'", double26 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 5 + "'", int32 == 5);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + (-1972.041095890411d) + "'", double43 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 0L + "'", long57 == 0L);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 719795L + "'", long58 == 719795L);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1870) + "'", int66 == (-1870));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 4 + "'", int78 == 4);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + (-59011286399900L) + "'", long80 == (-59011286399900L));
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 100 + "'", int89 == 100);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(calendar91);
        org.junit.Assert.assertEquals(calendar91.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 1869 + "'", int92 == 1869);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 0 + "'", int97 == 0);
    }

    @Test
    public void test7483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7483");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) 42);
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime(4, 7, 0);
        int int6 = dateTime5.getSecond();
        boolean boolean7 = dateTime1.isLessThan(dateTime5);
        java.text.SimpleDateFormat simpleDateFormat10 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat11 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime("", simpleDateFormat10, simpleDateFormat11);
        java.text.SimpleDateFormat simpleDateFormat14 = null;
        java.text.SimpleDateFormat simpleDateFormat18 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat20 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat21 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime("", simpleDateFormat20, simpleDateFormat21);
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat18, simpleDateFormat21);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("10-Apr-0002", simpleDateFormat21);
        java.text.SimpleDateFormat simpleDateFormat27 = null;
        java.text.SimpleDateFormat simpleDateFormat28 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime("January", simpleDateFormat27, simpleDateFormat28);
        java.text.SimpleDateFormat simpleDateFormat32 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime("January", simpleDateFormat32);
        net.ajaskey.common.DateTime dateTime34 = new net.ajaskey.common.DateTime("", simpleDateFormat32);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("", simpleDateFormat28, simpleDateFormat32);
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime("January                                                                                               52.00                                                                                               52.00                                                                                               52.00                                                                                               52.00hi!                                                                                               52.00", simpleDateFormat21, simpleDateFormat32);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime("January", simpleDateFormat14, simpleDateFormat32);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime("Thu 10-Apr-0002 10:43:06", simpleDateFormat10, simpleDateFormat32);
        dateTime1.setSdf(simpleDateFormat10);
// flaky:         org.junit.Assert.assertTrue("'" + int6 + "' != '" + 26 + "'", int6 == 26);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(simpleDateFormat10);
        org.junit.Assert.assertNotNull(simpleDateFormat11);
        org.junit.Assert.assertNotNull(simpleDateFormat18);
        org.junit.Assert.assertNotNull(simpleDateFormat20);
        org.junit.Assert.assertNotNull(simpleDateFormat21);
        org.junit.Assert.assertNotNull(simpleDateFormat28);
        org.junit.Assert.assertNotNull(simpleDateFormat32);
    }

    @Test
    public void test7484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7484");
        net.ajaskey.common.Utils.makeDir("Thu 10-Apr-0002 10:46:32");
    }

    @Test
    public void test7485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7485");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(7, 14, (int) (short) -1);
        int int4 = dateTime3.getSecond();
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 26 + "'", int4 == 26);
    }

    @Test
    public void test7486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7486");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(8, (int) (short) 0, 0);
        java.util.Calendar calendar4 = dateTime3.getCal();
        java.lang.String str5 = dateTime3.getDay();
        java.util.Calendar calendar6 = dateTime3.getCal();
        org.junit.Assert.assertNotNull(calendar4);
// flaky:         org.junit.Assert.assertEquals(calendar4.toString(), "java.util.GregorianCalendar[time=-61914953553244,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=7,MONTH=11,WEEK_OF_YEAR=53,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=7,DAY_OF_WEEK_IN_MONTH=5,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=26,MILLISECOND=756,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Saturday" + "'", str5, "Saturday");
        org.junit.Assert.assertNotNull(calendar6);
// flaky:         org.junit.Assert.assertEquals(calendar6.toString(), "java.util.GregorianCalendar[time=-61914953553244,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=7,MONTH=11,WEEK_OF_YEAR=53,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=7,DAY_OF_WEEK_IN_MONTH=5,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=26,MILLISECOND=756,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
    }

    @Test
    public void test7487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7487");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        java.util.Calendar calendar2 = dateTime1.getCal();
        java.text.SimpleDateFormat simpleDateFormat4 = null;
        net.ajaskey.common.DateTime dateTime5 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat4);
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double8 = dateTime5.getDeltaYears(dateTime7);
        boolean boolean9 = dateTime5.isWeekday();
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long14 = dateTime5.getDeltaDays(dateTime13);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime(dateTime5);
        net.ajaskey.common.DateTime dateTime19 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime21 = new net.ajaskey.common.DateTime(100L);
        double double22 = dateTime19.getDeltaYears(dateTime21);
        boolean boolean23 = dateTime21.isWeekday();
        java.util.Date date24 = dateTime21.getTime();
        dateTime5.set(date24);
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(100L);
        int int28 = dateTime27.getMs();
        java.lang.String str29 = dateTime27.toString();
        boolean boolean30 = dateTime5.isLessThanOrEqual(dateTime27);
        net.ajaskey.common.DateTime dateTime33 = dateTime5.parse("", "100.00");
        dateTime5.add((int) (short) 0, (int) (short) -1);
        double double37 = dateTime1.getDeltaYears(dateTime5);
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime(100L);
        java.util.Calendar calendar40 = dateTime39.getCal();
        dateTime5.set(calendar40);
        dateTime5.add(7, 365);
        net.ajaskey.common.DateTime dateTime48 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime(100L);
        double double51 = dateTime48.getDeltaYears(dateTime50);
        java.util.Date date52 = dateTime48.getTime();
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime(date52);
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime(date52);
        boolean boolean55 = net.ajaskey.common.Utils.sameMonth(dateTime5, dateTime54);
        net.ajaskey.common.DateTime dateTime56 = new net.ajaskey.common.DateTime(dateTime54);
        org.junit.Assert.assertNotNull(calendar2);
        org.junit.Assert.assertEquals(calendar2.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-1972.041095890411d) + "'", double22 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(date24);
        org.junit.Assert.assertEquals(date24.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "31-Dec-1969" + "'", str29, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(dateTime33);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(calendar40);
        org.junit.Assert.assertEquals(calendar40.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-1972.041095890411d) + "'", double51 == (-1972.041095890411d));
        org.junit.Assert.assertNotNull(date52);
// flaky:         org.junit.Assert.assertEquals(date52.toString(), "Thu Apr 10 10:47:26 MST 2");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test7488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7488");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        java.lang.String str3 = dateTime1.toString();
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(100L);
        double double10 = dateTime7.getDeltaYears(dateTime9);
        int int11 = dateTime7.getHour();
        int int12 = dateTime7.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(100L);
        double double19 = dateTime16.getDeltaYears(dateTime18);
        boolean boolean20 = dateTime18.isWeekday();
        boolean boolean21 = net.ajaskey.common.Utils.sameDate(dateTime7, dateTime18);
        boolean boolean22 = net.ajaskey.common.Utils.sameDate(dateTime1, dateTime7);
        net.ajaskey.common.DateTime dateTime23 = null;
        boolean boolean24 = dateTime7.isLessThanOrEqual(dateTime23);
        java.lang.String str25 = dateTime7.getDay();
        net.ajaskey.common.DateTime dateTime27 = new net.ajaskey.common.DateTime(100L);
        java.util.Calendar calendar28 = dateTime27.getCal();
        java.text.SimpleDateFormat simpleDateFormat30 = null;
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat30);
        net.ajaskey.common.DateTime dateTime33 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double34 = dateTime31.getDeltaYears(dateTime33);
        boolean boolean35 = dateTime31.isWeekday();
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long40 = dateTime31.getDeltaDays(dateTime39);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime(dateTime31);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime47 = new net.ajaskey.common.DateTime(100L);
        double double48 = dateTime45.getDeltaYears(dateTime47);
        boolean boolean49 = dateTime47.isWeekday();
        java.util.Date date50 = dateTime47.getTime();
        dateTime31.set(date50);
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime(100L);
        int int54 = dateTime53.getMs();
        java.lang.String str55 = dateTime53.toString();
        boolean boolean56 = dateTime31.isLessThanOrEqual(dateTime53);
        net.ajaskey.common.DateTime dateTime59 = dateTime31.parse("", "100.00");
        dateTime31.add((int) (short) 0, (int) (short) -1);
        double double63 = dateTime27.getDeltaYears(dateTime31);
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime(100L);
        int int66 = dateTime65.getMs();
        net.ajaskey.common.DateTime dateTime70 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime72 = new net.ajaskey.common.DateTime(100L);
        double double73 = dateTime70.getDeltaYears(dateTime72);
        java.text.SimpleDateFormat simpleDateFormat74 = dateTime70.getSdf();
        boolean boolean75 = dateTime65.isLessThanOrEqual(dateTime70);
        int int76 = dateTime65.getDayOfMonth();
        boolean boolean77 = net.ajaskey.common.Utils.sameMonth(dateTime31, dateTime65);
        java.util.Date date78 = dateTime31.getTime();
        dateTime7.set(date78);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "31-Dec-1969" + "'", str3, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1972.041095890411d) + "'", double10 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-1972.041095890411d) + "'", double19 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Thursday" + "'", str25, "Thursday");
        org.junit.Assert.assertNotNull(calendar28);
        org.junit.Assert.assertEquals(calendar28.toString(), "java.util.GregorianCalendar[time=100,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=100,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + (-1972.041095890411d) + "'", double48 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(date50);
        org.junit.Assert.assertEquals(date50.toString(), "Wed Dec 31 17:00:00 MST 1969");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 100 + "'", int54 == 100);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "31-Dec-1969" + "'", str55, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(dateTime59);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-1972.041095890411d) + "'", double73 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 31 + "'", int76 == 31);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(date78);
        org.junit.Assert.assertEquals(date78.toString(), "Wed Dec 31 17:00:00 MST 1969");
    }

    @Test
    public void test7489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7489");
        java.text.SimpleDateFormat simpleDateFormat2 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat3 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime("", simpleDateFormat2, simpleDateFormat3);
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime(100L);
        int int7 = dateTime6.getMs();
        java.text.SimpleDateFormat simpleDateFormat8 = net.ajaskey.common.Utils.sdf;
        dateTime6.setSdf(simpleDateFormat8);
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("31-Dec-1969", simpleDateFormat3, simpleDateFormat8);
        java.text.SimpleDateFormat simpleDateFormat12 = null;
        net.ajaskey.common.DateTime dateTime13 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat12);
        net.ajaskey.common.DateTime dateTime15 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double16 = dateTime13.getDeltaYears(dateTime15);
        net.ajaskey.common.DateTime dateTime20 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean21 = dateTime15.isEqual(dateTime20);
        java.util.Calendar calendar22 = dateTime15.getCal();
        net.ajaskey.common.DateTime dateTime23 = new net.ajaskey.common.DateTime(calendar22);
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime(calendar22);
        boolean boolean25 = dateTime10.isGreaterThan(dateTime24);
        net.ajaskey.common.DateTime dateTime26 = new net.ajaskey.common.DateTime(dateTime10);
        java.lang.String str27 = dateTime26.getDay();
        java.text.SimpleDateFormat simpleDateFormat28 = dateTime26.getSdf();
        org.junit.Assert.assertNotNull(simpleDateFormat2);
        org.junit.Assert.assertNotNull(simpleDateFormat3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat8);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(calendar22);
        org.junit.Assert.assertEquals(calendar22.toString(), "java.util.GregorianCalendar[time=0,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=1969,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=365,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=5,HOUR_OF_DAY=17,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Wednesday" + "'", str27, "Wednesday");
        org.junit.Assert.assertNull(simpleDateFormat28);
    }

    @Test
    public void test7490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7490");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime((long) 620);
    }

    @Test
    public void test7491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7491");
        java.text.SimpleDateFormat simpleDateFormat1 = null;
        net.ajaskey.common.DateTime dateTime2 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat1);
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double5 = dateTime2.getDeltaYears(dateTime4);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean10 = dateTime4.isEqual(dateTime9);
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime(100L);
        double double17 = dateTime14.getDeltaYears(dateTime16);
        boolean boolean18 = dateTime16.isWeekday();
        int int19 = dateTime16.getDayOfYear();
        net.ajaskey.common.DateTime dateTime20 = dateTime4.copy(dateTime16);
        boolean boolean21 = dateTime4.isNull();
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean26 = dateTime25.isNull();
        int int27 = dateTime25.getDayOfYear();
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime37 = new net.ajaskey.common.DateTime(100L);
        long long38 = dateTime35.getDeltaDays(dateTime37);
        int int39 = dateTime35.getHour();
        dateTime35.add((int) (byte) 100, (int) (byte) 0);
        double double43 = dateTime31.getDeltaYears(dateTime35);
        boolean boolean44 = dateTime25.isLessThanOrEqual(dateTime31);
        net.ajaskey.common.DateTime dateTime46 = new net.ajaskey.common.DateTime(100L);
        boolean boolean47 = dateTime46.isWeekday();
        dateTime46.setFirstWorkDay();
        net.ajaskey.common.DateTime dateTime50 = new net.ajaskey.common.DateTime(100L);
        dateTime50.set((int) (byte) 100, (-1), (int) '#');
        java.lang.String str55 = dateTime50.getMonth();
        boolean boolean56 = dateTime46.isLessThan(dateTime50);
        java.util.Date date57 = dateTime50.getTime();
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime(100L);
        int int60 = dateTime59.getMs();
        net.ajaskey.common.DateTime dateTime64 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime66 = new net.ajaskey.common.DateTime(100L);
        double double67 = dateTime64.getDeltaYears(dateTime66);
        java.text.SimpleDateFormat simpleDateFormat68 = dateTime64.getSdf();
        boolean boolean69 = dateTime59.isLessThanOrEqual(dateTime64);
        boolean boolean70 = dateTime59.isWeekday();
        boolean boolean71 = dateTime50.isGreaterThan(dateTime59);
        java.lang.String str72 = dateTime59.getDay();
        long long73 = dateTime31.getDeltaDays(dateTime59);
        net.ajaskey.common.DateTime dateTime74 = new net.ajaskey.common.DateTime(dateTime59);
        net.ajaskey.common.DateTime dateTime75 = dateTime4.copy(dateTime59);
        int int76 = dateTime4.getDayOfWeek();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-1972.041095890411d) + "'", double17 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 365 + "'", int19 == 365);
        org.junit.Assert.assertNotNull(dateTime20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-719795L) + "'", long38 == (-719795L));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 10 + "'", int39 == 10);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "January" + "'", str55, "January");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(date57);
        org.junit.Assert.assertEquals(date57.toString(), "Sat Jan 04 17:00:00 MST 100");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 100 + "'", int60 == 100);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + (-1972.041095890411d) + "'", double67 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Wednesday" + "'", str72, "Wednesday");
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + (-719795L) + "'", long73 == (-719795L));
        org.junit.Assert.assertNotNull(dateTime75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 4 + "'", int76 == 4);
    }

    @Test
    public void test7492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7492");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(3, 0, 10);
        int int4 = dateTime3.getSecond();
        java.util.Date date5 = dateTime3.getTime();
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime(date5);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime((long) (short) 0);
        int int9 = dateTime8.getHour();
        int int10 = dateTime8.getSecond();
        net.ajaskey.common.DateTime dateTime11 = new net.ajaskey.common.DateTime(dateTime8);
        java.lang.String str12 = dateTime11.toString();
        int int13 = dateTime11.getYear();
        int int14 = dateTime11.getSecond();
        long long15 = dateTime6.getDeltaMilliSeconds(dateTime11);
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 26 + "'", int4 == 26);
        org.junit.Assert.assertNotNull(date5);
// flaky:         org.junit.Assert.assertEquals(date5.toString(), "Wed Jan 10 10:47:26 MST 3");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 5 + "'", int9 == 5);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "31-Dec-1969" + "'", str12, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1969 + "'", int13 == 1969);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + long15 + "' != '" + 62071855953144L + "'", long15 == 62071855953144L);
    }

    @Test
    public void test7493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7493");
        java.lang.String str2 = net.ajaskey.common.Utils.ifmt(1924, 862);
        org.junit.Assert.assertEquals("'" + strstr
    }

    @Test
    public void test7494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7494");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        java.lang.String str3 = dateTime1.toString();
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime9 = new net.ajaskey.common.DateTime(100L);
        double double10 = dateTime7.getDeltaYears(dateTime9);
        int int11 = dateTime7.getHour();
        int int12 = dateTime7.getDayOfMonth();
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime18 = new net.ajaskey.common.DateTime(100L);
        double double19 = dateTime16.getDeltaYears(dateTime18);
        boolean boolean20 = dateTime18.isWeekday();
        boolean boolean21 = net.ajaskey.common.Utils.sameDate(dateTime7, dateTime18);
        boolean boolean22 = net.ajaskey.common.Utils.sameDate(dateTime1, dateTime7);
        java.lang.String str23 = dateTime7.getDay();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "31-Dec-1969" + "'", str3, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1972.041095890411d) + "'", double10 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-1972.041095890411d) + "'", double19 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Thursday" + "'", str23, "Thursday");
    }

    @Test
    public void test7495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7495");
        java.lang.String str1 = net.ajaskey.common.Utils.getFromUrl("-1");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
    }

    @Test
    public void test7496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7496");
        net.ajaskey.common.DateTime dateTime1 = new net.ajaskey.common.DateTime(100L);
        int int2 = dateTime1.getMs();
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime8 = new net.ajaskey.common.DateTime(100L);
        double double9 = dateTime6.getDeltaYears(dateTime8);
        java.text.SimpleDateFormat simpleDateFormat10 = dateTime6.getSdf();
        boolean boolean11 = dateTime1.isLessThanOrEqual(dateTime6);
        java.text.SimpleDateFormat simpleDateFormat13 = null;
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat13);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double17 = dateTime14.getDeltaYears(dateTime16);
        boolean boolean18 = dateTime14.isWeekday();
        net.ajaskey.common.DateTime dateTime22 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        long long23 = dateTime14.getDeltaDays(dateTime22);
        long long24 = dateTime1.getDeltaDays(dateTime22);
        java.lang.String str25 = dateTime22.toFullString();
        java.util.Calendar calendar26 = dateTime22.getCal();
        java.util.Calendar calendar27 = dateTime22.getCal();
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime((long) (short) 0);
        int int30 = dateTime29.getHour();
        boolean boolean31 = dateTime29.isNull();
        net.ajaskey.common.DateTime dateTime32 = new net.ajaskey.common.DateTime(dateTime29);
        boolean boolean33 = dateTime22.isLessThanOrEqual(dateTime29);
        dateTime22.add(108, (int) (byte) 0);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime(100L);
        long long43 = dateTime40.getDeltaDays(dateTime42);
        int int44 = dateTime40.getHour();
        dateTime40.add((int) (byte) 100, (int) (byte) 0);
        int int48 = dateTime40.getDayOfYear();
        net.ajaskey.common.DateTime dateTime52 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime(100L);
        long long55 = dateTime52.getDeltaDays(dateTime54);
        int int56 = dateTime52.getHour();
        boolean boolean57 = dateTime40.isLessThan(dateTime52);
        java.lang.String str58 = dateTime52.toString();
        boolean boolean59 = dateTime22.isLessThanOrEqual(dateTime52);
        int int60 = dateTime52.getDayOfYear();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1972.041095890411d) + "'", double9 == (-1972.041095890411d));
        org.junit.Assert.assertNull(simpleDateFormat10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 719795L + "'", long24 == 719795L);
// flaky:         org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Thu 10-Apr-0002 10:47:26" + "'", str25, "Thu 10-Apr-0002 10:47:26");
        org.junit.Assert.assertNotNull(calendar26);
// flaky:         org.junit.Assert.assertEquals(calendar26.toString(), "java.util.GregorianCalendar[time=-62190310353044,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=26,MILLISECOND=956,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertNotNull(calendar27);
// flaky:         org.junit.Assert.assertEquals(calendar27.toString(), "java.util.GregorianCalendar[time=-62190310353044,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"America/Denver\",offset=-25200000,dstSavings=3600000,useDaylight=true,transitions=157,lastRule=java.util.SimpleTimeZone[id=America/Denver,offset=-25200000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=0,YEAR=2,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=100,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=10,HOUR_OF_DAY=10,MINUTE=47,SECOND=26,MILLISECOND=956,ZONE_OFFSET=-25200000,DST_OFFSET=0]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 5 + "'", int30 == 5);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-719795L) + "'", long43 == (-719795L));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 10 + "'", int44 == 10);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 100 + "'", int48 == 100);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-719795L) + "'", long55 == (-719795L));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "10-Apr-0002" + "'", str58, "10-Apr-0002");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 100 + "'", int60 == 100);
    }

    @Test
    public void test7497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7497");
        java.lang.String str1 = net.ajaskey.common.Utils.getFromUrl("Fri 11-Jan-0032 10:43:03");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
    }

    @Test
    public void test7498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7498");
        net.ajaskey.common.DateTime dateTime4 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime6 = new net.ajaskey.common.DateTime(100L);
        double double7 = dateTime4.getDeltaYears(dateTime6);
        int int8 = dateTime4.getHour();
        dateTime4.add(9, 3);
        java.text.SimpleDateFormat simpleDateFormat13 = null;
        net.ajaskey.common.DateTime dateTime14 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat13);
        net.ajaskey.common.DateTime dateTime16 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double17 = dateTime14.getDeltaYears(dateTime16);
        boolean boolean18 = dateTime4.isEqual(dateTime16);
        java.text.SimpleDateFormat simpleDateFormat20 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat22 = net.ajaskey.common.Utils.sdf;
        java.text.SimpleDateFormat simpleDateFormat23 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime24 = new net.ajaskey.common.DateTime("", simpleDateFormat22, simpleDateFormat23);
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("                                                                                               52.00", simpleDateFormat20, simpleDateFormat23);
        dateTime4.setSdf(simpleDateFormat20);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat33 = null;
        java.text.SimpleDateFormat simpleDateFormat34 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime35 = new net.ajaskey.common.DateTime("January", simpleDateFormat33, simpleDateFormat34);
        java.text.SimpleDateFormat simpleDateFormat38 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime39 = new net.ajaskey.common.DateTime("January", simpleDateFormat38);
        net.ajaskey.common.DateTime dateTime40 = new net.ajaskey.common.DateTime("", simpleDateFormat38);
        net.ajaskey.common.DateTime dateTime41 = new net.ajaskey.common.DateTime("", simpleDateFormat34, simpleDateFormat38);
        dateTime30.setSdf(simpleDateFormat34);
        net.ajaskey.common.DateTime dateTime43 = new net.ajaskey.common.DateTime("December", simpleDateFormat20, simpleDateFormat34);
        net.ajaskey.common.DateTime dateTime45 = new net.ajaskey.common.DateTime(100L);
        int int46 = dateTime45.getMs();
        java.text.SimpleDateFormat simpleDateFormat47 = net.ajaskey.common.Utils.sdf;
        dateTime45.setSdf(simpleDateFormat47);
        java.lang.String str49 = dateTime45.format();
        boolean boolean50 = dateTime43.isLessThanOrEqual(dateTime45);
        int int51 = dateTime43.getMs();
        net.ajaskey.common.DateTime dateTime54 = new net.ajaskey.common.DateTime(100L);
        int int55 = dateTime54.getMs();
        java.text.SimpleDateFormat simpleDateFormat56 = net.ajaskey.common.Utils.sdf;
        dateTime54.setSdf(simpleDateFormat56);
        net.ajaskey.common.DateTime dateTime58 = new net.ajaskey.common.DateTime("Wednesday", simpleDateFormat56);
        java.text.SimpleDateFormat simpleDateFormat60 = null;
        net.ajaskey.common.DateTime dateTime61 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat60);
        net.ajaskey.common.DateTime dateTime63 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double64 = dateTime61.getDeltaYears(dateTime63);
        boolean boolean65 = dateTime63.isNull();
        java.text.SimpleDateFormat simpleDateFormat67 = null;
        net.ajaskey.common.DateTime dateTime68 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat67);
        dateTime68.set((int) ' ', 0, 11);
        boolean boolean73 = dateTime63.isGreaterThanOrEqual(dateTime68);
        double double74 = dateTime58.getDeltaYears(dateTime63);
        java.text.SimpleDateFormat simpleDateFormat76 = null;
        net.ajaskey.common.DateTime dateTime77 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat76);
        net.ajaskey.common.DateTime dateTime79 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double80 = dateTime77.getDeltaYears(dateTime79);
        boolean boolean81 = dateTime79.isNull();
        boolean boolean82 = dateTime63.isGreaterThan(dateTime79);
        boolean boolean83 = dateTime43.isLessThanOrEqual(dateTime79);
        java.util.Date date84 = dateTime79.getTime();
        net.ajaskey.common.DateTime dateTime85 = new net.ajaskey.common.DateTime(date84);
        net.ajaskey.common.DateTime dateTime86 = new net.ajaskey.common.DateTime(date84);
        net.ajaskey.common.DateTime dateTime87 = new net.ajaskey.common.DateTime(date84);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-1972.041095890411d) + "'", double7 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10 + "'", int8 == 10);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(simpleDateFormat20);
        org.junit.Assert.assertNotNull(simpleDateFormat22);
        org.junit.Assert.assertNotNull(simpleDateFormat23);
        org.junit.Assert.assertNotNull(simpleDateFormat34);
        org.junit.Assert.assertNotNull(simpleDateFormat38);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "31-Dec-1969" + "'", str49, "31-Dec-1969");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
        org.junit.Assert.assertNotNull(simpleDateFormat56);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(date84);
        org.junit.Assert.assertEquals(date84.toString(), "Wed Dec 31 17:00:00 MST 1969");
    }

    @Test
    public void test7499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7499");
        java.lang.String str2 = net.ajaskey.common.Utils.fmt((double) 62190310584054L, 1967);
// flaky:         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Invalid fmt" + "'", str2, "Invalid fmt");
    }

    @Test
    public void test7500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "CommonTests14.test7500");
        net.ajaskey.common.DateTime dateTime3 = new net.ajaskey.common.DateTime(8, (int) (short) 0, 0);
        net.ajaskey.common.DateTime dateTime7 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        java.text.SimpleDateFormat simpleDateFormat9 = null;
        net.ajaskey.common.DateTime dateTime10 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat9);
        net.ajaskey.common.DateTime dateTime12 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double13 = dateTime10.getDeltaYears(dateTime12);
        boolean boolean14 = dateTime7.isLessThan(dateTime12);
        java.lang.String str15 = dateTime12.toFullString();
        int int16 = dateTime12.getSecond();
        net.ajaskey.common.DateTime dateTime17 = new net.ajaskey.common.DateTime(dateTime12);
        long long18 = dateTime3.getDeltaDays(dateTime12);
        java.util.Date date19 = null;
        dateTime12.set(date19);
        java.text.SimpleDateFormat simpleDateFormat23 = null;
        java.text.SimpleDateFormat simpleDateFormat24 = net.ajaskey.common.Utils.sdfFull;
        net.ajaskey.common.DateTime dateTime25 = new net.ajaskey.common.DateTime("January", simpleDateFormat23, simpleDateFormat24);
        java.text.SimpleDateFormat simpleDateFormat28 = net.ajaskey.common.Utils.sdf;
        net.ajaskey.common.DateTime dateTime29 = new net.ajaskey.common.DateTime("January", simpleDateFormat28);
        net.ajaskey.common.DateTime dateTime30 = new net.ajaskey.common.DateTime("", simpleDateFormat28);
        net.ajaskey.common.DateTime dateTime31 = new net.ajaskey.common.DateTime("", simpleDateFormat24, simpleDateFormat28);
        int int32 = dateTime31.getSecond();
        net.ajaskey.common.DateTime dateTime36 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime38 = new net.ajaskey.common.DateTime(100L);
        double double39 = dateTime36.getDeltaYears(dateTime38);
        java.text.SimpleDateFormat simpleDateFormat41 = null;
        net.ajaskey.common.DateTime dateTime42 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat41);
        net.ajaskey.common.DateTime dateTime44 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double45 = dateTime42.getDeltaYears(dateTime44);
        boolean boolean46 = dateTime42.isWeekday();
        boolean boolean47 = dateTime36.sameDate(dateTime42);
        net.ajaskey.common.DateTime dateTime51 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        net.ajaskey.common.DateTime dateTime53 = new net.ajaskey.common.DateTime(100L);
        double double54 = dateTime51.getDeltaYears(dateTime53);
        java.text.SimpleDateFormat simpleDateFormat56 = null;
        net.ajaskey.common.DateTime dateTime57 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat56);
        net.ajaskey.common.DateTime dateTime59 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double60 = dateTime57.getDeltaYears(dateTime59);
        boolean boolean61 = dateTime57.isWeekday();
        boolean boolean62 = dateTime51.sameDate(dateTime57);
        java.text.SimpleDateFormat simpleDateFormat64 = null;
        net.ajaskey.common.DateTime dateTime65 = new net.ajaskey.common.DateTime("hi!", simpleDateFormat64);
        net.ajaskey.common.DateTime dateTime67 = new net.ajaskey.common.DateTime((long) (short) 0);
        double double68 = dateTime65.getDeltaYears(dateTime67);
        net.ajaskey.common.DateTime dateTime72 = new net.ajaskey.common.DateTime((int) (short) -1, (int) (byte) 0, (int) (byte) 100);
        boolean boolean73 = dateTime67.isEqual(dateTime72);
        dateTime51.set(dateTime72);
        long long75 = dateTime36.getDeltaMilliSeconds(dateTime72);
        java.lang.String str76 = dateTime36.getDay();
        long long77 = dateTime31.getDeltaDays(dateTime36);
        long long78 = dateTime12.getDeltaMilliSeconds(dateTime36);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Wed 31-Dec-1969 17:00:00" + "'", str15, "Wed 31-Dec-1969 17:00:00");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-716608L) + "'", long18 == (-716608L));
        org.junit.Assert.assertNotNull(simpleDateFormat24);
        org.junit.Assert.assertNotNull(simpleDateFormat28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-1972.041095890411d) + "'", double39 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-1972.041095890411d) + "'", double54 == (-1972.041095890411d));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
// flaky:         org.junit.Assert.assertTrue("'" + long75 + "' != '" + 0L + "'", long75 == 0L);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "Thursday" + "'", str76, "Thursday");
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 0L + "'", long77 == 0L);
// flaky:         org.junit.Assert.assertTrue("'" + long78 + "' != '" + (-62190310352978L) + "'", long78 == (-62190310352978L));
    }
}
