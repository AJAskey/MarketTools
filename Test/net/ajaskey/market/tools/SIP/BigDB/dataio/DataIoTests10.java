package net.ajaskey.market.tools.SIP.BigDB.dataio;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class DataIoTests10 {

    public static boolean debug = false;

    @Test
    public void test05001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05001");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray4 = balSheetFileData1.getInventoryYr();
        double[] doubleArray5 = balSheetFileData1.getCurrAssetsYr();
        double[] doubleArray6 = balSheetFileData1.getAcctPayableYr();
        double[] doubleArray7 = balSheetFileData1.getOtherCurrAssetsQtr();
        double[] doubleArray8 = balSheetFileData1.getOtherCurrAssetsYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData9 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData10 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData9);
        double[] doubleArray11 = incSheetFileData10.getGrossIncYr();
        double[] doubleArray12 = incSheetFileData10.getIncTaxQtr();
        double[] doubleArray13 = incSheetFileData10.getIncTaxQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData14 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData15 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData14);
        companyFileData15.setNumEmployees("hi!");
        companyFileData15.setZip("NONE");
        companyFileData15.setSnpIndex("ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n");
        companyFileData15.setTicker("");
        incSheetFileData10.setNameFields(companyFileData15);
        java.lang.String str25 = companyFileData15.getPhone();
        balSheetFileData1.setNameFields(companyFileData15);
        java.lang.String str27 = companyFileData15.getIndustry();
        companyFileData15.setWeb("ticker      : \r\n  name      : hi!\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : NONE\r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : hi!\r\n  phone     : data/BigDB/\r\n  web       : null\r\n");
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertNull(doubleArray11);
        org.junit.Assert.assertNull(doubleArray12);
        org.junit.Assert.assertNull(doubleArray13);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test05002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05002");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        double[] doubleArray28 = fieldData27.getIncTaxQtr();
        double[] doubleArray29 = fieldData27.getOtherLtLiabYr();
        double[] doubleArray30 = fieldData27.getCapExQtr();
        java.lang.String str31 = fieldData27.getState();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum32 = fieldData27.getExchange();
        double[] doubleArray33 = fieldData27.getLtDebtYr();
        double[] doubleArray34 = fieldData27.getCurrAssetsQtr();
        double[] doubleArray35 = fieldData27.getIntExpNonOpQtr();
        double[] doubleArray36 = fieldData27.getOtherIncYr();
        java.lang.String str37 = fieldData27.getZip();
        double double38 = fieldData27.getPrice();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(doubleArray28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(exchEnum32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(doubleArray36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
    }

    @Test
    public void test05003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05003");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        companyFileData1.setNumEmployees("hi!");
        java.lang.String str4 = companyFileData1.getPhone();
        java.lang.String str5 = companyFileData1.getIndustry();
        java.lang.String str6 = companyFileData1.toDbOuput();
        java.lang.String str7 = companyFileData1.getState();
        java.lang.String str8 = companyFileData1.getStreet();
        java.lang.String str9 = companyFileData1.getWeb();
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n" + "'", str6, "ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test05004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05004");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getStDebtQtr();
        double[] doubleArray30 = fieldData27.getEpsContQtr();
        double[] doubleArray31 = fieldData27.getOtherLtAssetsYr();
        double[] doubleArray32 = fieldData27.getNetIncYr();
        double[] doubleArray33 = fieldData27.getInventoryYr();
        double[] doubleArray34 = fieldData27.getDividendYr();
        double[] doubleArray35 = fieldData27.getPreTaxIncQtr();
        double[] doubleArray36 = fieldData27.getOtherLtAssetsQtr();
        double[] doubleArray37 = fieldData27.getNonrecurringItemsQtr();
        double[] doubleArray38 = fieldData27.getSalesQtr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(doubleArray36);
        org.junit.Assert.assertNull(doubleArray37);
        org.junit.Assert.assertNull(doubleArray38);
    }

    @Test
    public void test05005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05005");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        int int31 = fieldData27.getInsiderSells();
        double[] doubleArray32 = fieldData27.getOtherLtAssetsYr();
        double[] doubleArray33 = fieldData27.getOtherLtLiabQtr();
        double[] doubleArray34 = fieldData27.getInventoryQtr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(doubleArray34);
    }

    @Test
    public void test05006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05006");
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData0);
        double[] doubleArray2 = incSheetFileData1.getGrossIncQtr();
        double[] doubleArray3 = incSheetFileData1.getAdjToIncYr();
        double[] doubleArray4 = incSheetFileData1.getAdjToIncQtr();
        double[] doubleArray5 = incSheetFileData1.getEpsYr();
        double[] doubleArray6 = incSheetFileData1.getNetIncYr();
        double[] doubleArray7 = incSheetFileData1.getNetIncQtr();
        double[] doubleArray8 = incSheetFileData1.getTotalOpExpYr();
        double[] doubleArray9 = incSheetFileData1.getGrossOpIncYr();
        java.lang.String str10 = incSheetFileData1.getIndustry();
        double[] doubleArray11 = incSheetFileData1.getEpsDilYr();
        double[] doubleArray12 = incSheetFileData1.getEpsDilQtr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertNull(doubleArray9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(doubleArray11);
        org.junit.Assert.assertNull(doubleArray12);
    }

    @Test
    public void test05007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05007");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray4 = balSheetFileData1.getInventoryYr();
        double[] doubleArray5 = balSheetFileData1.getCurrAssetsYr();
        double[] doubleArray6 = balSheetFileData1.getInventoryQtr();
        double[] doubleArray7 = balSheetFileData1.getBvpsYr();
        double[] doubleArray8 = balSheetFileData1.getTotalLiabYr();
        double[] doubleArray9 = balSheetFileData1.getTotalAssetsQtr();
        double[] doubleArray10 = balSheetFileData1.getLiabEquityQtr();
        double[] doubleArray11 = balSheetFileData1.getCashYr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertNull(doubleArray9);
        org.junit.Assert.assertNull(doubleArray10);
        org.junit.Assert.assertNull(doubleArray11);
    }

    @Test
    public void test05008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05008");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        companyFileData1.setNumEmployees("hi!");
        companyFileData1.setPhone("");
        companyFileData1.setNumEmployees("NONE");
        companyFileData1.setState("");
        companyFileData1.setCity("");
        companyFileData1.setName("");
        // The following exception was thrown during execution in test generation
        try {
            companyFileData1.setExchange("Cash File Data");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No enum constant net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum.Cash File Data");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test05009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05009");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        fieldData27.setQuarter((int) (byte) 100);
        double[] doubleArray33 = fieldData27.getIncTaxYr();
        double[] doubleArray34 = fieldData27.getOtherCurrLiabQtr();
        double[] doubleArray35 = fieldData27.getPrefStockYr();
        int int36 = fieldData27.getInsiderSells();
        double[] doubleArray37 = fieldData27.getGrossIncYr();
        double[] doubleArray38 = fieldData27.getTotalOpExpYr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(doubleArray37);
        org.junit.Assert.assertNull(doubleArray38);
    }

    @Test
    public void test05010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05010");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "out/BigDB/", "NONE", "ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n", "NONE", "  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n", "Cash File Data" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData10 = net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData.readFromDb((java.util.List<java.lang.String>) strList8);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData11 = net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData.readFromDb((java.util.List<java.lang.String>) strList8);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData12 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList8);
        double[] doubleArray13 = incSheetFileData12.getIntExpYr();
        java.lang.String str14 = incSheetFileData12.getIndustry();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(cashFileData10);
        org.junit.Assert.assertNotNull(cashFileData11);
        org.junit.Assert.assertNotNull(incSheetFileData12);
        org.junit.Assert.assertNull(doubleArray13);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test05011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05011");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setFromReport((int) (short) 1, 0);
        sharesFileData0.setInsiderBuyShrs("hi!");
        sharesFileData0.setBeta("");
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum8 = sharesFileData0.getExchange();
        int int9 = sharesFileData0.getInstSellShrs();
        double double10 = sharesFileData0.getMktCap();
        double[] doubleArray11 = sharesFileData0.getSharesQ();
        org.junit.Assert.assertNull(exchEnum8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0]");
    }

    @Test
    public void test05012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05012");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray4 = balSheetFileData1.getNetFixedAssetsYr();
        double[] doubleArray5 = balSheetFileData1.getCurrAssetsYr();
        double[] doubleArray6 = balSheetFileData1.getAcctPayableYr();
        double[] doubleArray7 = balSheetFileData1.getStInvestYr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
    }

    @Test
    public void test05013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05013");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        companyFileData1.setNumEmployees("hi!");
        companyFileData1.setZip("NONE");
        companyFileData1.setSnpIndex("ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n");
        boolean boolean8 = companyFileData1.isAdr();
        java.lang.String str9 = companyFileData1.getZip();
        companyFileData1.setSector("NONE");
        java.lang.String str12 = companyFileData1.getSector();
        companyFileData1.setTicker("out/BigDB/1/Q10/hi!-fundamental-data-1Q10.ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n");
        companyFileData1.setName("out/BigDB/100/Q10/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n-fundamental-data-100Q10.Cash File Data");
        java.lang.String str17 = companyFileData1.getState();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "NONE" + "'", str9, "NONE");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "NONE" + "'", str12, "NONE");
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test05014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05014");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        int int31 = fieldData27.getInsiderSells();
        java.lang.String str32 = fieldData27.getSector();
        java.lang.String str33 = fieldData27.getCity();
        double[] doubleArray34 = fieldData27.getPreTaxIncYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData35 = fieldData27.getShares();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNotNull(sharesFileData35);
    }

    @Test
    public void test05015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05015");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        boolean boolean29 = fieldData27.isDrp();
        double[] doubleArray30 = fieldData27.getCashFromOpsQtr();
        double[] doubleArray31 = fieldData27.getInventoryYr();
        double[] doubleArray32 = fieldData27.getOtherCurrLiabYr();
        long long33 = fieldData27.getVolumeMonth3m();
        double double34 = fieldData27.getEpsY0();
        java.lang.String str35 = fieldData27.getSector();
        java.lang.String str36 = fieldData27.getSector();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str36);
    }

    @Test
    public void test05016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05016");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setFromReport((int) (short) 1, 0);
        sharesFileData0.setInsiderBuyShrs("hi!");
        int int6 = sharesFileData0.getInsiderBuys();
        long long7 = sharesFileData0.getVolumeMonth3m();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData8 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData9 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData8);
        java.lang.String str10 = companyFileData9.getIndustry();
        companyFileData9.setSnpIndex("");
        companyFileData9.setPhone("hi!");
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum15 = companyFileData9.getExchange();
        java.lang.String str16 = companyFileData9.getDowIndexStr();
        companyFileData9.setAdr("");
        java.lang.String str19 = companyFileData9.getIndustry();
        sharesFileData0.setNameFields(companyFileData9);
        sharesFileData0.setInstSellShrs("out/BigDB/97/Q0/out/BigDB/10/Q100/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n-fundamental-data-10Q100.NONE-fundamental-data-97Q0.hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(exchEnum15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test05017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05017");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        int int31 = fieldData27.getInsiderSells();
        int int32 = fieldData27.getInstBuyShrs();
        double[] doubleArray33 = fieldData27.getStInvestQtr();
        double[] doubleArray34 = fieldData27.getOtherCurrLiabYr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(doubleArray34);
    }

    @Test
    public void test05018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05018");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        int int31 = fieldData27.getInsiderSells();
        double[] doubleArray32 = fieldData27.getOtherLtAssetsYr();
        long long33 = fieldData27.getVolumeMonth3m();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData34 = fieldData27.getShares();
        sharesFileData34.setFloatshr("ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n");
        java.lang.String str37 = sharesFileData34.getSector();
        sharesFileData34.setInsiderSells("ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n");
        int int40 = sharesFileData34.getInstSellShrs();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertNotNull(sharesFileData34);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
    }

    @Test
    public void test05019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05019");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setInstShareholders("");
        java.lang.String str3 = sharesFileData0.getTicker();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum4 = sharesFileData0.getExchange();
        sharesFileData0.setInstSellShrs("data/BigDB/");
        sharesFileData0.setInstBuyShrs("ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : NONE\r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n");
        sharesFileData0.setInstSellShrs("out/BigDB/100/Q10/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n-fundamental-data-100Q10.Cash File Data");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(exchEnum4);
    }

    @Test
    public void test05020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05020");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        double[] doubleArray31 = fieldData27.getInventoryQtr();
        double[] doubleArray32 = fieldData27.getBvpsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData33 = fieldData27.getCashData();
        double[] doubleArray34 = fieldData27.getCapExQtr();
        double[] doubleArray35 = fieldData27.getLtInvestQtr();
        double[] doubleArray36 = fieldData27.getEpsDilYr();
        int int37 = fieldData27.getInsiderSells();
        java.lang.String str38 = fieldData27.getSnpIndexStr();
        int int39 = fieldData27.getInsiderBuyShrs();
        int int40 = fieldData27.getNumEmployees();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNotNull(cashFileData33);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(doubleArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
    }

    @Test
    public void test05021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05021");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getOtherLtAssetsQtr();
        double[] doubleArray30 = fieldData27.getTotalOpExpYr();
        double double31 = fieldData27.getEpsY0();
        double[] doubleArray32 = fieldData27.getIncPrimaryEpsQtr();
        double[] doubleArray33 = fieldData27.getLiabEquityYr();
        boolean boolean34 = fieldData27.isDrp();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData35 = fieldData27.getCashData();
        double[] doubleArray36 = fieldData27.getIntExpNonOpYr();
        java.lang.String str37 = fieldData27.getWeb();
        double[] doubleArray38 = fieldData27.getStDebtYr();
        double[] doubleArray39 = fieldData27.getIntExpNonOpQtr();
        double[] doubleArray40 = fieldData27.getIncAfterTaxYr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(cashFileData35);
        org.junit.Assert.assertNull(doubleArray36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(doubleArray38);
        org.junit.Assert.assertNull(doubleArray39);
        org.junit.Assert.assertNull(doubleArray40);
    }

    @Test
    public void test05022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05022");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        boolean boolean29 = fieldData27.isDrp();
        double[] doubleArray30 = fieldData27.getCashFromOpsQtr();
        double[] doubleArray31 = fieldData27.getInventoryYr();
        double[] doubleArray32 = fieldData27.getOtherCurrLiabYr();
        double[] doubleArray33 = fieldData27.getStInvestYr();
        double[] doubleArray34 = fieldData27.getUnusualIncYr();
        int int35 = fieldData27.getNumEmployees();
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData36 = fieldData27.getEstimateData();
        java.lang.String str37 = estimateFileData36.toString();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(estimateFileData36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
    }

    @Test
    public void test05023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05023");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray4 = balSheetFileData1.getLtInvestQtr();
        double[] doubleArray5 = balSheetFileData1.getTotalAssetsYr();
        double[] doubleArray6 = balSheetFileData1.getOtherCurrLiabQtr();
        double[] doubleArray7 = balSheetFileData1.getLiabEquityYr();
        double[] doubleArray8 = balSheetFileData1.getNetFixedAssetsQtr();
        double[] doubleArray9 = balSheetFileData1.getTotalLiabYr();
        java.lang.String str10 = balSheetFileData1.getName();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertNull(doubleArray9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test05024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05024");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray4 = balSheetFileData1.getLtInvestQtr();
        double[] doubleArray5 = balSheetFileData1.getOtherLtAssetsYr();
        double[] doubleArray6 = balSheetFileData1.getCurrLiabQtr();
        double[] doubleArray7 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray8 = balSheetFileData1.getTotalLiabYr();
        double[] doubleArray9 = balSheetFileData1.getLtDebtYr();
        double[] doubleArray10 = balSheetFileData1.getTotalLiabQtr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertNull(doubleArray9);
        org.junit.Assert.assertNull(doubleArray10);
    }

    @Test
    public void test05025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05025");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        double[] doubleArray28 = fieldData27.getTotalOpExpYr();
        double[] doubleArray29 = fieldData27.getEpsDilYr();
        double[] doubleArray30 = fieldData27.getAdjToIncQtr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(doubleArray28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
    }

    @Test
    public void test05026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05026");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray4 = balSheetFileData1.getLtInvestQtr();
        double[] doubleArray5 = balSheetFileData1.getTotalAssetsYr();
        double[] doubleArray6 = balSheetFileData1.getNetFixedAssetsYr();
        double[] doubleArray7 = balSheetFileData1.getCurrAssetsQtr();
        double[] doubleArray8 = balSheetFileData1.getBvpsYr();
        double[] doubleArray9 = balSheetFileData1.getBvpsQtr();
        double[] doubleArray10 = balSheetFileData1.getOtherLtAssetsYr();
        double[] doubleArray11 = balSheetFileData1.getCurrLiabQtr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertNull(doubleArray9);
        org.junit.Assert.assertNull(doubleArray10);
        org.junit.Assert.assertNull(doubleArray11);
    }

    @Test
    public void test05027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05027");
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData0);
        double[] doubleArray2 = incSheetFileData1.getGrossIncYr();
        double[] doubleArray3 = incSheetFileData1.getIncTaxQtr();
        double[] doubleArray4 = incSheetFileData1.getRdYr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
    }

    @Test
    public void test05028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05028");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getStDebtQtr();
        double[] doubleArray30 = fieldData27.getEpsContQtr();
        double[] doubleArray31 = fieldData27.getEpsYr();
        java.lang.String str32 = fieldData27.getDowIndexStr();
        double[] doubleArray33 = fieldData27.getDepreciationQtr();
        java.lang.String str34 = fieldData27.getCountry();
        double double35 = fieldData27.getEpsY0();
        int int36 = fieldData27.getYear();
        double[] doubleArray37 = fieldData27.getStDebtYr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        org.junit.Assert.assertNull(doubleArray37);
    }

    @Test
    public void test05029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05029");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setInstShareholders("");
        sharesFileData0.setVolume3m("");
        sharesFileData0.setDollar3m("");
        int int7 = sharesFileData0.getInsiderBuyShrs();
        sharesFileData0.setVolume10d("hi!");
        int int10 = sharesFileData0.getInsiderBuys();
        sharesFileData0.setInsiderBuys("ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : NONE\r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData13 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData(sharesFileData0);
        double double14 = sharesFileData0.getInsiderNetPercentOutstanding();
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
    }

    @Test
    public void test05030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05030");
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData0);
        double[] doubleArray2 = incSheetFileData1.getGrossIncQtr();
        double[] doubleArray3 = incSheetFileData1.getRdQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum4 = incSheetFileData1.getExchange();
        double[] doubleArray5 = incSheetFileData1.getIncTaxQtr();
        double[] doubleArray6 = incSheetFileData1.getPreTaxIncYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData7 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData1);
        double[] doubleArray8 = incSheetFileData1.getNetIncYr();
        java.lang.String str9 = incSheetFileData1.toDbOutput();
        double[] doubleArray10 = incSheetFileData1.getIncAfterTaxQtr();
        double[] doubleArray11 = incSheetFileData1.getSalesYr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(exchEnum4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(doubleArray10);
        org.junit.Assert.assertNull(doubleArray11);
    }

    @Test
    public void test05031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05031");
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData((int) (byte) 10, (int) (byte) 100);
    }

    @Test
    public void test05032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05032");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getPrefStockYr();
        double[] doubleArray30 = fieldData27.getInventoryQtr();
        double[] doubleArray31 = fieldData27.getEpsYr();
        double[] doubleArray32 = fieldData27.getCogsYr();
        double double33 = fieldData27.getMktCap();
        int int34 = fieldData27.getNumEmployees();
        double[] doubleArray35 = fieldData27.getCashFromOpsQtr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNull(doubleArray35);
    }

    @Test
    public void test05033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05033");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getOtherLtAssetsQtr();
        double[] doubleArray30 = fieldData27.getTotalOpExpYr();
        double double31 = fieldData27.getEpsY0();
        double[] doubleArray32 = fieldData27.getIncPrimaryEpsQtr();
        double[] doubleArray33 = fieldData27.getLiabEquityYr();
        boolean boolean34 = fieldData27.isDrp();
        double[] doubleArray35 = fieldData27.getSalesYr();
        double[] doubleArray36 = fieldData27.getUnusualIncQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData37 = fieldData27.getShares();
        double double38 = sharesFileData37.getInstOwnership();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(doubleArray36);
        org.junit.Assert.assertNotNull(sharesFileData37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
    }

    @Test
    public void test05034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05034");
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData((int) ' ', 0);
        long long3 = fieldData2.getVolume10d();
        double[] doubleArray4 = fieldData2.getDepreciationYr();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(doubleArray4);
    }

    @Test
    public void test05035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05035");
        java.util.List<net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData> fieldDataList2 = net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData.getQFromMemory((int) (byte) -1, 1);
        org.junit.Assert.assertNotNull(fieldDataList2);
    }

    @Test
    public void test05036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05036");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        double[] doubleArray31 = fieldData27.getCurrAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData32 = fieldData27.getBalSheetData();
        java.lang.String str33 = balSheetFileData32.getExchange();
        double[] doubleArray34 = balSheetFileData32.getOtherLtAssetsQtr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNotNull(balSheetFileData32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(doubleArray34);
    }

    @Test
    public void test05037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05037");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        double double1 = sharesFileData0.getInsiderOwnership();
        sharesFileData0.setInstBuyShrs("hi!");
        double double4 = sharesFileData0.getDollar3m();
        java.lang.String str5 = sharesFileData0.getIndustry();
        sharesFileData0.setInstSellShrs("out/BigDB/100/Q10/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n-fundamental-data-100Q10.Cash File Data");
        double double8 = sharesFileData0.getBeta();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    }

    @Test
    public void test05038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05038");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray4 = balSheetFileData1.getLtInvestQtr();
        double[] doubleArray5 = balSheetFileData1.getTotalAssetsYr();
        double[] doubleArray6 = balSheetFileData1.getStInvestYr();
        java.lang.String str7 = balSheetFileData1.getTicker();
        double[] doubleArray8 = balSheetFileData1.getTotalAssetsQtr();
        java.lang.String str9 = balSheetFileData1.getIndustry();
        double[] doubleArray10 = balSheetFileData1.getTotalAssetsQtr();
        double[] doubleArray11 = balSheetFileData1.getEquityQtr();
        double[] doubleArray12 = balSheetFileData1.getStInvestQtr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(doubleArray10);
        org.junit.Assert.assertNull(doubleArray11);
        org.junit.Assert.assertNull(doubleArray12);
    }

    @Test
    public void test05039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05039");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        boolean boolean29 = fieldData27.isDrp();
        double[] doubleArray30 = fieldData27.getCashFromOpsQtr();
        double[] doubleArray31 = fieldData27.getInventoryYr();
        double[] doubleArray32 = fieldData27.getOtherCurrLiabYr();
        double[] doubleArray33 = fieldData27.getIncPrimaryEpsQtr();
        double double34 = fieldData27.getFloatshr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData35 = fieldData27.getShares();
        int int36 = fieldData27.getInstBuyShrs();
        double double37 = fieldData27.getEpsY2();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SnpEnum snpEnum38 = fieldData27.getSnpIndex();
        double double39 = fieldData27.getEpsY2();
        double[] doubleArray40 = fieldData27.getCurrAssetsYr();
        double[] doubleArray41 = fieldData27.getEpsDilContYr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(sharesFileData35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNull(snpEnum38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNull(doubleArray40);
        org.junit.Assert.assertNull(doubleArray41);
    }

    @Test
    public void test05040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05040");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double[] doubleArray30 = fieldData27.getDepreciationYr();
        java.lang.String str31 = fieldData27.getSector();
        double[] doubleArray32 = fieldData27.getStInvestYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData33 = fieldData27.getBalSheetData();
        double[] doubleArray34 = balSheetFileData33.getStDebtYr();
        double[] doubleArray35 = balSheetFileData33.getOtherCurrAssetsQtr();
        double[] doubleArray36 = balSheetFileData33.getLtInvestYr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNotNull(balSheetFileData33);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(doubleArray36);
    }

    @Test
    public void test05041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05041");
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData0);
        double[] doubleArray2 = incSheetFileData1.getGrossIncQtr();
        double[] doubleArray3 = incSheetFileData1.getNetIncYr();
        double[] doubleArray4 = incSheetFileData1.getCogsYr();
        double[] doubleArray5 = incSheetFileData1.getSalesQtr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
    }

    @Test
    public void test05042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05042");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray4 = balSheetFileData1.getLtInvestQtr();
        double[] doubleArray5 = balSheetFileData1.getLiabEquityQtr();
        double[] doubleArray6 = balSheetFileData1.getBvpsYr();
        double[] doubleArray7 = balSheetFileData1.getOtherCurrAssetsQtr();
        double[] doubleArray8 = balSheetFileData1.getOtherCurrAssetsYr();
        double[] doubleArray9 = balSheetFileData1.getAcctRxQtr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertNull(doubleArray9);
    }

    @Test
    public void test05043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05043");
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData0);
        double[] doubleArray2 = incSheetFileData1.getGrossIncQtr();
        double[] doubleArray3 = incSheetFileData1.getAdjToIncYr();
        double[] doubleArray4 = incSheetFileData1.getAdjToIncQtr();
        double[] doubleArray5 = incSheetFileData1.getOtherIncQtr();
        double[] doubleArray6 = incSheetFileData1.getIntExpNonOpYr();
        java.lang.String str7 = incSheetFileData1.toString();
        double[] doubleArray8 = incSheetFileData1.getGrossOpIncQtr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(doubleArray8);
    }

    @Test
    public void test05044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05044");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        double[] doubleArray28 = fieldData27.getTotalOpExpYr();
        double[] doubleArray29 = fieldData27.getEpsDilYr();
        java.lang.String str30 = fieldData27.getCity();
        double[] doubleArray31 = fieldData27.getDepreciationYr();
        double[] doubleArray32 = fieldData27.getCurrAssetsQtr();
        double[] doubleArray33 = fieldData27.getCogsYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData34 = fieldData27.getBalSheetData();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(doubleArray28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNotNull(balSheetFileData34);
    }

    @Test
    public void test05045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05045");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray4 = balSheetFileData1.getInventoryYr();
        double[] doubleArray5 = balSheetFileData1.getCurrAssetsYr();
        double[] doubleArray6 = balSheetFileData1.getAcctPayableYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData7 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData8 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData7);
        companyFileData8.setNumEmployees("hi!");
        java.lang.String str11 = companyFileData8.getPhone();
        java.lang.String str12 = companyFileData8.getName();
        java.lang.String str13 = companyFileData8.getSector();
        companyFileData8.setWeb("out/BigDB/100/Q10/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n-fundamental-data-100Q10.Cash File Data");
        java.lang.String str16 = companyFileData8.getTicker();
        balSheetFileData1.setNameFields(companyFileData8);
        java.lang.String str18 = companyFileData8.getName();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test05046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05046");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        companyFileData1.setNumEmployees("hi!");
        java.lang.String str4 = companyFileData1.getPhone();
        java.lang.String str5 = companyFileData1.getName();
        companyFileData1.setNumEmployees("Cash File Data");
        companyFileData1.setTicker("out/BigDB/1/Q97/  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n-fundamental-data-1Q97.hi!");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test05047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05047");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        double[] doubleArray31 = fieldData27.getInventoryQtr();
        double[] doubleArray32 = fieldData27.getBvpsQtr();
        double double33 = fieldData27.getEpsQ1();
        double[] doubleArray34 = fieldData27.getOtherLtLiabYr();
        double[] doubleArray35 = fieldData27.getIncAfterTaxQtr();
        int int36 = fieldData27.getInsiderNetTrades();
        double[] doubleArray37 = fieldData27.getTotalOpExpYr();
        double double38 = fieldData27.getEpsY1();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(doubleArray37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
    }

    @Test
    public void test05048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05048");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData4 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList2);
        double[] doubleArray5 = incSheetFileData4.getEpsDilContYr();
        double[] doubleArray6 = incSheetFileData4.getRdQtr();
        double[] doubleArray7 = incSheetFileData4.getDepreciationYr();
        double[] doubleArray8 = incSheetFileData4.getIncAfterTaxQtr();
        double[] doubleArray9 = incSheetFileData4.getIncTaxYr();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(incSheetFileData4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertNull(doubleArray9);
    }

    @Test
    public void test05049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05049");
        net.ajaskey.market.tools.SIP.BigDB.dataio.FiletypeEnum filetypeEnum2 = null;
        java.util.List<net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData> fieldDataList3 = net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData.getQFromDb((int) (short) 0, (int) (short) 0, filetypeEnum2);
        org.junit.Assert.assertNull(fieldDataList3);
    }

    @Test
    public void test05050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05050");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getStDebtQtr();
        double[] doubleArray30 = fieldData27.getEpsContQtr();
        double[] doubleArray31 = fieldData27.getOtherLtAssetsYr();
        double[] doubleArray32 = fieldData27.getEpsDilContQtr();
        net.ajaskey.common.DateTime dateTime33 = fieldData27.getLatestQtrEps();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(dateTime33);
    }

    @Test
    public void test05051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05051");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setInstShareholders("");
        java.lang.String str3 = sharesFileData0.getTicker();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum4 = sharesFileData0.getExchange();
        java.lang.String str5 = sharesFileData0.toDbOutput();
        java.lang.String str6 = sharesFileData0.getName();
        sharesFileData0.setInstShareholders("out/BigDB/1/Q10/hi!-fundamental-data-1Q10.ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n");
        int int9 = sharesFileData0.getInstBuyShrs();
        double[] doubleArray10 = sharesFileData0.getSharesQ();
        sharesFileData0.setFromReport((int) ' ', (int) ' ');
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(exchEnum4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n" + "'", str5, "  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0]");
    }

    @Test
    public void test05052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05052");
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData0);
        double[] doubleArray2 = incSheetFileData1.getGrossIncQtr();
        double[] doubleArray3 = incSheetFileData1.getRdQtr();
        double[] doubleArray4 = incSheetFileData1.getGrossOpIncYr();
        double[] doubleArray5 = incSheetFileData1.getIntExpNonOpYr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
    }

    @Test
    public void test05053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05053");
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData((int) (byte) 100, 6);
        double[] doubleArray3 = fieldData2.getSalesYr();
        org.junit.Assert.assertNull(doubleArray3);
    }

    @Test
    public void test05054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05054");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray4 = balSheetFileData1.getNetFixedAssetsYr();
        double[] doubleArray5 = balSheetFileData1.getCurrAssetsYr();
        double[] doubleArray6 = balSheetFileData1.getInventoryQtr();
        double[] doubleArray7 = balSheetFileData1.getBvpsQtr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
    }

    @Test
    public void test05055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05055");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        int int31 = fieldData27.getInsiderSells();
        double[] doubleArray32 = fieldData27.getOtherLtAssetsYr();
        long long33 = fieldData27.getVolumeMonth3m();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData34 = fieldData27.getShares();
        double[] doubleArray35 = fieldData27.getOtherLtAssetsQtr();
        double[] doubleArray36 = fieldData27.getEpsQtr();
        double[] doubleArray37 = fieldData27.getOtherCurrLiabQtr();
        java.lang.String str38 = fieldData27.getCountry();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertNotNull(sharesFileData34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(doubleArray36);
        org.junit.Assert.assertNull(doubleArray37);
        org.junit.Assert.assertNull(str38);
    }

    @Test
    public void test05056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05056");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        boolean boolean29 = fieldData27.isDrp();
        double double30 = fieldData27.getBeta();
        double[] doubleArray31 = fieldData27.getNetIncYr();
        double[] doubleArray32 = fieldData27.getEpsQtr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
    }

    @Test
    public void test05057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05057");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        java.lang.String str2 = companyFileData1.getIndustry();
        companyFileData1.setSnpIndex("");
        java.lang.String str5 = companyFileData1.toDbOuput();
        companyFileData1.setSnpIndex("out/BigDB/100/Q100/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : NONE\r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : NONE\r\n  phone     : null\r\n  web       : null\r\n-fundamental-data-100Q100.data/BigDB/");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : NONE\r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n" + "'", str5, "ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : NONE\r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n");
    }

    @Test
    public void test05058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05058");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getOtherLtAssetsQtr();
        double[] doubleArray30 = fieldData27.getTotalOpExpYr();
        double[] doubleArray31 = fieldData27.getEquityYr();
        double[] doubleArray32 = fieldData27.getDividendYr();
        double[] doubleArray33 = fieldData27.getAcctPayableYr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
    }

    @Test
    public void test05059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05059");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData4 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList2);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData5 = net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData.readFromDb((java.util.List<java.lang.String>) strList2);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData6 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData(cashFileData5);
        double[] doubleArray7 = cashFileData5.getCapExQtr();
        java.lang.String str8 = cashFileData5.getTicker();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData9 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData(cashFileData5);
        java.lang.String str10 = cashFileData5.getTicker();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData11 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData(cashFileData5);
        java.lang.String str12 = cashFileData5.toDbOutput();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(incSheetFileData4);
        org.junit.Assert.assertNotNull(cashFileData5);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test05060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05060");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        java.lang.String str2 = companyFileData1.getIndustry();
        companyFileData1.setSnpIndex("");
        companyFileData1.setPhone("hi!");
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum7 = companyFileData1.getExchange();
        companyFileData1.setDrp("Cash File Data");
        java.lang.String str10 = companyFileData1.getPhone();
        java.lang.String str11 = companyFileData1.getStreet();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData12 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData13 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData12);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData14 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str15 = estimateFileData14.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData16 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData16.setInsiderNetPercentOutstanding("");
        double[] doubleArray19 = sharesFileData16.getSharesQ();
        sharesFileData16.setInsiderBuys("");
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData26 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList24);
        double[] doubleArray27 = incSheetFileData26.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData28 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData29 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData28);
        double[] doubleArray30 = balSheetFileData29.getOtherLtLiabYr();
        double[] doubleArray31 = balSheetFileData29.getStDebtQtr();
        double[] doubleArray32 = balSheetFileData29.getInventoryYr();
        java.lang.String str33 = balSheetFileData29.toString();
        double[] doubleArray34 = balSheetFileData29.getNetFixedAssetsYr();
        double[] doubleArray35 = balSheetFileData29.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData36 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData39 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData13, estimateFileData14, sharesFileData16, incSheetFileData26, balSheetFileData29, cashFileData36, (int) (short) 100, (int) (byte) 100);
        java.lang.String str40 = fieldData39.getStreet();
        double[] doubleArray41 = fieldData39.getTotalOpExpQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData42 = fieldData39.getCashData();
        java.lang.String str43 = fieldData39.getIndustry();
        double[] doubleArray44 = fieldData39.getEpsYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData45 = fieldData39.getEstimateData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData46 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData46.setInstShareholders("");
        sharesFileData46.setVolume3m("");
        sharesFileData46.setDollar3m("");
        int int53 = sharesFileData46.getInsiderBuyShrs();
        sharesFileData46.setVolume10d("hi!");
        java.lang.String str56 = sharesFileData46.getName();
        sharesFileData46.setInsiderSellShrs("out/BigDB/");
        java.lang.String str59 = sharesFileData46.getSector();
        java.lang.String str60 = sharesFileData46.getSector();
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData61 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData62 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData61);
        double[] doubleArray63 = incSheetFileData62.getGrossIncQtr();
        double[] doubleArray64 = incSheetFileData62.getAdjToIncYr();
        double[] doubleArray65 = incSheetFileData62.getAdjToIncQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum66 = incSheetFileData62.getExchange();
        double[] doubleArray67 = incSheetFileData62.getSalesQtr();
        double[] doubleArray68 = incSheetFileData62.getEpsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData69 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData70 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData69);
        double[] doubleArray71 = balSheetFileData70.getOtherLtLiabYr();
        double[] doubleArray72 = balSheetFileData70.getLiabEquityYr();
        double[] doubleArray73 = balSheetFileData70.getInventoryYr();
        java.lang.String str74 = balSheetFileData70.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData75 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData78 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData45, sharesFileData46, incSheetFileData62, balSheetFileData70, cashFileData75, (int) (byte) 100, (int) (byte) 0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData79 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData(estimateFileData45);
        java.lang.String str80 = estimateFileData79.getIndustry();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(exchEnum7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(incSheetFileData26);
        org.junit.Assert.assertNull(doubleArray27);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(doubleArray41);
        org.junit.Assert.assertNotNull(cashFileData42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(doubleArray44);
        org.junit.Assert.assertNotNull(estimateFileData45);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(doubleArray63);
        org.junit.Assert.assertNull(doubleArray64);
        org.junit.Assert.assertNull(doubleArray65);
        org.junit.Assert.assertNull(exchEnum66);
        org.junit.Assert.assertNull(doubleArray67);
        org.junit.Assert.assertNull(doubleArray68);
        org.junit.Assert.assertNull(doubleArray71);
        org.junit.Assert.assertNull(doubleArray72);
        org.junit.Assert.assertNull(doubleArray73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertNull(str80);
    }

    @Test
    public void test05061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05061");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        java.lang.String str2 = companyFileData1.getIndustry();
        companyFileData1.setSnpIndex("");
        java.lang.String str5 = companyFileData1.toDbOuput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData6 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData7 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData6);
        java.lang.String str8 = companyFileData7.getZip();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData9 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData10 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData9);
        java.lang.String str11 = companyFileData10.getIndustry();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData16 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList14);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData17 = net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData.readFromDb((java.util.List<java.lang.String>) strList14);
        java.util.List<java.lang.String> strList18 = companyFileData10.set((java.util.List<java.lang.String>) strList14);
        java.util.List<java.lang.String> strList19 = companyFileData7.set((java.util.List<java.lang.String>) strList14);
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData20 = net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData.readFromDb(strList19);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData21 = net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData.readFromDb(strList19);
        java.util.List<java.lang.String> strList22 = companyFileData1.set(strList19);
        companyFileData1.setNumEmployees("out/BigDB/100/Q100/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : NONE\r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : NONE\r\n  phone     : null\r\n  web       : null\r\n-fundamental-data-100Q100.data/BigDB/");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : NONE\r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n" + "'", str5, "ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : NONE\r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(incSheetFileData16);
        org.junit.Assert.assertNotNull(cashFileData17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(sharesFileData20);
        org.junit.Assert.assertNotNull(cashFileData21);
        org.junit.Assert.assertNotNull(strList22);
    }

    @Test
    public void test05062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05062");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        java.lang.String str2 = companyFileData1.getIndustry();
        java.lang.String str3 = companyFileData1.getState();
        companyFileData1.setPhone("  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        java.lang.String str6 = companyFileData1.getName();
        int int7 = companyFileData1.getNumEmployees();
        companyFileData1.setSnpIndex("ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : NONE\r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : NONE\r\n  phone     : null\r\n  web       : null\r\n");
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData10 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str11 = estimateFileData10.getName();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum12 = estimateFileData10.getExchange();
        java.lang.String str13 = estimateFileData10.getSector();
        double double14 = estimateFileData10.getEpsY1();
        net.ajaskey.common.DateTime dateTime15 = estimateFileData10.getCurrFiscalYear();
        net.ajaskey.common.DateTime dateTime16 = estimateFileData10.getLatestQtrEps();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData17.setInstShareholders("");
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum20 = sharesFileData17.getExchange();
        sharesFileData17.setVolume3m("  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        int int23 = sharesFileData17.getInsiderSells();
        int int24 = sharesFileData17.getInstBuyShrs();
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData25 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData26 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData25);
        double[] doubleArray27 = incSheetFileData26.getGrossIncQtr();
        double[] doubleArray28 = incSheetFileData26.getAdjToIncYr();
        double[] doubleArray29 = incSheetFileData26.getAdjToIncQtr();
        double[] doubleArray30 = incSheetFileData26.getEpsYr();
        double[] doubleArray31 = incSheetFileData26.getNetIncYr();
        double[] doubleArray32 = incSheetFileData26.getTotalOpExpYr();
        double[] doubleArray33 = incSheetFileData26.getEpsContQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData34 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData35 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData34);
        double[] doubleArray36 = balSheetFileData35.getOtherLtLiabYr();
        java.lang.String str37 = balSheetFileData35.getIndustry();
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData42 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList40);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData43 = net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData.readFromDb((java.util.List<java.lang.String>) strList40);
        java.lang.String str44 = cashFileData43.getTicker();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData47 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData10, sharesFileData17, incSheetFileData26, balSheetFileData35, cashFileData43, (int) 'a', (int) (short) 100);
        double[] doubleArray48 = fieldData47.getSharesQ();
        java.lang.String str49 = fieldData47.getSnpIndexStr();
        double[] doubleArray50 = fieldData47.getIntExpYr();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(exchEnum12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNull(dateTime15);
        org.junit.Assert.assertNull(dateTime16);
        org.junit.Assert.assertNull(exchEnum20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(doubleArray27);
        org.junit.Assert.assertNull(doubleArray28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(doubleArray36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(incSheetFileData42);
        org.junit.Assert.assertNotNull(cashFileData43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "NONE" + "'", str49, "NONE");
        org.junit.Assert.assertNull(doubleArray50);
    }

    @Test
    public void test05063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05063");
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str1 = estimateFileData0.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum2 = estimateFileData0.getExchange();
        double double3 = estimateFileData0.getEpsQ1();
        java.lang.String str4 = estimateFileData0.getName();
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData5 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData(estimateFileData0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNull(exchEnum2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test05064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05064");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getStDebtQtr();
        double[] doubleArray30 = fieldData27.getLtDebtYr();
        double[] doubleArray31 = fieldData27.getTotalOpExpYr();
        fieldData27.setQuarter((int) '#');
        double[] doubleArray34 = fieldData27.getEpsContQtr();
        double double35 = fieldData27.getInsiderNetPercentOutstanding();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
    }

    @Test
    public void test05065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05065");
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData0);
        double[] doubleArray2 = incSheetFileData1.getGrossIncQtr();
        double[] doubleArray3 = incSheetFileData1.getAdjToIncYr();
        double[] doubleArray4 = incSheetFileData1.getIntExpNonOpQtr();
        double[] doubleArray5 = incSheetFileData1.getAdjToIncYr();
        double[] doubleArray6 = incSheetFileData1.getEpsYr();
        double[] doubleArray7 = incSheetFileData1.getDividendYr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
    }

    @Test
    public void test05066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05066");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData1 = net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData.find("out/BigDB/100/Q10/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n-fundamental-data-100Q10.Cash File Data");
        org.junit.Assert.assertNull(cashFileData1);
    }

    @Test
    public void test05067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05067");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        double[] doubleArray31 = fieldData27.getInventoryQtr();
        double[] doubleArray32 = fieldData27.getLtInvestYr();
        double[] doubleArray33 = fieldData27.getDividendQtr();
        java.lang.String str34 = fieldData27.getZip();
        int int35 = fieldData27.getInstSellShrs();
        double[] doubleArray36 = fieldData27.getOtherLtAssetsQtr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(doubleArray36);
    }

    @Test
    public void test05068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05068");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        double[] doubleArray31 = fieldData27.getInventoryQtr();
        double[] doubleArray32 = fieldData27.getBvpsQtr();
        double double33 = fieldData27.getEpsQ1();
        double[] doubleArray34 = fieldData27.getNetIncQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData35 = fieldData27.getShares();
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData36 = fieldData27.getIncSheetData();
        double[] doubleArray37 = fieldData27.getOtherCurrLiabYr();
        int int38 = fieldData27.getInstBuyShrs();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNotNull(sharesFileData35);
        org.junit.Assert.assertNotNull(incSheetFileData36);
        org.junit.Assert.assertNull(doubleArray37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
    }

    @Test
    public void test05069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05069");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setInstShareholders("");
        sharesFileData0.setFloatshr("hi!");
        sharesFileData0.setMktCap("Cash File Data");
        sharesFileData0.setFromReport((int) 'a', 6);
        double double10 = sharesFileData0.getBeta();
        java.lang.String str11 = sharesFileData0.toDbOutput();
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n" + "'", str11, "  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
    }

    @Test
    public void test05070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05070");
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData0);
        double[] doubleArray2 = incSheetFileData1.getGrossIncQtr();
        double[] doubleArray3 = incSheetFileData1.getEpsDilContYr();
        double[] doubleArray4 = incSheetFileData1.getTotalOpExpYr();
        java.lang.String str5 = incSheetFileData1.toDbOutput();
        java.lang.String str6 = incSheetFileData1.toDbOutput();
        double[] doubleArray7 = incSheetFileData1.getOtherIncQtr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(doubleArray7);
    }

    @Test
    public void test05071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05071");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getLiabEquityYr();
        double[] doubleArray4 = balSheetFileData1.getOtherCurrAssetsQtr();
        double[] doubleArray5 = balSheetFileData1.getOtherCurrLiabQtr();
        double[] doubleArray6 = balSheetFileData1.getLtDebtQtr();
        double[] doubleArray7 = balSheetFileData1.getCurrLiabQtr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
    }

    @Test
    public void test05072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05072");
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData0);
        double[] doubleArray2 = incSheetFileData1.getIncTaxQtr();
        java.lang.String str3 = incSheetFileData1.toDbOutput();
        double[] doubleArray4 = incSheetFileData1.getIncAfterTaxYr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(doubleArray4);
    }

    @Test
    public void test05073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05073");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        java.lang.String str2 = companyFileData1.getIndustry();
        java.lang.String str3 = companyFileData1.getState();
        companyFileData1.setPhone("  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        java.lang.String str6 = companyFileData1.getName();
        int int7 = companyFileData1.getNumEmployees();
        java.lang.String str8 = companyFileData1.getCity();
        companyFileData1.setDrp("ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n");
        companyFileData1.setCity("ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : NONE\r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n");
        companyFileData1.setCountry("ticker      : \r\n  name      : ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : Cash File Data\r\n  web       : null\r\n");
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!", "out/BigDB/", "NONE", "ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n", "NONE", "  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n", "Cash File Data" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData25 = net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData.readFromDb((java.util.List<java.lang.String>) strList23);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData26 = net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData.readFromDb((java.util.List<java.lang.String>) strList23);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData27 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList23);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData28 = net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData.readFromDb((java.util.List<java.lang.String>) strList23);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData29 = net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData.readFromDb((java.util.List<java.lang.String>) strList23);
        java.util.List<java.lang.String> strList30 = companyFileData1.set((java.util.List<java.lang.String>) strList23);
        java.lang.String str31 = companyFileData1.getStreet();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(cashFileData25);
        org.junit.Assert.assertNotNull(cashFileData26);
        org.junit.Assert.assertNotNull(incSheetFileData27);
        org.junit.Assert.assertNotNull(estimateFileData28);
        org.junit.Assert.assertNotNull(companyFileData29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNull(str31);
    }

    @Test
    public void test05074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05074");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        boolean boolean29 = fieldData27.isDrp();
        double double30 = fieldData27.getBeta();
        double[] doubleArray31 = fieldData27.getAcctRxQtr();
        double[] doubleArray32 = fieldData27.getBvpsQtr();
        double[] doubleArray33 = fieldData27.getDepreciationYr();
        double[] doubleArray34 = fieldData27.getEpsYr();
        double[] doubleArray35 = fieldData27.getCashQtr();
        double[] doubleArray36 = fieldData27.getSalesQtr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(doubleArray36);
    }

    @Test
    public void test05075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05075");
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData0);
        double[] doubleArray2 = incSheetFileData1.getIntExpQtr();
        java.lang.String str3 = incSheetFileData1.getIndustry();
        double[] doubleArray4 = incSheetFileData1.getUnusualIncYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData5 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData6 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData5);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData7 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str8 = estimateFileData7.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData9 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData9.setInsiderNetPercentOutstanding("");
        double[] doubleArray12 = sharesFileData9.getSharesQ();
        sharesFileData9.setInsiderBuys("");
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData19 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList17);
        double[] doubleArray20 = incSheetFileData19.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData21 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData22 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData21);
        double[] doubleArray23 = balSheetFileData22.getOtherLtLiabYr();
        double[] doubleArray24 = balSheetFileData22.getStDebtQtr();
        double[] doubleArray25 = balSheetFileData22.getInventoryYr();
        java.lang.String str26 = balSheetFileData22.toString();
        double[] doubleArray27 = balSheetFileData22.getNetFixedAssetsYr();
        double[] doubleArray28 = balSheetFileData22.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData29 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData32 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData6, estimateFileData7, sharesFileData9, incSheetFileData19, balSheetFileData22, cashFileData29, (int) (short) 100, (int) (byte) 100);
        java.lang.String str33 = fieldData32.getStreet();
        boolean boolean34 = fieldData32.isDrp();
        double[] doubleArray35 = fieldData32.getCashFromOpsQtr();
        double[] doubleArray36 = fieldData32.getInventoryYr();
        double[] doubleArray37 = fieldData32.getOtherCurrLiabYr();
        double[] doubleArray38 = fieldData32.getIncPrimaryEpsQtr();
        double double39 = fieldData32.getFloatshr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData40 = fieldData32.getShares();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData41 = fieldData32.getCompanyInfo();
        java.lang.String str42 = companyFileData41.getPhone();
        companyFileData41.setSnpIndex("ticker      : \r\n  name      : ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : Cash File Data\r\n  web       : null\r\n");
        incSheetFileData1.setNameFields(companyFileData41);
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum46 = incSheetFileData1.getExchange();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0]");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(incSheetFileData19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(doubleArray24);
        org.junit.Assert.assertNull(doubleArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNull(doubleArray27);
        org.junit.Assert.assertNull(doubleArray28);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(doubleArray36);
        org.junit.Assert.assertNull(doubleArray37);
        org.junit.Assert.assertNull(doubleArray38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(sharesFileData40);
        org.junit.Assert.assertNotNull(companyFileData41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(exchEnum46);
    }

    @Test
    public void test05076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05076");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getPrefStockYr();
        double[] doubleArray30 = fieldData27.getIncAfterTaxQtr();
        double[] doubleArray31 = fieldData27.getBvpsYr();
        double[] doubleArray32 = fieldData27.getGrossIncQtr();
        double[] doubleArray33 = fieldData27.getGoodwillQtr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
    }

    @Test
    public void test05077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05077");
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData0);
        double[] doubleArray2 = incSheetFileData1.getGrossIncQtr();
        double[] doubleArray3 = incSheetFileData1.getRdQtr();
        double[] doubleArray4 = incSheetFileData1.getAdjToIncYr();
        double[] doubleArray5 = incSheetFileData1.getPreTaxIncYr();
        double[] doubleArray6 = incSheetFileData1.getGrossIncYr();
        double[] doubleArray7 = incSheetFileData1.getEpsYr();
        double[] doubleArray8 = incSheetFileData1.getGrossOpIncYr();
        double[] doubleArray9 = incSheetFileData1.getTotalOpExpQtr();
        double[] doubleArray10 = incSheetFileData1.getTotalOpExpYr();
        java.lang.String str11 = incSheetFileData1.toDbOutput();
        double[] doubleArray12 = incSheetFileData1.getGrossIncQtr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertNull(doubleArray9);
        org.junit.Assert.assertNull(doubleArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(doubleArray12);
    }

    @Test
    public void test05078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05078");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        java.lang.String str2 = companyFileData1.getIndustry();
        java.lang.String str3 = companyFileData1.getState();
        companyFileData1.setPhone("  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        java.lang.String str6 = companyFileData1.getName();
        int int7 = companyFileData1.getNumEmployees();
        java.lang.String str8 = companyFileData1.getCity();
        java.lang.String str9 = companyFileData1.getState();
        companyFileData1.setTicker("out/BigDB/100/Q10/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n-fundamental-data-100Q10.Cash File Data");
        companyFileData1.setSector("out/BigDB/");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test05079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05079");
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum1 = estimateFileData0.getExchange();
        double double2 = estimateFileData0.getEpsY0();
        java.lang.String str3 = estimateFileData0.getIndustry();
        java.lang.String str4 = estimateFileData0.toString();
        double double5 = estimateFileData0.getEpsQ1();
        double double6 = estimateFileData0.getEpsQ0();
        double double7 = estimateFileData0.getEpsQ1();
        org.junit.Assert.assertNull(exchEnum1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    }

    @Test
    public void test05080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05080");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        java.lang.String str31 = fieldData27.getSic();
        double[] doubleArray32 = fieldData27.getEpsContQtr();
        double[] doubleArray33 = fieldData27.getAdjToIncYr();
        double[] doubleArray34 = fieldData27.getStInvestYr();
        double[] doubleArray35 = fieldData27.getAcctPayableYr();
        double double36 = fieldData27.getPrice52lo();
        java.lang.String str37 = fieldData27.getZip();
        double[] doubleArray38 = fieldData27.getEpsDilContQtr();
        double[] doubleArray39 = fieldData27.getCurrAssetsQtr();
        double[] doubleArray40 = fieldData27.getBvpsYr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(doubleArray38);
        org.junit.Assert.assertNull(doubleArray39);
        org.junit.Assert.assertNull(doubleArray40);
    }

    @Test
    public void test05081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05081");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getOtherLtAssetsQtr();
        double[] doubleArray30 = fieldData27.getTotalOpExpYr();
        double double31 = fieldData27.getEpsY0();
        double[] doubleArray32 = fieldData27.getIncPrimaryEpsQtr();
        double[] doubleArray33 = fieldData27.getLiabEquityYr();
        java.lang.String str34 = fieldData27.getCity();
        double[] doubleArray35 = fieldData27.getRdYr();
        double double36 = fieldData27.getEpsQ1();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
    }

    @Test
    public void test05082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05082");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getPrefStockYr();
        double double30 = fieldData27.getEpsY1();
        int int31 = fieldData27.getInsiderNetTrades();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
    }

    @Test
    public void test05083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05083");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray4 = balSheetFileData1.getInventoryYr();
        double[] doubleArray5 = balSheetFileData1.getCurrAssetsYr();
        double[] doubleArray6 = balSheetFileData1.getGoodwillYr();
        java.lang.String str7 = balSheetFileData1.toString();
        double[] doubleArray8 = balSheetFileData1.getPrefStockYr();
        double[] doubleArray9 = balSheetFileData1.getGoodwillYr();
        double[] doubleArray10 = balSheetFileData1.getNetFixedAssetsQtr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertNull(doubleArray9);
        org.junit.Assert.assertNull(doubleArray10);
    }

    @Test
    public void test05084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05084");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData.find("out/BigDB/-1/Q1/out/BigDB/97/Q0/out/BigDB/10/Q100/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n-fundamental-data-10Q100.NONE-fundamental-data-97Q0.hi!-fundamental-data--1Q1.");
        org.junit.Assert.assertNull(balSheetFileData1);
    }

    @Test
    public void test05085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05085");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setInstShareholders("");
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum3 = sharesFileData0.getExchange();
        sharesFileData0.setMktCap("  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        double double6 = sharesFileData0.getPrice52hi();
        sharesFileData0.setInsiderNetTrades("out/BigDB/10/Q100/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n-fundamental-data-10Q100.NONE");
        java.lang.String str9 = sharesFileData0.toString();
        sharesFileData0.setBeta("out/BigDB/10/Q100/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n-fundamental-data-10Q100.NONE");
        java.lang.String str12 = sharesFileData0.getIndustry();
        org.junit.Assert.assertNull(exchEnum3);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test05086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05086");
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData0);
        double[] doubleArray2 = incSheetFileData1.getEpsDilYr();
        double[] doubleArray3 = incSheetFileData1.getEpsDilContQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData4 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData5 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData4);
        double[] doubleArray6 = balSheetFileData5.getOtherLtLiabYr();
        double[] doubleArray7 = balSheetFileData5.getStDebtQtr();
        double[] doubleArray8 = balSheetFileData5.getInventoryYr();
        double[] doubleArray9 = balSheetFileData5.getCurrAssetsYr();
        double[] doubleArray10 = balSheetFileData5.getAcctPayableYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData11 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData12 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData11);
        companyFileData12.setNumEmployees("hi!");
        java.lang.String str15 = companyFileData12.getPhone();
        java.lang.String str16 = companyFileData12.getName();
        java.lang.String str17 = companyFileData12.getSector();
        companyFileData12.setWeb("out/BigDB/100/Q10/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n-fundamental-data-100Q10.Cash File Data");
        java.lang.String str20 = companyFileData12.getTicker();
        balSheetFileData5.setNameFields(companyFileData12);
        java.lang.String str22 = companyFileData12.getWeb();
        companyFileData12.setDowIndex("out/BigDB/10/Q100/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n-fundamental-data-10Q100.NONE");
        incSheetFileData1.setNameFields(companyFileData12);
        java.lang.String str26 = incSheetFileData1.toDbOutput();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertNull(doubleArray9);
        org.junit.Assert.assertNull(doubleArray10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "out/BigDB/100/Q10/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n-fundamental-data-100Q10.Cash File Data" + "'", str22, "out/BigDB/100/Q10/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n-fundamental-data-100Q10.Cash File Data");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
    }

    @Test
    public void test05087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05087");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        boolean boolean29 = fieldData27.isDrp();
        double double30 = fieldData27.getBeta();
        double[] doubleArray31 = fieldData27.getNetIncYr();
        net.ajaskey.common.DateTime dateTime32 = fieldData27.getCurrFiscalYear();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData33 = fieldData27.getShares();
        int int34 = sharesFileData33.getInstBuyShrs();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData35 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData36 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData35);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData37 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str38 = estimateFileData37.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData39 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData39.setInsiderNetPercentOutstanding("");
        double[] doubleArray42 = sharesFileData39.getSharesQ();
        sharesFileData39.setInsiderBuys("");
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData49 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList47);
        double[] doubleArray50 = incSheetFileData49.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData51 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData52 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData51);
        double[] doubleArray53 = balSheetFileData52.getOtherLtLiabYr();
        double[] doubleArray54 = balSheetFileData52.getStDebtQtr();
        double[] doubleArray55 = balSheetFileData52.getInventoryYr();
        java.lang.String str56 = balSheetFileData52.toString();
        double[] doubleArray57 = balSheetFileData52.getNetFixedAssetsYr();
        double[] doubleArray58 = balSheetFileData52.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData59 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData62 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData36, estimateFileData37, sharesFileData39, incSheetFileData49, balSheetFileData52, cashFileData59, (int) (short) 100, (int) (byte) 100);
        java.lang.String str63 = fieldData62.getStreet();
        double[] doubleArray64 = fieldData62.getTotalOpExpQtr();
        double double65 = fieldData62.getEpsY0();
        double[] doubleArray66 = fieldData62.getInventoryQtr();
        double[] doubleArray67 = fieldData62.getBvpsQtr();
        double double68 = fieldData62.getEpsQ1();
        double[] doubleArray69 = fieldData62.getNetIncQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData70 = fieldData62.getShares();
        int int71 = sharesFileData70.getInsiderSells();
        sharesFileData70.setInstShareholders("out/BigDB/10/Q100/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n-fundamental-data-10Q100.NONE");
        double[] doubleArray74 = sharesFileData70.getSharesY();
        sharesFileData33.setSharesQ(doubleArray74);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(dateTime32);
        org.junit.Assert.assertNotNull(sharesFileData33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0]");
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(incSheetFileData49);
        org.junit.Assert.assertNull(doubleArray50);
        org.junit.Assert.assertNull(doubleArray53);
        org.junit.Assert.assertNull(doubleArray54);
        org.junit.Assert.assertNull(doubleArray55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNull(doubleArray57);
        org.junit.Assert.assertNull(doubleArray58);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(doubleArray64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNull(doubleArray66);
        org.junit.Assert.assertNull(doubleArray67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNull(doubleArray69);
        org.junit.Assert.assertNotNull(sharesFileData70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0]");
    }

    @Test
    public void test05088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05088");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setInstShareholders("");
        java.lang.String str3 = sharesFileData0.getTicker();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum4 = sharesFileData0.getExchange();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum5 = sharesFileData0.getExchange();
        sharesFileData0.setInsiderNetTrades("hi!");
        int int8 = sharesFileData0.getInsiderSells();
        double double9 = sharesFileData0.getInsiderOwnership();
        sharesFileData0.setFloatshr("data/BigDB/");
        double double12 = sharesFileData0.getInsiderNetPercentOutstanding();
        java.lang.String str13 = sharesFileData0.getSector();
        int int14 = sharesFileData0.getInstSellShrs();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(exchEnum4);
        org.junit.Assert.assertNull(exchEnum5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test05089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05089");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        double[] doubleArray31 = fieldData27.getInventoryQtr();
        double[] doubleArray32 = fieldData27.getBvpsQtr();
        double double33 = fieldData27.getEpsQ1();
        double double34 = fieldData27.getInstOwnership();
        double[] doubleArray35 = fieldData27.getTotalOpExpYr();
        double[] doubleArray36 = fieldData27.getSalesQtr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(doubleArray36);
    }

    @Test
    public void test05090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05090");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        double[] doubleArray28 = incSheetFileData14.getAdjToIncYr();
        double[] doubleArray29 = incSheetFileData14.getEpsContQtr();
        double[] doubleArray30 = incSheetFileData14.getPreTaxIncYr();
        double[] doubleArray31 = incSheetFileData14.getEpsDilContYr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(doubleArray28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
    }

    @Test
    public void test05091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05091");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData30 = fieldData27.getCashData();
        double double31 = fieldData27.getEpsY0();
        double[] doubleArray32 = fieldData27.getNetIncQtr();
        fieldData27.setYear((int) '4');
        double[] doubleArray35 = fieldData27.getOtherLtAssetsYr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNotNull(cashFileData30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray35);
    }

    @Test
    public void test05092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05092");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setInstShareholders("");
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum3 = sharesFileData0.getExchange();
        sharesFileData0.setVolume3m("  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        sharesFileData0.setVolume10d("ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n");
        sharesFileData0.setFromReport((int) (byte) 0, (int) ' ');
        sharesFileData0.setInsiderBuys("ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n");
        sharesFileData0.setInstSellShrs("out/BigDB/0/Q97/ticker      : \r\n  name      : hi!\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : NONE\r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : hi!\r\n  phone     : data/BigDB/\r\n  web       : null\r\n-fundamental-data-0Q97.ticker      : \r\n  name      : hi!\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : NONE\r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : hi!\r\n  phone     : data/BigDB/\r\n  web       : null\r\n");
        int int15 = sharesFileData0.getInsiderBuyShrs();
        org.junit.Assert.assertNull(exchEnum3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test05093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05093");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray4 = balSheetFileData1.getLtInvestQtr();
        double[] doubleArray5 = balSheetFileData1.getTotalAssetsYr();
        double[] doubleArray6 = balSheetFileData1.getNetFixedAssetsYr();
        double[] doubleArray7 = balSheetFileData1.getLtInvestQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData8 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData9 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData8);
        companyFileData9.setNumEmployees("hi!");
        java.lang.String str12 = companyFileData9.getState();
        balSheetFileData1.setNameFields(companyFileData9);
        companyFileData9.setCountry("hi!");
        companyFileData9.setPhone("data/BigDB/");
        java.lang.String str18 = companyFileData9.getDowIndexStr();
        java.lang.String str19 = companyFileData9.toString();
        java.lang.String str20 = companyFileData9.getSic();
        companyFileData9.setSnpIndex("out/BigDB/10/Q0/hi!-fundamental-data-10Q0.out/BigDB/1/Q97/  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n-fundamental-data-1Q97.hi!");
        net.ajaskey.market.tools.SIP.BigDB.dataio.DowEnum dowEnum23 = companyFileData9.getDowIndex();
        java.lang.String str24 = companyFileData9.toString();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(dowEnum23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
    }

    @Test
    public void test05094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05094");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getStDebtQtr();
        double[] doubleArray30 = fieldData27.getEpsContQtr();
        double[] doubleArray31 = fieldData27.getOtherLtAssetsYr();
        double[] doubleArray32 = fieldData27.getNetIncYr();
        java.lang.String str33 = fieldData27.getCountry();
        double[] doubleArray34 = fieldData27.getEpsYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData35 = fieldData27.getCashData();
        int int36 = fieldData27.getInsiderBuys();
        double[] doubleArray37 = fieldData27.getIntExpNonOpQtr();
        double[] doubleArray38 = fieldData27.getNonrecurringItemsQtr();
        int int39 = fieldData27.getInsiderSellShrs();
        double[] doubleArray40 = fieldData27.getIntExpNonOpYr();
        double[] doubleArray41 = fieldData27.getOtherLtAssetsYr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNotNull(cashFileData35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(doubleArray37);
        org.junit.Assert.assertNull(doubleArray38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNull(doubleArray40);
        org.junit.Assert.assertNull(doubleArray41);
    }

    @Test
    public void test05095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05095");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setInstShareholders("");
        sharesFileData0.setVolume3m("");
        sharesFileData0.setDollar3m("");
        sharesFileData0.setDollar3m("hi!");
        double double9 = sharesFileData0.getPrice();
        double double10 = sharesFileData0.getInstOwnership();
        double double11 = sharesFileData0.getPrice();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData12 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData13 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData12);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData14 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str15 = estimateFileData14.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData16 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData16.setInsiderNetPercentOutstanding("");
        double[] doubleArray19 = sharesFileData16.getSharesQ();
        sharesFileData16.setInsiderBuys("");
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData26 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList24);
        double[] doubleArray27 = incSheetFileData26.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData28 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData29 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData28);
        double[] doubleArray30 = balSheetFileData29.getOtherLtLiabYr();
        double[] doubleArray31 = balSheetFileData29.getStDebtQtr();
        double[] doubleArray32 = balSheetFileData29.getInventoryYr();
        java.lang.String str33 = balSheetFileData29.toString();
        double[] doubleArray34 = balSheetFileData29.getNetFixedAssetsYr();
        double[] doubleArray35 = balSheetFileData29.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData36 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData39 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData13, estimateFileData14, sharesFileData16, incSheetFileData26, balSheetFileData29, cashFileData36, (int) (short) 100, (int) (byte) 100);
        java.lang.String str40 = fieldData39.getStreet();
        double[] doubleArray41 = fieldData39.getTotalOpExpQtr();
        double double42 = fieldData39.getEpsY0();
        java.lang.String str43 = fieldData39.getSic();
        double[] doubleArray44 = fieldData39.getAcctRxQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData45 = fieldData39.getShares();
        double[] doubleArray46 = fieldData39.getSharesY();
        sharesFileData0.setSharesQ(doubleArray46);
        double double48 = sharesFileData0.getInstOwnership();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData49 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData50 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData49);
        companyFileData50.setNumEmployees("hi!");
        java.lang.String str53 = companyFileData50.getPhone();
        java.lang.String str54 = companyFileData50.getIndustry();
        java.lang.String str55 = companyFileData50.toDbOuput();
        java.lang.String str56 = companyFileData50.getPhone();
        java.lang.String str57 = companyFileData50.getDowIndexStr();
        sharesFileData0.setNameFields(companyFileData50);
        double double59 = sharesFileData0.getInsiderOwnership();
        sharesFileData0.setInstBuyShrs("out/BigDB/10/Q100/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n-fundamental-data-10Q100.NONE");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData62 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData62.setInstShareholders("");
        java.lang.String str65 = sharesFileData62.getTicker();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum66 = sharesFileData62.getExchange();
        double double67 = sharesFileData62.getPrice();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData68 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData68.setInstShareholders("");
        sharesFileData68.setVolume3m("");
        sharesFileData68.setDollar3m("");
        sharesFileData68.setDollar3m("hi!");
        double double77 = sharesFileData68.getPrice();
        sharesFileData68.setFloatshr("Cash File Data");
        double[] doubleArray80 = sharesFileData68.getSharesY();
        sharesFileData62.setSharesQ(doubleArray80);
        sharesFileData0.setSharesQ(doubleArray80);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(incSheetFileData26);
        org.junit.Assert.assertNull(doubleArray27);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(doubleArray41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(doubleArray44);
        org.junit.Assert.assertNotNull(sharesFileData45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n" + "'", str55, "ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n");
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(exchEnum66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[0.0]");
    }

    @Test
    public void test05096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05096");
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum1 = estimateFileData0.getExchange();
        java.lang.String str2 = estimateFileData0.getIndustry();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum3 = estimateFileData0.getExchange();
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData(estimateFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum5 = estimateFileData0.getExchange();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass6 = exchEnum5.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(exchEnum1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(exchEnum3);
        org.junit.Assert.assertNull(exchEnum5);
    }

    @Test
    public void test05097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05097");
        net.ajaskey.market.tools.SIP.BigDB.dataio.FiletypeEnum filetypeEnum2 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData.setMemory((int) (byte) 10, (int) (short) -1, filetypeEnum2);
    }

    @Test
    public void test05098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05098");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        java.lang.String str2 = companyFileData1.getIndustry();
        java.lang.String str3 = companyFileData1.getState();
        companyFileData1.setPhone("  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        java.lang.String str6 = companyFileData1.getName();
        int int7 = companyFileData1.getNumEmployees();
        java.lang.String str8 = companyFileData1.getCity();
        companyFileData1.setDrp("ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n");
        companyFileData1.setCity("ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : NONE\r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n");
        companyFileData1.setCountry("ticker      : \r\n  name      : ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : Cash File Data\r\n  web       : null\r\n");
        companyFileData1.setTicker("ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : out/BigDB/1/Q10/hi!-fundamental-data-1Q10.ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n\r\n  employees : 0\r\n  snp index : NONE\r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n");
        companyFileData1.setName("ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test05099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05099");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData1);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData3 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str4 = estimateFileData3.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData5 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData5.setInsiderNetPercentOutstanding("");
        double[] doubleArray8 = sharesFileData5.getSharesQ();
        sharesFileData5.setInsiderBuys("");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData15 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList13);
        double[] doubleArray16 = incSheetFileData15.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData18 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData17);
        double[] doubleArray19 = balSheetFileData18.getOtherLtLiabYr();
        double[] doubleArray20 = balSheetFileData18.getStDebtQtr();
        double[] doubleArray21 = balSheetFileData18.getInventoryYr();
        java.lang.String str22 = balSheetFileData18.toString();
        double[] doubleArray23 = balSheetFileData18.getNetFixedAssetsYr();
        double[] doubleArray24 = balSheetFileData18.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData25 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData28 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData2, estimateFileData3, sharesFileData5, incSheetFileData15, balSheetFileData18, cashFileData25, (int) (short) 100, (int) (byte) 100);
        java.lang.String str29 = fieldData28.getStreet();
        double[] doubleArray30 = fieldData28.getGoodwillYr();
        double[] doubleArray31 = fieldData28.getInventoryYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData32 = fieldData28.getCashData();
        double[] doubleArray33 = fieldData28.getUnusualIncYr();
        net.ajaskey.common.DateTime dateTime34 = fieldData28.getCurrFiscalYear();
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData35 = fieldData28.getEstimateData();
        double double36 = estimateFileData35.getEpsY0();
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData37 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData(estimateFileData35);
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData38 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData38.setInstShareholders("");
        sharesFileData38.setVolume3m("");
        sharesFileData38.setDollar3m("");
        sharesFileData38.setDollar3m("hi!");
        double double47 = sharesFileData38.getPrice();
        java.lang.String str48 = sharesFileData38.toDbOutput();
        sharesFileData38.setMktCap("  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        long long51 = sharesFileData38.getVolume10d();
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData52 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData53 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData54 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData53);
        double[] doubleArray55 = balSheetFileData54.getOtherLtLiabYr();
        double[] doubleArray56 = balSheetFileData54.getStDebtQtr();
        double[] doubleArray57 = balSheetFileData54.getLtInvestQtr();
        double[] doubleArray58 = balSheetFileData54.getLiabEquityQtr();
        double[] doubleArray59 = balSheetFileData54.getCurrLiabYr();
        double[] doubleArray60 = balSheetFileData54.getLiabEquityQtr();
        java.lang.String str61 = balSheetFileData54.toString();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData62 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData63 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData62);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData64 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str65 = estimateFileData64.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData66 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData66.setInsiderNetPercentOutstanding("");
        double[] doubleArray69 = sharesFileData66.getSharesQ();
        sharesFileData66.setInsiderBuys("");
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList74 = new java.util.ArrayList<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData76 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList74);
        double[] doubleArray77 = incSheetFileData76.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData78 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData79 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData78);
        double[] doubleArray80 = balSheetFileData79.getOtherLtLiabYr();
        double[] doubleArray81 = balSheetFileData79.getStDebtQtr();
        double[] doubleArray82 = balSheetFileData79.getInventoryYr();
        java.lang.String str83 = balSheetFileData79.toString();
        double[] doubleArray84 = balSheetFileData79.getNetFixedAssetsYr();
        double[] doubleArray85 = balSheetFileData79.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData86 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData89 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData63, estimateFileData64, sharesFileData66, incSheetFileData76, balSheetFileData79, cashFileData86, (int) (short) 100, (int) (byte) 100);
        java.lang.String str90 = fieldData89.getStreet();
        double[] doubleArray91 = fieldData89.getTotalOpExpQtr();
        double double92 = fieldData89.getEpsY0();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData93 = fieldData89.getCashData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData94 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData(cashFileData93);
        double[] doubleArray95 = cashFileData94.getCashFromInvQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData98 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData0, estimateFileData37, sharesFileData38, incSheetFileData52, balSheetFileData54, cashFileData94, 100, (int) (byte) 10);
        double[] doubleArray99 = balSheetFileData54.getGoodwillYr();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0]");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(incSheetFileData15);
        org.junit.Assert.assertNull(doubleArray16);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertNull(doubleArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(doubleArray24);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNotNull(cashFileData32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(dateTime34);
        org.junit.Assert.assertNotNull(estimateFileData35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n" + "'", str48, "  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertNull(doubleArray55);
        org.junit.Assert.assertNull(doubleArray56);
        org.junit.Assert.assertNull(doubleArray57);
        org.junit.Assert.assertNull(doubleArray58);
        org.junit.Assert.assertNull(doubleArray59);
        org.junit.Assert.assertNull(doubleArray60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0]");
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(incSheetFileData76);
        org.junit.Assert.assertNull(doubleArray77);
        org.junit.Assert.assertNull(doubleArray80);
        org.junit.Assert.assertNull(doubleArray81);
        org.junit.Assert.assertNull(doubleArray82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
        org.junit.Assert.assertNull(doubleArray84);
        org.junit.Assert.assertNull(doubleArray85);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertNull(doubleArray91);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
        org.junit.Assert.assertNotNull(cashFileData93);
        org.junit.Assert.assertNull(doubleArray95);
        org.junit.Assert.assertNull(doubleArray99);
    }

    @Test
    public void test05100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05100");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double[] doubleArray30 = fieldData27.getPrefStockQtr();
        double[] doubleArray31 = fieldData27.getTotalOpExpQtr();
        double[] doubleArray32 = fieldData27.getGrossOpIncQtr();
        double[] doubleArray33 = fieldData27.getDividendQtr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
    }

    @Test
    public void test05101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05101");
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData((int) (byte) -1, (int) (byte) 10);
        double double3 = fieldData2.getPrice52hi();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
    }

    @Test
    public void test05102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05102");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherCurrLiabQtr();
        double[] doubleArray3 = balSheetFileData1.getPrefStockYr();
        java.lang.String str4 = balSheetFileData1.getName();
        double[] doubleArray5 = balSheetFileData1.getBvpsQtr();
        double[] doubleArray6 = balSheetFileData1.getNetFixedAssetsQtr();
        double[] doubleArray7 = balSheetFileData1.getInventoryYr();
        double[] doubleArray8 = balSheetFileData1.getAcctPayableQtr();
        double[] doubleArray9 = balSheetFileData1.getNetFixedAssetsYr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertNull(doubleArray9);
    }

    @Test
    public void test05103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05103");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray4 = balSheetFileData1.getLtInvestQtr();
        double[] doubleArray5 = balSheetFileData1.getCurrLiabQtr();
        double[] doubleArray6 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray7 = balSheetFileData1.getAcctPayableQtr();
        double[] doubleArray8 = balSheetFileData1.getCurrLiabQtr();
        double[] doubleArray9 = balSheetFileData1.getLtInvestQtr();
        double[] doubleArray10 = balSheetFileData1.getCashQtr();
        double[] doubleArray11 = balSheetFileData1.getStInvestQtr();
        double[] doubleArray12 = balSheetFileData1.getGoodwillYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData13 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData1);
        double[] doubleArray14 = balSheetFileData1.getTotalLiabYr();
        double[] doubleArray15 = balSheetFileData1.getCurrLiabYr();
        double[] doubleArray16 = balSheetFileData1.getInventoryYr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertNull(doubleArray9);
        org.junit.Assert.assertNull(doubleArray10);
        org.junit.Assert.assertNull(doubleArray11);
        org.junit.Assert.assertNull(doubleArray12);
        org.junit.Assert.assertNull(doubleArray14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray16);
    }

    @Test
    public void test05104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05104");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        int int2 = companyFileData1.getNumEmployees();
        companyFileData1.setIndustry("hi!");
        companyFileData1.setDrp("  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        companyFileData1.setDrp("out/BigDB/97/Q0/name-fundamental-data-97Q0.data/BigDB/");
        companyFileData1.setSector("");
        companyFileData1.setSic("out/BigDB/0/Q1/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : NONE\r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : NONE\r\n  phone     : null\r\n  web       : null\r\n-fundamental-data-0Q1.out/BigDB/52/Q97/out/BigDB/10/Q100/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n-fundamental-data-10Q100.NONE-fundamental-data-52Q97.name");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test05105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05105");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        double[] doubleArray28 = fieldData27.getTotalOpExpYr();
        double[] doubleArray29 = fieldData27.getOtherCurrLiabYr();
        double[] doubleArray30 = fieldData27.getSharesY();
        double[] doubleArray31 = fieldData27.getUnusualIncQtr();
        long long32 = fieldData27.getVolume10d();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(doubleArray28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0]");
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
    }

    @Test
    public void test05106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05106");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray4 = balSheetFileData1.getNetFixedAssetsYr();
        double[] doubleArray5 = balSheetFileData1.getCurrAssetsYr();
        double[] doubleArray6 = balSheetFileData1.getAcctPayableYr();
        double[] doubleArray7 = balSheetFileData1.getLtInvestYr();
        double[] doubleArray8 = balSheetFileData1.getStDebtYr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
    }

    @Test
    public void test05107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05107");
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData0);
        double[] doubleArray2 = incSheetFileData1.getGrossIncQtr();
        double[] doubleArray3 = incSheetFileData1.getRdQtr();
        double[] doubleArray4 = incSheetFileData1.getAdjToIncYr();
        double[] doubleArray5 = incSheetFileData1.getIncPrimaryEpsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum6 = incSheetFileData1.getExchange();
        double[] doubleArray7 = incSheetFileData1.getNonrecurringItemsQtr();
        double[] doubleArray8 = incSheetFileData1.getIntExpNonOpQtr();
        double[] doubleArray9 = incSheetFileData1.getIntExpQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum10 = incSheetFileData1.getExchange();
        double[] doubleArray11 = incSheetFileData1.getIncPrimaryEpsQtr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(exchEnum6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertNull(doubleArray9);
        org.junit.Assert.assertNull(exchEnum10);
        org.junit.Assert.assertNull(doubleArray11);
    }

    @Test
    public void test05108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05108");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getOtherLtAssetsYr();
        double double30 = fieldData27.getEpsY1();
        double[] doubleArray31 = fieldData27.getGoodwillYr();
        fieldData27.setYear((int) '4');
        double double34 = fieldData27.getInsiderOwnership();
        double[] doubleArray35 = fieldData27.getCurrLiabQtr();
        double double36 = fieldData27.getMktCap();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
    }

    @Test
    public void test05109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05109");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setInsiderNetPercentOutstanding("");
        double[] doubleArray3 = sharesFileData0.getSharesQ();
        sharesFileData0.setInsiderBuys("");
        sharesFileData0.setInsiderBuyShrs("hi!");
        double double8 = sharesFileData0.getInsiderNetPercentOutstanding();
        int int9 = sharesFileData0.getInstSellShrs();
        java.lang.String str10 = sharesFileData0.getName();
        sharesFileData0.setInsiderNetTrades("out/BigDB/10/Q100/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n-fundamental-data-10Q100.NONE");
        sharesFileData0.setInstOwnership("ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : NONE\r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : NONE\r\n  phone     : null\r\n  web       : null\r\n");
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0]");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test05110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05110");
        java.lang.String str4 = net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData.getOutfileName((int) (byte) 10, (int) (short) 10, "out/BigDB/0/Q10/out/BigDB/97/Q0/name-fundamental-data-97Q0.data/BigDB/-fundamental-data-0Q10.out/BigDB/97/Q0/name-fundamental-data-97Q0.data/BigDB/", "");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "out/BigDB/10/Q10/out/BigDB/0/Q10/out/BigDB/97/Q0/name-fundamental-data-97Q0.data/BigDB/-fundamental-data-0Q10.out/BigDB/97/Q0/name-fundamental-data-97Q0.data/BigDB/-fundamental-data-10Q10." + "'", str4, "out/BigDB/10/Q10/out/BigDB/0/Q10/out/BigDB/97/Q0/name-fundamental-data-97Q0.data/BigDB/-fundamental-data-0Q10.out/BigDB/97/Q0/name-fundamental-data-97Q0.data/BigDB/-fundamental-data-10Q10.");
    }

    @Test
    public void test05111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05111");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setInstShareholders("");
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum3 = sharesFileData0.getExchange();
        sharesFileData0.setVolume3m("  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        sharesFileData0.setInsiderSells("");
        double double8 = sharesFileData0.getPrice52hi();
        sharesFileData0.setInsiderNetPercentOutstanding("ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n");
        sharesFileData0.setFromReport(1, 1);
        sharesFileData0.setInsiderBuys("ticker      : \r\n  name      : hi!\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : NONE\r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : hi!\r\n  phone     : data/BigDB/\r\n  web       : null\r\n");
        sharesFileData0.setFloatshr("  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        org.junit.Assert.assertNull(exchEnum3);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    }

    @Test
    public void test05112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05112");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setInstShareholders("");
        sharesFileData0.setVolume3m("");
        sharesFileData0.setDollar3m("");
        int int7 = sharesFileData0.getInsiderBuyShrs();
        sharesFileData0.setVolume10d("hi!");
        java.lang.String str10 = sharesFileData0.getName();
        double double11 = sharesFileData0.getPrice52hi();
        double[] doubleArray12 = sharesFileData0.getSharesQ();
        double double13 = sharesFileData0.getDollar3m();
        int int14 = sharesFileData0.getInstBuyShrs();
        sharesFileData0.setInstShareholders("");
        double double17 = sharesFileData0.getDollar3m();
        double double18 = sharesFileData0.getInstOwnership();
        double[] doubleArray19 = null;
        sharesFileData0.setSharesQ(doubleArray19);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
    }

    @Test
    public void test05113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05113");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setInstShareholders("");
        sharesFileData0.setInstSellShrs("hi!");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData5 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData6 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData5);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData7 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str8 = estimateFileData7.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData9 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData9.setInsiderNetPercentOutstanding("");
        double[] doubleArray12 = sharesFileData9.getSharesQ();
        sharesFileData9.setInsiderBuys("");
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData19 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList17);
        double[] doubleArray20 = incSheetFileData19.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData21 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData22 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData21);
        double[] doubleArray23 = balSheetFileData22.getOtherLtLiabYr();
        double[] doubleArray24 = balSheetFileData22.getStDebtQtr();
        double[] doubleArray25 = balSheetFileData22.getInventoryYr();
        java.lang.String str26 = balSheetFileData22.toString();
        double[] doubleArray27 = balSheetFileData22.getNetFixedAssetsYr();
        double[] doubleArray28 = balSheetFileData22.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData29 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData32 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData6, estimateFileData7, sharesFileData9, incSheetFileData19, balSheetFileData22, cashFileData29, (int) (short) 100, (int) (byte) 100);
        companyFileData6.setZip("hi!");
        sharesFileData0.setNameFields(companyFileData6);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData36 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData6);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData37 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str38 = estimateFileData37.getName();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum39 = estimateFileData37.getExchange();
        java.lang.String str40 = estimateFileData37.getSector();
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData41 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData(estimateFileData37);
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData42 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData43 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData44 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData43);
        double[] doubleArray45 = incSheetFileData44.getGrossIncQtr();
        double[] doubleArray46 = incSheetFileData44.getRdQtr();
        double[] doubleArray47 = incSheetFileData44.getAdjToIncYr();
        double[] doubleArray48 = incSheetFileData44.getDepreciationQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData49 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData50 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData49);
        double[] doubleArray51 = balSheetFileData50.getOtherLtLiabYr();
        java.lang.String str52 = balSheetFileData50.getIndustry();
        java.lang.String str53 = balSheetFileData50.getIndustry();
        double[] doubleArray54 = balSheetFileData50.getNetFixedAssetsYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData55 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData56 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData55);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData57 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str58 = estimateFileData57.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData59 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData59.setInsiderNetPercentOutstanding("");
        double[] doubleArray62 = sharesFileData59.getSharesQ();
        sharesFileData59.setInsiderBuys("");
        java.lang.String[] strArray66 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList67 = new java.util.ArrayList<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData69 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList67);
        double[] doubleArray70 = incSheetFileData69.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData71 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData72 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData71);
        double[] doubleArray73 = balSheetFileData72.getOtherLtLiabYr();
        double[] doubleArray74 = balSheetFileData72.getStDebtQtr();
        double[] doubleArray75 = balSheetFileData72.getInventoryYr();
        java.lang.String str76 = balSheetFileData72.toString();
        double[] doubleArray77 = balSheetFileData72.getNetFixedAssetsYr();
        double[] doubleArray78 = balSheetFileData72.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData79 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData82 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData56, estimateFileData57, sharesFileData59, incSheetFileData69, balSheetFileData72, cashFileData79, (int) (short) 100, (int) (byte) 100);
        java.lang.String str83 = fieldData82.getStreet();
        double[] doubleArray84 = fieldData82.getTotalOpExpQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData85 = fieldData82.getCashData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData86 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData(cashFileData85);
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData89 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData6, estimateFileData37, sharesFileData42, incSheetFileData44, balSheetFileData50, cashFileData86, (int) (short) 100, 100);
        double[] doubleArray90 = fieldData89.getPreTaxIncQtr();
        java.lang.String str91 = fieldData89.getWeb();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0]");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(incSheetFileData19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(doubleArray24);
        org.junit.Assert.assertNull(doubleArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNull(doubleArray27);
        org.junit.Assert.assertNull(doubleArray28);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(exchEnum39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(doubleArray45);
        org.junit.Assert.assertNull(doubleArray46);
        org.junit.Assert.assertNull(doubleArray47);
        org.junit.Assert.assertNull(doubleArray48);
        org.junit.Assert.assertNull(doubleArray51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(doubleArray54);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0]");
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(incSheetFileData69);
        org.junit.Assert.assertNull(doubleArray70);
        org.junit.Assert.assertNull(doubleArray73);
        org.junit.Assert.assertNull(doubleArray74);
        org.junit.Assert.assertNull(doubleArray75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertNull(doubleArray77);
        org.junit.Assert.assertNull(doubleArray78);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNull(doubleArray84);
        org.junit.Assert.assertNotNull(cashFileData85);
        org.junit.Assert.assertNull(doubleArray90);
        org.junit.Assert.assertNull(str91);
    }

    @Test
    public void test05114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05114");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        double[] doubleArray28 = fieldData27.getTotalOpExpYr();
        double[] doubleArray29 = fieldData27.getEpsDilYr();
        double[] doubleArray30 = fieldData27.getLtInvestQtr();
        double[] doubleArray31 = fieldData27.getUnusualIncQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum32 = fieldData27.getExchange();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(doubleArray28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(exchEnum32);
    }

    @Test
    public void test05115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05115");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        int int31 = fieldData27.getInsiderSells();
        double[] doubleArray32 = fieldData27.getOtherLtAssetsYr();
        long long33 = fieldData27.getVolumeMonth3m();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData34 = fieldData27.getShares();
        double[] doubleArray35 = fieldData27.getOtherIncQtr();
        double[] doubleArray36 = fieldData27.getOtherLtLiabYr();
        double[] doubleArray37 = fieldData27.getIncAfterTaxYr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertNotNull(sharesFileData34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(doubleArray36);
        org.junit.Assert.assertNull(doubleArray37);
    }

    @Test
    public void test05116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05116");
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum1 = estimateFileData0.getExchange();
        double double2 = estimateFileData0.getEpsY0();
        java.lang.String str3 = estimateFileData0.getIndustry();
        double double4 = estimateFileData0.getEpsQ0();
        double double5 = estimateFileData0.getEpsY2();
        org.junit.Assert.assertNull(exchEnum1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    }

    @Test
    public void test05117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05117");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        java.lang.String str2 = companyFileData1.getIndustry();
        java.lang.String str3 = companyFileData1.getState();
        companyFileData1.setPhone("  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        companyFileData1.setDrp("ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n");
        companyFileData1.setIndustry("ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n");
        companyFileData1.setSector("out/BigDB/100/Q10/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n-fundamental-data-100Q10.Cash File Data");
        companyFileData1.setSector("out/BigDB/");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test05118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05118");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "out/BigDB/", "NONE", "ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n", "NONE", "  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n", "Cash File Data" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData10 = net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData.readFromDb((java.util.List<java.lang.String>) strList8);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData11 = net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData.readFromDb((java.util.List<java.lang.String>) strList8);
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData12 = net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData.readFromDb((java.util.List<java.lang.String>) strList8);
        sharesFileData12.setInsiderBuys("ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : NONE\r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData15 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData16 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData15);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str18 = estimateFileData17.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData19 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData19.setInsiderNetPercentOutstanding("");
        double[] doubleArray22 = sharesFileData19.getSharesQ();
        sharesFileData19.setInsiderBuys("");
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData29 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList27);
        double[] doubleArray30 = incSheetFileData29.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData31 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData32 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData31);
        double[] doubleArray33 = balSheetFileData32.getOtherLtLiabYr();
        double[] doubleArray34 = balSheetFileData32.getStDebtQtr();
        double[] doubleArray35 = balSheetFileData32.getInventoryYr();
        java.lang.String str36 = balSheetFileData32.toString();
        double[] doubleArray37 = balSheetFileData32.getNetFixedAssetsYr();
        double[] doubleArray38 = balSheetFileData32.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData39 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData42 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData16, estimateFileData17, sharesFileData19, incSheetFileData29, balSheetFileData32, cashFileData39, (int) (short) 100, (int) (byte) 100);
        companyFileData16.setZip("hi!");
        sharesFileData12.setNameFields(companyFileData16);
        companyFileData16.setPhone("ticker      : \r\n  name      : hi!\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : NONE\r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : hi!\r\n  phone     : data/BigDB/\r\n  web       : null\r\n");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(cashFileData10);
        org.junit.Assert.assertNotNull(cashFileData11);
        org.junit.Assert.assertNotNull(sharesFileData12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0]");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(incSheetFileData29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNull(doubleArray37);
        org.junit.Assert.assertNull(doubleArray38);
    }

    @Test
    public void test05119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05119");
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData0);
        double[] doubleArray2 = incSheetFileData1.getGrossIncQtr();
        double[] doubleArray3 = incSheetFileData1.getAdjToIncYr();
        double[] doubleArray4 = incSheetFileData1.getIncPrimaryEpsQtr();
        double[] doubleArray5 = incSheetFileData1.getOtherIncYr();
        double[] doubleArray6 = incSheetFileData1.getTotalOpExpYr();
        double[] doubleArray7 = incSheetFileData1.getSalesYr();
        double[] doubleArray8 = incSheetFileData1.getAdjToIncQtr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
    }

    @Test
    public void test05120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05120");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData.find("out/BigDB/97/Q0/out/BigDB/10/Q100/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n-fundamental-data-10Q100.NONE-fundamental-data-97Q0.hi!");
        org.junit.Assert.assertNull(balSheetFileData1);
    }

    @Test
    public void test05121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05121");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setInstShareholders("");
        sharesFileData0.setVolume3m("");
        sharesFileData0.setDollar3m("");
        sharesFileData0.setDollar3m("hi!");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData9 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData9.setFromReport((int) (short) 1, 0);
        sharesFileData9.setInsiderBuyShrs("hi!");
        int int15 = sharesFileData9.getInsiderBuys();
        double[] doubleArray16 = sharesFileData9.getSharesQ();
        sharesFileData0.setSharesY(doubleArray16);
        java.lang.String str18 = sharesFileData0.getTicker();
        sharesFileData0.setInsiderNetPercentOutstanding("ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : NONE\r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : NONE\r\n  phone     : null\r\n  web       : null\r\n");
        sharesFileData0.setInsiderOwnership("ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n");
        java.lang.String str23 = sharesFileData0.getSector();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData24.setInstShareholders("");
        java.lang.String str27 = sharesFileData24.getTicker();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum28 = sharesFileData24.getExchange();
        double double29 = sharesFileData24.getPrice();
        double double30 = sharesFileData24.getInsiderNetPercentOutstanding();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData31 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData(sharesFileData24);
        double[] doubleArray32 = sharesFileData31.getSharesQ();
        sharesFileData0.setSharesQ(doubleArray32);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0]");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(exchEnum28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0]");
    }

    @Test
    public void test05122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05122");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double[] doubleArray30 = fieldData27.getDepreciationYr();
        java.lang.String str31 = fieldData27.getSector();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData32 = fieldData27.getCompanyInfo();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum33 = companyFileData32.getExchange();
        java.lang.String str34 = companyFileData32.getSector();
        boolean boolean35 = companyFileData32.isAdr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(companyFileData32);
        org.junit.Assert.assertNull(exchEnum33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test05123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05123");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        boolean boolean30 = fieldData27.isAdr();
        double[] doubleArray31 = fieldData27.getDividendYr();
        double[] doubleArray32 = fieldData27.getEpsYr();
        int int33 = fieldData27.getInstSellShrs();
        double double34 = fieldData27.getInstOwnership();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
    }

    @Test
    public void test05124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05124");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        double[] doubleArray31 = fieldData27.getInventoryQtr();
        double[] doubleArray32 = fieldData27.getBvpsQtr();
        double double33 = fieldData27.getEpsQ1();
        double[] doubleArray34 = fieldData27.getOtherLtLiabYr();
        int int35 = fieldData27.getInstBuyShrs();
        fieldData27.setQuarter((int) (byte) 10);
        double[] doubleArray38 = fieldData27.getIntExpNonOpYr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(doubleArray38);
    }

    @Test
    public void test05125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05125");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double[] doubleArray30 = fieldData27.getDepreciationYr();
        java.lang.String str31 = fieldData27.getSector();
        double double32 = fieldData27.getEpsQ1();
        double[] doubleArray33 = fieldData27.getNonrecurringItemsYr();
        java.lang.String str34 = fieldData27.getStreet();
        double[] doubleArray35 = fieldData27.getNonrecurringItemsQtr();
        double[] doubleArray36 = fieldData27.getOtherCurrAssetsYr();
        double double37 = fieldData27.getInsiderNetPercentOutstanding();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(doubleArray36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
    }

    @Test
    public void test05126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05126");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        companyFileData1.setNumEmployees("hi!");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData1);
        boolean boolean5 = companyFileData1.isAdr();
        companyFileData1.setState("ticker      : \r\n  name      : hi!\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : NONE\r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : hi!\r\n  phone     : data/BigDB/\r\n  web       : null\r\n");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test05127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05127");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        double double1 = sharesFileData0.getInsiderOwnership();
        sharesFileData0.setInstBuyShrs("hi!");
        double double4 = sharesFileData0.getDollar3m();
        java.lang.String str5 = sharesFileData0.getIndustry();
        long long6 = sharesFileData0.getVolumeMonth3m();
        int int7 = sharesFileData0.getInsiderSellShrs();
        double double8 = sharesFileData0.getMktCap();
        sharesFileData0.setVolume10d("ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : NONE\r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData11 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData12 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData13 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str14 = estimateFileData13.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData15 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData15.setInsiderNetPercentOutstanding("");
        double[] doubleArray18 = sharesFileData15.getSharesQ();
        sharesFileData15.setInsiderBuys("");
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData25 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList23);
        double[] doubleArray26 = incSheetFileData25.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData27 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData28 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData27);
        double[] doubleArray29 = balSheetFileData28.getOtherLtLiabYr();
        double[] doubleArray30 = balSheetFileData28.getStDebtQtr();
        double[] doubleArray31 = balSheetFileData28.getInventoryYr();
        java.lang.String str32 = balSheetFileData28.toString();
        double[] doubleArray33 = balSheetFileData28.getNetFixedAssetsYr();
        double[] doubleArray34 = balSheetFileData28.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData35 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData38 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData12, estimateFileData13, sharesFileData15, incSheetFileData25, balSheetFileData28, cashFileData35, (int) (short) 100, (int) (byte) 100);
        double[] doubleArray39 = fieldData38.getIncTaxQtr();
        double[] doubleArray40 = fieldData38.getSharesQ();
        double[] doubleArray41 = fieldData38.getSharesQ();
        sharesFileData0.setSharesY(doubleArray41);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]");
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(incSheetFileData25);
        org.junit.Assert.assertNull(doubleArray26);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0]");
    }

    @Test
    public void test05128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05128");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        double double1 = sharesFileData0.getInsiderOwnership();
        sharesFileData0.setInstBuyShrs("hi!");
        double double4 = sharesFileData0.getDollar3m();
        java.lang.String str5 = sharesFileData0.getIndustry();
        int int6 = sharesFileData0.getInsiderBuys();
        double double7 = sharesFileData0.getPrice52hi();
        sharesFileData0.setInsiderNetTrades("NONE");
        double double10 = sharesFileData0.getMktCap();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    }

    @Test
    public void test05129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05129");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double[] doubleArray30 = fieldData27.getStDebtYr();
        double[] doubleArray31 = fieldData27.getSharesQ();
        double[] doubleArray32 = fieldData27.getOtherCurrLiabYr();
        net.ajaskey.common.DateTime dateTime33 = fieldData27.getCurrFiscalYear();
        double double34 = fieldData27.getPrice52hi();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0]");
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(dateTime33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
    }

    @Test
    public void test05130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05130");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData4 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList2);
        double[] doubleArray5 = incSheetFileData4.getIncTaxYr();
        double[] doubleArray6 = incSheetFileData4.getIncPrimaryEpsYr();
        double[] doubleArray7 = incSheetFileData4.getDepreciationYr();
        double[] doubleArray8 = incSheetFileData4.getGrossOpIncQtr();
        java.lang.String str9 = incSheetFileData4.toString();
        double[] doubleArray10 = incSheetFileData4.getIncPrimaryEpsYr();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(incSheetFileData4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(doubleArray10);
    }

    @Test
    public void test05131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05131");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray4 = balSheetFileData1.getInventoryYr();
        double[] doubleArray5 = balSheetFileData1.getCurrAssetsYr();
        double[] doubleArray6 = balSheetFileData1.getTotalLiabQtr();
        double[] doubleArray7 = balSheetFileData1.getPrefStockYr();
        double[] doubleArray8 = balSheetFileData1.getEquityQtr();
        java.lang.String str9 = balSheetFileData1.getTicker();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test05132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05132");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray4 = balSheetFileData1.getInventoryYr();
        double[] doubleArray5 = balSheetFileData1.getCurrAssetsYr();
        double[] doubleArray6 = balSheetFileData1.getGoodwillYr();
        java.lang.String str7 = balSheetFileData1.getExchange();
        double[] doubleArray8 = balSheetFileData1.getLtInvestQtr();
        double[] doubleArray9 = balSheetFileData1.getCurrLiabYr();
        double[] doubleArray10 = balSheetFileData1.getLtDebtYr();
        java.lang.String str11 = balSheetFileData1.toString();
        double[] doubleArray12 = balSheetFileData1.getOtherCurrLiabYr();
        double[] doubleArray13 = balSheetFileData1.getLtDebtYr();
        double[] doubleArray14 = balSheetFileData1.getLtDebtQtr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertNull(doubleArray9);
        org.junit.Assert.assertNull(doubleArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(doubleArray12);
        org.junit.Assert.assertNull(doubleArray13);
        org.junit.Assert.assertNull(doubleArray14);
    }

    @Test
    public void test05133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05133");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray4 = balSheetFileData1.getLtInvestQtr();
        double[] doubleArray5 = balSheetFileData1.getCurrLiabQtr();
        double[] doubleArray6 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray7 = balSheetFileData1.getAcctPayableQtr();
        double[] doubleArray8 = balSheetFileData1.getPrefStockQtr();
        double[] doubleArray9 = balSheetFileData1.getOtherLtLiabQtr();
        java.lang.String str10 = balSheetFileData1.getName();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertNull(doubleArray9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test05134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05134");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        boolean boolean2 = companyFileData1.isAdr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.DowEnum dowEnum3 = companyFileData1.getDowIndex();
        java.lang.String str4 = companyFileData1.getPhone();
        java.lang.String str5 = companyFileData1.getTicker();
        java.lang.String str6 = companyFileData1.getCity();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum7 = companyFileData1.getExchange();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum8 = companyFileData1.getExchange();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(dowEnum3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(exchEnum7);
        org.junit.Assert.assertNull(exchEnum8);
    }

    @Test
    public void test05135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05135");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getStDebtQtr();
        double[] doubleArray30 = fieldData27.getEpsContQtr();
        double[] doubleArray31 = fieldData27.getOtherLtAssetsYr();
        double[] doubleArray32 = fieldData27.getNetIncYr();
        double[] doubleArray33 = fieldData27.getOtherLtAssetsQtr();
        double double34 = fieldData27.getInstOwnership();
        double[] doubleArray35 = fieldData27.getLtDebtYr();
        double double36 = fieldData27.getInsiderOwnership();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
    }

    @Test
    public void test05136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05136");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        double[] doubleArray31 = fieldData27.getInventoryQtr();
        long long32 = fieldData27.getVolume10d();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData33 = fieldData27.getCompanyInfo();
        java.lang.String str34 = companyFileData33.getSector();
        companyFileData33.setStreet("");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertNotNull(companyFileData33);
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test05137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05137");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double[] doubleArray30 = fieldData27.getStDebtYr();
        double[] doubleArray31 = fieldData27.getSharesQ();
        double[] doubleArray32 = fieldData27.getGrossIncQtr();
        double[] doubleArray33 = fieldData27.getPrefStockQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData34 = fieldData27.getCashData();
        double[] doubleArray35 = cashFileData34.getCashFromInvQtr();
        java.lang.String str36 = cashFileData34.getTicker();
        java.lang.String str37 = cashFileData34.toString();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0]");
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNotNull(cashFileData34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Cash File Data" + "'", str37, "Cash File Data");
    }

    @Test
    public void test05138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05138");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setFromReport((int) (short) 1, 0);
        sharesFileData0.setInstOwnership("ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n");
        int int6 = sharesFileData0.getInstSellShrs();
        sharesFileData0.setDollar3m("ticker      : \r\n  name      : hi!\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : NONE\r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : hi!\r\n  phone     : data/BigDB/\r\n  web       : null\r\n");
        sharesFileData0.setVolume3m("out/BigDB/");
        long long11 = sharesFileData0.getVolumeMonth3m();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
    }

    @Test
    public void test05139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05139");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setFromReport((int) (short) 1, 0);
        sharesFileData0.setInsiderBuyShrs("hi!");
        sharesFileData0.setBeta("");
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum8 = sharesFileData0.getExchange();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum9 = sharesFileData0.getExchange();
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData10 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData11 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData12 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData11);
        companyFileData12.setNumEmployees("hi!");
        java.lang.String str15 = companyFileData12.getPhone();
        estimateFileData10.setNameFields(companyFileData12);
        companyFileData12.setName("  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        sharesFileData0.setNameFields(companyFileData12);
        companyFileData12.setIndustry("ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n");
        java.lang.String str22 = companyFileData12.getPhone();
        java.lang.String str23 = companyFileData12.getStreet();
        org.junit.Assert.assertNull(exchEnum8);
        org.junit.Assert.assertNull(exchEnum9);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test05140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05140");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray4 = balSheetFileData1.getLtInvestQtr();
        double[] doubleArray5 = balSheetFileData1.getTotalAssetsYr();
        double[] doubleArray6 = balSheetFileData1.getOtherCurrLiabYr();
        double[] doubleArray7 = balSheetFileData1.getLtDebtQtr();
        double[] doubleArray8 = balSheetFileData1.getStDebtYr();
        java.lang.String str9 = balSheetFileData1.getExchange();
        double[] doubleArray10 = balSheetFileData1.getCurrLiabQtr();
        double[] doubleArray11 = balSheetFileData1.getGoodwillQtr();
        java.lang.String str12 = balSheetFileData1.getTicker();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(doubleArray10);
        org.junit.Assert.assertNull(doubleArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test05141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05141");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        java.lang.String str2 = companyFileData1.getIndustry();
        java.lang.String str3 = companyFileData1.getState();
        companyFileData1.setPhone("  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        java.lang.String str6 = companyFileData1.getName();
        int int7 = companyFileData1.getNumEmployees();
        companyFileData1.setSnpIndex("ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : NONE\r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : NONE\r\n  phone     : null\r\n  web       : null\r\n");
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData10 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str11 = estimateFileData10.getName();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum12 = estimateFileData10.getExchange();
        java.lang.String str13 = estimateFileData10.getSector();
        double double14 = estimateFileData10.getEpsY1();
        net.ajaskey.common.DateTime dateTime15 = estimateFileData10.getCurrFiscalYear();
        net.ajaskey.common.DateTime dateTime16 = estimateFileData10.getLatestQtrEps();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData17.setInstShareholders("");
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum20 = sharesFileData17.getExchange();
        sharesFileData17.setVolume3m("  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        int int23 = sharesFileData17.getInsiderSells();
        int int24 = sharesFileData17.getInstBuyShrs();
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData25 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData26 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData25);
        double[] doubleArray27 = incSheetFileData26.getGrossIncQtr();
        double[] doubleArray28 = incSheetFileData26.getAdjToIncYr();
        double[] doubleArray29 = incSheetFileData26.getAdjToIncQtr();
        double[] doubleArray30 = incSheetFileData26.getEpsYr();
        double[] doubleArray31 = incSheetFileData26.getNetIncYr();
        double[] doubleArray32 = incSheetFileData26.getTotalOpExpYr();
        double[] doubleArray33 = incSheetFileData26.getEpsContQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData34 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData35 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData34);
        double[] doubleArray36 = balSheetFileData35.getOtherLtLiabYr();
        java.lang.String str37 = balSheetFileData35.getIndustry();
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData42 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList40);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData43 = net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData.readFromDb((java.util.List<java.lang.String>) strList40);
        java.lang.String str44 = cashFileData43.getTicker();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData47 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData10, sharesFileData17, incSheetFileData26, balSheetFileData35, cashFileData43, (int) 'a', (int) (short) 100);
        java.lang.String str48 = fieldData47.getDowIndexStr();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(exchEnum12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNull(dateTime15);
        org.junit.Assert.assertNull(dateTime16);
        org.junit.Assert.assertNull(exchEnum20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(doubleArray27);
        org.junit.Assert.assertNull(doubleArray28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(doubleArray36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(incSheetFileData42);
        org.junit.Assert.assertNotNull(cashFileData43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
    }

    @Test
    public void test05142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05142");
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData0);
        double[] doubleArray2 = incSheetFileData1.getGrossIncQtr();
        double[] doubleArray3 = incSheetFileData1.getAdjToIncYr();
        double[] doubleArray4 = incSheetFileData1.getAdjToIncQtr();
        double[] doubleArray5 = incSheetFileData1.getOtherIncQtr();
        double[] doubleArray6 = incSheetFileData1.getRdQtr();
        double[] doubleArray7 = incSheetFileData1.getDepreciationQtr();
        double[] doubleArray8 = incSheetFileData1.getIntExpQtr();
        double[] doubleArray9 = incSheetFileData1.getIncAfterTaxQtr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertNull(doubleArray9);
    }

    @Test
    public void test05143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05143");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        double[] doubleArray31 = fieldData27.getInventoryQtr();
        double[] doubleArray32 = fieldData27.getBvpsQtr();
        double double33 = fieldData27.getEpsQ1();
        double[] doubleArray34 = fieldData27.getOtherLtLiabYr();
        int int35 = fieldData27.getYear();
        net.ajaskey.common.DateTime dateTime36 = fieldData27.getLatestQtrEps();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass37 = dateTime36.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
        org.junit.Assert.assertNull(dateTime36);
    }

    @Test
    public void test05144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05144");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setFromReport((int) (short) 1, 0);
        sharesFileData0.setInsiderBuyShrs("hi!");
        sharesFileData0.setBeta("");
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum8 = sharesFileData0.getExchange();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum9 = sharesFileData0.getExchange();
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData10 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData11 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData12 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData11);
        companyFileData12.setNumEmployees("hi!");
        java.lang.String str15 = companyFileData12.getPhone();
        estimateFileData10.setNameFields(companyFileData12);
        companyFileData12.setName("  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        sharesFileData0.setNameFields(companyFileData12);
        companyFileData12.setIndustry("ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n");
        java.lang.String str22 = companyFileData12.getPhone();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum23 = companyFileData12.getExchange();
        org.junit.Assert.assertNull(exchEnum8);
        org.junit.Assert.assertNull(exchEnum9);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(exchEnum23);
    }

    @Test
    public void test05145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05145");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        boolean boolean29 = fieldData27.isDrp();
        double double30 = fieldData27.getBeta();
        double[] doubleArray31 = fieldData27.getAcctRxQtr();
        double[] doubleArray32 = fieldData27.getEpsYr();
        double[] doubleArray33 = fieldData27.getGoodwillYr();
        double double34 = fieldData27.getPrice();
        double double35 = fieldData27.getEpsQ1();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
    }

    @Test
    public void test05146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05146");
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData();
        java.lang.String str1 = incSheetFileData0.getName();
        double[] doubleArray2 = incSheetFileData0.getEpsDilContYr();
        double[] doubleArray3 = incSheetFileData0.getEpsDilQtr();
        double[] doubleArray4 = incSheetFileData0.getEpsQtr();
        double[] doubleArray5 = incSheetFileData0.getUnusualIncYr();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
    }

    @Test
    public void test05147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05147");
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str1 = estimateFileData0.getName();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum2 = estimateFileData0.getExchange();
        net.ajaskey.common.DateTime dateTime3 = estimateFileData0.getCurrFiscalYear();
        double double4 = estimateFileData0.getEpsQ1();
        net.ajaskey.common.DateTime dateTime5 = estimateFileData0.getLatestQtrEps();
        java.lang.String str6 = estimateFileData0.toString();
        java.lang.String str7 = estimateFileData0.getIndustry();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(exchEnum2);
        org.junit.Assert.assertNull(dateTime3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNull(dateTime5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test05148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05148");
        net.ajaskey.market.tools.SIP.BigDB.dataio.FiletypeEnum filetypeEnum2 = null;
        // The following exception was thrown during execution in test generation
        try {
            net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData.parseSipData((int) 'a', 35, filetypeEnum2);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test05149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05149");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        double[] doubleArray28 = fieldData27.getIncTaxQtr();
        double[] doubleArray29 = fieldData27.getOtherLtLiabYr();
        double[] doubleArray30 = fieldData27.getCapExQtr();
        java.lang.String str31 = fieldData27.getState();
        double[] doubleArray32 = fieldData27.getCashFromFinQtr();
        double[] doubleArray33 = fieldData27.getDividendYr();
        double[] doubleArray34 = fieldData27.getPreTaxIncQtr();
        double[] doubleArray35 = fieldData27.getDepreciationYr();
        double[] doubleArray36 = fieldData27.getDividendQtr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(doubleArray28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(doubleArray36);
    }

    @Test
    public void test05150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05150");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData30 = fieldData27.getCashData();
        java.lang.String str31 = fieldData27.getIndustry();
        double[] doubleArray32 = fieldData27.getEpsYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData33 = fieldData27.getEstimateData();
        double[] doubleArray34 = fieldData27.getGrossOpIncQtr();
        java.lang.String str35 = fieldData27.getZip();
        int int36 = fieldData27.getQuarter();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNotNull(cashFileData30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNotNull(estimateFileData33);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
    }

    @Test
    public void test05151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05151");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        fieldData27.setQuarter((int) (byte) 100);
        double[] doubleArray33 = fieldData27.getSalesYr();
        double[] doubleArray34 = fieldData27.getLtDebtYr();
        double[] doubleArray35 = fieldData27.getEquityQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData36 = fieldData27.getCompanyInfo();
        companyFileData36.setName("ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n");
        companyFileData36.setWeb("out/BigDB/100/Q100/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : NONE\r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n-fundamental-data-100Q100.NONE");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNotNull(companyFileData36);
    }

    @Test
    public void test05152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05152");
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum1 = estimateFileData0.getExchange();
        double double2 = estimateFileData0.getEpsQ1();
        net.ajaskey.common.DateTime dateTime3 = estimateFileData0.getLatestQtrEps();
        java.lang.String str4 = estimateFileData0.getIndustry();
        java.lang.String str5 = estimateFileData0.getSector();
        org.junit.Assert.assertNull(exchEnum1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNull(dateTime3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test05153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05153");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        java.lang.String str2 = companyFileData1.getIndustry();
        java.lang.String str3 = companyFileData1.getState();
        companyFileData1.setPhone("  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        java.lang.String str6 = companyFileData1.getName();
        int int7 = companyFileData1.getNumEmployees();
        java.lang.String str8 = companyFileData1.getName();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SnpEnum snpEnum9 = companyFileData1.getSnpIndex();
        java.lang.String str10 = companyFileData1.getName();
        companyFileData1.setSic("out/BigDB/");
        // The following exception was thrown during execution in test generation
        try {
            companyFileData1.setExchange("out/BigDB/0/Q10/out/BigDB/97/Q0/name-fundamental-data-97Q0.data/BigDB/-fundamental-data-0Q10.out/BigDB/97/Q0/name-fundamental-data-97Q0.data/BigDB/");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No enum constant net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum.out/BigDB/0/Q10/out/BigDB/97/Q0/name-fundamental-data-97Q0.data/BigDB/-fundamental-data-0Q10.out/BigDB/97/Q0/name-fundamental-data-97Q0.data/BigDB/");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(snpEnum9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test05154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05154");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        boolean boolean30 = fieldData27.isAdr();
        double[] doubleArray31 = fieldData27.getDividendYr();
        double[] doubleArray32 = fieldData27.getEpsYr();
        int int33 = fieldData27.getInstSellShrs();
        double[] doubleArray34 = fieldData27.getStDebtQtr();
        double[] doubleArray35 = fieldData27.getIntExpNonOpYr();
        double[] doubleArray36 = fieldData27.getInventoryQtr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(doubleArray36);
    }

    @Test
    public void test05155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05155");
        java.lang.String[] strArray5 = new java.lang.String[] { "out/BigDB/10/Q52/out/BigDB/97/Q0/name-fundamental-data-97Q0.data/BigDB/-fundamental-data-10Q52.out/BigDB/97/Q0/name-fundamental-data-97Q0.data/BigDB/", "ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : NONE\r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n", "out/BigDB/52/Q97/out/BigDB/10/Q100/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n-fundamental-data-10Q100.NONE-fundamental-data-52Q97.name", "out/BigDB/10/Q0/hi!-fundamental-data-10Q0.out/BigDB/1/Q97/  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n-fundamental-data-1Q97.hi!", "out/BigDB/1/Q52/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n-fundamental-data-1Q52.out/BigDB/-1/Q1/out/BigDB/97/Q0/name-fundamental-data-97Q0.data/BigDB/-fundamental-data--1Q1.out/BigDB/10/Q1/-fundamental-data-10Q1.out/BigDB/97/Q0/name-fundamental-data-97Q0.data/BigDB/" };
        java.lang.String[] strArray10 = new java.lang.String[] { "out/BigDB/0/Q97/out/BigDB/10/Q0/hi!-fundamental-data-10Q0.out/BigDB/1/Q97/  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n-fundamental-data-1Q97.hi!-fundamental-data-0Q97.out/BigDB/0/Q10/out/BigDB/97/Q0/name-fundamental-data-97Q0.data/BigDB/-fundamental-data-0Q10.out/BigDB/97/Q0/name-fundamental-data-97Q0.data/BigDB/", "ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n", "ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : NONE\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : NONE\r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : NONE\r\n  phone     : null\r\n  web       : null\r\n", "ticker      : \r\n  name      : hi!\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : NONE\r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : hi!\r\n  phone     : data/BigDB/\r\n  web       : null\r\n" };
        // The following exception was thrown during execution in test generation
        try {
            net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData11 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(strArray5, strArray10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 5");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test05156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05156");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        boolean boolean2 = companyFileData1.isDrp();
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData3 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str4 = estimateFileData3.getName();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData5 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData5.setInstShareholders("");
        sharesFileData5.setDollar3m("data/BigDB/");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData10 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData11 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData10);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData12 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str13 = estimateFileData12.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData14 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData14.setInsiderNetPercentOutstanding("");
        double[] doubleArray17 = sharesFileData14.getSharesQ();
        sharesFileData14.setInsiderBuys("");
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData24 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList22);
        double[] doubleArray25 = incSheetFileData24.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData26 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData26);
        double[] doubleArray28 = balSheetFileData27.getOtherLtLiabYr();
        double[] doubleArray29 = balSheetFileData27.getStDebtQtr();
        double[] doubleArray30 = balSheetFileData27.getInventoryYr();
        java.lang.String str31 = balSheetFileData27.toString();
        double[] doubleArray32 = balSheetFileData27.getNetFixedAssetsYr();
        double[] doubleArray33 = balSheetFileData27.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData34 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData37 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData11, estimateFileData12, sharesFileData14, incSheetFileData24, balSheetFileData27, cashFileData34, (int) (short) 100, (int) (byte) 100);
        double[] doubleArray38 = incSheetFileData24.getIntExpNonOpYr();
        double[] doubleArray39 = incSheetFileData24.getEpsYr();
        double[] doubleArray40 = incSheetFileData24.getGrossIncQtr();
        double[] doubleArray41 = incSheetFileData24.getGrossOpIncQtr();
        double[] doubleArray42 = incSheetFileData24.getNetIncYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData43 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData44 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData43);
        double[] doubleArray45 = balSheetFileData44.getOtherLtLiabYr();
        double[] doubleArray46 = balSheetFileData44.getStDebtQtr();
        double[] doubleArray47 = balSheetFileData44.getInventoryYr();
        java.lang.String str48 = balSheetFileData44.toString();
        double[] doubleArray49 = balSheetFileData44.getBvpsQtr();
        double[] doubleArray50 = balSheetFileData44.getStDebtQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData51 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData52 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData51);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData53 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str54 = estimateFileData53.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData55 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData55.setInsiderNetPercentOutstanding("");
        double[] doubleArray58 = sharesFileData55.getSharesQ();
        sharesFileData55.setInsiderBuys("");
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList63 = new java.util.ArrayList<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData65 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList63);
        double[] doubleArray66 = incSheetFileData65.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData67 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData68 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData67);
        double[] doubleArray69 = balSheetFileData68.getOtherLtLiabYr();
        double[] doubleArray70 = balSheetFileData68.getStDebtQtr();
        double[] doubleArray71 = balSheetFileData68.getInventoryYr();
        java.lang.String str72 = balSheetFileData68.toString();
        double[] doubleArray73 = balSheetFileData68.getNetFixedAssetsYr();
        double[] doubleArray74 = balSheetFileData68.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData75 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData78 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData52, estimateFileData53, sharesFileData55, incSheetFileData65, balSheetFileData68, cashFileData75, (int) (short) 100, (int) (byte) 100);
        java.lang.String str79 = fieldData78.getStreet();
        double[] doubleArray80 = fieldData78.getOtherLtAssetsQtr();
        double[] doubleArray81 = fieldData78.getTotalOpExpYr();
        double double82 = fieldData78.getEpsY0();
        double[] doubleArray83 = fieldData78.getIncPrimaryEpsQtr();
        double[] doubleArray84 = fieldData78.getLiabEquityYr();
        boolean boolean85 = fieldData78.isDrp();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData86 = fieldData78.getCashData();
        double[] doubleArray87 = cashFileData86.getCashFromFinQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData90 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData3, sharesFileData5, incSheetFileData24, balSheetFileData44, cashFileData86, 6, (int) '#');
        java.lang.String str91 = companyFileData1.toDbOuput();
        java.lang.String str92 = companyFileData1.getStreet();
        java.lang.String str93 = companyFileData1.getCountry();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0]");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(incSheetFileData24);
        org.junit.Assert.assertNull(doubleArray25);
        org.junit.Assert.assertNull(doubleArray28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(doubleArray38);
        org.junit.Assert.assertNull(doubleArray39);
        org.junit.Assert.assertNull(doubleArray40);
        org.junit.Assert.assertNull(doubleArray41);
        org.junit.Assert.assertNull(doubleArray42);
        org.junit.Assert.assertNull(doubleArray45);
        org.junit.Assert.assertNull(doubleArray46);
        org.junit.Assert.assertNull(doubleArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNull(doubleArray49);
        org.junit.Assert.assertNull(doubleArray50);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0]");
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(incSheetFileData65);
        org.junit.Assert.assertNull(doubleArray66);
        org.junit.Assert.assertNull(doubleArray69);
        org.junit.Assert.assertNull(doubleArray70);
        org.junit.Assert.assertNull(doubleArray71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNull(doubleArray73);
        org.junit.Assert.assertNull(doubleArray74);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNull(doubleArray80);
        org.junit.Assert.assertNull(doubleArray81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertNull(doubleArray83);
        org.junit.Assert.assertNull(doubleArray84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(cashFileData86);
        org.junit.Assert.assertNull(doubleArray87);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n" + "'", str91, "ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n");
        org.junit.Assert.assertNull(str92);
        org.junit.Assert.assertNull(str93);
    }

    @Test
    public void test05157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05157");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        boolean boolean29 = fieldData27.isDrp();
        double double30 = fieldData27.getBeta();
        double[] doubleArray31 = fieldData27.getDepreciationYr();
        double[] doubleArray32 = fieldData27.getEpsQtr();
        double[] doubleArray33 = fieldData27.getCurrLiabYr();
        double[] doubleArray34 = fieldData27.getGoodwillYr();
        double[] doubleArray35 = fieldData27.getIntExpNonOpQtr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
    }

    @Test
    public void test05158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05158");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray4 = balSheetFileData1.getInventoryYr();
        java.lang.String str5 = balSheetFileData1.toString();
        double[] doubleArray6 = balSheetFileData1.getNetFixedAssetsYr();
        double[] doubleArray7 = balSheetFileData1.getAcctPayableQtr();
        java.lang.String str8 = balSheetFileData1.toString();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test05159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05159");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getStDebtQtr();
        double[] doubleArray30 = fieldData27.getEpsContQtr();
        double[] doubleArray31 = fieldData27.getOtherLtAssetsYr();
        double[] doubleArray32 = fieldData27.getNetIncYr();
        double[] doubleArray33 = fieldData27.getOtherLtAssetsQtr();
        double double34 = fieldData27.getInstOwnership();
        double[] doubleArray35 = fieldData27.getAcctRxQtr();
        double[] doubleArray36 = fieldData27.getLtDebtQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SnpEnum snpEnum37 = fieldData27.getSnpIndex();
        double[] doubleArray38 = fieldData27.getSharesY();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(doubleArray36);
        org.junit.Assert.assertNull(snpEnum37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0]");
    }

    @Test
    public void test05160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05160");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setInstShareholders("");
        sharesFileData0.setFloatshr("hi!");
        sharesFileData0.setMktCap("Cash File Data");
        java.lang.String str7 = sharesFileData0.getName();
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test05161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05161");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double[] doubleArray30 = fieldData27.getDepreciationYr();
        java.lang.String str31 = fieldData27.getSector();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData32 = fieldData27.getCompanyInfo();
        double[] doubleArray33 = fieldData27.getNetFixedAssetsYr();
        double[] doubleArray34 = fieldData27.getEpsDilContYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData35 = fieldData27.getEstimateData();
        java.lang.String str36 = estimateFileData35.toString();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(companyFileData32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNotNull(estimateFileData35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
    }

    @Test
    public void test05162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05162");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        boolean boolean29 = fieldData27.isDrp();
        double double30 = fieldData27.getBeta();
        double[] doubleArray31 = fieldData27.getAcctRxQtr();
        java.lang.String str32 = fieldData27.getState();
        double[] doubleArray33 = fieldData27.getGoodwillYr();
        java.lang.String str34 = fieldData27.getSector();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData35 = fieldData27.getCompanyInfo();
        java.lang.String str36 = fieldData27.getCity();
        double[] doubleArray37 = fieldData27.getNetIncQtr();
        double[] doubleArray38 = fieldData27.getEquityQtr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(companyFileData35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(doubleArray37);
        org.junit.Assert.assertNull(doubleArray38);
    }

    @Test
    public void test05163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05163");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setInsiderNetPercentOutstanding("");
        double[] doubleArray3 = sharesFileData0.getSharesQ();
        int int4 = sharesFileData0.getInsiderBuys();
        sharesFileData0.setFromReport((int) (byte) 0, (int) (byte) 10);
        int int8 = sharesFileData0.getInstBuyShrs();
        sharesFileData0.setInstSellShrs("NONE");
        int int11 = sharesFileData0.getInsiderBuys();
        double double12 = sharesFileData0.getInsiderNetPercentOutstanding();
        sharesFileData0.setInsiderNetPercentOutstanding("out/BigDB/10/Q100/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n-fundamental-data-10Q100.NONE");
        double[] doubleArray15 = sharesFileData0.getSharesY();
        // The following exception was thrown during execution in test generation
        try {
            double double16 = net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData.getTtm(doubleArray15);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0]");
    }

    @Test
    public void test05164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05164");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherCurrLiabQtr();
        double[] doubleArray3 = balSheetFileData1.getPrefStockYr();
        java.lang.String str4 = balSheetFileData1.getName();
        double[] doubleArray5 = balSheetFileData1.getBvpsQtr();
        double[] doubleArray6 = balSheetFileData1.getNetFixedAssetsQtr();
        double[] doubleArray7 = balSheetFileData1.getCashQtr();
        double[] doubleArray8 = balSheetFileData1.getStInvestQtr();
        double[] doubleArray9 = balSheetFileData1.getNetFixedAssetsQtr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertNull(doubleArray9);
    }

    @Test
    public void test05165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05165");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray4 = balSheetFileData1.getLtInvestQtr();
        double[] doubleArray5 = balSheetFileData1.getTotalAssetsYr();
        double[] doubleArray6 = balSheetFileData1.getNetFixedAssetsYr();
        double[] doubleArray7 = balSheetFileData1.getStDebtYr();
        double[] doubleArray8 = balSheetFileData1.getCashYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData9 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData10 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData9);
        java.lang.String str11 = companyFileData10.getIndustry();
        java.lang.String str12 = companyFileData10.getState();
        companyFileData10.setPhone("  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        java.lang.String str15 = companyFileData10.getName();
        int int16 = companyFileData10.getNumEmployees();
        java.lang.String str17 = companyFileData10.getName();
        java.lang.String str18 = companyFileData10.toString();
        balSheetFileData1.setNameFields(companyFileData10);
        java.lang.String str20 = balSheetFileData1.toDbOutput();
        double[] doubleArray21 = balSheetFileData1.getCurrLiabQtr();
        double[] doubleArray22 = balSheetFileData1.getTotalLiabYr();
        double[] doubleArray23 = balSheetFileData1.getTotalLiabYr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNull(doubleArray21);
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
    }

    @Test
    public void test05166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05166");
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum1 = estimateFileData0.getExchange();
        java.lang.String str2 = estimateFileData0.getIndustry();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum3 = estimateFileData0.getExchange();
        java.lang.String str4 = estimateFileData0.getIndustry();
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData5 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData(estimateFileData0);
        double double6 = estimateFileData5.getEpsQ1();
        double double7 = estimateFileData5.getEpsY0();
        org.junit.Assert.assertNull(exchEnum1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(exchEnum3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    }

    @Test
    public void test05167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05167");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setInstShareholders("");
        sharesFileData0.setVolume3m("");
        sharesFileData0.setDollar3m("");
        sharesFileData0.setInstShareholders("hi!");
        java.lang.String str9 = sharesFileData0.getName();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData10 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData10.setFromReport((int) (short) 1, 0);
        sharesFileData10.setInsiderBuyShrs("hi!");
        int int16 = sharesFileData10.getInsiderBuys();
        double[] doubleArray17 = sharesFileData10.getSharesQ();
        sharesFileData0.setSharesQ(doubleArray17);
        int int19 = sharesFileData0.getInsiderBuyShrs();
        int int20 = sharesFileData0.getInsiderBuyShrs();
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test05168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05168");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        java.lang.String str2 = companyFileData1.getZip();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData3 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData3);
        java.lang.String str5 = companyFileData4.getIndustry();
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData10 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList8);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData11 = net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData.readFromDb((java.util.List<java.lang.String>) strList8);
        java.util.List<java.lang.String> strList12 = companyFileData4.set((java.util.List<java.lang.String>) strList8);
        java.util.List<java.lang.String> strList13 = companyFileData1.set((java.util.List<java.lang.String>) strList8);
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData.readFromDb(strList13);
        double[] doubleArray15 = sharesFileData14.getSharesY();
        sharesFileData14.setInstSellShrs("ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : ticker      : \r\n  name      : hi!\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : NONE\r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : hi!\r\n  phone     : data/BigDB/\r\n  web       : null\r\n\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(incSheetFileData10);
        org.junit.Assert.assertNotNull(cashFileData11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(sharesFileData14);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0]");
    }

    @Test
    public void test05169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05169");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray4 = balSheetFileData1.getLtInvestQtr();
        double[] doubleArray5 = balSheetFileData1.getCurrLiabQtr();
        double[] doubleArray6 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray7 = balSheetFileData1.getCurrAssetsYr();
        double[] doubleArray8 = balSheetFileData1.getNetFixedAssetsYr();
        double[] doubleArray9 = balSheetFileData1.getTotalLiabQtr();
        double[] doubleArray10 = balSheetFileData1.getOtherLtLiabQtr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertNull(doubleArray9);
        org.junit.Assert.assertNull(doubleArray10);
    }

    @Test
    public void test05170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05170");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData.readSipData("out/BigDB/35/Q-1/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : \r\n  web       : null\r\n-fundamental-data-35Q-1.ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : hi!\r\n  phone     : null\r\n  web       : null\r\n");
    }

    @Test
    public void test05171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05171");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "out/BigDB/", "NONE", "ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n", "NONE", "  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n", "Cash File Data" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData10 = net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData.readFromDb((java.util.List<java.lang.String>) strList8);
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData11 = net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData.readFromDb((java.util.List<java.lang.String>) strList8);
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData12 = net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData.readFromDb((java.util.List<java.lang.String>) strList8);
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData13 = net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData.readFromDb((java.util.List<java.lang.String>) strList8);
        java.lang.String str14 = balSheetFileData13.getName();
        double[] doubleArray15 = balSheetFileData13.getTotalLiabQtr();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(cashFileData10);
        org.junit.Assert.assertNotNull(sharesFileData11);
        org.junit.Assert.assertNotNull(sharesFileData12);
        org.junit.Assert.assertNotNull(balSheetFileData13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(doubleArray15);
    }

    @Test
    public void test05172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05172");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        companyFileData1.setNumEmployees("hi!");
        java.lang.String str4 = companyFileData1.getPhone();
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData9 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList7);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData10 = net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData.readFromDb((java.util.List<java.lang.String>) strList7);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData11 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList7);
        java.util.List<java.lang.String> strList12 = companyFileData1.set((java.util.List<java.lang.String>) strList7);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData13 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList7);
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData.readFromDb((java.util.List<java.lang.String>) strList7);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData15 = net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData.readFromDb((java.util.List<java.lang.String>) strList7);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(incSheetFileData9);
        org.junit.Assert.assertNotNull(cashFileData10);
        org.junit.Assert.assertNotNull(incSheetFileData11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(incSheetFileData13);
        org.junit.Assert.assertNotNull(balSheetFileData14);
        org.junit.Assert.assertNotNull(cashFileData15);
    }

    @Test
    public void test05173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05173");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        companyFileData1.setNumEmployees("hi!");
        java.lang.String str4 = companyFileData1.getState();
        java.lang.String str5 = companyFileData1.getDowIndexStr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData6 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData7 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData6);
        companyFileData7.setNumEmployees("hi!");
        java.lang.String str10 = companyFileData7.getPhone();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData15 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList13);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData16 = net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData.readFromDb((java.util.List<java.lang.String>) strList13);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData17 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList13);
        java.util.List<java.lang.String> strList18 = companyFileData7.set((java.util.List<java.lang.String>) strList13);
        java.util.List<java.lang.String> strList19 = companyFileData1.set(strList18);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData20 = net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData.readFromDb(strList18);
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData21 = net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData.readFromDb(strList18);
        double[] doubleArray22 = balSheetFileData21.getLtInvestQtr();
        double[] doubleArray23 = balSheetFileData21.getTotalLiabQtr();
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(incSheetFileData15);
        org.junit.Assert.assertNotNull(cashFileData16);
        org.junit.Assert.assertNotNull(incSheetFileData17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(cashFileData20);
        org.junit.Assert.assertNotNull(balSheetFileData21);
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
    }

    @Test
    public void test05174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05174");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray4 = balSheetFileData1.getLtInvestQtr();
        double[] doubleArray5 = balSheetFileData1.getTotalAssetsYr();
        double[] doubleArray6 = balSheetFileData1.getNetFixedAssetsYr();
        double[] doubleArray7 = balSheetFileData1.getLtInvestQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData8 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData9 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData8);
        companyFileData9.setNumEmployees("hi!");
        java.lang.String str12 = companyFileData9.getState();
        balSheetFileData1.setNameFields(companyFileData9);
        double[] doubleArray14 = balSheetFileData1.getBvpsYr();
        double[] doubleArray15 = balSheetFileData1.getPrefStockYr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(doubleArray14);
        org.junit.Assert.assertNull(doubleArray15);
    }

    @Test
    public void test05175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05175");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setInstShareholders("");
        java.lang.String str3 = sharesFileData0.getTicker();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum4 = sharesFileData0.getExchange();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum5 = sharesFileData0.getExchange();
        int int6 = sharesFileData0.getInstSellShrs();
        java.lang.String str7 = sharesFileData0.toString();
        sharesFileData0.setDollar3m("");
        int int10 = sharesFileData0.getInstSellShrs();
        sharesFileData0.setInsiderBuys("data/BigDB/");
        double[] doubleArray13 = sharesFileData0.getSharesY();
        java.lang.String str14 = sharesFileData0.toString();
        double double15 = sharesFileData0.getInsiderOwnership();
        java.lang.String str16 = sharesFileData0.getName();
        long long17 = sharesFileData0.getVolume10d();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(exchEnum4);
        org.junit.Assert.assertNull(exchEnum5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
    }

    @Test
    public void test05176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05176");
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData0);
        double[] doubleArray2 = incSheetFileData1.getGrossIncQtr();
        double[] doubleArray3 = incSheetFileData1.getAdjToIncYr();
        double[] doubleArray4 = incSheetFileData1.getUnusualIncYr();
        double[] doubleArray5 = incSheetFileData1.getIncTaxYr();
        double[] doubleArray6 = incSheetFileData1.getAdjToIncQtr();
        double[] doubleArray7 = incSheetFileData1.getAdjToIncYr();
        double[] doubleArray8 = incSheetFileData1.getIntExpYr();
        double[] doubleArray9 = incSheetFileData1.getRdQtr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertNull(doubleArray9);
    }

    @Test
    public void test05177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05177");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        double[] doubleArray28 = fieldData27.getIncTaxQtr();
        double[] doubleArray29 = fieldData27.getOtherLtLiabYr();
        double[] doubleArray30 = fieldData27.getCapExQtr();
        java.lang.String str31 = fieldData27.getState();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum32 = fieldData27.getExchange();
        double[] doubleArray33 = fieldData27.getLtDebtYr();
        double[] doubleArray34 = fieldData27.getCurrAssetsQtr();
        double[] doubleArray35 = fieldData27.getCurrAssetsYr();
        double[] doubleArray36 = fieldData27.getPrefStockQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData37 = fieldData27.getBalSheetData();
        int int38 = fieldData27.getInsiderBuyShrs();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(doubleArray28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(exchEnum32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(doubleArray36);
        org.junit.Assert.assertNotNull(balSheetFileData37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
    }

    @Test
    public void test05178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05178");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setInstShareholders("");
        java.lang.String str3 = sharesFileData0.getTicker();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum4 = sharesFileData0.getExchange();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum5 = sharesFileData0.getExchange();
        int int6 = sharesFileData0.getInstSellShrs();
        java.lang.String str7 = sharesFileData0.getTicker();
        long long8 = sharesFileData0.getVolumeMonth3m();
        sharesFileData0.setDollar3m("out/BigDB/10/Q100/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n-fundamental-data-10Q100.NONE");
        sharesFileData0.setVolume10d("ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : NONE\r\n  phone     : null\r\n  web       : data/BigDB/\r\n");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData13 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData(sharesFileData0);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(exchEnum4);
        org.junit.Assert.assertNull(exchEnum5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    }

    @Test
    public void test05179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05179");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str2 = estimateFileData1.getName();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData3 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        double double4 = sharesFileData3.getInsiderOwnership();
        sharesFileData3.setFromReport((int) '#', (int) (byte) 100);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData8 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData9 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData8);
        double[] doubleArray10 = incSheetFileData9.getGrossIncQtr();
        double[] doubleArray11 = incSheetFileData9.getAdjToIncYr();
        double[] doubleArray12 = incSheetFileData9.getUnusualIncYr();
        double[] doubleArray13 = incSheetFileData9.getIncTaxYr();
        double[] doubleArray14 = incSheetFileData9.getNetIncYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData15 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData15);
        double[] doubleArray17 = balSheetFileData16.getOtherLtLiabYr();
        double[] doubleArray18 = balSheetFileData16.getStDebtQtr();
        double[] doubleArray19 = balSheetFileData16.getLtInvestQtr();
        double[] doubleArray20 = balSheetFileData16.getOtherLtAssetsYr();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData25 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList23);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData26 = net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData.readFromDb((java.util.List<java.lang.String>) strList23);
        java.lang.String str27 = cashFileData26.getTicker();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData28 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData(cashFileData26);
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData31 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData0, estimateFileData1, sharesFileData3, incSheetFileData9, balSheetFileData16, cashFileData28, (int) (short) 0, (int) (short) 100);
        java.lang.String str32 = estimateFileData1.getSector();
        net.ajaskey.common.DateTime dateTime33 = estimateFileData1.getLatestQtrEps();
        java.lang.String str34 = estimateFileData1.getIndustry();
        double double35 = estimateFileData1.getEpsQ0();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNull(doubleArray10);
        org.junit.Assert.assertNull(doubleArray11);
        org.junit.Assert.assertNull(doubleArray12);
        org.junit.Assert.assertNull(doubleArray13);
        org.junit.Assert.assertNull(doubleArray14);
        org.junit.Assert.assertNull(doubleArray17);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(incSheetFileData25);
        org.junit.Assert.assertNotNull(cashFileData26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(dateTime33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
    }

    @Test
    public void test05180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05180");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getLiabEquityYr();
        double[] doubleArray4 = balSheetFileData1.getInventoryYr();
        double[] doubleArray5 = balSheetFileData1.getAcctPayableYr();
        double[] doubleArray6 = balSheetFileData1.getOtherLtAssetsYr();
        double[] doubleArray7 = balSheetFileData1.getEquityQtr();
        double[] doubleArray8 = balSheetFileData1.getOtherLtAssetsQtr();
        double[] doubleArray9 = balSheetFileData1.getOtherCurrAssetsYr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertNull(doubleArray9);
    }

    @Test
    public void test05181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05181");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str2 = estimateFileData1.getName();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData3 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        double double4 = sharesFileData3.getInsiderOwnership();
        sharesFileData3.setFromReport((int) '#', (int) (byte) 100);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData8 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData9 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData8);
        double[] doubleArray10 = incSheetFileData9.getGrossIncQtr();
        double[] doubleArray11 = incSheetFileData9.getAdjToIncYr();
        double[] doubleArray12 = incSheetFileData9.getUnusualIncYr();
        double[] doubleArray13 = incSheetFileData9.getIncTaxYr();
        double[] doubleArray14 = incSheetFileData9.getNetIncYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData15 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData15);
        double[] doubleArray17 = balSheetFileData16.getOtherLtLiabYr();
        double[] doubleArray18 = balSheetFileData16.getStDebtQtr();
        double[] doubleArray19 = balSheetFileData16.getLtInvestQtr();
        double[] doubleArray20 = balSheetFileData16.getOtherLtAssetsYr();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData25 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList23);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData26 = net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData.readFromDb((java.util.List<java.lang.String>) strList23);
        java.lang.String str27 = cashFileData26.getTicker();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData28 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData(cashFileData26);
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData31 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData0, estimateFileData1, sharesFileData3, incSheetFileData9, balSheetFileData16, cashFileData28, (int) (short) 0, (int) (short) 100);
        double[] doubleArray32 = fieldData31.getNetIncYr();
        double[] doubleArray33 = fieldData31.getIntExpNonOpYr();
        int int34 = fieldData31.getInstShareholders();
        double[] doubleArray35 = fieldData31.getEquityYr();
        double[] doubleArray36 = fieldData31.getSharesY();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNull(doubleArray10);
        org.junit.Assert.assertNull(doubleArray11);
        org.junit.Assert.assertNull(doubleArray12);
        org.junit.Assert.assertNull(doubleArray13);
        org.junit.Assert.assertNull(doubleArray14);
        org.junit.Assert.assertNull(doubleArray17);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(incSheetFileData25);
        org.junit.Assert.assertNotNull(cashFileData26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0]");
    }

    @Test
    public void test05182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05182");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        double double31 = fieldData27.getEpsQ0();
        double[] doubleArray32 = fieldData27.getLtDebtQtr();
        double double33 = fieldData27.getFloatshr();
        double[] doubleArray34 = fieldData27.getStInvestQtr();
        double[] doubleArray35 = fieldData27.getDividendQtr();
        double[] doubleArray36 = fieldData27.getDepreciationYr();
        double[] doubleArray37 = fieldData27.getCashQtr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(doubleArray36);
        org.junit.Assert.assertNull(doubleArray37);
    }

    @Test
    public void test05183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05183");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray4 = balSheetFileData1.getInventoryYr();
        double[] doubleArray5 = balSheetFileData1.getCurrAssetsYr();
        double[] doubleArray6 = balSheetFileData1.getInventoryQtr();
        double[] doubleArray7 = balSheetFileData1.getStInvestYr();
        double[] doubleArray8 = balSheetFileData1.getAcctRxQtr();
        java.lang.String str9 = balSheetFileData1.getIndustry();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test05184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05184");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        double[] doubleArray31 = fieldData27.getInventoryQtr();
        double[] doubleArray32 = fieldData27.getBvpsQtr();
        double double33 = fieldData27.getEpsQ1();
        double double34 = fieldData27.getInstOwnership();
        double[] doubleArray35 = fieldData27.getCashQtr();
        fieldData27.setQuarter((int) '#');
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNull(doubleArray35);
    }

    @Test
    public void test05185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05185");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        double double31 = fieldData27.getEpsQ0();
        double double32 = fieldData27.getEpsQ1();
        double[] doubleArray33 = fieldData27.getEpsDilContYr();
        double[] doubleArray34 = fieldData27.getPreTaxIncQtr();
        double[] doubleArray35 = fieldData27.getEpsContQtr();
        java.lang.String str36 = fieldData27.getSnpIndexStr();
        double[] doubleArray37 = fieldData27.getRdQtr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNull(doubleArray37);
    }

    @Test
    public void test05186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05186");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        boolean boolean2 = companyFileData1.isDrp();
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData3 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str4 = estimateFileData3.getName();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData5 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData5.setInstShareholders("");
        sharesFileData5.setDollar3m("data/BigDB/");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData10 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData11 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData10);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData12 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str13 = estimateFileData12.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData14 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData14.setInsiderNetPercentOutstanding("");
        double[] doubleArray17 = sharesFileData14.getSharesQ();
        sharesFileData14.setInsiderBuys("");
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData24 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList22);
        double[] doubleArray25 = incSheetFileData24.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData26 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData26);
        double[] doubleArray28 = balSheetFileData27.getOtherLtLiabYr();
        double[] doubleArray29 = balSheetFileData27.getStDebtQtr();
        double[] doubleArray30 = balSheetFileData27.getInventoryYr();
        java.lang.String str31 = balSheetFileData27.toString();
        double[] doubleArray32 = balSheetFileData27.getNetFixedAssetsYr();
        double[] doubleArray33 = balSheetFileData27.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData34 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData37 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData11, estimateFileData12, sharesFileData14, incSheetFileData24, balSheetFileData27, cashFileData34, (int) (short) 100, (int) (byte) 100);
        double[] doubleArray38 = incSheetFileData24.getIntExpNonOpYr();
        double[] doubleArray39 = incSheetFileData24.getEpsYr();
        double[] doubleArray40 = incSheetFileData24.getGrossIncQtr();
        double[] doubleArray41 = incSheetFileData24.getGrossOpIncQtr();
        double[] doubleArray42 = incSheetFileData24.getNetIncYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData43 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData44 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData43);
        double[] doubleArray45 = balSheetFileData44.getOtherLtLiabYr();
        double[] doubleArray46 = balSheetFileData44.getStDebtQtr();
        double[] doubleArray47 = balSheetFileData44.getInventoryYr();
        java.lang.String str48 = balSheetFileData44.toString();
        double[] doubleArray49 = balSheetFileData44.getBvpsQtr();
        double[] doubleArray50 = balSheetFileData44.getStDebtQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData51 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData52 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData51);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData53 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str54 = estimateFileData53.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData55 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData55.setInsiderNetPercentOutstanding("");
        double[] doubleArray58 = sharesFileData55.getSharesQ();
        sharesFileData55.setInsiderBuys("");
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList63 = new java.util.ArrayList<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData65 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList63);
        double[] doubleArray66 = incSheetFileData65.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData67 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData68 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData67);
        double[] doubleArray69 = balSheetFileData68.getOtherLtLiabYr();
        double[] doubleArray70 = balSheetFileData68.getStDebtQtr();
        double[] doubleArray71 = balSheetFileData68.getInventoryYr();
        java.lang.String str72 = balSheetFileData68.toString();
        double[] doubleArray73 = balSheetFileData68.getNetFixedAssetsYr();
        double[] doubleArray74 = balSheetFileData68.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData75 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData78 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData52, estimateFileData53, sharesFileData55, incSheetFileData65, balSheetFileData68, cashFileData75, (int) (short) 100, (int) (byte) 100);
        java.lang.String str79 = fieldData78.getStreet();
        double[] doubleArray80 = fieldData78.getOtherLtAssetsQtr();
        double[] doubleArray81 = fieldData78.getTotalOpExpYr();
        double double82 = fieldData78.getEpsY0();
        double[] doubleArray83 = fieldData78.getIncPrimaryEpsQtr();
        double[] doubleArray84 = fieldData78.getLiabEquityYr();
        boolean boolean85 = fieldData78.isDrp();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData86 = fieldData78.getCashData();
        double[] doubleArray87 = cashFileData86.getCashFromFinQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData90 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData3, sharesFileData5, incSheetFileData24, balSheetFileData44, cashFileData86, 6, (int) '#');
        java.lang.String str91 = balSheetFileData44.getTicker();
        double[] doubleArray92 = balSheetFileData44.getOtherLtAssetsYr();
        double[] doubleArray93 = balSheetFileData44.getGoodwillYr();
        double[] doubleArray94 = balSheetFileData44.getAcctPayableYr();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0]");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(incSheetFileData24);
        org.junit.Assert.assertNull(doubleArray25);
        org.junit.Assert.assertNull(doubleArray28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(doubleArray38);
        org.junit.Assert.assertNull(doubleArray39);
        org.junit.Assert.assertNull(doubleArray40);
        org.junit.Assert.assertNull(doubleArray41);
        org.junit.Assert.assertNull(doubleArray42);
        org.junit.Assert.assertNull(doubleArray45);
        org.junit.Assert.assertNull(doubleArray46);
        org.junit.Assert.assertNull(doubleArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNull(doubleArray49);
        org.junit.Assert.assertNull(doubleArray50);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0]");
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(incSheetFileData65);
        org.junit.Assert.assertNull(doubleArray66);
        org.junit.Assert.assertNull(doubleArray69);
        org.junit.Assert.assertNull(doubleArray70);
        org.junit.Assert.assertNull(doubleArray71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNull(doubleArray73);
        org.junit.Assert.assertNull(doubleArray74);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNull(doubleArray80);
        org.junit.Assert.assertNull(doubleArray81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertNull(doubleArray83);
        org.junit.Assert.assertNull(doubleArray84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(cashFileData86);
        org.junit.Assert.assertNull(doubleArray87);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "" + "'", str91, "");
        org.junit.Assert.assertNull(doubleArray92);
        org.junit.Assert.assertNull(doubleArray93);
        org.junit.Assert.assertNull(doubleArray94);
    }

    @Test
    public void test05187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05187");
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData0);
        double[] doubleArray2 = incSheetFileData1.getGrossIncQtr();
        double[] doubleArray3 = incSheetFileData1.getRdQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum4 = incSheetFileData1.getExchange();
        double[] doubleArray5 = incSheetFileData1.getIncTaxQtr();
        double[] doubleArray6 = incSheetFileData1.getPreTaxIncYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData7 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData1);
        double[] doubleArray8 = incSheetFileData1.getNetIncYr();
        java.lang.String str9 = incSheetFileData1.toDbOutput();
        double[] doubleArray10 = incSheetFileData1.getIncAfterTaxQtr();
        double[] doubleArray11 = incSheetFileData1.getAdjToIncQtr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(exchEnum4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(doubleArray10);
        org.junit.Assert.assertNull(doubleArray11);
    }

    @Test
    public void test05188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05188");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setInstShareholders("");
        java.lang.String str3 = sharesFileData0.getTicker();
        sharesFileData0.setPrice("Cash File Data");
        long long6 = sharesFileData0.getVolume10d();
        double double7 = sharesFileData0.getFloatshr();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    }

    @Test
    public void test05189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05189");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        double[] doubleArray31 = fieldData27.getInventoryQtr();
        double[] doubleArray32 = fieldData27.getBvpsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData33 = fieldData27.getCashData();
        double[] doubleArray34 = fieldData27.getCapExQtr();
        double[] doubleArray35 = fieldData27.getLtInvestQtr();
        double[] doubleArray36 = fieldData27.getEpsDilYr();
        int int37 = fieldData27.getInsiderSells();
        java.lang.String str38 = fieldData27.getSnpIndexStr();
        int int39 = fieldData27.getInsiderBuyShrs();
        int int40 = fieldData27.getInsiderSellShrs();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNotNull(cashFileData33);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(doubleArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
    }

    @Test
    public void test05190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05190");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double[] doubleArray30 = fieldData27.getDepreciationYr();
        java.lang.String str31 = fieldData27.getSector();
        double double32 = fieldData27.getEpsQ1();
        double[] doubleArray33 = fieldData27.getNonrecurringItemsYr();
        java.lang.String str34 = fieldData27.getStreet();
        double[] doubleArray35 = fieldData27.getSalesQtr();
        int int36 = fieldData27.getInsiderBuys();
        double[] doubleArray37 = fieldData27.getIncPrimaryEpsQtr();
        double[] doubleArray38 = fieldData27.getGrossIncQtr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(doubleArray37);
        org.junit.Assert.assertNull(doubleArray38);
    }

    @Test
    public void test05191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05191");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getStDebtQtr();
        double[] doubleArray30 = fieldData27.getEpsContQtr();
        double[] doubleArray31 = fieldData27.getPrefStockYr();
        java.lang.String str32 = fieldData27.getWeb();
        double[] doubleArray33 = fieldData27.getCurrAssetsYr();
        double[] doubleArray34 = fieldData27.getCashQtr();
        double[] doubleArray35 = fieldData27.getEpsDilContQtr();
        int int36 = fieldData27.getInsiderSellShrs();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
    }

    @Test
    public void test05192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05192");
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData0);
        double[] doubleArray2 = incSheetFileData1.getIntExpQtr();
        java.lang.String str3 = incSheetFileData1.getIndustry();
        double[] doubleArray4 = incSheetFileData1.getUnusualIncYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData5 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData6 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData5);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData7 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str8 = estimateFileData7.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData9 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData9.setInsiderNetPercentOutstanding("");
        double[] doubleArray12 = sharesFileData9.getSharesQ();
        sharesFileData9.setInsiderBuys("");
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData19 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList17);
        double[] doubleArray20 = incSheetFileData19.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData21 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData22 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData21);
        double[] doubleArray23 = balSheetFileData22.getOtherLtLiabYr();
        double[] doubleArray24 = balSheetFileData22.getStDebtQtr();
        double[] doubleArray25 = balSheetFileData22.getInventoryYr();
        java.lang.String str26 = balSheetFileData22.toString();
        double[] doubleArray27 = balSheetFileData22.getNetFixedAssetsYr();
        double[] doubleArray28 = balSheetFileData22.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData29 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData32 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData6, estimateFileData7, sharesFileData9, incSheetFileData19, balSheetFileData22, cashFileData29, (int) (short) 100, (int) (byte) 100);
        java.lang.String str33 = fieldData32.getStreet();
        boolean boolean34 = fieldData32.isDrp();
        double[] doubleArray35 = fieldData32.getCashFromOpsQtr();
        double[] doubleArray36 = fieldData32.getInventoryYr();
        double[] doubleArray37 = fieldData32.getOtherCurrLiabYr();
        double[] doubleArray38 = fieldData32.getIncPrimaryEpsQtr();
        double double39 = fieldData32.getFloatshr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData40 = fieldData32.getShares();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData41 = fieldData32.getCompanyInfo();
        java.lang.String str42 = companyFileData41.getPhone();
        companyFileData41.setSnpIndex("ticker      : \r\n  name      : ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : Cash File Data\r\n  web       : null\r\n");
        incSheetFileData1.setNameFields(companyFileData41);
        java.lang.String str46 = companyFileData41.getTicker();
        companyFileData41.setAdr("out/BigDB/1/Q52/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n-fundamental-data-1Q52.out/BigDB/-1/Q1/out/BigDB/97/Q0/name-fundamental-data-97Q0.data/BigDB/-fundamental-data--1Q1.out/BigDB/10/Q1/-fundamental-data-10Q1.out/BigDB/97/Q0/name-fundamental-data-97Q0.data/BigDB/");
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0]");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(incSheetFileData19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(doubleArray24);
        org.junit.Assert.assertNull(doubleArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNull(doubleArray27);
        org.junit.Assert.assertNull(doubleArray28);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(doubleArray36);
        org.junit.Assert.assertNull(doubleArray37);
        org.junit.Assert.assertNull(doubleArray38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(sharesFileData40);
        org.junit.Assert.assertNotNull(companyFileData41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
    }

    @Test
    public void test05193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05193");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double[] doubleArray30 = fieldData27.getStDebtYr();
        double[] doubleArray31 = fieldData27.getSharesQ();
        java.lang.String str32 = fieldData27.getSector();
        double[] doubleArray33 = fieldData27.getCashQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData34 = fieldData27.getCashData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData35 = fieldData27.getCashData();
        java.lang.String str36 = cashFileData35.getTicker();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0]");
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNotNull(cashFileData34);
        org.junit.Assert.assertNotNull(cashFileData35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
    }

    @Test
    public void test05194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05194");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData.find("out/BigDB/35/Q-1/out/BigDB/97/Q0/name-fundamental-data-97Q0.data/BigDB/-fundamental-data-35Q-1.NONE");
        org.junit.Assert.assertNull(balSheetFileData1);
    }

    @Test
    public void test05195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05195");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        double[] doubleArray31 = fieldData27.getInventoryQtr();
        double[] doubleArray32 = fieldData27.getBvpsQtr();
        double double33 = fieldData27.getEpsQ1();
        double[] doubleArray34 = fieldData27.getNetIncQtr();
        double[] doubleArray35 = fieldData27.getStInvestQtr();
        java.lang.String str36 = fieldData27.getTicker();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData37 = fieldData27.getBalSheetData();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(balSheetFileData37);
    }

    @Test
    public void test05196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05196");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        companyFileData1.setZip("hi!");
        companyFileData1.setIndustry("");
        companyFileData1.setStreet("");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
    }

    @Test
    public void test05197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05197");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        boolean boolean29 = fieldData27.isDrp();
        double double30 = fieldData27.getBeta();
        long long31 = fieldData27.getVolumeMonth3m();
        double[] doubleArray32 = fieldData27.getAcctPayableYr();
        boolean boolean33 = fieldData27.isAdr();
        double[] doubleArray34 = fieldData27.getIntExpQtr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(doubleArray34);
    }

    @Test
    public void test05198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05198");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData4 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList2);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData5 = net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData.readFromDb((java.util.List<java.lang.String>) strList2);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData6 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData(cashFileData5);
        double[] doubleArray7 = cashFileData6.getCashFromFinQtr();
        java.lang.String str8 = cashFileData6.toString();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(incSheetFileData4);
        org.junit.Assert.assertNotNull(cashFileData5);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Cash File Data" + "'", str8, "Cash File Data");
    }

    @Test
    public void test05199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05199");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        double[] doubleArray28 = fieldData27.getIncTaxQtr();
        int int29 = fieldData27.getInsiderBuyShrs();
        double[] doubleArray30 = fieldData27.getCurrAssetsQtr();
        double[] doubleArray31 = fieldData27.getOtherCurrLiabYr();
        double double32 = fieldData27.getPrice52hi();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(doubleArray28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
    }

    @Test
    public void test05200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05200");
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData0);
        double[] doubleArray2 = incSheetFileData1.getGrossIncQtr();
        double[] doubleArray3 = incSheetFileData1.getAdjToIncYr();
        double[] doubleArray4 = incSheetFileData1.getEpsYr();
        java.lang.String str5 = incSheetFileData1.getName();
        double[] doubleArray6 = incSheetFileData1.getNonrecurringItemsQtr();
        double[] doubleArray7 = incSheetFileData1.getIncTaxQtr();
        java.lang.String str8 = incSheetFileData1.getName();
        double[] doubleArray9 = incSheetFileData1.getNetIncQtr();
        java.lang.String str10 = incSheetFileData1.getSector();
        double[] doubleArray11 = incSheetFileData1.getNonrecurringItemsQtr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(doubleArray9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(doubleArray11);
    }

    @Test
    public void test05201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05201");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        double[] doubleArray28 = fieldData27.getIncTaxQtr();
        double[] doubleArray29 = fieldData27.getOtherLtLiabYr();
        double[] doubleArray30 = fieldData27.getCapExQtr();
        java.lang.String str31 = fieldData27.getState();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum32 = fieldData27.getExchange();
        double[] doubleArray33 = fieldData27.getLtDebtYr();
        double[] doubleArray34 = fieldData27.getCurrAssetsQtr();
        double[] doubleArray35 = fieldData27.getIntExpNonOpQtr();
        fieldData27.setQuarter((int) (short) 100);
        double[] doubleArray38 = fieldData27.getCapExQtr();
        double[] doubleArray39 = fieldData27.getAcctRxQtr();
        boolean boolean40 = fieldData27.isDrp();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData41 = fieldData27.getBalSheetData();
        double[] doubleArray42 = fieldData27.getAdjToIncQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SnpEnum snpEnum43 = fieldData27.getSnpIndex();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(doubleArray28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(exchEnum32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(doubleArray38);
        org.junit.Assert.assertNull(doubleArray39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(balSheetFileData41);
        org.junit.Assert.assertNull(doubleArray42);
        org.junit.Assert.assertNull(snpEnum43);
    }

    @Test
    public void test05202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05202");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double[] doubleArray30 = fieldData27.getStDebtYr();
        double[] doubleArray31 = fieldData27.getSharesQ();
        double[] doubleArray32 = fieldData27.getOtherCurrLiabYr();
        double[] doubleArray33 = fieldData27.getPrefStockQtr();
        double[] doubleArray34 = fieldData27.getIntExpYr();
        double double35 = fieldData27.getInstOwnership();
        java.lang.String str36 = fieldData27.getStreet();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0]");
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNull(str36);
    }

    @Test
    public void test05203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05203");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray4 = balSheetFileData1.getLtInvestQtr();
        double[] doubleArray5 = balSheetFileData1.getTotalAssetsYr();
        double[] doubleArray6 = balSheetFileData1.getNetFixedAssetsYr();
        double[] doubleArray7 = balSheetFileData1.getOtherLtAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData8 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData9 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData8);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData10 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str11 = estimateFileData10.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData12 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData12.setInsiderNetPercentOutstanding("");
        double[] doubleArray15 = sharesFileData12.getSharesQ();
        sharesFileData12.setInsiderBuys("");
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData22 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList20);
        double[] doubleArray23 = incSheetFileData22.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData24 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData25 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData24);
        double[] doubleArray26 = balSheetFileData25.getOtherLtLiabYr();
        double[] doubleArray27 = balSheetFileData25.getStDebtQtr();
        double[] doubleArray28 = balSheetFileData25.getInventoryYr();
        java.lang.String str29 = balSheetFileData25.toString();
        double[] doubleArray30 = balSheetFileData25.getNetFixedAssetsYr();
        double[] doubleArray31 = balSheetFileData25.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData32 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData35 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData9, estimateFileData10, sharesFileData12, incSheetFileData22, balSheetFileData25, cashFileData32, (int) (short) 100, (int) (byte) 100);
        companyFileData9.setZip("hi!");
        companyFileData9.setIndustry("");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData40 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData9);
        balSheetFileData1.setNameFields(companyFileData9);
        java.lang.String str42 = balSheetFileData1.getIndustry();
        double[] doubleArray43 = balSheetFileData1.getInventoryYr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0]");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(incSheetFileData22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(doubleArray26);
        org.junit.Assert.assertNull(doubleArray27);
        org.junit.Assert.assertNull(doubleArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNull(doubleArray43);
    }

    @Test
    public void test05204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05204");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setInstShareholders("");
        sharesFileData0.setVolume3m("");
        sharesFileData0.setDollar3m("");
        int int7 = sharesFileData0.getInsiderBuyShrs();
        sharesFileData0.setVolume10d("hi!");
        java.lang.String str10 = sharesFileData0.getName();
        sharesFileData0.setInsiderSellShrs("out/BigDB/");
        java.lang.String str13 = sharesFileData0.getSector();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum14 = sharesFileData0.getExchange();
        java.lang.String str15 = sharesFileData0.getIndustry();
        int int16 = sharesFileData0.getInsiderBuyShrs();
        double double17 = sharesFileData0.getInstOwnership();
        sharesFileData0.setInsiderOwnership("");
        double[] doubleArray20 = sharesFileData0.getSharesQ();
        sharesFileData0.setInsiderSells("out/BigDB/100/Q10/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n-fundamental-data-100Q10.Cash File Data");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(exchEnum14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0]");
    }

    @Test
    public void test05205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05205");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        boolean boolean29 = fieldData27.isDrp();
        double[] doubleArray30 = fieldData27.getCashFromOpsQtr();
        double[] doubleArray31 = fieldData27.getRdQtr();
        double double32 = fieldData27.getPrice52hi();
        double[] doubleArray33 = fieldData27.getPrefStockYr();
        net.ajaskey.common.DateTime dateTime34 = fieldData27.getLatestQtrEps();
        double[] doubleArray35 = fieldData27.getLtInvestYr();
        double[] doubleArray36 = fieldData27.getIncAfterTaxYr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(dateTime34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(doubleArray36);
    }

    @Test
    public void test05206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05206");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData.find("out/BigDB/10/Q10/out/BigDB/0/Q10/out/BigDB/97/Q0/name-fundamental-data-97Q0.data/BigDB/-fundamental-data-0Q10.out/BigDB/97/Q0/name-fundamental-data-97Q0.data/BigDB/-fundamental-data-10Q10.");
        org.junit.Assert.assertNull(balSheetFileData1);
    }

    @Test
    public void test05207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05207");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getGoodwillYr();
        double double30 = fieldData27.getEpsQ1();
        double[] doubleArray31 = fieldData27.getSharesY();
        double[] doubleArray32 = fieldData27.getIncPrimaryEpsQtr();
        int int33 = fieldData27.getNumEmployees();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0]");
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
    }

    @Test
    public void test05208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05208");
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData0);
        double[] doubleArray2 = incSheetFileData1.getGrossIncQtr();
        double[] doubleArray3 = incSheetFileData1.getAdjToIncYr();
        double[] doubleArray4 = incSheetFileData1.getIntExpNonOpQtr();
        double[] doubleArray5 = incSheetFileData1.getTotalOpExpYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum6 = incSheetFileData1.getExchange();
        double[] doubleArray7 = incSheetFileData1.getEpsDilYr();
        double[] doubleArray8 = incSheetFileData1.getNetIncQtr();
        double[] doubleArray9 = incSheetFileData1.getUnusualIncYr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(exchEnum6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertNull(doubleArray9);
    }

    @Test
    public void test05209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05209");
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData3 = net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData.getFromMemory("out/BigDB/10/Q100/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n-fundamental-data-10Q100.NONE", (int) (short) 100, (int) (short) 10);
        org.junit.Assert.assertNull(fieldData3);
    }

    @Test
    public void test05210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05210");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray4 = balSheetFileData1.getLtInvestQtr();
        double[] doubleArray5 = balSheetFileData1.getTotalAssetsYr();
        double[] doubleArray6 = balSheetFileData1.getNetFixedAssetsYr();
        double[] doubleArray7 = balSheetFileData1.getLtInvestQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData8 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData9 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData8);
        companyFileData9.setNumEmployees("hi!");
        java.lang.String str12 = companyFileData9.getState();
        balSheetFileData1.setNameFields(companyFileData9);
        companyFileData9.setCountry("hi!");
        java.lang.String str16 = companyFileData9.getStreet();
        companyFileData9.setStreet("ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : NONE\r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n");
        companyFileData9.setNumEmployees("ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n");
        companyFileData9.setCountry("ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : NONE\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : NONE\r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : NONE\r\n  phone     : null\r\n  web       : null\r\n");
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test05211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05211");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        int int31 = fieldData27.getInsiderSells();
        double[] doubleArray32 = fieldData27.getOtherLtAssetsYr();
        int int33 = fieldData27.getQuarter();
        double[] doubleArray34 = fieldData27.getEpsDilYr();
        boolean boolean35 = fieldData27.isAdr();
        java.lang.String str36 = fieldData27.getState();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str36);
    }

    @Test
    public void test05212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05212");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setInstShareholders("");
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum3 = sharesFileData0.getExchange();
        sharesFileData0.setMktCap("  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        double double6 = sharesFileData0.getPrice52hi();
        int int7 = sharesFileData0.getInstShareholders();
        sharesFileData0.setInsiderBuys("ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n");
        org.junit.Assert.assertNull(exchEnum3);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test05213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05213");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getOtherLtAssetsQtr();
        double[] doubleArray30 = fieldData27.getTotalOpExpYr();
        double[] doubleArray31 = fieldData27.getStInvestQtr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
    }

    @Test
    public void test05214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05214");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setInsiderNetPercentOutstanding("");
        int int3 = sharesFileData0.getInstBuyShrs();
        double double4 = sharesFileData0.getPrice();
        double double5 = sharesFileData0.getDollar3m();
        sharesFileData0.setDollar3m("");
        sharesFileData0.setDollar3m("out/BigDB/1/Q97/  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n-fundamental-data-1Q97.hi!");
        sharesFileData0.setFromReport((int) (byte) 0, (int) (byte) 100);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    }

    @Test
    public void test05215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05215");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getPrefStockYr();
        double[] doubleArray30 = fieldData27.getIncAfterTaxQtr();
        double[] doubleArray31 = fieldData27.getBvpsYr();
        double[] doubleArray32 = fieldData27.getGrossOpIncQtr();
        double[] doubleArray33 = fieldData27.getDepreciationQtr();
        double[] doubleArray34 = fieldData27.getPrefStockQtr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(doubleArray34);
    }

    @Test
    public void test05216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05216");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        double[] doubleArray31 = fieldData27.getNetIncYr();
        double[] doubleArray32 = fieldData27.getDividendQtr();
        int int33 = fieldData27.getNumEmployees();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
    }

    @Test
    public void test05217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05217");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setInstShareholders("");
        sharesFileData0.setVolume3m("");
        sharesFileData0.setDollar3m("");
        sharesFileData0.setDollar3m("hi!");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData9 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData9.setFromReport((int) (short) 1, 0);
        sharesFileData9.setInsiderBuyShrs("hi!");
        int int15 = sharesFileData9.getInsiderBuys();
        double[] doubleArray16 = sharesFileData9.getSharesQ();
        sharesFileData0.setSharesY(doubleArray16);
        sharesFileData0.setInstSellShrs("out/BigDB/100/Q0/-fundamental-data-100Q0.out/BigDB/100/Q10/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n-fundamental-data-100Q10.Cash File Data");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0]");
    }

    @Test
    public void test05218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05218");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        java.lang.String str31 = fieldData27.getSic();
        double[] doubleArray32 = fieldData27.getAcctRxQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData33 = fieldData27.getShares();
        double[] doubleArray34 = fieldData27.getGoodwillYr();
        double[] doubleArray35 = fieldData27.getCashFromInvQtr();
        java.lang.String str36 = fieldData27.getIndustry();
        double[] doubleArray37 = fieldData27.getCashQtr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNotNull(sharesFileData33);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(doubleArray37);
    }

    @Test
    public void test05219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05219");
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str1 = estimateFileData0.getName();
        java.lang.String str2 = estimateFileData0.getIndustry();
        java.lang.String str3 = estimateFileData0.getName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test05220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05220");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "out/BigDB/", "NONE", "ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n", "NONE", "  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n", "Cash File Data" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData10 = net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData.readFromDb((java.util.List<java.lang.String>) strList8);
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData11 = net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData.readFromDb((java.util.List<java.lang.String>) strList8);
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData12 = net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData.readFromDb((java.util.List<java.lang.String>) strList8);
        double double13 = sharesFileData12.getInsiderNetPercentOutstanding();
        int int14 = sharesFileData12.getInsiderSellShrs();
        java.lang.String str15 = sharesFileData12.getTicker();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(cashFileData10);
        org.junit.Assert.assertNotNull(sharesFileData11);
        org.junit.Assert.assertNotNull(sharesFileData12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test05221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05221");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        double[] doubleArray31 = fieldData27.getNetIncYr();
        int int32 = fieldData27.getInsiderSellShrs();
        net.ajaskey.common.DateTime dateTime33 = fieldData27.getLatestQtrEps();
        java.lang.String str34 = fieldData27.getWeb();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNull(dateTime33);
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test05222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05222");
        java.lang.String[] strArray1 = new java.lang.String[] { "  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData4 = net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData.readFromDb((java.util.List<java.lang.String>) strList2);
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData5 = net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData.readFromDb((java.util.List<java.lang.String>) strList2);
        double[] doubleArray6 = balSheetFileData5.getOtherCurrAssetsQtr();
        java.lang.String str7 = balSheetFileData5.getSector();
        double[] doubleArray8 = balSheetFileData5.getLtDebtYr();
        double[] doubleArray9 = balSheetFileData5.getStDebtQtr();
        double[] doubleArray10 = balSheetFileData5.getStDebtYr();
        double[] doubleArray11 = balSheetFileData5.getLiabEquityQtr();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(estimateFileData4);
        org.junit.Assert.assertNotNull(balSheetFileData5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertNull(doubleArray9);
        org.junit.Assert.assertNull(doubleArray10);
        org.junit.Assert.assertNull(doubleArray11);
    }

    @Test
    public void test05223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05223");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        double[] doubleArray28 = incSheetFileData14.getGrossIncYr();
        double[] doubleArray29 = incSheetFileData14.getIncPrimaryEpsYr();
        double[] doubleArray30 = incSheetFileData14.getTotalOpExpQtr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(doubleArray28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
    }

    @Test
    public void test05224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05224");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        java.lang.String str2 = companyFileData1.getIndustry();
        java.lang.String str3 = companyFileData1.getState();
        companyFileData1.setPhone("  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        java.lang.String str6 = companyFileData1.getName();
        int int7 = companyFileData1.getNumEmployees();
        companyFileData1.setSnpIndex("ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : NONE\r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : NONE\r\n  phone     : null\r\n  web       : null\r\n");
        java.lang.String str10 = companyFileData1.getCountry();
        companyFileData1.setWeb("Cash File Data");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test05225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05225");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        companyFileData1.setZip("hi!");
        companyFileData1.setIndustry("");
        java.lang.String str32 = companyFileData1.getZip();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
    }

    @Test
    public void test05226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05226");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setInstShareholders("");
        java.lang.String str3 = sharesFileData0.getTicker();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum4 = sharesFileData0.getExchange();
        double double5 = sharesFileData0.getPrice();
        sharesFileData0.setFloatshr("out/BigDB/10/Q100/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n-fundamental-data-10Q100.NONE");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(exchEnum4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    }

    @Test
    public void test05227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05227");
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData0);
        double[] doubleArray2 = incSheetFileData1.getGrossIncQtr();
        double[] doubleArray3 = incSheetFileData1.getRdQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum4 = incSheetFileData1.getExchange();
        double[] doubleArray5 = incSheetFileData1.getEpsYr();
        double[] doubleArray6 = incSheetFileData1.getRdYr();
        double[] doubleArray7 = incSheetFileData1.getTotalOpExpYr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(exchEnum4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
    }

    @Test
    public void test05228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05228");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        boolean boolean29 = fieldData27.isDrp();
        double[] doubleArray30 = fieldData27.getCashFromOpsQtr();
        java.lang.String str31 = fieldData27.getCity();
        double[] doubleArray32 = fieldData27.getAcctPayableYr();
        double[] doubleArray33 = fieldData27.getCurrLiabYr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
    }

    @Test
    public void test05229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05229");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getLiabEquityYr();
        double[] doubleArray4 = balSheetFileData1.getOtherCurrAssetsQtr();
        double[] doubleArray5 = balSheetFileData1.getAcctPayableYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData6 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData7 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData6);
        java.lang.String str8 = companyFileData7.getIndustry();
        companyFileData7.setSnpIndex("");
        companyFileData7.setPhone("hi!");
        companyFileData7.setDowIndex("");
        java.lang.String str15 = companyFileData7.getState();
        balSheetFileData1.setNameFields(companyFileData7);
        double[] doubleArray17 = balSheetFileData1.getPrefStockYr();
        double[] doubleArray18 = balSheetFileData1.getOtherCurrLiabYr();
        double[] doubleArray19 = balSheetFileData1.getAcctRxQtr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(doubleArray17);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
    }

    @Test
    public void test05230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05230");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double[] doubleArray30 = fieldData27.getStDebtYr();
        double[] doubleArray31 = fieldData27.getSharesQ();
        java.lang.String str32 = fieldData27.getSector();
        double[] doubleArray33 = fieldData27.getCashQtr();
        int int34 = fieldData27.getInsiderNetTrades();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0]");
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
    }

    @Test
    public void test05231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05231");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray4 = balSheetFileData1.getLtInvestQtr();
        double[] doubleArray5 = balSheetFileData1.getTotalAssetsYr();
        double[] doubleArray6 = balSheetFileData1.getStInvestYr();
        java.lang.String str7 = balSheetFileData1.getTicker();
        double[] doubleArray8 = balSheetFileData1.getTotalAssetsQtr();
        double[] doubleArray9 = balSheetFileData1.getBvpsYr();
        java.lang.String str10 = balSheetFileData1.getTicker();
        double[] doubleArray11 = balSheetFileData1.getOtherCurrLiabQtr();
        double[] doubleArray12 = balSheetFileData1.getGoodwillQtr();
        double[] doubleArray13 = balSheetFileData1.getLiabEquityQtr();
        double[] doubleArray14 = balSheetFileData1.getEquityYr();
        double[] doubleArray15 = balSheetFileData1.getOtherLtAssetsQtr();
        java.lang.String str16 = balSheetFileData1.toString();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertNull(doubleArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(doubleArray11);
        org.junit.Assert.assertNull(doubleArray12);
        org.junit.Assert.assertNull(doubleArray13);
        org.junit.Assert.assertNull(doubleArray14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test05232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05232");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        boolean boolean30 = fieldData27.isAdr();
        double[] doubleArray31 = fieldData27.getDividendYr();
        double[] doubleArray32 = fieldData27.getUnusualIncYr();
        double[] doubleArray33 = fieldData27.getCurrLiabYr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
    }

    @Test
    public void test05233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05233");
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readSipData("out/BigDB/-1/Q1/out/BigDB/97/Q0/name-fundamental-data-97Q0.data/BigDB/-fundamental-data--1Q1.out/BigDB/10/Q1/-fundamental-data-10Q1.out/BigDB/97/Q0/name-fundamental-data-97Q0.data/BigDB/", "out/BigDB/100/Q100/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : NONE\r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : NONE\r\n  phone     : null\r\n  web       : null\r\n-fundamental-data-100Q100.data/BigDB/");
    }

    @Test
    public void test05234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05234");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getGoodwillYr();
        double[] doubleArray30 = fieldData27.getInventoryYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData31 = fieldData27.getCashData();
        double[] doubleArray32 = fieldData27.getStDebtYr();
        double[] doubleArray33 = fieldData27.getStDebtQtr();
        double[] doubleArray34 = fieldData27.getAdjToIncQtr();
        double[] doubleArray35 = fieldData27.getPreTaxIncQtr();
        double[] doubleArray36 = fieldData27.getAdjToIncQtr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNotNull(cashFileData31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(doubleArray36);
    }

    @Test
    public void test05235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05235");
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData1);
        companyFileData2.setNumEmployees("hi!");
        java.lang.String str5 = companyFileData2.getPhone();
        estimateFileData0.setNameFields(companyFileData2);
        double double7 = estimateFileData0.getEpsY0();
        double double8 = estimateFileData0.getEpsQ0();
        net.ajaskey.common.DateTime dateTime9 = estimateFileData0.getLatestQtrEps();
        java.lang.String str10 = estimateFileData0.getSector();
        net.ajaskey.common.DateTime dateTime11 = estimateFileData0.getCurrFiscalYear();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNull(dateTime9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(dateTime11);
    }

    @Test
    public void test05236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05236");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        double[] doubleArray31 = fieldData27.getInventoryQtr();
        double[] doubleArray32 = fieldData27.getBvpsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData33 = fieldData27.getCashData();
        double[] doubleArray34 = fieldData27.getCapExQtr();
        double[] doubleArray35 = fieldData27.getLtInvestQtr();
        double[] doubleArray36 = fieldData27.getSharesQ();
        double[] doubleArray37 = fieldData27.getGrossOpIncQtr();
        double[] doubleArray38 = fieldData27.getOtherLtLiabQtr();
        double[] doubleArray39 = fieldData27.getGrossOpIncQtr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNotNull(cashFileData33);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0]");
        org.junit.Assert.assertNull(doubleArray37);
        org.junit.Assert.assertNull(doubleArray38);
        org.junit.Assert.assertNull(doubleArray39);
    }

    @Test
    public void test05237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05237");
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData0);
        java.lang.String str2 = incSheetFileData1.toDbOutput();
        double[] doubleArray3 = incSheetFileData1.getNonrecurringItemsYr();
        double[] doubleArray4 = incSheetFileData1.getIncAfterTaxQtr();
        double[] doubleArray5 = incSheetFileData1.getPreTaxIncQtr();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
    }

    @Test
    public void test05238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05238");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        double[] doubleArray28 = fieldData27.getIncTaxQtr();
        double[] doubleArray29 = fieldData27.getOtherLtLiabYr();
        double[] doubleArray30 = fieldData27.getCapExQtr();
        java.lang.String str31 = fieldData27.getState();
        double[] doubleArray32 = fieldData27.getEpsYr();
        int int33 = fieldData27.getInstBuyShrs();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(doubleArray28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
    }

    @Test
    public void test05239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05239");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray4 = balSheetFileData1.getLtInvestQtr();
        double[] doubleArray5 = balSheetFileData1.getOtherLtAssetsYr();
        double[] doubleArray6 = balSheetFileData1.getCurrLiabQtr();
        double[] doubleArray7 = balSheetFileData1.getTotalAssetsQtr();
        java.lang.String str8 = balSheetFileData1.getExchange();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test05240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05240");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str2 = estimateFileData1.getName();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData3 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        double double4 = sharesFileData3.getInsiderOwnership();
        sharesFileData3.setFromReport((int) '#', (int) (byte) 100);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData8 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData9 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData8);
        double[] doubleArray10 = incSheetFileData9.getGrossIncQtr();
        double[] doubleArray11 = incSheetFileData9.getAdjToIncYr();
        double[] doubleArray12 = incSheetFileData9.getUnusualIncYr();
        double[] doubleArray13 = incSheetFileData9.getIncTaxYr();
        double[] doubleArray14 = incSheetFileData9.getNetIncYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData15 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData15);
        double[] doubleArray17 = balSheetFileData16.getOtherLtLiabYr();
        double[] doubleArray18 = balSheetFileData16.getStDebtQtr();
        double[] doubleArray19 = balSheetFileData16.getLtInvestQtr();
        double[] doubleArray20 = balSheetFileData16.getOtherLtAssetsYr();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData25 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList23);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData26 = net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData.readFromDb((java.util.List<java.lang.String>) strList23);
        java.lang.String str27 = cashFileData26.getTicker();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData28 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData(cashFileData26);
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData31 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData0, estimateFileData1, sharesFileData3, incSheetFileData9, balSheetFileData16, cashFileData28, (int) (short) 0, (int) (short) 100);
        java.lang.String str32 = fieldData31.getTicker();
        double[] doubleArray33 = fieldData31.getCashFromOpsQtr();
        double[] doubleArray34 = fieldData31.getDividendYr();
        int int35 = fieldData31.getInstBuyShrs();
        double[] doubleArray36 = fieldData31.getAcctRxYr();
        double[] doubleArray37 = fieldData31.getGoodwillQtr();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNull(doubleArray10);
        org.junit.Assert.assertNull(doubleArray11);
        org.junit.Assert.assertNull(doubleArray12);
        org.junit.Assert.assertNull(doubleArray13);
        org.junit.Assert.assertNull(doubleArray14);
        org.junit.Assert.assertNull(doubleArray17);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(incSheetFileData25);
        org.junit.Assert.assertNotNull(cashFileData26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(doubleArray36);
        org.junit.Assert.assertNull(doubleArray37);
    }

    @Test
    public void test05241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05241");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        java.lang.String str2 = companyFileData1.getIndustry();
        companyFileData1.setSnpIndex("");
        companyFileData1.setPhone("hi!");
        companyFileData1.setCountry("out/BigDB/10/Q100/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n-fundamental-data-10Q100.NONE");
        java.lang.String str9 = companyFileData1.getSector();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test05242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05242");
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData0);
        double[] doubleArray2 = incSheetFileData1.getGrossIncQtr();
        double[] doubleArray3 = incSheetFileData1.getRdQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum4 = incSheetFileData1.getExchange();
        double[] doubleArray5 = incSheetFileData1.getOtherIncYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData6 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData7 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData6);
        java.lang.String str8 = companyFileData7.getIndustry();
        java.lang.String str9 = companyFileData7.getState();
        companyFileData7.setPhone("  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        incSheetFileData1.setNameFields(companyFileData7);
        net.ajaskey.market.tools.SIP.BigDB.dataio.DowEnum dowEnum13 = companyFileData7.getDowIndex();
        companyFileData7.setSnpIndex("Cash File Data");
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(exchEnum4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(dowEnum13);
    }

    @Test
    public void test05243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05243");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setInstShareholders("");
        sharesFileData0.setInstSellShrs("hi!");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData5 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData6 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData5);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData7 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str8 = estimateFileData7.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData9 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData9.setInsiderNetPercentOutstanding("");
        double[] doubleArray12 = sharesFileData9.getSharesQ();
        sharesFileData9.setInsiderBuys("");
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData19 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList17);
        double[] doubleArray20 = incSheetFileData19.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData21 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData22 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData21);
        double[] doubleArray23 = balSheetFileData22.getOtherLtLiabYr();
        double[] doubleArray24 = balSheetFileData22.getStDebtQtr();
        double[] doubleArray25 = balSheetFileData22.getInventoryYr();
        java.lang.String str26 = balSheetFileData22.toString();
        double[] doubleArray27 = balSheetFileData22.getNetFixedAssetsYr();
        double[] doubleArray28 = balSheetFileData22.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData29 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData32 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData6, estimateFileData7, sharesFileData9, incSheetFileData19, balSheetFileData22, cashFileData29, (int) (short) 100, (int) (byte) 100);
        companyFileData6.setZip("hi!");
        sharesFileData0.setNameFields(companyFileData6);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData36 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData6);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData37 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str38 = estimateFileData37.getName();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum39 = estimateFileData37.getExchange();
        java.lang.String str40 = estimateFileData37.getSector();
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData41 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData(estimateFileData37);
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData42 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData43 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData44 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData43);
        double[] doubleArray45 = incSheetFileData44.getGrossIncQtr();
        double[] doubleArray46 = incSheetFileData44.getRdQtr();
        double[] doubleArray47 = incSheetFileData44.getAdjToIncYr();
        double[] doubleArray48 = incSheetFileData44.getDepreciationQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData49 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData50 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData49);
        double[] doubleArray51 = balSheetFileData50.getOtherLtLiabYr();
        java.lang.String str52 = balSheetFileData50.getIndustry();
        java.lang.String str53 = balSheetFileData50.getIndustry();
        double[] doubleArray54 = balSheetFileData50.getNetFixedAssetsYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData55 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData56 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData55);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData57 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str58 = estimateFileData57.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData59 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData59.setInsiderNetPercentOutstanding("");
        double[] doubleArray62 = sharesFileData59.getSharesQ();
        sharesFileData59.setInsiderBuys("");
        java.lang.String[] strArray66 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList67 = new java.util.ArrayList<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData69 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList67);
        double[] doubleArray70 = incSheetFileData69.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData71 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData72 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData71);
        double[] doubleArray73 = balSheetFileData72.getOtherLtLiabYr();
        double[] doubleArray74 = balSheetFileData72.getStDebtQtr();
        double[] doubleArray75 = balSheetFileData72.getInventoryYr();
        java.lang.String str76 = balSheetFileData72.toString();
        double[] doubleArray77 = balSheetFileData72.getNetFixedAssetsYr();
        double[] doubleArray78 = balSheetFileData72.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData79 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData82 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData56, estimateFileData57, sharesFileData59, incSheetFileData69, balSheetFileData72, cashFileData79, (int) (short) 100, (int) (byte) 100);
        java.lang.String str83 = fieldData82.getStreet();
        double[] doubleArray84 = fieldData82.getTotalOpExpQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData85 = fieldData82.getCashData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData86 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData(cashFileData85);
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData89 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData6, estimateFileData37, sharesFileData42, incSheetFileData44, balSheetFileData50, cashFileData86, (int) (short) 100, 100);
        double double90 = estimateFileData37.getEpsQ1();
        java.lang.String str91 = estimateFileData37.getName();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0]");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(incSheetFileData19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(doubleArray24);
        org.junit.Assert.assertNull(doubleArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNull(doubleArray27);
        org.junit.Assert.assertNull(doubleArray28);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(exchEnum39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(doubleArray45);
        org.junit.Assert.assertNull(doubleArray46);
        org.junit.Assert.assertNull(doubleArray47);
        org.junit.Assert.assertNull(doubleArray48);
        org.junit.Assert.assertNull(doubleArray51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(doubleArray54);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0]");
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(incSheetFileData69);
        org.junit.Assert.assertNull(doubleArray70);
        org.junit.Assert.assertNull(doubleArray73);
        org.junit.Assert.assertNull(doubleArray74);
        org.junit.Assert.assertNull(doubleArray75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertNull(doubleArray77);
        org.junit.Assert.assertNull(doubleArray78);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNull(doubleArray84);
        org.junit.Assert.assertNotNull(cashFileData85);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        org.junit.Assert.assertNull(str91);
    }

    @Test
    public void test05244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05244");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData4 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList2);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData5 = net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData.readFromDb((java.util.List<java.lang.String>) strList2);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData6 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData(cashFileData5);
        double[] doubleArray7 = cashFileData5.getCapExQtr();
        double[] doubleArray8 = cashFileData5.getCapExQtr();
        double[] doubleArray9 = cashFileData5.getCashFromOpsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData10 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData(cashFileData5);
        double[] doubleArray11 = cashFileData10.getCashFromFinQtr();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(incSheetFileData4);
        org.junit.Assert.assertNotNull(cashFileData5);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertNull(doubleArray9);
        org.junit.Assert.assertNull(doubleArray11);
    }

    @Test
    public void test05245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05245");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray4 = balSheetFileData1.getInventoryYr();
        double[] doubleArray5 = balSheetFileData1.getCurrAssetsYr();
        double[] doubleArray6 = balSheetFileData1.getGoodwillYr();
        java.lang.String str7 = balSheetFileData1.toString();
        double[] doubleArray8 = balSheetFileData1.getGoodwillYr();
        double[] doubleArray9 = balSheetFileData1.getCurrLiabYr();
        double[] doubleArray10 = balSheetFileData1.getPrefStockQtr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertNull(doubleArray9);
        org.junit.Assert.assertNull(doubleArray10);
    }

    @Test
    public void test05246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05246");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getOtherLtAssetsQtr();
        double[] doubleArray30 = fieldData27.getTotalOpExpYr();
        double double31 = fieldData27.getEpsY0();
        double[] doubleArray32 = fieldData27.getIncPrimaryEpsQtr();
        double[] doubleArray33 = fieldData27.getLiabEquityYr();
        java.lang.String str34 = fieldData27.getCity();
        double[] doubleArray35 = fieldData27.getStDebtYr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(doubleArray35);
    }

    @Test
    public void test05247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05247");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setInstShareholders("");
        java.lang.String str3 = sharesFileData0.getTicker();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum4 = sharesFileData0.getExchange();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum5 = sharesFileData0.getExchange();
        int int6 = sharesFileData0.getInstSellShrs();
        java.lang.String str7 = sharesFileData0.toString();
        sharesFileData0.setDollar3m("");
        int int10 = sharesFileData0.getInstSellShrs();
        int int11 = sharesFileData0.getInstBuyShrs();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(exchEnum4);
        org.junit.Assert.assertNull(exchEnum5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test05248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05248");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        java.lang.String str2 = companyFileData1.getZip();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData3 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData3);
        java.lang.String str5 = companyFileData4.getIndustry();
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData10 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList8);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData11 = net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData.readFromDb((java.util.List<java.lang.String>) strList8);
        java.util.List<java.lang.String> strList12 = companyFileData4.set((java.util.List<java.lang.String>) strList8);
        java.util.List<java.lang.String> strList13 = companyFileData1.set((java.util.List<java.lang.String>) strList8);
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData.readFromDb(strList13);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData15 = net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData.readFromDb(strList13);
        double double16 = estimateFileData15.getEpsQ0();
        java.lang.String str17 = estimateFileData15.getName();
        net.ajaskey.common.DateTime dateTime18 = estimateFileData15.getLatestQtrEps();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(incSheetFileData10);
        org.junit.Assert.assertNotNull(cashFileData11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(sharesFileData14);
        org.junit.Assert.assertNotNull(estimateFileData15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(dateTime18);
    }

    @Test
    public void test05249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05249");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        java.lang.String str31 = fieldData27.getSic();
        double[] doubleArray32 = fieldData27.getAcctRxQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData33 = fieldData27.getShares();
        double[] doubleArray34 = fieldData27.getGoodwillYr();
        double[] doubleArray35 = fieldData27.getEpsQtr();
        int int36 = fieldData27.getInstBuyShrs();
        double[] doubleArray37 = fieldData27.getNetFixedAssetsQtr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNotNull(sharesFileData33);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(doubleArray37);
    }

    @Test
    public void test05250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05250");
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str1 = estimateFileData0.getName();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum2 = estimateFileData0.getExchange();
        java.lang.String str3 = estimateFileData0.getSector();
        double double4 = estimateFileData0.getEpsY1();
        net.ajaskey.common.DateTime dateTime5 = estimateFileData0.getCurrFiscalYear();
        net.ajaskey.common.DateTime dateTime6 = estimateFileData0.getLatestQtrEps();
        double double7 = estimateFileData0.getEpsY0();
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData8 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData(estimateFileData0);
        java.lang.String str9 = estimateFileData0.getTicker();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(exchEnum2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNull(dateTime5);
        org.junit.Assert.assertNull(dateTime6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test05251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05251");
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData0);
        double[] doubleArray2 = incSheetFileData1.getGrossIncYr();
        double[] doubleArray3 = incSheetFileData1.getEpsYr();
        java.lang.String str4 = incSheetFileData1.getIndustry();
        double[] doubleArray5 = incSheetFileData1.getCogsQtr();
        double[] doubleArray6 = incSheetFileData1.getRdQtr();
        double[] doubleArray7 = incSheetFileData1.getCogsQtr();
        double[] doubleArray8 = incSheetFileData1.getIncTaxYr();
        double[] doubleArray9 = incSheetFileData1.getUnusualIncQtr();
        double[] doubleArray10 = incSheetFileData1.getDepreciationQtr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertNull(doubleArray9);
        org.junit.Assert.assertNull(doubleArray10);
    }

    @Test
    public void test05252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05252");
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum1 = net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData.convertExchange("out/BigDB/100/Q100/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : NONE\r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : NONE\r\n  phone     : null\r\n  web       : null\r\n-fundamental-data-100Q100.data/BigDB/");
        org.junit.Assert.assertTrue("'" + exchEnum1 + "' != '" + net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum.NONE + "'", exchEnum1.equals(net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum.NONE));
    }

    @Test
    public void test05253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05253");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setInstShareholders("");
        sharesFileData0.setVolume3m("");
        sharesFileData0.setDollar3m("");
        sharesFileData0.setDollar3m("hi!");
        double double9 = sharesFileData0.getPrice();
        double double10 = sharesFileData0.getInstOwnership();
        java.lang.String str11 = sharesFileData0.toString();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData12 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData12.setInstShareholders("");
        sharesFileData12.setVolume3m("");
        sharesFileData12.setDollar3m("");
        sharesFileData12.setDollar3m("hi!");
        double double21 = sharesFileData12.getPrice();
        double double22 = sharesFileData12.getInstOwnership();
        sharesFileData12.setPrice("data/BigDB/");
        int int25 = sharesFileData12.getInsiderBuys();
        double double26 = sharesFileData12.getMktCap();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData27 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData28 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData27);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData29 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str30 = estimateFileData29.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData31 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData31.setInsiderNetPercentOutstanding("");
        double[] doubleArray34 = sharesFileData31.getSharesQ();
        sharesFileData31.setInsiderBuys("");
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData41 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList39);
        double[] doubleArray42 = incSheetFileData41.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData43 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData44 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData43);
        double[] doubleArray45 = balSheetFileData44.getOtherLtLiabYr();
        double[] doubleArray46 = balSheetFileData44.getStDebtQtr();
        double[] doubleArray47 = balSheetFileData44.getInventoryYr();
        java.lang.String str48 = balSheetFileData44.toString();
        double[] doubleArray49 = balSheetFileData44.getNetFixedAssetsYr();
        double[] doubleArray50 = balSheetFileData44.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData51 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData54 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData28, estimateFileData29, sharesFileData31, incSheetFileData41, balSheetFileData44, cashFileData51, (int) (short) 100, (int) (byte) 100);
        java.lang.String str55 = fieldData54.getStreet();
        boolean boolean56 = fieldData54.isDrp();
        double[] doubleArray57 = fieldData54.getCashFromOpsQtr();
        java.lang.String str58 = fieldData54.getCity();
        double[] doubleArray59 = fieldData54.getAcctPayableYr();
        double[] doubleArray60 = fieldData54.getSharesY();
        sharesFileData12.setSharesQ(doubleArray60);
        sharesFileData0.setSharesY(doubleArray60);
        sharesFileData0.setInsiderBuyShrs("out/BigDB/1/Q52/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n-fundamental-data-1Q52.out/BigDB/-1/Q1/out/BigDB/97/Q0/name-fundamental-data-97Q0.data/BigDB/-fundamental-data--1Q1.out/BigDB/10/Q1/-fundamental-data-10Q1.out/BigDB/97/Q0/name-fundamental-data-97Q0.data/BigDB/");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0]");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(incSheetFileData41);
        org.junit.Assert.assertNull(doubleArray42);
        org.junit.Assert.assertNull(doubleArray45);
        org.junit.Assert.assertNull(doubleArray46);
        org.junit.Assert.assertNull(doubleArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNull(doubleArray49);
        org.junit.Assert.assertNull(doubleArray50);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(doubleArray57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(doubleArray59);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0]");
    }

    @Test
    public void test05254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05254");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        boolean boolean29 = fieldData27.isDrp();
        double double30 = fieldData27.getBeta();
        double[] doubleArray31 = fieldData27.getAcctRxQtr();
        java.lang.String str32 = fieldData27.getState();
        double[] doubleArray33 = fieldData27.getGoodwillYr();
        java.lang.String str34 = fieldData27.getSector();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData35 = fieldData27.getCompanyInfo();
        java.lang.String str36 = companyFileData35.getName();
        boolean boolean37 = companyFileData35.isDrp();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(companyFileData35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test05255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05255");
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData0);
        double[] doubleArray2 = incSheetFileData1.getGrossIncQtr();
        double[] doubleArray3 = incSheetFileData1.getAdjToIncYr();
        double[] doubleArray4 = incSheetFileData1.getEpsYr();
        double[] doubleArray5 = incSheetFileData1.getAdjToIncYr();
        java.lang.String str6 = incSheetFileData1.toString();
        double[] doubleArray7 = incSheetFileData1.getNonrecurringItemsYr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(doubleArray7);
    }

    @Test
    public void test05256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05256");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        boolean boolean29 = fieldData27.isDrp();
        double double30 = fieldData27.getBeta();
        double[] doubleArray31 = fieldData27.getAcctRxQtr();
        double[] doubleArray32 = fieldData27.getBvpsQtr();
        double[] doubleArray33 = fieldData27.getDepreciationYr();
        double[] doubleArray34 = fieldData27.getEpsYr();
        double[] doubleArray35 = fieldData27.getCashQtr();
        double[] doubleArray36 = fieldData27.getLtDebtYr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(doubleArray36);
    }

    @Test
    public void test05257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05257");
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData0);
        double[] doubleArray2 = incSheetFileData1.getGrossIncQtr();
        double[] doubleArray3 = incSheetFileData1.getAdjToIncYr();
        double[] doubleArray4 = incSheetFileData1.getUnusualIncYr();
        double[] doubleArray5 = incSheetFileData1.getIncTaxYr();
        double[] doubleArray6 = incSheetFileData1.getIntExpNonOpQtr();
        double[] doubleArray7 = incSheetFileData1.getEpsContYr();
        double[] doubleArray8 = incSheetFileData1.getEpsDilQtr();
        double[] doubleArray9 = incSheetFileData1.getEpsContQtr();
        double[] doubleArray10 = incSheetFileData1.getSalesYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData11 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData12 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData11);
        java.lang.String str13 = companyFileData12.getIndustry();
        companyFileData12.setSnpIndex("");
        java.lang.String str16 = companyFileData12.getWeb();
        incSheetFileData1.setNameFields(companyFileData12);
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertNull(doubleArray9);
        org.junit.Assert.assertNull(doubleArray10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test05258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05258");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        java.lang.String str31 = fieldData27.getSic();
        java.lang.String str32 = fieldData27.getName();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SnpEnum snpEnum33 = fieldData27.getSnpIndex();
        double[] doubleArray34 = fieldData27.getOtherLtAssetsYr();
        double double35 = fieldData27.getEpsY1();
        net.ajaskey.common.DateTime dateTime36 = fieldData27.getCurrFiscalYear();
        double[] doubleArray37 = fieldData27.getAcctPayableQtr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(snpEnum33);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNull(dateTime36);
        org.junit.Assert.assertNull(doubleArray37);
    }

    @Test
    public void test05259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05259");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        double[] doubleArray31 = fieldData27.getInventoryQtr();
        double[] doubleArray32 = fieldData27.getBvpsQtr();
        double double33 = fieldData27.getEpsQ1();
        double[] doubleArray34 = fieldData27.getOtherLtLiabYr();
        double[] doubleArray35 = fieldData27.getBvpsYr();
        int int36 = fieldData27.getInsiderBuyShrs();
        boolean boolean37 = fieldData27.isAdr();
        double double38 = fieldData27.getMktCap();
        int int39 = fieldData27.getInsiderBuyShrs();
        double[] doubleArray40 = fieldData27.getOtherLtAssetsQtr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNull(doubleArray40);
    }

    @Test
    public void test05260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05260");
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData((int) (short) 1, 1);
    }

    @Test
    public void test05261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05261");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        double[] doubleArray31 = fieldData27.getInventoryQtr();
        double[] doubleArray32 = fieldData27.getBvpsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData33 = fieldData27.getCashData();
        double[] doubleArray34 = fieldData27.getCapExQtr();
        double[] doubleArray35 = fieldData27.getLtInvestQtr();
        double[] doubleArray36 = fieldData27.getEpsDilYr();
        boolean boolean37 = fieldData27.isDrp();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNotNull(cashFileData33);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(doubleArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test05262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05262");
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData0);
        double[] doubleArray2 = incSheetFileData1.getGrossIncQtr();
        double[] doubleArray3 = incSheetFileData1.getAdjToIncYr();
        double[] doubleArray4 = incSheetFileData1.getIncPrimaryEpsQtr();
        double[] doubleArray5 = incSheetFileData1.getRdQtr();
        double[] doubleArray6 = incSheetFileData1.getIncPrimaryEpsYr();
        double[] doubleArray7 = incSheetFileData1.getEpsQtr();
        double[] doubleArray8 = incSheetFileData1.getDepreciationQtr();
        double[] doubleArray9 = incSheetFileData1.getIncPrimaryEpsQtr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertNull(doubleArray9);
    }

    @Test
    public void test05263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05263");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        java.lang.String str2 = companyFileData1.getIndustry();
        java.lang.String str3 = companyFileData1.getState();
        companyFileData1.setPhone("  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        companyFileData1.setCity("ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : NONE\r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData8 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData1);
        java.lang.String str9 = companyFileData8.getZip();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum10 = companyFileData8.getExchange();
        java.lang.String str11 = companyFileData8.getSic();
        java.lang.String str12 = companyFileData8.getIndustry();
        java.lang.String str13 = companyFileData8.getCity();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(exchEnum10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : NONE\r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n" + "'", str13, "ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : NONE\r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n");
    }

    @Test
    public void test05264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05264");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        int int31 = fieldData27.getInsiderSells();
        java.lang.String str32 = fieldData27.getSector();
        double[] doubleArray33 = fieldData27.getGoodwillYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SnpEnum snpEnum34 = fieldData27.getSnpIndex();
        java.lang.String str35 = fieldData27.getSector();
        double[] doubleArray36 = fieldData27.getCogsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData37 = fieldData27.getCompanyInfo();
        companyFileData37.setAdr("ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : ticker      : \r\n  name      : hi!\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : NONE\r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : hi!\r\n  phone     : data/BigDB/\r\n  web       : null\r\n\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n");
        java.lang.String str40 = companyFileData37.toString();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(snpEnum34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(doubleArray36);
        org.junit.Assert.assertNotNull(companyFileData37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
    }

    @Test
    public void test05265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05265");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        java.lang.String str2 = companyFileData1.getIndustry();
        java.lang.String str3 = companyFileData1.getState();
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        double double5 = estimateFileData4.getEpsQ1();
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData6 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData(estimateFileData4);
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData7 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData8 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData9 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData8);
        double[] doubleArray10 = incSheetFileData9.getGrossIncQtr();
        double[] doubleArray11 = incSheetFileData9.getAdjToIncYr();
        double[] doubleArray12 = incSheetFileData9.getAdjToIncQtr();
        double[] doubleArray13 = incSheetFileData9.getEpsYr();
        double[] doubleArray14 = incSheetFileData9.getGrossOpIncYr();
        double[] doubleArray15 = incSheetFileData9.getIncTaxQtr();
        double[] doubleArray16 = incSheetFileData9.getOtherIncYr();
        double[] doubleArray17 = incSheetFileData9.getNetIncQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData18 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData19 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData18);
        double[] doubleArray20 = balSheetFileData19.getOtherLtLiabYr();
        double[] doubleArray21 = balSheetFileData19.getStDebtQtr();
        double[] doubleArray22 = balSheetFileData19.getInventoryYr();
        double[] doubleArray23 = balSheetFileData19.getEquityYr();
        double[] doubleArray24 = balSheetFileData19.getGoodwillQtr();
        double[] doubleArray25 = balSheetFileData19.getCashQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData26 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData26);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData28 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str29 = estimateFileData28.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData30 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData30.setInsiderNetPercentOutstanding("");
        double[] doubleArray33 = sharesFileData30.getSharesQ();
        sharesFileData30.setInsiderBuys("");
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData40 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList38);
        double[] doubleArray41 = incSheetFileData40.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData42 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData43 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData42);
        double[] doubleArray44 = balSheetFileData43.getOtherLtLiabYr();
        double[] doubleArray45 = balSheetFileData43.getStDebtQtr();
        double[] doubleArray46 = balSheetFileData43.getInventoryYr();
        java.lang.String str47 = balSheetFileData43.toString();
        double[] doubleArray48 = balSheetFileData43.getNetFixedAssetsYr();
        double[] doubleArray49 = balSheetFileData43.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData50 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData53 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData27, estimateFileData28, sharesFileData30, incSheetFileData40, balSheetFileData43, cashFileData50, (int) (short) 100, (int) (byte) 100);
        double[] doubleArray54 = fieldData53.getIncTaxQtr();
        double[] doubleArray55 = fieldData53.getOtherLtLiabYr();
        double[] doubleArray56 = fieldData53.getCapExQtr();
        java.lang.String str57 = fieldData53.getState();
        double[] doubleArray58 = fieldData53.getLtDebtQtr();
        java.lang.String str59 = fieldData53.getName();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData60 = fieldData53.getCashData();
        double[] doubleArray61 = cashFileData60.getCashFromFinQtr();
        double[] doubleArray62 = cashFileData60.getCashFromOpsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData65 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData6, sharesFileData7, incSheetFileData9, balSheetFileData19, cashFileData60, (int) (byte) 1, (int) ' ');
        double[] doubleArray66 = fieldData65.getEpsQtr();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNull(doubleArray10);
        org.junit.Assert.assertNull(doubleArray11);
        org.junit.Assert.assertNull(doubleArray12);
        org.junit.Assert.assertNull(doubleArray13);
        org.junit.Assert.assertNull(doubleArray14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray16);
        org.junit.Assert.assertNull(doubleArray17);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertNull(doubleArray21);
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(doubleArray24);
        org.junit.Assert.assertNull(doubleArray25);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0]");
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(incSheetFileData40);
        org.junit.Assert.assertNull(doubleArray41);
        org.junit.Assert.assertNull(doubleArray44);
        org.junit.Assert.assertNull(doubleArray45);
        org.junit.Assert.assertNull(doubleArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNull(doubleArray48);
        org.junit.Assert.assertNull(doubleArray49);
        org.junit.Assert.assertNull(doubleArray54);
        org.junit.Assert.assertNull(doubleArray55);
        org.junit.Assert.assertNull(doubleArray56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(doubleArray58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(cashFileData60);
        org.junit.Assert.assertNull(doubleArray61);
        org.junit.Assert.assertNull(doubleArray62);
        org.junit.Assert.assertNull(doubleArray66);
    }

    @Test
    public void test05266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05266");
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData.readSipData("out/BigDB/10/Q52/out/BigDB/97/Q0/name-fundamental-data-97Q0.data/BigDB/-fundamental-data-10Q52.out/BigDB/97/Q0/name-fundamental-data-97Q0.data/BigDB/");
    }

    @Test
    public void test05267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05267");
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData0);
        double[] doubleArray2 = incSheetFileData1.getGrossIncQtr();
        double[] doubleArray3 = incSheetFileData1.getRdQtr();
        double[] doubleArray4 = incSheetFileData1.getAdjToIncYr();
        double[] doubleArray5 = incSheetFileData1.getPreTaxIncYr();
        double[] doubleArray6 = incSheetFileData1.getGrossIncYr();
        double[] doubleArray7 = incSheetFileData1.getEpsYr();
        java.lang.String str8 = incSheetFileData1.toString();
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData9 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData1);
        double[] doubleArray10 = incSheetFileData9.getNetIncYr();
        double[] doubleArray11 = incSheetFileData9.getIntExpNonOpYr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(doubleArray10);
        org.junit.Assert.assertNull(doubleArray11);
    }

    @Test
    public void test05268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05268");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        fieldData27.setQuarter((int) (byte) 100);
        double[] doubleArray33 = fieldData27.getIncTaxYr();
        double[] doubleArray34 = fieldData27.getGrossIncYr();
        int int35 = fieldData27.getYear();
        double[] doubleArray36 = fieldData27.getEquityYr();
        double[] doubleArray37 = fieldData27.getCurrAssetsYr();
        double[] doubleArray38 = fieldData27.getCogsYr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
        org.junit.Assert.assertNull(doubleArray36);
        org.junit.Assert.assertNull(doubleArray37);
        org.junit.Assert.assertNull(doubleArray38);
    }

    @Test
    public void test05269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05269");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getOtherLtAssetsYr();
        double[] doubleArray30 = fieldData27.getCashFromOpsQtr();
        double[] doubleArray31 = fieldData27.getStInvestQtr();
        double[] doubleArray32 = fieldData27.getOtherCurrLiabQtr();
        int int33 = fieldData27.getInstShareholders();
        double[] doubleArray34 = fieldData27.getDividendQtr();
        int int35 = fieldData27.getQuarter();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
    }

    @Test
    public void test05270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05270");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray4 = balSheetFileData1.getLtInvestQtr();
        double[] doubleArray5 = balSheetFileData1.getTotalAssetsYr();
        double[] doubleArray6 = balSheetFileData1.getOtherCurrLiabYr();
        double[] doubleArray7 = balSheetFileData1.getLtDebtQtr();
        double[] doubleArray8 = balSheetFileData1.getStDebtYr();
        java.lang.String str9 = balSheetFileData1.toDbOutput();
        double[] doubleArray10 = balSheetFileData1.getBvpsYr();
        double[] doubleArray11 = balSheetFileData1.getOtherCurrAssetsQtr();
        double[] doubleArray12 = balSheetFileData1.getOtherCurrLiabYr();
        java.lang.String str13 = balSheetFileData1.getExchange();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(doubleArray10);
        org.junit.Assert.assertNull(doubleArray11);
        org.junit.Assert.assertNull(doubleArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test05271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05271");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getStDebtQtr();
        double[] doubleArray30 = fieldData27.getEpsContQtr();
        double[] doubleArray31 = fieldData27.getOtherLtAssetsYr();
        double[] doubleArray32 = fieldData27.getNetIncYr();
        double[] doubleArray33 = fieldData27.getInventoryYr();
        double[] doubleArray34 = fieldData27.getDividendYr();
        double[] doubleArray35 = fieldData27.getPreTaxIncQtr();
        double[] doubleArray36 = fieldData27.getOtherLtAssetsQtr();
        double[] doubleArray37 = fieldData27.getLiabEquityQtr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(doubleArray36);
        org.junit.Assert.assertNull(doubleArray37);
    }

    @Test
    public void test05272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05272");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray4 = balSheetFileData1.getInventoryYr();
        double[] doubleArray5 = balSheetFileData1.getCurrAssetsYr();
        double[] doubleArray6 = balSheetFileData1.getInventoryQtr();
        double[] doubleArray7 = balSheetFileData1.getBvpsYr();
        double[] doubleArray8 = balSheetFileData1.getTotalLiabYr();
        java.lang.String str9 = balSheetFileData1.getTicker();
        java.lang.String str10 = balSheetFileData1.getExchange();
        java.lang.String str11 = balSheetFileData1.getExchange();
        double[] doubleArray12 = balSheetFileData1.getInventoryYr();
        double[] doubleArray13 = balSheetFileData1.getOtherCurrAssetsYr();
        double[] doubleArray14 = balSheetFileData1.getStDebtYr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(doubleArray12);
        org.junit.Assert.assertNull(doubleArray13);
        org.junit.Assert.assertNull(doubleArray14);
    }

    @Test
    public void test05273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05273");
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData0);
        double[] doubleArray2 = incSheetFileData1.getGrossIncQtr();
        double[] doubleArray3 = incSheetFileData1.getEpsDilContYr();
        double[] doubleArray4 = incSheetFileData1.getTotalOpExpYr();
        double[] doubleArray5 = incSheetFileData1.getIncAfterTaxYr();
        java.lang.String str6 = incSheetFileData1.toString();
        double[] doubleArray7 = incSheetFileData1.getEpsQtr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(doubleArray7);
    }

    @Test
    public void test05274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05274");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        java.lang.String str2 = companyFileData1.getIndustry();
        companyFileData1.setSnpIndex("");
        companyFileData1.setPhone("hi!");
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum7 = companyFileData1.getExchange();
        companyFileData1.setDrp("Cash File Data");
        java.lang.String str10 = companyFileData1.getPhone();
        java.lang.String str11 = companyFileData1.getStreet();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData12 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData13 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData12);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData14 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str15 = estimateFileData14.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData16 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData16.setInsiderNetPercentOutstanding("");
        double[] doubleArray19 = sharesFileData16.getSharesQ();
        sharesFileData16.setInsiderBuys("");
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData26 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList24);
        double[] doubleArray27 = incSheetFileData26.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData28 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData29 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData28);
        double[] doubleArray30 = balSheetFileData29.getOtherLtLiabYr();
        double[] doubleArray31 = balSheetFileData29.getStDebtQtr();
        double[] doubleArray32 = balSheetFileData29.getInventoryYr();
        java.lang.String str33 = balSheetFileData29.toString();
        double[] doubleArray34 = balSheetFileData29.getNetFixedAssetsYr();
        double[] doubleArray35 = balSheetFileData29.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData36 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData39 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData13, estimateFileData14, sharesFileData16, incSheetFileData26, balSheetFileData29, cashFileData36, (int) (short) 100, (int) (byte) 100);
        java.lang.String str40 = fieldData39.getStreet();
        double[] doubleArray41 = fieldData39.getTotalOpExpQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData42 = fieldData39.getCashData();
        java.lang.String str43 = fieldData39.getIndustry();
        double[] doubleArray44 = fieldData39.getEpsYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData45 = fieldData39.getEstimateData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData46 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData46.setInstShareholders("");
        sharesFileData46.setVolume3m("");
        sharesFileData46.setDollar3m("");
        int int53 = sharesFileData46.getInsiderBuyShrs();
        sharesFileData46.setVolume10d("hi!");
        java.lang.String str56 = sharesFileData46.getName();
        sharesFileData46.setInsiderSellShrs("out/BigDB/");
        java.lang.String str59 = sharesFileData46.getSector();
        java.lang.String str60 = sharesFileData46.getSector();
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData61 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData62 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData61);
        double[] doubleArray63 = incSheetFileData62.getGrossIncQtr();
        double[] doubleArray64 = incSheetFileData62.getAdjToIncYr();
        double[] doubleArray65 = incSheetFileData62.getAdjToIncQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum66 = incSheetFileData62.getExchange();
        double[] doubleArray67 = incSheetFileData62.getSalesQtr();
        double[] doubleArray68 = incSheetFileData62.getEpsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData69 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData70 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData69);
        double[] doubleArray71 = balSheetFileData70.getOtherLtLiabYr();
        double[] doubleArray72 = balSheetFileData70.getLiabEquityYr();
        double[] doubleArray73 = balSheetFileData70.getInventoryYr();
        java.lang.String str74 = balSheetFileData70.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData75 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData78 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData45, sharesFileData46, incSheetFileData62, balSheetFileData70, cashFileData75, (int) (byte) 100, (int) (byte) 0);
        double[] doubleArray79 = incSheetFileData62.getAdjToIncQtr();
        double[] doubleArray80 = incSheetFileData62.getDepreciationYr();
        double[] doubleArray81 = incSheetFileData62.getGrossOpIncQtr();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(exchEnum7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(incSheetFileData26);
        org.junit.Assert.assertNull(doubleArray27);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(doubleArray41);
        org.junit.Assert.assertNotNull(cashFileData42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(doubleArray44);
        org.junit.Assert.assertNotNull(estimateFileData45);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(doubleArray63);
        org.junit.Assert.assertNull(doubleArray64);
        org.junit.Assert.assertNull(doubleArray65);
        org.junit.Assert.assertNull(exchEnum66);
        org.junit.Assert.assertNull(doubleArray67);
        org.junit.Assert.assertNull(doubleArray68);
        org.junit.Assert.assertNull(doubleArray71);
        org.junit.Assert.assertNull(doubleArray72);
        org.junit.Assert.assertNull(doubleArray73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertNull(doubleArray79);
        org.junit.Assert.assertNull(doubleArray80);
        org.junit.Assert.assertNull(doubleArray81);
    }

    @Test
    public void test05275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05275");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData30 = fieldData27.getCashData();
        double double31 = fieldData27.getEpsY0();
        java.lang.String str32 = fieldData27.getSic();
        double[] doubleArray33 = fieldData27.getNonrecurringItemsYr();
        double[] doubleArray34 = fieldData27.getPreTaxIncQtr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNotNull(cashFileData30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(doubleArray34);
    }

    @Test
    public void test05276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05276");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        boolean boolean29 = fieldData27.isDrp();
        double[] doubleArray30 = fieldData27.getCashFromOpsQtr();
        double[] doubleArray31 = fieldData27.getInventoryYr();
        double[] doubleArray32 = fieldData27.getOtherCurrLiabYr();
        double[] doubleArray33 = fieldData27.getGrossIncYr();
        int int34 = fieldData27.getNumEmployees();
        double[] doubleArray35 = fieldData27.getEpsDilYr();
        double[] doubleArray36 = fieldData27.getOtherIncYr();
        double double37 = fieldData27.getInsiderOwnership();
        double[] doubleArray38 = fieldData27.getEpsContYr();
        double[] doubleArray39 = fieldData27.getIncAfterTaxQtr();
        int int40 = fieldData27.getInstSellShrs();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(doubleArray36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNull(doubleArray38);
        org.junit.Assert.assertNull(doubleArray39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
    }

    @Test
    public void test05277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05277");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        double[] doubleArray31 = fieldData27.getInventoryQtr();
        double[] doubleArray32 = fieldData27.getBvpsQtr();
        double double33 = fieldData27.getEpsQ1();
        double[] doubleArray34 = fieldData27.getOtherLtLiabYr();
        int int35 = fieldData27.getInstBuyShrs();
        double[] doubleArray36 = fieldData27.getEquityYr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(doubleArray36);
    }

    @Test
    public void test05278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05278");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        double[] doubleArray31 = fieldData27.getInventoryQtr();
        double[] doubleArray32 = fieldData27.getBvpsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData33 = fieldData27.getCashData();
        double[] doubleArray34 = fieldData27.getCapExQtr();
        double[] doubleArray35 = fieldData27.getLtInvestQtr();
        double[] doubleArray36 = fieldData27.getEpsDilYr();
        double double37 = fieldData27.getDollar3m();
        double double38 = fieldData27.getEpsQ0();
        double[] doubleArray39 = fieldData27.getInventoryYr();
        double[] doubleArray40 = fieldData27.getLtDebtQtr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNotNull(cashFileData33);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(doubleArray36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNull(doubleArray39);
        org.junit.Assert.assertNull(doubleArray40);
    }

    @Test
    public void test05279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05279");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getOtherLtAssetsQtr();
        double[] doubleArray30 = fieldData27.getTotalOpExpYr();
        double[] doubleArray31 = fieldData27.getSharesQ();
        java.lang.String str32 = fieldData27.getStreet();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData33 = fieldData27.getCompanyInfo();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData34 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData33);
        java.lang.String str35 = companyFileData33.getSnpIndexStr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SnpEnum snpEnum36 = companyFileData33.getSnpIndex();
        companyFileData33.setCity("ticker      : \r\n  name      : ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : Cash File Data\r\n  web       : null\r\n");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0]");
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(companyFileData33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNull(snpEnum36);
    }

    @Test
    public void test05280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05280");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setInsiderNetPercentOutstanding("");
        double[] doubleArray3 = sharesFileData0.getSharesQ();
        java.lang.String str4 = sharesFileData0.toDbOutput();
        double double5 = sharesFileData0.getDollar3m();
        sharesFileData0.setInsiderOwnership("out/BigDB/0/Q1/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : NONE\r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : NONE\r\n  phone     : null\r\n  web       : null\r\n-fundamental-data-0Q1.out/BigDB/52/Q97/out/BigDB/10/Q100/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n-fundamental-data-10Q100.NONE-fundamental-data-52Q97.name");
        sharesFileData0.setInstSellShrs("");
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n" + "'", str4, "  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    }

    @Test
    public void test05281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05281");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        double[] doubleArray28 = balSheetFileData17.getOtherCurrAssetsQtr();
        double[] doubleArray29 = balSheetFileData17.getAcctRxYr();
        double[] doubleArray30 = balSheetFileData17.getCurrLiabYr();
        double[] doubleArray31 = balSheetFileData17.getCashYr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(doubleArray28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
    }

    @Test
    public void test05282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05282");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        java.lang.String str2 = companyFileData1.getIndustry();
        java.lang.String str3 = companyFileData1.getState();
        companyFileData1.setPhone("  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        java.lang.String str6 = companyFileData1.getName();
        int int7 = companyFileData1.getNumEmployees();
        java.lang.String str8 = companyFileData1.getCity();
        companyFileData1.setDrp("ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n");
        companyFileData1.setCity("ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : NONE\r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n");
        companyFileData1.setCountry("ticker      : \r\n  name      : ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : Cash File Data\r\n  web       : null\r\n");
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!", "out/BigDB/", "NONE", "ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n", "NONE", "  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n", "Cash File Data" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData25 = net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData.readFromDb((java.util.List<java.lang.String>) strList23);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData26 = net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData.readFromDb((java.util.List<java.lang.String>) strList23);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData27 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList23);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData28 = net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData.readFromDb((java.util.List<java.lang.String>) strList23);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData29 = net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData.readFromDb((java.util.List<java.lang.String>) strList23);
        java.util.List<java.lang.String> strList30 = companyFileData1.set((java.util.List<java.lang.String>) strList23);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData31 = net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData.readFromDb(strList30);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(cashFileData25);
        org.junit.Assert.assertNotNull(cashFileData26);
        org.junit.Assert.assertNotNull(incSheetFileData27);
        org.junit.Assert.assertNotNull(estimateFileData28);
        org.junit.Assert.assertNotNull(companyFileData29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(estimateFileData31);
    }

    @Test
    public void test05283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05283");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray4 = balSheetFileData1.getInventoryYr();
        java.lang.String str5 = balSheetFileData1.toString();
        double[] doubleArray6 = balSheetFileData1.getBvpsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData7 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData1);
        double[] doubleArray8 = balSheetFileData1.getCashYr();
        java.lang.String str9 = balSheetFileData1.getTicker();
        double[] doubleArray10 = balSheetFileData1.getTotalLiabYr();
        java.lang.String str11 = balSheetFileData1.toDbOutput();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(doubleArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test05284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05284");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getPrefStockYr();
        double[] doubleArray30 = fieldData27.getIncAfterTaxQtr();
        double[] doubleArray31 = fieldData27.getBvpsYr();
        double[] doubleArray32 = fieldData27.getGrossIncQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData33 = fieldData27.getBalSheetData();
        double[] doubleArray34 = balSheetFileData33.getEquityYr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNotNull(balSheetFileData33);
        org.junit.Assert.assertNull(doubleArray34);
    }

    @Test
    public void test05285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05285");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getStDebtQtr();
        double[] doubleArray30 = fieldData27.getEpsContQtr();
        double[] doubleArray31 = fieldData27.getOtherLtAssetsYr();
        double[] doubleArray32 = fieldData27.getNetIncYr();
        java.lang.String str33 = fieldData27.getCountry();
        double[] doubleArray34 = fieldData27.getEpsYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData35 = fieldData27.getCashData();
        int int36 = fieldData27.getInsiderBuys();
        double[] doubleArray37 = fieldData27.getIntExpNonOpQtr();
        double[] doubleArray38 = fieldData27.getEquityQtr();
        double[] doubleArray39 = fieldData27.getEpsYr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNotNull(cashFileData35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(doubleArray37);
        org.junit.Assert.assertNull(doubleArray38);
        org.junit.Assert.assertNull(doubleArray39);
    }

    @Test
    public void test05286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05286");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray4 = balSheetFileData1.getLtInvestQtr();
        double[] doubleArray5 = balSheetFileData1.getCurrLiabQtr();
        double[] doubleArray6 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray7 = balSheetFileData1.getAcctPayableQtr();
        double[] doubleArray8 = balSheetFileData1.getCurrLiabQtr();
        double[] doubleArray9 = balSheetFileData1.getLtInvestQtr();
        double[] doubleArray10 = balSheetFileData1.getCashQtr();
        java.lang.String str11 = balSheetFileData1.getSector();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertNull(doubleArray9);
        org.junit.Assert.assertNull(doubleArray10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test05287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05287");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getOtherLtAssetsQtr();
        double[] doubleArray30 = fieldData27.getTotalOpExpYr();
        double double31 = fieldData27.getEpsY0();
        double[] doubleArray32 = fieldData27.getIncPrimaryEpsQtr();
        double[] doubleArray33 = fieldData27.getLiabEquityYr();
        double[] doubleArray34 = fieldData27.getEpsDilContYr();
        double[] doubleArray35 = fieldData27.getCashFromInvQtr();
        java.lang.String str36 = fieldData27.getSector();
        double double37 = fieldData27.getPrice52hi();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
    }

    @Test
    public void test05288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05288");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setInstShareholders("");
        sharesFileData0.setVolume3m("");
        sharesFileData0.setDollar3m("");
        sharesFileData0.setDollar3m("hi!");
        double double9 = sharesFileData0.getPrice();
        sharesFileData0.setInstShareholders("data/BigDB/");
        java.lang.String str12 = sharesFileData0.getName();
        int int13 = sharesFileData0.getInstShareholders();
        double double14 = sharesFileData0.getPrice52lo();
        long long15 = sharesFileData0.getVolume10d();
        int int16 = sharesFileData0.getInsiderSells();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test05289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05289");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setFromReport((int) (short) 1, 0);
        sharesFileData0.setInsiderBuyShrs("hi!");
        java.lang.String str6 = sharesFileData0.getIndustry();
        int int7 = sharesFileData0.getInsiderBuyShrs();
        sharesFileData0.setPrice("out/BigDB/1/Q97/  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n-fundamental-data-1Q97.hi!");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test05290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05290");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setFromReport((int) (short) 1, 0);
        sharesFileData0.setInsiderBuyShrs("hi!");
        sharesFileData0.setBeta("");
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum8 = sharesFileData0.getExchange();
        int int9 = sharesFileData0.getInstSellShrs();
        double double10 = sharesFileData0.getInstOwnership();
        sharesFileData0.setVolume10d("ticker      : \r\n  name      : hi!\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : NONE\r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : hi!\r\n  phone     : data/BigDB/\r\n  web       : null\r\n");
        int int13 = sharesFileData0.getInsiderBuyShrs();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData14 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData15 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData14);
        java.lang.String str16 = companyFileData15.getIndustry();
        java.lang.String str17 = companyFileData15.getState();
        companyFileData15.setPhone("  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        companyFileData15.setCity("ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : NONE\r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n");
        sharesFileData0.setNameFields(companyFileData15);
        org.junit.Assert.assertNull(exchEnum8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test05291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05291");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setInstShareholders("");
        sharesFileData0.setVolume3m("");
        sharesFileData0.setDollar3m("");
        sharesFileData0.setDollar3m("hi!");
        double double9 = sharesFileData0.getPrice();
        java.lang.String str10 = sharesFileData0.toDbOutput();
        sharesFileData0.setMktCap("  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        double double13 = sharesFileData0.getPrice52hi();
        sharesFileData0.setPrice("ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : NONE\r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : NONE\r\n  phone     : null\r\n  web       : null\r\n");
        sharesFileData0.setPrice("ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : NONE\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : NONE\r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : NONE\r\n  phone     : null\r\n  web       : null\r\n");
        int int18 = sharesFileData0.getInsiderNetTrades();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n" + "'", str10, "  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test05292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05292");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        companyFileData1.setNumEmployees("hi!");
        companyFileData1.setPhone("");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SnpEnum snpEnum6 = companyFileData1.getSnpIndex();
        companyFileData1.setAdr("out/BigDB/10/Q100/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n-fundamental-data-10Q100.NONE");
        java.lang.String str9 = companyFileData1.getTicker();
        int int10 = companyFileData1.getNumEmployees();
        org.junit.Assert.assertNull(snpEnum6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test05293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05293");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherCurrLiabQtr();
        double[] doubleArray3 = balSheetFileData1.getPrefStockYr();
        double[] doubleArray4 = balSheetFileData1.getEquityQtr();
        double[] doubleArray5 = balSheetFileData1.getEquityYr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
    }

    @Test
    public void test05294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05294");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        fieldData27.setQuarter((int) (byte) 100);
        double[] doubleArray33 = fieldData27.getSalesYr();
        double double34 = fieldData27.getEpsQ0();
        double[] doubleArray35 = fieldData27.getAdjToIncQtr();
        java.lang.String str36 = fieldData27.getPhone();
        double[] doubleArray37 = fieldData27.getStDebtYr();
        double[] doubleArray38 = fieldData27.getCapExQtr();
        double[] doubleArray39 = fieldData27.getOtherIncYr();
        double[] doubleArray40 = fieldData27.getEpsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData41 = fieldData27.getShares();
        double double42 = fieldData27.getPrice();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(doubleArray37);
        org.junit.Assert.assertNull(doubleArray38);
        org.junit.Assert.assertNull(doubleArray39);
        org.junit.Assert.assertNull(doubleArray40);
        org.junit.Assert.assertNotNull(sharesFileData41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
    }

    @Test
    public void test05295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05295");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData4 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList2);
        double[] doubleArray5 = incSheetFileData4.getIncTaxYr();
        double[] doubleArray6 = incSheetFileData4.getIncTaxYr();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(incSheetFileData4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
    }

    @Test
    public void test05296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05296");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherCurrLiabQtr();
        double[] doubleArray3 = balSheetFileData1.getPrefStockYr();
        java.lang.String str4 = balSheetFileData1.getName();
        double[] doubleArray5 = balSheetFileData1.getBvpsQtr();
        double[] doubleArray6 = balSheetFileData1.getLtInvestQtr();
        double[] doubleArray7 = balSheetFileData1.getAcctRxQtr();
        double[] doubleArray8 = balSheetFileData1.getLiabEquityQtr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
    }

    @Test
    public void test05297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05297");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray4 = balSheetFileData1.getLtInvestQtr();
        double[] doubleArray5 = balSheetFileData1.getTotalAssetsYr();
        double[] doubleArray6 = balSheetFileData1.getNetFixedAssetsYr();
        double[] doubleArray7 = balSheetFileData1.getOtherLtAssetsQtr();
        java.lang.String str8 = balSheetFileData1.getExchange();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test05298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05298");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setInstShareholders("");
        java.lang.String str3 = sharesFileData0.getTicker();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum4 = sharesFileData0.getExchange();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum5 = sharesFileData0.getExchange();
        sharesFileData0.setInsiderNetTrades("hi!");
        double double8 = sharesFileData0.getMktCap();
        java.lang.String str9 = sharesFileData0.toDbOutput();
        sharesFileData0.setInsiderOwnership("out/BigDB/1/Q10/hi!-fundamental-data-1Q10.ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n");
        double double12 = sharesFileData0.getInsiderOwnership();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(exchEnum4);
        org.junit.Assert.assertNull(exchEnum5);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n" + "'", str9, "  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    }

    @Test
    public void test05299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05299");
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData0);
        double[] doubleArray2 = incSheetFileData1.getGrossIncQtr();
        double[] doubleArray3 = incSheetFileData1.getRdQtr();
        double[] doubleArray4 = incSheetFileData1.getAdjToIncYr();
        double[] doubleArray5 = incSheetFileData1.getIncPrimaryEpsQtr();
        double[] doubleArray6 = incSheetFileData1.getIncAfterTaxQtr();
        double[] doubleArray7 = incSheetFileData1.getIncTaxQtr();
        double[] doubleArray8 = incSheetFileData1.getEpsDilQtr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
    }

    @Test
    public void test05300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05300");
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum1 = estimateFileData0.getExchange();
        java.lang.String str2 = estimateFileData0.getIndustry();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum3 = estimateFileData0.getExchange();
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData(estimateFileData0);
        java.lang.String str5 = estimateFileData0.getName();
        double double6 = estimateFileData0.getEpsQ0();
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData7 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData(estimateFileData0);
        java.lang.String str8 = estimateFileData7.getTicker();
        net.ajaskey.common.DateTime dateTime9 = estimateFileData7.getCurrFiscalYear();
        org.junit.Assert.assertNull(exchEnum1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(exchEnum3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(dateTime9);
    }

    @Test
    public void test05301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05301");
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData0);
        double[] doubleArray2 = incSheetFileData1.getEpsDilYr();
        java.lang.String str3 = incSheetFileData1.toDbOutput();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
    }

    @Test
    public void test05302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05302");
        java.lang.String[] strArray1 = new java.lang.String[] { "  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData4 = net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData.readFromDb((java.util.List<java.lang.String>) strList2);
        java.lang.String str5 = estimateFileData4.getName();
        double double6 = estimateFileData4.getEpsQ1();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(estimateFileData4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    }

    @Test
    public void test05303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05303");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setInstShareholders("");
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum3 = sharesFileData0.getExchange();
        sharesFileData0.setVolume3m("  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        int int6 = sharesFileData0.getInsiderSells();
        int int7 = sharesFileData0.getInstBuyShrs();
        double double8 = sharesFileData0.getInstOwnership();
        int int9 = sharesFileData0.getInsiderSellShrs();
        java.lang.String str10 = sharesFileData0.getSector();
        org.junit.Assert.assertNull(exchEnum3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test05304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05304");
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData0);
        double[] doubleArray2 = incSheetFileData1.getIntExpQtr();
        double[] doubleArray3 = incSheetFileData1.getGrossOpIncYr();
        double[] doubleArray4 = incSheetFileData1.getEpsDilContYr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
    }

    @Test
    public void test05305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05305");
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData1);
        companyFileData2.setNumEmployees("hi!");
        java.lang.String str5 = companyFileData2.getPhone();
        estimateFileData0.setNameFields(companyFileData2);
        companyFileData2.setName("  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        java.lang.String str9 = companyFileData2.getStreet();
        java.lang.String str10 = companyFileData2.getTicker();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test05306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05306");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getLiabEquityYr();
        double[] doubleArray4 = balSheetFileData1.getInventoryYr();
        double[] doubleArray5 = balSheetFileData1.getBvpsYr();
        java.lang.String str6 = balSheetFileData1.getExchange();
        double[] doubleArray7 = balSheetFileData1.getTotalAssetsQtr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(doubleArray7);
    }

    @Test
    public void test05307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05307");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        boolean boolean29 = fieldData27.isDrp();
        double[] doubleArray30 = fieldData27.getCashFromOpsQtr();
        double[] doubleArray31 = fieldData27.getInventoryYr();
        double[] doubleArray32 = fieldData27.getOtherCurrLiabYr();
        double[] doubleArray33 = fieldData27.getLtDebtYr();
        java.lang.String str34 = fieldData27.getCountry();
        double[] doubleArray35 = fieldData27.getAdjToIncQtr();
        double[] doubleArray36 = fieldData27.getNetIncYr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(doubleArray36);
    }

    @Test
    public void test05308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05308");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray4 = balSheetFileData1.getInventoryYr();
        double[] doubleArray5 = balSheetFileData1.getCurrAssetsYr();
        double[] doubleArray6 = balSheetFileData1.getGoodwillYr();
        java.lang.String str7 = balSheetFileData1.toString();
        double[] doubleArray8 = balSheetFileData1.getInventoryYr();
        double[] doubleArray9 = balSheetFileData1.getAcctPayableQtr();
        double[] doubleArray10 = balSheetFileData1.getAcctPayableQtr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertNull(doubleArray9);
        org.junit.Assert.assertNull(doubleArray10);
    }

    @Test
    public void test05309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05309");
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData0);
        double[] doubleArray2 = incSheetFileData1.getGrossIncQtr();
        double[] doubleArray3 = incSheetFileData1.getGrossOpIncQtr();
        java.lang.String str4 = incSheetFileData1.getTicker();
        double[] doubleArray5 = incSheetFileData1.getEpsYr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(doubleArray5);
    }

    @Test
    public void test05310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05310");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        double[] doubleArray31 = fieldData27.getEquityQtr();
        double double32 = fieldData27.getDollar3m();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
    }

    @Test
    public void test05311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05311");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData();
        java.lang.String str1 = companyFileData0.toString();
        companyFileData0.setWeb("ticker      : \r\n  name      : ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : Cash File Data\r\n  web       : null\r\n");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
    }

    @Test
    public void test05312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05312");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData.readSipData("ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : hi!\r\n  phone     : null\r\n  web       : null\r\n");
    }

    @Test
    public void test05313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05313");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setInstShareholders("");
        sharesFileData0.setBeta("");
        sharesFileData0.setInsiderSells("NONE");
        sharesFileData0.setInsiderBuyShrs("out/BigDB/0/Q10/out/BigDB/97/Q0/name-fundamental-data-97Q0.data/BigDB/-fundamental-data-0Q10.out/BigDB/97/Q0/name-fundamental-data-97Q0.data/BigDB/");
    }

    @Test
    public void test05314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05314");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setInstShareholders("");
        sharesFileData0.setVolume3m("");
        sharesFileData0.setDollar3m("");
        int int7 = sharesFileData0.getInsiderBuyShrs();
        sharesFileData0.setVolume10d("hi!");
        java.lang.String str10 = sharesFileData0.getName();
        sharesFileData0.setInsiderSellShrs("out/BigDB/");
        java.lang.String str13 = sharesFileData0.getSector();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum14 = sharesFileData0.getExchange();
        java.lang.String str15 = sharesFileData0.getIndustry();
        double double16 = sharesFileData0.getFloatshr();
        long long17 = sharesFileData0.getVolume10d();
        long long18 = sharesFileData0.getVolume10d();
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(exchEnum14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
    }

    @Test
    public void test05315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05315");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getStDebtQtr();
        double[] doubleArray30 = fieldData27.getEpsContQtr();
        double[] doubleArray31 = fieldData27.getEpsYr();
        double[] doubleArray32 = fieldData27.getDividendQtr();
        double double33 = fieldData27.getDollar3m();
        double[] doubleArray34 = fieldData27.getAdjToIncYr();
        double[] doubleArray35 = fieldData27.getBvpsYr();
        double[] doubleArray36 = fieldData27.getAdjToIncQtr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(doubleArray36);
    }

    @Test
    public void test05316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05316");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        boolean boolean29 = fieldData27.isDrp();
        double[] doubleArray30 = fieldData27.getCashFromOpsQtr();
        double[] doubleArray31 = fieldData27.getInventoryYr();
        double[] doubleArray32 = fieldData27.getOtherCurrLiabYr();
        double[] doubleArray33 = fieldData27.getStInvestYr();
        double[] doubleArray34 = fieldData27.getAdjToIncYr();
        double[] doubleArray35 = fieldData27.getNetFixedAssetsYr();
        double double36 = fieldData27.getEpsY1();
        int int37 = fieldData27.getInsiderBuyShrs();
        double[] doubleArray38 = fieldData27.getIncAfterTaxYr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNull(doubleArray38);
    }

    @Test
    public void test05317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05317");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData1);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData3 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str4 = estimateFileData3.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData5 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData5.setInsiderNetPercentOutstanding("");
        double[] doubleArray8 = sharesFileData5.getSharesQ();
        sharesFileData5.setInsiderBuys("");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData15 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList13);
        double[] doubleArray16 = incSheetFileData15.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData18 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData17);
        double[] doubleArray19 = balSheetFileData18.getOtherLtLiabYr();
        double[] doubleArray20 = balSheetFileData18.getStDebtQtr();
        double[] doubleArray21 = balSheetFileData18.getInventoryYr();
        java.lang.String str22 = balSheetFileData18.toString();
        double[] doubleArray23 = balSheetFileData18.getNetFixedAssetsYr();
        double[] doubleArray24 = balSheetFileData18.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData25 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData28 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData2, estimateFileData3, sharesFileData5, incSheetFileData15, balSheetFileData18, cashFileData25, (int) (short) 100, (int) (byte) 100);
        java.lang.String str29 = fieldData28.getStreet();
        double[] doubleArray30 = fieldData28.getGoodwillYr();
        double[] doubleArray31 = fieldData28.getInventoryYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData32 = fieldData28.getCashData();
        double[] doubleArray33 = fieldData28.getUnusualIncYr();
        net.ajaskey.common.DateTime dateTime34 = fieldData28.getCurrFiscalYear();
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData35 = fieldData28.getEstimateData();
        double double36 = estimateFileData35.getEpsY0();
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData37 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData(estimateFileData35);
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData38 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData38.setInstShareholders("");
        sharesFileData38.setVolume3m("");
        sharesFileData38.setDollar3m("");
        sharesFileData38.setDollar3m("hi!");
        double double47 = sharesFileData38.getPrice();
        java.lang.String str48 = sharesFileData38.toDbOutput();
        sharesFileData38.setMktCap("  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        long long51 = sharesFileData38.getVolume10d();
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData52 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData53 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData54 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData53);
        double[] doubleArray55 = balSheetFileData54.getOtherLtLiabYr();
        double[] doubleArray56 = balSheetFileData54.getStDebtQtr();
        double[] doubleArray57 = balSheetFileData54.getLtInvestQtr();
        double[] doubleArray58 = balSheetFileData54.getLiabEquityQtr();
        double[] doubleArray59 = balSheetFileData54.getCurrLiabYr();
        double[] doubleArray60 = balSheetFileData54.getLiabEquityQtr();
        java.lang.String str61 = balSheetFileData54.toString();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData62 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData63 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData62);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData64 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str65 = estimateFileData64.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData66 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData66.setInsiderNetPercentOutstanding("");
        double[] doubleArray69 = sharesFileData66.getSharesQ();
        sharesFileData66.setInsiderBuys("");
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList74 = new java.util.ArrayList<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData76 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList74);
        double[] doubleArray77 = incSheetFileData76.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData78 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData79 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData78);
        double[] doubleArray80 = balSheetFileData79.getOtherLtLiabYr();
        double[] doubleArray81 = balSheetFileData79.getStDebtQtr();
        double[] doubleArray82 = balSheetFileData79.getInventoryYr();
        java.lang.String str83 = balSheetFileData79.toString();
        double[] doubleArray84 = balSheetFileData79.getNetFixedAssetsYr();
        double[] doubleArray85 = balSheetFileData79.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData86 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData89 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData63, estimateFileData64, sharesFileData66, incSheetFileData76, balSheetFileData79, cashFileData86, (int) (short) 100, (int) (byte) 100);
        java.lang.String str90 = fieldData89.getStreet();
        double[] doubleArray91 = fieldData89.getTotalOpExpQtr();
        double double92 = fieldData89.getEpsY0();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData93 = fieldData89.getCashData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData94 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData(cashFileData93);
        double[] doubleArray95 = cashFileData94.getCashFromInvQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData98 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData0, estimateFileData37, sharesFileData38, incSheetFileData52, balSheetFileData54, cashFileData94, 100, (int) (byte) 10);
        double[] doubleArray99 = fieldData98.getBvpsQtr();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0]");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(incSheetFileData15);
        org.junit.Assert.assertNull(doubleArray16);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertNull(doubleArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(doubleArray24);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNotNull(cashFileData32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(dateTime34);
        org.junit.Assert.assertNotNull(estimateFileData35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n" + "'", str48, "  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertNull(doubleArray55);
        org.junit.Assert.assertNull(doubleArray56);
        org.junit.Assert.assertNull(doubleArray57);
        org.junit.Assert.assertNull(doubleArray58);
        org.junit.Assert.assertNull(doubleArray59);
        org.junit.Assert.assertNull(doubleArray60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0]");
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(incSheetFileData76);
        org.junit.Assert.assertNull(doubleArray77);
        org.junit.Assert.assertNull(doubleArray80);
        org.junit.Assert.assertNull(doubleArray81);
        org.junit.Assert.assertNull(doubleArray82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
        org.junit.Assert.assertNull(doubleArray84);
        org.junit.Assert.assertNull(doubleArray85);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertNull(doubleArray91);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
        org.junit.Assert.assertNotNull(cashFileData93);
        org.junit.Assert.assertNull(doubleArray95);
        org.junit.Assert.assertNull(doubleArray99);
    }

    @Test
    public void test05318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05318");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData.find("  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        org.junit.Assert.assertNull(balSheetFileData1);
    }

    @Test
    public void test05319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05319");
        java.lang.String[] strArray1 = new java.lang.String[] { "  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData4 = net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData.readFromDb((java.util.List<java.lang.String>) strList2);
        double double5 = estimateFileData4.getEpsY0();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData6 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData7 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData6);
        double[] doubleArray8 = balSheetFileData7.getOtherLtLiabYr();
        double[] doubleArray9 = balSheetFileData7.getStDebtQtr();
        double[] doubleArray10 = balSheetFileData7.getLtInvestQtr();
        double[] doubleArray11 = balSheetFileData7.getTotalAssetsYr();
        double[] doubleArray12 = balSheetFileData7.getNetFixedAssetsYr();
        double[] doubleArray13 = balSheetFileData7.getLtInvestQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData14 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData15 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData14);
        companyFileData15.setNumEmployees("hi!");
        java.lang.String str18 = companyFileData15.getState();
        balSheetFileData7.setNameFields(companyFileData15);
        companyFileData15.setCountry("hi!");
        java.lang.String str22 = companyFileData15.getStreet();
        companyFileData15.setSector("  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        estimateFileData4.setNameFields(companyFileData15);
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(estimateFileData4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertNull(doubleArray9);
        org.junit.Assert.assertNull(doubleArray10);
        org.junit.Assert.assertNull(doubleArray11);
        org.junit.Assert.assertNull(doubleArray12);
        org.junit.Assert.assertNull(doubleArray13);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test05320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05320");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getStDebtQtr();
        double[] doubleArray30 = fieldData27.getEpsContQtr();
        double[] doubleArray31 = fieldData27.getOtherLtAssetsYr();
        double[] doubleArray32 = fieldData27.getNetIncYr();
        double[] doubleArray33 = fieldData27.getInventoryYr();
        double[] doubleArray34 = fieldData27.getDividendYr();
        double[] doubleArray35 = fieldData27.getPreTaxIncQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum36 = fieldData27.getExchange();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(exchEnum36);
    }

    @Test
    public void test05321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05321");
        net.ajaskey.market.tools.SIP.BigDB.dataio.FiletypeEnum filetypeEnum2 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData.setMemory((-1), (int) (short) 100, filetypeEnum2);
    }

    @Test
    public void test05322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05322");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        double[] doubleArray31 = fieldData27.getInventoryQtr();
        double[] doubleArray32 = fieldData27.getBvpsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData33 = fieldData27.getCashData();
        double[] doubleArray34 = fieldData27.getIncAfterTaxQtr();
        double[] doubleArray35 = fieldData27.getCashFromFinQtr();
        double[] doubleArray36 = fieldData27.getCashFromFinQtr();
        java.lang.String str37 = fieldData27.getDowIndexStr();
        double[] doubleArray38 = fieldData27.getOtherLtAssetsYr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNotNull(cashFileData33);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(doubleArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(doubleArray38);
    }

    @Test
    public void test05323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05323");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray4 = balSheetFileData1.getLtInvestQtr();
        double[] doubleArray5 = balSheetFileData1.getTotalAssetsYr();
        double[] doubleArray6 = balSheetFileData1.getStInvestYr();
        double[] doubleArray7 = balSheetFileData1.getCurrLiabYr();
        java.lang.String str8 = balSheetFileData1.getName();
        double[] doubleArray9 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray10 = balSheetFileData1.getAcctRxQtr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(doubleArray9);
        org.junit.Assert.assertNull(doubleArray10);
    }

    @Test
    public void test05324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05324");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        boolean boolean29 = fieldData27.isDrp();
        double[] doubleArray30 = fieldData27.getCashFromOpsQtr();
        double[] doubleArray31 = fieldData27.getInventoryYr();
        double[] doubleArray32 = fieldData27.getOtherCurrLiabYr();
        double[] doubleArray33 = fieldData27.getIncTaxQtr();
        double[] doubleArray34 = fieldData27.getLiabEquityYr();
        double[] doubleArray35 = fieldData27.getSharesQ();
        double[] doubleArray36 = fieldData27.getNetIncQtr();
        double[] doubleArray37 = fieldData27.getEpsDilQtr();
        java.lang.String str38 = fieldData27.getSnpIndexStr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0]");
        org.junit.Assert.assertNull(doubleArray36);
        org.junit.Assert.assertNull(doubleArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
    }

    @Test
    public void test05325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05325");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherCurrLiabQtr();
        double[] doubleArray3 = balSheetFileData1.getEquityQtr();
        double[] doubleArray4 = balSheetFileData1.getInventoryYr();
        double[] doubleArray5 = balSheetFileData1.getOtherCurrLiabYr();
        java.lang.String str6 = balSheetFileData1.getSector();
        double[] doubleArray7 = balSheetFileData1.getOtherCurrLiabQtr();
        double[] doubleArray8 = balSheetFileData1.getOtherLtAssetsYr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
    }

    @Test
    public void test05326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05326");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData30 = fieldData27.getCashData();
        double double31 = fieldData27.getEpsY0();
        java.lang.String str32 = fieldData27.getName();
        double[] doubleArray33 = fieldData27.getOtherLtAssetsQtr();
        double[] doubleArray34 = fieldData27.getStInvestYr();
        double[] doubleArray35 = fieldData27.getCashFromFinQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData36 = fieldData27.getShares();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData37 = fieldData27.getCompanyInfo();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNotNull(cashFileData30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNotNull(sharesFileData36);
        org.junit.Assert.assertNotNull(companyFileData37);
    }

    @Test
    public void test05327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05327");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray4 = balSheetFileData1.getInventoryYr();
        double[] doubleArray5 = balSheetFileData1.getCurrAssetsQtr();
        java.lang.String str6 = balSheetFileData1.getExchange();
        double[] doubleArray7 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray8 = balSheetFileData1.getTotalAssetsQtr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
    }

    @Test
    public void test05328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05328");
        net.ajaskey.market.tools.SIP.BigDB.dataio.FiletypeEnum filetypeEnum2 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData.setMemory((int) 'a', (int) (byte) 10, filetypeEnum2);
    }

    @Test
    public void test05329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05329");
        java.lang.String[] strArray3 = new java.lang.String[] { "Cash File Data", "Cash File Data", "ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData6 = net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData.readFromDb((java.util.List<java.lang.String>) strList4);
        sharesFileData6.setVolume3m("out/BigDB/10/Q0/hi!-fundamental-data-10Q0.out/BigDB/1/Q97/  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n-fundamental-data-1Q97.hi!");
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(sharesFileData6);
    }

    @Test
    public void test05330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05330");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getOtherLtAssetsQtr();
        double[] doubleArray30 = fieldData27.getTotalOpExpYr();
        double double31 = fieldData27.getEpsY0();
        double[] doubleArray32 = fieldData27.getIncPrimaryEpsQtr();
        double[] doubleArray33 = fieldData27.getEpsDilContYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData34 = fieldData27.getCashData();
        double[] doubleArray35 = fieldData27.getDepreciationQtr();
        double[] doubleArray36 = fieldData27.getPreTaxIncQtr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNotNull(cashFileData34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(doubleArray36);
    }

    @Test
    public void test05331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05331");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        double[] doubleArray31 = fieldData27.getInventoryQtr();
        double[] doubleArray32 = fieldData27.getBvpsQtr();
        double double33 = fieldData27.getEpsQ1();
        double[] doubleArray34 = fieldData27.getOtherLtLiabYr();
        double[] doubleArray35 = fieldData27.getBvpsYr();
        int int36 = fieldData27.getInsiderBuyShrs();
        double[] doubleArray37 = fieldData27.getAdjToIncYr();
        double[] doubleArray38 = fieldData27.getOtherIncQtr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(doubleArray37);
        org.junit.Assert.assertNull(doubleArray38);
    }

    @Test
    public void test05332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05332");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray4 = balSheetFileData1.getInventoryYr();
        java.lang.String str5 = balSheetFileData1.toString();
        double[] doubleArray6 = balSheetFileData1.getBvpsQtr();
        double[] doubleArray7 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray8 = balSheetFileData1.getPrefStockYr();
        double[] doubleArray9 = balSheetFileData1.getTotalAssetsQtr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertNull(doubleArray9);
    }

    @Test
    public void test05333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05333");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getLiabEquityYr();
        double[] doubleArray4 = balSheetFileData1.getOtherCurrAssetsQtr();
        double[] doubleArray5 = balSheetFileData1.getTotalLiabQtr();
        double[] doubleArray6 = balSheetFileData1.getStInvestQtr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
    }

    @Test
    public void test05334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05334");
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData0);
        double[] doubleArray2 = incSheetFileData1.getGrossIncQtr();
        double[] doubleArray3 = incSheetFileData1.getAdjToIncYr();
        double[] doubleArray4 = incSheetFileData1.getUnusualIncYr();
        double[] doubleArray5 = incSheetFileData1.getIncTaxYr();
        double[] doubleArray6 = incSheetFileData1.getIntExpNonOpQtr();
        double[] doubleArray7 = incSheetFileData1.getIntExpNonOpQtr();
        double[] doubleArray8 = incSheetFileData1.getEpsContYr();
        double[] doubleArray9 = incSheetFileData1.getDepreciationQtr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertNull(doubleArray9);
    }

    @Test
    public void test05335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05335");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        double double31 = fieldData27.getEpsQ0();
        double[] doubleArray32 = fieldData27.getLtDebtQtr();
        double[] doubleArray33 = fieldData27.getIncPrimaryEpsYr();
        boolean boolean34 = fieldData27.isAdr();
        double double35 = fieldData27.getMktCap();
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData36 = fieldData27.getEstimateData();
        double double37 = estimateFileData36.getEpsY1();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(estimateFileData36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
    }

    @Test
    public void test05336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05336");
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData0);
        double[] doubleArray2 = incSheetFileData1.getGrossIncQtr();
        double[] doubleArray3 = incSheetFileData1.getAdjToIncYr();
        double[] doubleArray4 = incSheetFileData1.getEpsYr();
        java.lang.String str5 = incSheetFileData1.getName();
        double[] doubleArray6 = incSheetFileData1.getNonrecurringItemsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData7 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData8 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData7);
        companyFileData8.setNumEmployees("hi!");
        java.lang.String str11 = companyFileData8.getPhone();
        java.lang.String str12 = companyFileData8.getIndustry();
        companyFileData8.setNumEmployees("out/BigDB/");
        companyFileData8.setPhone("hi!");
        companyFileData8.setCountry("out/BigDB/");
        companyFileData8.setDrp("ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n");
        incSheetFileData1.setNameFields(companyFileData8);
        double[] doubleArray22 = incSheetFileData1.getCogsQtr();
        double[] doubleArray23 = incSheetFileData1.getIncTaxYr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
    }

    @Test
    public void test05337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05337");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setFromReport((int) (short) 1, 0);
        sharesFileData0.setInsiderBuyShrs("hi!");
        sharesFileData0.setBeta("");
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum8 = sharesFileData0.getExchange();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum9 = sharesFileData0.getExchange();
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData10 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData11 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData12 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData11);
        companyFileData12.setNumEmployees("hi!");
        java.lang.String str15 = companyFileData12.getPhone();
        estimateFileData10.setNameFields(companyFileData12);
        companyFileData12.setName("  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        sharesFileData0.setNameFields(companyFileData12);
        sharesFileData0.setInsiderOwnership("ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : NONE\r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : NONE\r\n  phone     : null\r\n  web       : null\r\n");
        sharesFileData0.setInstShareholders("ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n");
        sharesFileData0.setFromReport((int) (short) 1, (int) ' ');
        org.junit.Assert.assertNull(exchEnum8);
        org.junit.Assert.assertNull(exchEnum9);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test05338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05338");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        boolean boolean29 = fieldData27.isDrp();
        double double30 = fieldData27.getBeta();
        long long31 = fieldData27.getVolumeMonth3m();
        double[] doubleArray32 = fieldData27.getAcctPayableYr();
        int int33 = fieldData27.getInsiderSells();
        double[] doubleArray34 = fieldData27.getOtherIncQtr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNull(doubleArray34);
    }

    @Test
    public void test05339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05339");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setInstShareholders("");
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum3 = sharesFileData0.getExchange();
        sharesFileData0.setVolume3m("  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        sharesFileData0.setInsiderSells("");
        double double8 = sharesFileData0.getPrice52hi();
        sharesFileData0.setInsiderNetPercentOutstanding("ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n");
        java.lang.String str11 = sharesFileData0.toString();
        double[] doubleArray12 = sharesFileData0.getSharesQ();
        double[] doubleArray13 = sharesFileData0.getSharesQ();
        sharesFileData0.setFloatshr("data/BigDB/");
        org.junit.Assert.assertNull(exchEnum3);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]");
    }

    @Test
    public void test05340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05340");
        java.lang.String[] strArray3 = new java.lang.String[] { "Cash File Data", "Cash File Data", "ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData6 = net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData.readFromDb((java.util.List<java.lang.String>) strList4);
        sharesFileData6.setInstOwnership("out/BigDB/");
        int int9 = sharesFileData6.getInstSellShrs();
        double[] doubleArray10 = sharesFileData6.getSharesY();
        java.lang.String str11 = sharesFileData6.getTicker();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(sharesFileData6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0]");
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test05341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05341");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray4 = balSheetFileData1.getLtInvestQtr();
        double[] doubleArray5 = balSheetFileData1.getTotalAssetsYr();
        double[] doubleArray6 = balSheetFileData1.getNetFixedAssetsYr();
        double[] doubleArray7 = balSheetFileData1.getStDebtYr();
        double[] doubleArray8 = balSheetFileData1.getCashYr();
        java.lang.String str9 = balSheetFileData1.getExchange();
        double[] doubleArray10 = balSheetFileData1.getNetFixedAssetsQtr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(doubleArray10);
    }

    @Test
    public void test05342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05342");
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData0);
        double[] doubleArray2 = incSheetFileData1.getGrossIncQtr();
        double[] doubleArray3 = incSheetFileData1.getAdjToIncYr();
        double[] doubleArray4 = incSheetFileData1.getIntExpNonOpQtr();
        double[] doubleArray5 = incSheetFileData1.getTotalOpExpYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum6 = incSheetFileData1.getExchange();
        double[] doubleArray7 = incSheetFileData1.getUnusualIncQtr();
        double[] doubleArray8 = incSheetFileData1.getEpsDilYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData9 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData1);
        double[] doubleArray10 = incSheetFileData1.getSalesQtr();
        double[] doubleArray11 = incSheetFileData1.getTotalOpExpYr();
        double[] doubleArray12 = incSheetFileData1.getDividendYr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(exchEnum6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertNull(doubleArray10);
        org.junit.Assert.assertNull(doubleArray11);
        org.junit.Assert.assertNull(doubleArray12);
    }

    @Test
    public void test05343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05343");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        int int1 = sharesFileData0.getInsiderNetTrades();
        sharesFileData0.setInsiderNetPercentOutstanding("  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        sharesFileData0.setVolume10d("hi!");
        sharesFileData0.setPrice("out/BigDB/0/Q97/ticker      : \r\n  name      : hi!\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : NONE\r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : hi!\r\n  phone     : data/BigDB/\r\n  web       : null\r\n-fundamental-data-0Q97.ticker      : \r\n  name      : hi!\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : NONE\r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : hi!\r\n  phone     : data/BigDB/\r\n  web       : null\r\n");
        double double8 = sharesFileData0.getPrice();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    }

    @Test
    public void test05344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05344");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray4 = balSheetFileData1.getLtInvestQtr();
        double[] doubleArray5 = balSheetFileData1.getTotalAssetsYr();
        double[] doubleArray6 = balSheetFileData1.getNetFixedAssetsYr();
        double[] doubleArray7 = balSheetFileData1.getStDebtYr();
        double[] doubleArray8 = balSheetFileData1.getCashYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData9 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData10 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData9);
        java.lang.String str11 = companyFileData10.getIndustry();
        java.lang.String str12 = companyFileData10.getState();
        companyFileData10.setPhone("  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        java.lang.String str15 = companyFileData10.getName();
        int int16 = companyFileData10.getNumEmployees();
        java.lang.String str17 = companyFileData10.getName();
        java.lang.String str18 = companyFileData10.toString();
        balSheetFileData1.setNameFields(companyFileData10);
        companyFileData10.setCountry("");
        java.lang.String str22 = companyFileData10.getState();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData23 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData23);
        companyFileData24.setNumEmployees("hi!");
        java.lang.String str27 = companyFileData24.getState();
        java.lang.String str28 = companyFileData24.getDowIndexStr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData29 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData30 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData29);
        companyFileData30.setNumEmployees("hi!");
        java.lang.String str33 = companyFileData30.getPhone();
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData38 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList36);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData39 = net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData.readFromDb((java.util.List<java.lang.String>) strList36);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData40 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList36);
        java.util.List<java.lang.String> strList41 = companyFileData30.set((java.util.List<java.lang.String>) strList36);
        java.util.List<java.lang.String> strList42 = companyFileData24.set(strList41);
        java.util.List<java.lang.String> strList43 = companyFileData10.set(strList41);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData44 = net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData.readFromDb(strList43);
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(incSheetFileData38);
        org.junit.Assert.assertNotNull(cashFileData39);
        org.junit.Assert.assertNotNull(incSheetFileData40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(companyFileData44);
    }

    @Test
    public void test05345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05345");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        boolean boolean29 = fieldData27.isDrp();
        double double30 = fieldData27.getBeta();
        double[] doubleArray31 = fieldData27.getAcctRxQtr();
        double[] doubleArray32 = fieldData27.getBvpsQtr();
        double[] doubleArray33 = fieldData27.getDepreciationYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData34 = fieldData27.getEstimateData();
        int int35 = fieldData27.getNumEmployees();
        double double36 = fieldData27.getPrice52hi();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SnpEnum snpEnum37 = fieldData27.getSnpIndex();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNotNull(estimateFileData34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNull(snpEnum37);
    }

    @Test
    public void test05346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05346");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getStDebtQtr();
        double[] doubleArray30 = fieldData27.getEpsContQtr();
        double[] doubleArray31 = fieldData27.getOtherLtAssetsYr();
        double[] doubleArray32 = fieldData27.getIncPrimaryEpsQtr();
        double[] doubleArray33 = fieldData27.getLtDebtQtr();
        double[] doubleArray34 = fieldData27.getStInvestYr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(doubleArray34);
    }

    @Test
    public void test05347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05347");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setInstShareholders("");
        sharesFileData0.setVolume3m("");
        sharesFileData0.setDollar3m("");
        sharesFileData0.setDollar3m("hi!");
        double double9 = sharesFileData0.getPrice();
        java.lang.String str10 = sharesFileData0.toDbOutput();
        sharesFileData0.setMktCap("  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData13 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData(sharesFileData0);
        java.lang.String str14 = sharesFileData0.toString();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n" + "'", str10, "  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test05348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05348");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        java.lang.String str2 = companyFileData1.getIndustry();
        java.lang.String str3 = companyFileData1.getName();
        java.lang.String str4 = companyFileData1.getName();
        java.lang.String str5 = companyFileData1.getCountry();
        net.ajaskey.market.tools.SIP.BigDB.dataio.DowEnum dowEnum6 = companyFileData1.getDowIndex();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(dowEnum6);
    }

    @Test
    public void test05349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05349");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherCurrLiabQtr();
        double[] doubleArray3 = balSheetFileData1.getPrefStockYr();
        java.lang.String str4 = balSheetFileData1.getName();
        double[] doubleArray5 = balSheetFileData1.getCurrLiabYr();
        double[] doubleArray6 = balSheetFileData1.getTotalAssetsYr();
        double[] doubleArray7 = balSheetFileData1.getTotalLiabQtr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
    }

    @Test
    public void test05350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05350");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setInstShareholders("");
        sharesFileData0.setVolume3m("");
        sharesFileData0.setDollar3m("");
        int int7 = sharesFileData0.getInsiderBuyShrs();
        sharesFileData0.setVolume10d("hi!");
        java.lang.String str10 = sharesFileData0.getName();
        double double11 = sharesFileData0.getPrice52hi();
        double[] doubleArray12 = sharesFileData0.getSharesQ();
        double double13 = sharesFileData0.getDollar3m();
        int int14 = sharesFileData0.getInstBuyShrs();
        double double15 = sharesFileData0.getPrice52lo();
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
    }

    @Test
    public void test05351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05351");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        int int31 = fieldData27.getInsiderSells();
        double[] doubleArray32 = fieldData27.getOtherLtAssetsYr();
        long long33 = fieldData27.getVolumeMonth3m();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData34 = fieldData27.getShares();
        double[] doubleArray35 = fieldData27.getOtherLtAssetsQtr();
        double[] doubleArray36 = fieldData27.getEpsQtr();
        double[] doubleArray37 = fieldData27.getCashFromInvQtr();
        int int38 = fieldData27.getInstShareholders();
        double[] doubleArray39 = fieldData27.getCashFromOpsQtr();
        net.ajaskey.common.DateTime dateTime40 = fieldData27.getCurrFiscalYear();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertNotNull(sharesFileData34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(doubleArray36);
        org.junit.Assert.assertNull(doubleArray37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNull(doubleArray39);
        org.junit.Assert.assertNull(dateTime40);
    }

    @Test
    public void test05352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05352");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        double[] doubleArray31 = fieldData27.getInventoryQtr();
        double[] doubleArray32 = fieldData27.getBvpsQtr();
        double double33 = fieldData27.getEpsQ1();
        double[] doubleArray34 = fieldData27.getOtherLtLiabYr();
        int int35 = fieldData27.getYear();
        double[] doubleArray36 = fieldData27.getStInvestYr();
        double[] doubleArray37 = fieldData27.getCurrAssetsYr();
        double[] doubleArray38 = fieldData27.getIncAfterTaxQtr();
        java.lang.String str39 = fieldData27.getSnpIndexStr();
        net.ajaskey.common.DateTime dateTime40 = fieldData27.getCurrFiscalYear();
        double double41 = fieldData27.getPrice();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
        org.junit.Assert.assertNull(doubleArray36);
        org.junit.Assert.assertNull(doubleArray37);
        org.junit.Assert.assertNull(doubleArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNull(dateTime40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
    }

    @Test
    public void test05353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05353");
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData0);
        double[] doubleArray2 = incSheetFileData1.getGrossIncQtr();
        double[] doubleArray3 = incSheetFileData1.getAdjToIncYr();
        double[] doubleArray4 = incSheetFileData1.getAdjToIncQtr();
        double[] doubleArray5 = incSheetFileData1.getOtherIncQtr();
        double[] doubleArray6 = incSheetFileData1.getRdQtr();
        double[] doubleArray7 = incSheetFileData1.getDepreciationQtr();
        double[] doubleArray8 = incSheetFileData1.getEpsContYr();
        double[] doubleArray9 = incSheetFileData1.getIncAfterTaxYr();
        java.lang.String str10 = incSheetFileData1.toDbOutput();
        double[] doubleArray11 = incSheetFileData1.getOtherIncQtr();
        double[] doubleArray12 = incSheetFileData1.getGrossOpIncYr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertNull(doubleArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(doubleArray11);
        org.junit.Assert.assertNull(doubleArray12);
    }

    @Test
    public void test05354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05354");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray4 = balSheetFileData1.getNetFixedAssetsYr();
        double[] doubleArray5 = balSheetFileData1.getLiabEquityYr();
        double[] doubleArray6 = balSheetFileData1.getTotalLiabQtr();
        double[] doubleArray7 = balSheetFileData1.getBvpsQtr();
        java.lang.String str8 = balSheetFileData1.getExchange();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test05355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05355");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        boolean boolean2 = companyFileData1.isDrp();
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData3 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str4 = estimateFileData3.getName();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData5 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData5.setInstShareholders("");
        sharesFileData5.setDollar3m("data/BigDB/");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData10 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData11 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData10);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData12 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str13 = estimateFileData12.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData14 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData14.setInsiderNetPercentOutstanding("");
        double[] doubleArray17 = sharesFileData14.getSharesQ();
        sharesFileData14.setInsiderBuys("");
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData24 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList22);
        double[] doubleArray25 = incSheetFileData24.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData26 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData26);
        double[] doubleArray28 = balSheetFileData27.getOtherLtLiabYr();
        double[] doubleArray29 = balSheetFileData27.getStDebtQtr();
        double[] doubleArray30 = balSheetFileData27.getInventoryYr();
        java.lang.String str31 = balSheetFileData27.toString();
        double[] doubleArray32 = balSheetFileData27.getNetFixedAssetsYr();
        double[] doubleArray33 = balSheetFileData27.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData34 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData37 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData11, estimateFileData12, sharesFileData14, incSheetFileData24, balSheetFileData27, cashFileData34, (int) (short) 100, (int) (byte) 100);
        double[] doubleArray38 = incSheetFileData24.getIntExpNonOpYr();
        double[] doubleArray39 = incSheetFileData24.getEpsYr();
        double[] doubleArray40 = incSheetFileData24.getGrossIncQtr();
        double[] doubleArray41 = incSheetFileData24.getGrossOpIncQtr();
        double[] doubleArray42 = incSheetFileData24.getNetIncYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData43 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData44 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData43);
        double[] doubleArray45 = balSheetFileData44.getOtherLtLiabYr();
        double[] doubleArray46 = balSheetFileData44.getStDebtQtr();
        double[] doubleArray47 = balSheetFileData44.getInventoryYr();
        java.lang.String str48 = balSheetFileData44.toString();
        double[] doubleArray49 = balSheetFileData44.getBvpsQtr();
        double[] doubleArray50 = balSheetFileData44.getStDebtQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData51 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData52 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData51);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData53 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str54 = estimateFileData53.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData55 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData55.setInsiderNetPercentOutstanding("");
        double[] doubleArray58 = sharesFileData55.getSharesQ();
        sharesFileData55.setInsiderBuys("");
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList63 = new java.util.ArrayList<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData65 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList63);
        double[] doubleArray66 = incSheetFileData65.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData67 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData68 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData67);
        double[] doubleArray69 = balSheetFileData68.getOtherLtLiabYr();
        double[] doubleArray70 = balSheetFileData68.getStDebtQtr();
        double[] doubleArray71 = balSheetFileData68.getInventoryYr();
        java.lang.String str72 = balSheetFileData68.toString();
        double[] doubleArray73 = balSheetFileData68.getNetFixedAssetsYr();
        double[] doubleArray74 = balSheetFileData68.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData75 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData78 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData52, estimateFileData53, sharesFileData55, incSheetFileData65, balSheetFileData68, cashFileData75, (int) (short) 100, (int) (byte) 100);
        java.lang.String str79 = fieldData78.getStreet();
        double[] doubleArray80 = fieldData78.getOtherLtAssetsQtr();
        double[] doubleArray81 = fieldData78.getTotalOpExpYr();
        double double82 = fieldData78.getEpsY0();
        double[] doubleArray83 = fieldData78.getIncPrimaryEpsQtr();
        double[] doubleArray84 = fieldData78.getLiabEquityYr();
        boolean boolean85 = fieldData78.isDrp();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData86 = fieldData78.getCashData();
        double[] doubleArray87 = cashFileData86.getCashFromFinQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData90 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData3, sharesFileData5, incSheetFileData24, balSheetFileData44, cashFileData86, 6, (int) '#');
        companyFileData1.setAdr("name");
        net.ajaskey.market.tools.SIP.BigDB.dataio.DowEnum dowEnum93 = companyFileData1.getDowIndex();
        java.lang.String str94 = companyFileData1.getSector();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0]");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(incSheetFileData24);
        org.junit.Assert.assertNull(doubleArray25);
        org.junit.Assert.assertNull(doubleArray28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(doubleArray38);
        org.junit.Assert.assertNull(doubleArray39);
        org.junit.Assert.assertNull(doubleArray40);
        org.junit.Assert.assertNull(doubleArray41);
        org.junit.Assert.assertNull(doubleArray42);
        org.junit.Assert.assertNull(doubleArray45);
        org.junit.Assert.assertNull(doubleArray46);
        org.junit.Assert.assertNull(doubleArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNull(doubleArray49);
        org.junit.Assert.assertNull(doubleArray50);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0]");
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(incSheetFileData65);
        org.junit.Assert.assertNull(doubleArray66);
        org.junit.Assert.assertNull(doubleArray69);
        org.junit.Assert.assertNull(doubleArray70);
        org.junit.Assert.assertNull(doubleArray71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNull(doubleArray73);
        org.junit.Assert.assertNull(doubleArray74);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNull(doubleArray80);
        org.junit.Assert.assertNull(doubleArray81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertNull(doubleArray83);
        org.junit.Assert.assertNull(doubleArray84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(cashFileData86);
        org.junit.Assert.assertNull(doubleArray87);
        org.junit.Assert.assertNull(dowEnum93);
        org.junit.Assert.assertNull(str94);
    }

    @Test
    public void test05356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05356");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        boolean boolean29 = fieldData27.isDrp();
        double double30 = fieldData27.getBeta();
        double[] doubleArray31 = fieldData27.getAcctRxQtr();
        double[] doubleArray32 = fieldData27.getBvpsQtr();
        double[] doubleArray33 = fieldData27.getDepreciationYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData34 = fieldData27.getEstimateData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.DowEnum dowEnum35 = fieldData27.getDowIndex();
        long long36 = fieldData27.getVolumeMonth3m();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNotNull(estimateFileData34);
        org.junit.Assert.assertNull(dowEnum35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
    }

    @Test
    public void test05357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05357");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getStDebtQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData1);
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData5 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData1);
        double[] doubleArray6 = balSheetFileData5.getTotalAssetsYr();
        double[] doubleArray7 = balSheetFileData5.getCurrAssetsQtr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
    }

    @Test
    public void test05358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05358");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setInstShareholders("");
        sharesFileData0.setVolume3m("");
        sharesFileData0.setDollar3m("");
        sharesFileData0.setDollar3m("hi!");
        double double9 = sharesFileData0.getPrice();
        double double10 = sharesFileData0.getInstOwnership();
        double double11 = sharesFileData0.getPrice();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData12 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData13 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData12);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData14 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str15 = estimateFileData14.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData16 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData16.setInsiderNetPercentOutstanding("");
        double[] doubleArray19 = sharesFileData16.getSharesQ();
        sharesFileData16.setInsiderBuys("");
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData26 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList24);
        double[] doubleArray27 = incSheetFileData26.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData28 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData29 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData28);
        double[] doubleArray30 = balSheetFileData29.getOtherLtLiabYr();
        double[] doubleArray31 = balSheetFileData29.getStDebtQtr();
        double[] doubleArray32 = balSheetFileData29.getInventoryYr();
        java.lang.String str33 = balSheetFileData29.toString();
        double[] doubleArray34 = balSheetFileData29.getNetFixedAssetsYr();
        double[] doubleArray35 = balSheetFileData29.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData36 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData39 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData13, estimateFileData14, sharesFileData16, incSheetFileData26, balSheetFileData29, cashFileData36, (int) (short) 100, (int) (byte) 100);
        java.lang.String str40 = fieldData39.getStreet();
        double[] doubleArray41 = fieldData39.getTotalOpExpQtr();
        double double42 = fieldData39.getEpsY0();
        java.lang.String str43 = fieldData39.getSic();
        double[] doubleArray44 = fieldData39.getAcctRxQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData45 = fieldData39.getShares();
        double[] doubleArray46 = fieldData39.getSharesY();
        sharesFileData0.setSharesQ(doubleArray46);
        double double48 = sharesFileData0.getInstOwnership();
        sharesFileData0.setInsiderBuyShrs("");
        sharesFileData0.setInsiderNetTrades("out/BigDB/35/Q-1/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : \r\n  web       : null\r\n-fundamental-data-35Q-1.ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : hi!\r\n  phone     : null\r\n  web       : null\r\n");
        sharesFileData0.setMktCap("out/BigDB/6/Q35/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : NONE\r\n  phone     : null\r\n  web       : data/BigDB/\r\n-fundamental-data-6Q35.");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(incSheetFileData26);
        org.junit.Assert.assertNull(doubleArray27);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(doubleArray41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(doubleArray44);
        org.junit.Assert.assertNotNull(sharesFileData45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
    }

    @Test
    public void test05359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05359");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setInsiderNetPercentOutstanding("");
        double[] doubleArray3 = sharesFileData0.getSharesQ();
        sharesFileData0.setInsiderBuys("");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData6 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData7 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData6);
        boolean boolean8 = companyFileData7.isAdr();
        sharesFileData0.setNameFields(companyFileData7);
        java.lang.String str10 = companyFileData7.getTicker();
        java.lang.String str11 = companyFileData7.getDowIndexStr();
        java.lang.String str12 = companyFileData7.getSnpIndexStr();
        // The following exception was thrown during execution in test generation
        try {
            companyFileData7.setExchange("ticker      : \r\n  name      : ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : Cash File Data\r\n  web       : null\r\n");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No enum constant net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum.ticker      : ??  name      : ticker      : ??  name      : null??  exchange  : null??  sector    : null??  industry  : null??  sic       : null??  employees : 0??  snp index : ??  dow index : ??  adr       : false??  drp       : false??  street    : null??  city      : null??  state     : null??  country   : null??  zip       : null??  phone     : null??  web       : null????  exchange  : null??  sector    : null??  industry  : null??  sic       : null??  employees : 0??  snp index : ??  dow index : ??  adr       : false??  drp       : false??  street    : null??  city      : null??  state     : null??  country   : null??  zip       : null??  phone     : Cash File Data??  web       : null??");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test05360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05360");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        java.lang.String str2 = companyFileData1.getIndustry();
        companyFileData1.setSnpIndex("");
        companyFileData1.setPhone("hi!");
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum7 = companyFileData1.getExchange();
        companyFileData1.setDrp("Cash File Data");
        java.lang.String str10 = companyFileData1.getPhone();
        java.lang.String str11 = companyFileData1.getStreet();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData12 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData13 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData12);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData14 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str15 = estimateFileData14.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData16 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData16.setInsiderNetPercentOutstanding("");
        double[] doubleArray19 = sharesFileData16.getSharesQ();
        sharesFileData16.setInsiderBuys("");
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData26 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList24);
        double[] doubleArray27 = incSheetFileData26.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData28 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData29 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData28);
        double[] doubleArray30 = balSheetFileData29.getOtherLtLiabYr();
        double[] doubleArray31 = balSheetFileData29.getStDebtQtr();
        double[] doubleArray32 = balSheetFileData29.getInventoryYr();
        java.lang.String str33 = balSheetFileData29.toString();
        double[] doubleArray34 = balSheetFileData29.getNetFixedAssetsYr();
        double[] doubleArray35 = balSheetFileData29.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData36 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData39 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData13, estimateFileData14, sharesFileData16, incSheetFileData26, balSheetFileData29, cashFileData36, (int) (short) 100, (int) (byte) 100);
        java.lang.String str40 = fieldData39.getStreet();
        double[] doubleArray41 = fieldData39.getTotalOpExpQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData42 = fieldData39.getCashData();
        java.lang.String str43 = fieldData39.getIndustry();
        double[] doubleArray44 = fieldData39.getEpsYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData45 = fieldData39.getEstimateData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData46 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData46.setInstShareholders("");
        sharesFileData46.setVolume3m("");
        sharesFileData46.setDollar3m("");
        int int53 = sharesFileData46.getInsiderBuyShrs();
        sharesFileData46.setVolume10d("hi!");
        java.lang.String str56 = sharesFileData46.getName();
        sharesFileData46.setInsiderSellShrs("out/BigDB/");
        java.lang.String str59 = sharesFileData46.getSector();
        java.lang.String str60 = sharesFileData46.getSector();
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData61 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData62 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData61);
        double[] doubleArray63 = incSheetFileData62.getGrossIncQtr();
        double[] doubleArray64 = incSheetFileData62.getAdjToIncYr();
        double[] doubleArray65 = incSheetFileData62.getAdjToIncQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum66 = incSheetFileData62.getExchange();
        double[] doubleArray67 = incSheetFileData62.getSalesQtr();
        double[] doubleArray68 = incSheetFileData62.getEpsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData69 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData70 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData69);
        double[] doubleArray71 = balSheetFileData70.getOtherLtLiabYr();
        double[] doubleArray72 = balSheetFileData70.getLiabEquityYr();
        double[] doubleArray73 = balSheetFileData70.getInventoryYr();
        java.lang.String str74 = balSheetFileData70.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData75 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData78 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData45, sharesFileData46, incSheetFileData62, balSheetFileData70, cashFileData75, (int) (byte) 100, (int) (byte) 0);
        long long79 = sharesFileData46.getVolumeMonth3m();
        sharesFileData46.setInsiderBuyShrs("");
        java.lang.String str82 = sharesFileData46.getIndustry();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(exchEnum7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(incSheetFileData26);
        org.junit.Assert.assertNull(doubleArray27);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(doubleArray41);
        org.junit.Assert.assertNotNull(cashFileData42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(doubleArray44);
        org.junit.Assert.assertNotNull(estimateFileData45);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(doubleArray63);
        org.junit.Assert.assertNull(doubleArray64);
        org.junit.Assert.assertNull(doubleArray65);
        org.junit.Assert.assertNull(exchEnum66);
        org.junit.Assert.assertNull(doubleArray67);
        org.junit.Assert.assertNull(doubleArray68);
        org.junit.Assert.assertNull(doubleArray71);
        org.junit.Assert.assertNull(doubleArray72);
        org.junit.Assert.assertNull(doubleArray73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 0L + "'", long79 == 0L);
        org.junit.Assert.assertNull(str82);
    }

    @Test
    public void test05361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05361");
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData1);
        companyFileData2.setNumEmployees("hi!");
        java.lang.String str5 = companyFileData2.getPhone();
        estimateFileData0.setNameFields(companyFileData2);
        companyFileData2.setName("  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        int int9 = companyFileData2.getNumEmployees();
        companyFileData2.setIndustry("  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        java.lang.String str12 = companyFileData2.getSic();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test05362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05362");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setInstShareholders("");
        sharesFileData0.setVolume3m("");
        sharesFileData0.setDollar3m("");
        int int7 = sharesFileData0.getInsiderBuyShrs();
        sharesFileData0.setVolume10d("hi!");
        java.lang.String str10 = sharesFileData0.getName();
        double double11 = sharesFileData0.getPrice52hi();
        int int12 = sharesFileData0.getInsiderBuys();
        double double13 = sharesFileData0.getBeta();
        double double14 = sharesFileData0.getPrice52lo();
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
    }

    @Test
    public void test05363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05363");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        double[] doubleArray28 = fieldData27.getIncTaxQtr();
        double[] doubleArray29 = fieldData27.getOtherLtLiabYr();
        double[] doubleArray30 = fieldData27.getCapExQtr();
        java.lang.String str31 = fieldData27.getState();
        double[] doubleArray32 = fieldData27.getEpsQtr();
        double double33 = fieldData27.getBeta();
        java.lang.String str34 = fieldData27.getIndustry();
        double[] doubleArray35 = fieldData27.getBvpsYr();
        double[] doubleArray36 = fieldData27.getInventoryYr();
        java.lang.String str37 = fieldData27.getCountry();
        int int38 = fieldData27.getInstBuyShrs();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(doubleArray28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(doubleArray36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
    }

    @Test
    public void test05364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05364");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setInsiderNetPercentOutstanding("");
        double[] doubleArray3 = sharesFileData0.getSharesQ();
        sharesFileData0.setInsiderBuys("");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData6 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData7 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData6);
        boolean boolean8 = companyFileData7.isAdr();
        sharesFileData0.setNameFields(companyFileData7);
        java.lang.String str10 = companyFileData7.getStreet();
        companyFileData7.setZip("out/BigDB/100/Q10/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n-fundamental-data-100Q10.Cash File Data");
        companyFileData7.setSic("out/BigDB/52/Q97/out/BigDB/10/Q100/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n-fundamental-data-10Q100.NONE-fundamental-data-52Q97.name");
        companyFileData7.setSic("ticker      : \r\n  name      : hi!\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : NONE\r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : hi!\r\n  phone     : data/BigDB/\r\n  web       : null\r\n");
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test05365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05365");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double[] doubleArray30 = fieldData27.getStDebtYr();
        double[] doubleArray31 = fieldData27.getSharesQ();
        double[] doubleArray32 = fieldData27.getAdjToIncYr();
        int int33 = fieldData27.getInsiderNetTrades();
        double[] doubleArray34 = fieldData27.getAcctPayableYr();
        double[] doubleArray35 = fieldData27.getCogsYr();
        double[] doubleArray36 = fieldData27.getCashQtr();
        java.lang.String str37 = fieldData27.getPhone();
        net.ajaskey.common.DateTime dateTime38 = fieldData27.getCurrFiscalYear();
        double[] doubleArray39 = fieldData27.getIncAfterTaxYr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0]");
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(doubleArray36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(dateTime38);
        org.junit.Assert.assertNull(doubleArray39);
    }

    @Test
    public void test05366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05366");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData4 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList2);
        double[] doubleArray5 = incSheetFileData4.getIncTaxYr();
        double[] doubleArray6 = incSheetFileData4.getIncPrimaryEpsYr();
        double[] doubleArray7 = incSheetFileData4.getDepreciationYr();
        double[] doubleArray8 = incSheetFileData4.getEpsDilContQtr();
        double[] doubleArray9 = incSheetFileData4.getNonrecurringItemsYr();
        double[] doubleArray10 = incSheetFileData4.getTotalOpExpYr();
        double[] doubleArray11 = incSheetFileData4.getPreTaxIncQtr();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(incSheetFileData4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertNull(doubleArray9);
        org.junit.Assert.assertNull(doubleArray10);
        org.junit.Assert.assertNull(doubleArray11);
    }

    @Test
    public void test05367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05367");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getOtherLtAssetsYr();
        double[] doubleArray30 = fieldData27.getSharesQ();
        double[] doubleArray31 = fieldData27.getStInvestQtr();
        double[] doubleArray32 = fieldData27.getIncAfterTaxYr();
        double double33 = fieldData27.getEpsQ1();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0]");
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
    }

    @Test
    public void test05368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05368");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray4 = balSheetFileData1.getNetFixedAssetsYr();
        double[] doubleArray5 = balSheetFileData1.getLiabEquityYr();
        double[] doubleArray6 = balSheetFileData1.getOtherCurrLiabQtr();
        double[] doubleArray7 = balSheetFileData1.getAcctRxQtr();
        double[] doubleArray8 = balSheetFileData1.getAcctPayableYr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
    }

    @Test
    public void test05369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05369");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        fieldData27.setQuarter((int) (byte) 100);
        double[] doubleArray33 = fieldData27.getSalesYr();
        double double34 = fieldData27.getEpsQ0();
        double double35 = fieldData27.getDollar3m();
        java.lang.String str36 = fieldData27.getSnpIndexStr();
        int int37 = fieldData27.getInstSellShrs();
        double double38 = fieldData27.getInsiderOwnership();
        int int39 = fieldData27.getInsiderSells();
        double[] doubleArray40 = fieldData27.getUnusualIncYr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNull(doubleArray40);
    }

    @Test
    public void test05370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05370");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        boolean boolean2 = companyFileData1.isDrp();
        java.lang.String str3 = companyFileData1.getState();
        java.lang.String str4 = companyFileData1.getSic();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test05371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05371");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        java.lang.String str2 = companyFileData1.getIndustry();
        companyFileData1.setSnpIndex("");
        companyFileData1.setPhone("hi!");
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum7 = companyFileData1.getExchange();
        companyFileData1.setDrp("Cash File Data");
        java.lang.String str10 = companyFileData1.getPhone();
        java.lang.String str11 = companyFileData1.getState();
        companyFileData1.setIndustry("NONE");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SnpEnum snpEnum14 = companyFileData1.getSnpIndex();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(exchEnum7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + snpEnum14 + "' != '" + net.ajaskey.market.tools.SIP.BigDB.dataio.SnpEnum.NONE + "'", snpEnum14.equals(net.ajaskey.market.tools.SIP.BigDB.dataio.SnpEnum.NONE));
    }

    @Test
    public void test05372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05372");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getOtherLtAssetsQtr();
        double[] doubleArray30 = fieldData27.getTotalOpExpYr();
        double double31 = fieldData27.getEpsY0();
        double[] doubleArray32 = fieldData27.getRdQtr();
        double[] doubleArray33 = fieldData27.getPrefStockYr();
        java.lang.String str34 = fieldData27.getWeb();
        double[] doubleArray35 = fieldData27.getLtInvestYr();
        double[] doubleArray36 = fieldData27.getEpsQtr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(doubleArray36);
    }

    @Test
    public void test05373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05373");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        double double31 = fieldData27.getEpsQ0();
        double double32 = fieldData27.getEpsQ1();
        double[] doubleArray33 = fieldData27.getEpsDilContYr();
        double[] doubleArray34 = fieldData27.getAcctPayableYr();
        double[] doubleArray35 = fieldData27.getPrefStockQtr();
        double[] doubleArray36 = fieldData27.getStDebtYr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(doubleArray36);
    }

    @Test
    public void test05374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05374");
        java.lang.String[] strArray1 = new java.lang.String[] { "out/BigDB/-1/Q1/out/BigDB/97/Q0/out/BigDB/10/Q100/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n-fundamental-data-10Q100.NONE-fundamental-data-97Q0.hi!-fundamental-data--1Q1." };
        // The following exception was thrown during execution in test generation
        try {
            net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData(strArray1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test05375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05375");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        double[] doubleArray28 = fieldData27.getIncTaxQtr();
        double[] doubleArray29 = fieldData27.getBvpsYr();
        double[] doubleArray30 = fieldData27.getIncPrimaryEpsQtr();
        double[] doubleArray31 = fieldData27.getPreTaxIncYr();
        int int32 = fieldData27.getInstBuyShrs();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(doubleArray28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
    }

    @Test
    public void test05376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05376");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setInstShareholders("");
        sharesFileData0.setVolume3m("");
        sharesFileData0.setDollar3m("");
        sharesFileData0.setDollar3m("hi!");
        double double9 = sharesFileData0.getPrice();
        java.lang.String str10 = sharesFileData0.toDbOutput();
        int int11 = sharesFileData0.getInsiderSells();
        sharesFileData0.setInstSellShrs("");
        double double14 = sharesFileData0.getInstOwnership();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n" + "'", str10, "  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
    }

    @Test
    public void test05377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05377");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getOtherLtAssetsYr();
        double[] doubleArray30 = fieldData27.getCashFromOpsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData31 = fieldData27.getIncSheetData();
        double[] doubleArray32 = fieldData27.getCashYr();
        int int33 = fieldData27.getInstSellShrs();
        double[] doubleArray34 = fieldData27.getCashYr();
        double[] doubleArray35 = fieldData27.getAdjToIncQtr();
        double double36 = fieldData27.getMktCap();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNotNull(incSheetFileData31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
    }

    @Test
    public void test05378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05378");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getPrefStockYr();
        double[] doubleArray30 = fieldData27.getIncAfterTaxQtr();
        double[] doubleArray31 = fieldData27.getBvpsYr();
        double[] doubleArray32 = fieldData27.getGrossOpIncQtr();
        double[] doubleArray33 = fieldData27.getDepreciationQtr();
        long long34 = fieldData27.getVolume10d();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum35 = fieldData27.getExchange();
        double[] doubleArray36 = fieldData27.getUnusualIncYr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertNull(exchEnum35);
        org.junit.Assert.assertNull(doubleArray36);
    }

    @Test
    public void test05379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05379");
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData0);
        double[] doubleArray2 = incSheetFileData1.getGrossIncQtr();
        double[] doubleArray3 = incSheetFileData1.getRdQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum4 = incSheetFileData1.getExchange();
        java.lang.String str5 = incSheetFileData1.getTicker();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData6 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData7 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData6);
        companyFileData7.setNumEmployees("hi!");
        java.lang.String str10 = companyFileData7.getPhone();
        java.lang.String str11 = companyFileData7.getIndustry();
        companyFileData7.setWeb("  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        incSheetFileData1.setNameFields(companyFileData7);
        java.lang.String str15 = companyFileData7.getZip();
        companyFileData7.setState("  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        companyFileData7.setSector("");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData20 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData21 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData20);
        companyFileData21.setNumEmployees("hi!");
        java.lang.String str24 = companyFileData21.getState();
        java.lang.String str25 = companyFileData21.getDowIndexStr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData26 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData26);
        companyFileData27.setNumEmployees("hi!");
        java.lang.String str30 = companyFileData27.getPhone();
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData35 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList33);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData36 = net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData.readFromDb((java.util.List<java.lang.String>) strList33);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData37 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList33);
        java.util.List<java.lang.String> strList38 = companyFileData27.set((java.util.List<java.lang.String>) strList33);
        java.util.List<java.lang.String> strList39 = companyFileData21.set(strList38);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData40 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb(strList38);
        java.util.List<java.lang.String> strList41 = companyFileData7.set(strList38);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData42 = net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData.readFromDb(strList41);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData43 = net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData.readFromDb(strList41);
        java.lang.String str44 = companyFileData43.getPhone();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(exchEnum4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(incSheetFileData35);
        org.junit.Assert.assertNotNull(cashFileData36);
        org.junit.Assert.assertNotNull(incSheetFileData37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNotNull(incSheetFileData40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(cashFileData42);
        org.junit.Assert.assertNotNull(companyFileData43);
        org.junit.Assert.assertNull(str44);
    }

    @Test
    public void test05380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05380");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        boolean boolean29 = fieldData27.isDrp();
        double[] doubleArray30 = fieldData27.getCashFromOpsQtr();
        double[] doubleArray31 = fieldData27.getInventoryYr();
        double[] doubleArray32 = fieldData27.getOtherCurrLiabYr();
        double[] doubleArray33 = fieldData27.getIncPrimaryEpsQtr();
        double double34 = fieldData27.getFloatshr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData35 = fieldData27.getShares();
        double[] doubleArray36 = fieldData27.getPrefStockYr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(sharesFileData35);
        org.junit.Assert.assertNull(doubleArray36);
    }

    @Test
    public void test05381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05381");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getStDebtQtr();
        double[] doubleArray30 = fieldData27.getEpsContQtr();
        double[] doubleArray31 = fieldData27.getOtherLtAssetsYr();
        double[] doubleArray32 = fieldData27.getNetIncYr();
        double[] doubleArray33 = fieldData27.getInventoryYr();
        double[] doubleArray34 = fieldData27.getDividendYr();
        double[] doubleArray35 = fieldData27.getPreTaxIncQtr();
        double[] doubleArray36 = fieldData27.getBvpsQtr();
        net.ajaskey.common.DateTime dateTime37 = fieldData27.getLatestQtrEps();
        int int38 = fieldData27.getInsiderBuyShrs();
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData39 = fieldData27.getIncSheetData();
        long long40 = fieldData27.getVolumeMonth3m();
        double double41 = fieldData27.getPrice52hi();
        double[] doubleArray42 = fieldData27.getLtInvestYr();
        java.lang.String str43 = fieldData27.getName();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(doubleArray36);
        org.junit.Assert.assertNull(dateTime37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(incSheetFileData39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNull(doubleArray42);
        org.junit.Assert.assertNull(str43);
    }

    @Test
    public void test05382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05382");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        java.lang.String str2 = companyFileData1.getIndustry();
        companyFileData1.setSnpIndex("");
        java.lang.String str5 = companyFileData1.toDbOuput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData6 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData7 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData6);
        java.lang.String str8 = companyFileData7.getZip();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData9 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData10 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData9);
        java.lang.String str11 = companyFileData10.getIndustry();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData16 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList14);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData17 = net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData.readFromDb((java.util.List<java.lang.String>) strList14);
        java.util.List<java.lang.String> strList18 = companyFileData10.set((java.util.List<java.lang.String>) strList14);
        java.util.List<java.lang.String> strList19 = companyFileData7.set((java.util.List<java.lang.String>) strList14);
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData20 = net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData.readFromDb(strList19);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData21 = net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData.readFromDb(strList19);
        java.util.List<java.lang.String> strList22 = companyFileData1.set(strList19);
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData23 = net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData.readFromDb(strList22);
        double double24 = sharesFileData23.getPrice52hi();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : NONE\r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n" + "'", str5, "ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : NONE\r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(incSheetFileData16);
        org.junit.Assert.assertNotNull(cashFileData17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(sharesFileData20);
        org.junit.Assert.assertNotNull(cashFileData21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(sharesFileData23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
    }

    @Test
    public void test05383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05383");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setInstShareholders("");
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum3 = sharesFileData0.getExchange();
        sharesFileData0.setVolume3m("  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        sharesFileData0.setVolume10d("ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n");
        sharesFileData0.setFromReport((int) (byte) 0, (int) ' ');
        sharesFileData0.setInsiderBuys("ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n");
        sharesFileData0.setInstSellShrs("out/BigDB/0/Q97/ticker      : \r\n  name      : hi!\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : NONE\r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : hi!\r\n  phone     : data/BigDB/\r\n  web       : null\r\n-fundamental-data-0Q97.ticker      : \r\n  name      : hi!\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : NONE\r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : hi!\r\n  phone     : data/BigDB/\r\n  web       : null\r\n");
        sharesFileData0.setVolume3m("Cash File Data");
        java.lang.String str17 = sharesFileData0.toString();
        org.junit.Assert.assertNull(exchEnum3);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test05384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05384");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        companyFileData1.setNumEmployees("hi!");
        java.lang.String str4 = companyFileData1.getState();
        java.lang.String str5 = companyFileData1.getDowIndexStr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData6 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData7 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData6);
        companyFileData7.setNumEmployees("hi!");
        java.lang.String str10 = companyFileData7.getPhone();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData15 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList13);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData16 = net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData.readFromDb((java.util.List<java.lang.String>) strList13);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData17 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList13);
        java.util.List<java.lang.String> strList18 = companyFileData7.set((java.util.List<java.lang.String>) strList13);
        java.util.List<java.lang.String> strList19 = companyFileData1.set(strList18);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData20 = net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData.readFromDb(strList18);
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData21 = net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData.readFromDb(strList18);
        double[] doubleArray22 = balSheetFileData21.getLtInvestQtr();
        double[] doubleArray23 = balSheetFileData21.getInventoryYr();
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(incSheetFileData15);
        org.junit.Assert.assertNotNull(cashFileData16);
        org.junit.Assert.assertNotNull(incSheetFileData17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(cashFileData20);
        org.junit.Assert.assertNotNull(balSheetFileData21);
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
    }

    @Test
    public void test05385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05385");
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData0);
        double[] doubleArray2 = incSheetFileData1.getGrossIncQtr();
        double[] doubleArray3 = incSheetFileData1.getAdjToIncYr();
        double[] doubleArray4 = incSheetFileData1.getEpsDilYr();
        double[] doubleArray5 = incSheetFileData1.getIncTaxYr();
        double[] doubleArray6 = incSheetFileData1.getEpsDilYr();
        java.lang.String str7 = incSheetFileData1.getIndustry();
        double[] doubleArray8 = incSheetFileData1.getEpsContQtr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(doubleArray8);
    }

    @Test
    public void test05386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05386");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getStDebtQtr();
        double[] doubleArray30 = fieldData27.getLtDebtYr();
        double[] doubleArray31 = fieldData27.getTotalOpExpYr();
        fieldData27.setQuarter((int) '#');
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData34 = fieldData27.getCashData();
        double[] doubleArray35 = cashFileData34.getCashFromInvQtr();
        double[] doubleArray36 = cashFileData34.getCashFromInvQtr();
        java.lang.String str37 = cashFileData34.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData38 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData(cashFileData34);
        java.lang.String str39 = cashFileData34.toDbOutput();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNotNull(cashFileData34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(doubleArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
    }

    @Test
    public void test05387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05387");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setInstShareholders("");
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum3 = sharesFileData0.getExchange();
        sharesFileData0.setMktCap("  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        double double6 = sharesFileData0.getPrice52hi();
        java.lang.String str7 = sharesFileData0.getTicker();
        double double8 = sharesFileData0.getPrice52hi();
        long long9 = sharesFileData0.getVolumeMonth3m();
        org.junit.Assert.assertNull(exchEnum3);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
    }

    @Test
    public void test05388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05388");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray4 = balSheetFileData1.getLtInvestQtr();
        double[] doubleArray5 = balSheetFileData1.getCurrLiabQtr();
        double[] doubleArray6 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray7 = balSheetFileData1.getAcctPayableQtr();
        double[] doubleArray8 = balSheetFileData1.getLtDebtYr();
        java.lang.String str9 = balSheetFileData1.toString();
        double[] doubleArray10 = balSheetFileData1.getOtherCurrLiabYr();
        double[] doubleArray11 = balSheetFileData1.getGoodwillQtr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(doubleArray10);
        org.junit.Assert.assertNull(doubleArray11);
    }

    @Test
    public void test05389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05389");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        double[] doubleArray28 = fieldData27.getIncTaxQtr();
        double[] doubleArray29 = fieldData27.getOtherLtLiabYr();
        double[] doubleArray30 = fieldData27.getCapExQtr();
        java.lang.String str31 = fieldData27.getState();
        double[] doubleArray32 = fieldData27.getOtherCurrLiabYr();
        double[] doubleArray33 = fieldData27.getGrossIncQtr();
        double[] doubleArray34 = fieldData27.getGrossOpIncQtr();
        java.lang.String str35 = fieldData27.getName();
        double[] doubleArray36 = fieldData27.getSalesYr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(doubleArray28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(doubleArray36);
    }

    @Test
    public void test05390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05390");
        java.lang.String[] strArray3 = new java.lang.String[] { "Cash File Data", "Cash File Data", "ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData6 = net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData.readFromDb((java.util.List<java.lang.String>) strList4);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData7 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList4);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData8 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList4);
        double[] doubleArray9 = incSheetFileData8.getRdQtr();
        double[] doubleArray10 = incSheetFileData8.getAdjToIncQtr();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(sharesFileData6);
        org.junit.Assert.assertNotNull(incSheetFileData7);
        org.junit.Assert.assertNotNull(incSheetFileData8);
        org.junit.Assert.assertNull(doubleArray9);
        org.junit.Assert.assertNull(doubleArray10);
    }

    @Test
    public void test05391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05391");
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData0);
        double[] doubleArray2 = incSheetFileData1.getGrossIncYr();
        double[] doubleArray3 = incSheetFileData1.getEpsYr();
        double[] doubleArray4 = incSheetFileData1.getDepreciationQtr();
        double[] doubleArray5 = incSheetFileData1.getNetIncQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum6 = incSheetFileData1.getExchange();
        double[] doubleArray7 = incSheetFileData1.getOtherIncYr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(exchEnum6);
        org.junit.Assert.assertNull(doubleArray7);
    }

    @Test
    public void test05392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05392");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        companyFileData1.setZip("hi!");
        java.lang.String str30 = companyFileData1.toString();
        companyFileData1.setSnpIndex("Cash File Data");
        companyFileData1.setName("hi!");
        companyFileData1.setPhone("data/BigDB/");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SnpEnum snpEnum37 = companyFileData1.getSnpIndex();
        companyFileData1.setState("out/BigDB/100/Q0/-fundamental-data-100Q0.out/BigDB/100/Q10/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n-fundamental-data-100Q10.Cash File Data");
        companyFileData1.setState("out/BigDB/100/Q10/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n-fundamental-data-100Q10.Cash File Data");
        java.lang.String str42 = companyFileData1.getCountry();
        java.lang.String str43 = companyFileData1.getSic();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + snpEnum37 + "' != '" + net.ajaskey.market.tools.SIP.BigDB.dataio.SnpEnum.NONE + "'", snpEnum37.equals(net.ajaskey.market.tools.SIP.BigDB.dataio.SnpEnum.NONE));
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str43);
    }

    @Test
    public void test05393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05393");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        companyFileData1.setNumEmployees("hi!");
        java.lang.String str4 = companyFileData1.getState();
        java.lang.String str5 = companyFileData1.getDowIndexStr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData6 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData7 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData6);
        companyFileData7.setNumEmployees("hi!");
        java.lang.String str10 = companyFileData7.getPhone();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData15 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList13);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData16 = net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData.readFromDb((java.util.List<java.lang.String>) strList13);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData17 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList13);
        java.util.List<java.lang.String> strList18 = companyFileData7.set((java.util.List<java.lang.String>) strList13);
        java.util.List<java.lang.String> strList19 = companyFileData1.set(strList18);
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData20 = net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData.readFromDb(strList18);
        double[] doubleArray21 = balSheetFileData20.getCurrLiabQtr();
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(incSheetFileData15);
        org.junit.Assert.assertNotNull(cashFileData16);
        org.junit.Assert.assertNotNull(incSheetFileData17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(balSheetFileData20);
        org.junit.Assert.assertNull(doubleArray21);
    }

    @Test
    public void test05394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05394");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        companyFileData1.setNumEmployees("hi!");
        java.lang.String str4 = companyFileData1.getPhone();
        java.lang.String str5 = companyFileData1.getIndustry();
        companyFileData1.setWeb("  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        java.lang.String str8 = companyFileData1.getCountry();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData9 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData1);
        companyFileData1.setNumEmployees("");
        java.lang.String str12 = companyFileData1.getSnpIndexStr();
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test05395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05395");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        java.lang.String str2 = companyFileData1.getIndustry();
        java.lang.String str3 = companyFileData1.getState();
        companyFileData1.setPhone("  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        java.lang.String str6 = companyFileData1.getName();
        int int7 = companyFileData1.getNumEmployees();
        java.lang.String str8 = companyFileData1.getCity();
        companyFileData1.setPhone("hi!");
        net.ajaskey.market.tools.SIP.BigDB.dataio.DowEnum dowEnum11 = companyFileData1.getDowIndex();
        companyFileData1.setDowIndex("ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : NONE\r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n");
        companyFileData1.setCountry("out/BigDB/0/Q10/out/BigDB/97/Q0/name-fundamental-data-97Q0.data/BigDB/-fundamental-data-0Q10.out/BigDB/97/Q0/name-fundamental-data-97Q0.data/BigDB/");
        companyFileData1.setState("");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(dowEnum11);
    }

    @Test
    public void test05396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05396");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setInstShareholders("");
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum3 = sharesFileData0.getExchange();
        sharesFileData0.setMktCap("  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        double double6 = sharesFileData0.getPrice52hi();
        double double7 = sharesFileData0.getFloatshr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData8 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData(sharesFileData0);
        int int9 = sharesFileData8.getInsiderNetTrades();
        org.junit.Assert.assertNull(exchEnum3);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test05397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05397");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        java.lang.String str2 = companyFileData1.getIndustry();
        companyFileData1.setSnpIndex("");
        companyFileData1.setPhone("hi!");
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum7 = companyFileData1.getExchange();
        companyFileData1.setDrp("Cash File Data");
        java.lang.String str10 = companyFileData1.getPhone();
        java.lang.String str11 = companyFileData1.getStreet();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData12 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData13 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData12);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData14 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str15 = estimateFileData14.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData16 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData16.setInsiderNetPercentOutstanding("");
        double[] doubleArray19 = sharesFileData16.getSharesQ();
        sharesFileData16.setInsiderBuys("");
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData26 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList24);
        double[] doubleArray27 = incSheetFileData26.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData28 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData29 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData28);
        double[] doubleArray30 = balSheetFileData29.getOtherLtLiabYr();
        double[] doubleArray31 = balSheetFileData29.getStDebtQtr();
        double[] doubleArray32 = balSheetFileData29.getInventoryYr();
        java.lang.String str33 = balSheetFileData29.toString();
        double[] doubleArray34 = balSheetFileData29.getNetFixedAssetsYr();
        double[] doubleArray35 = balSheetFileData29.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData36 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData39 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData13, estimateFileData14, sharesFileData16, incSheetFileData26, balSheetFileData29, cashFileData36, (int) (short) 100, (int) (byte) 100);
        java.lang.String str40 = fieldData39.getStreet();
        double[] doubleArray41 = fieldData39.getTotalOpExpQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData42 = fieldData39.getCashData();
        java.lang.String str43 = fieldData39.getIndustry();
        double[] doubleArray44 = fieldData39.getEpsYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData45 = fieldData39.getEstimateData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData46 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData46.setInstShareholders("");
        sharesFileData46.setVolume3m("");
        sharesFileData46.setDollar3m("");
        int int53 = sharesFileData46.getInsiderBuyShrs();
        sharesFileData46.setVolume10d("hi!");
        java.lang.String str56 = sharesFileData46.getName();
        sharesFileData46.setInsiderSellShrs("out/BigDB/");
        java.lang.String str59 = sharesFileData46.getSector();
        java.lang.String str60 = sharesFileData46.getSector();
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData61 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData62 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData61);
        double[] doubleArray63 = incSheetFileData62.getGrossIncQtr();
        double[] doubleArray64 = incSheetFileData62.getAdjToIncYr();
        double[] doubleArray65 = incSheetFileData62.getAdjToIncQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum66 = incSheetFileData62.getExchange();
        double[] doubleArray67 = incSheetFileData62.getSalesQtr();
        double[] doubleArray68 = incSheetFileData62.getEpsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData69 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData70 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData69);
        double[] doubleArray71 = balSheetFileData70.getOtherLtLiabYr();
        double[] doubleArray72 = balSheetFileData70.getLiabEquityYr();
        double[] doubleArray73 = balSheetFileData70.getInventoryYr();
        java.lang.String str74 = balSheetFileData70.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData75 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData78 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData45, sharesFileData46, incSheetFileData62, balSheetFileData70, cashFileData75, (int) (byte) 100, (int) (byte) 0);
        double[] doubleArray79 = incSheetFileData62.getAdjToIncQtr();
        double[] doubleArray80 = incSheetFileData62.getAdjToIncQtr();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(exchEnum7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(incSheetFileData26);
        org.junit.Assert.assertNull(doubleArray27);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(doubleArray41);
        org.junit.Assert.assertNotNull(cashFileData42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(doubleArray44);
        org.junit.Assert.assertNotNull(estimateFileData45);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(doubleArray63);
        org.junit.Assert.assertNull(doubleArray64);
        org.junit.Assert.assertNull(doubleArray65);
        org.junit.Assert.assertNull(exchEnum66);
        org.junit.Assert.assertNull(doubleArray67);
        org.junit.Assert.assertNull(doubleArray68);
        org.junit.Assert.assertNull(doubleArray71);
        org.junit.Assert.assertNull(doubleArray72);
        org.junit.Assert.assertNull(doubleArray73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertNull(doubleArray79);
        org.junit.Assert.assertNull(doubleArray80);
    }

    @Test
    public void test05398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05398");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getPrefStockYr();
        double[] doubleArray30 = fieldData27.getInventoryQtr();
        double[] doubleArray31 = fieldData27.getUnusualIncYr();
        java.lang.String str32 = fieldData27.getSector();
        double[] doubleArray33 = fieldData27.getCashQtr();
        double[] doubleArray34 = fieldData27.getSalesYr();
        int int35 = fieldData27.getInsiderBuyShrs();
        double[] doubleArray36 = fieldData27.getEpsDilContYr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(doubleArray36);
    }

    @Test
    public void test05399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05399");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData30 = fieldData27.getCashData();
        double double31 = fieldData27.getEpsY0();
        double[] doubleArray32 = fieldData27.getNetIncQtr();
        double[] doubleArray33 = fieldData27.getOtherCurrAssetsYr();
        boolean boolean34 = fieldData27.isDrp();
        double[] doubleArray35 = fieldData27.getPrefStockQtr();
        double[] doubleArray36 = fieldData27.getIncPrimaryEpsQtr();
        fieldData27.setYear((int) (short) 10);
        java.lang.String str39 = fieldData27.getSector();
        double[] doubleArray40 = fieldData27.getPreTaxIncQtr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNotNull(cashFileData30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(doubleArray36);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(doubleArray40);
    }

    @Test
    public void test05400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05400");
        java.lang.String[] strArray4 = new java.lang.String[] { "ticker      : \r\n  name      : ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : Cash File Data\r\n  web       : null\r\n", "out/BigDB/0/Q10/out/BigDB/97/Q0/name-fundamental-data-97Q0.data/BigDB/-fundamental-data-0Q10.out/BigDB/97/Q0/name-fundamental-data-97Q0.data/BigDB/", "data/BigDB/", "name" };
        // The following exception was thrown during execution in test generation
        try {
            net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData5 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData(strArray4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray4);
    }

    @Test
    public void test05401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05401");
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData0);
        double[] doubleArray2 = incSheetFileData1.getGrossIncQtr();
        double[] doubleArray3 = incSheetFileData1.getAdjToIncYr();
        double[] doubleArray4 = incSheetFileData1.getIncTaxYr();
        double[] doubleArray5 = incSheetFileData1.getCogsQtr();
        double[] doubleArray6 = incSheetFileData1.getEpsDilQtr();
        double[] doubleArray7 = incSheetFileData1.getIncAfterTaxQtr();
        double[] doubleArray8 = incSheetFileData1.getDividendYr();
        double[] doubleArray9 = incSheetFileData1.getGrossIncYr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertNull(doubleArray9);
    }

    @Test
    public void test05402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05402");
        net.ajaskey.market.tools.SIP.BigDB.dataio.FiletypeEnum filetypeEnum3 = null;
        // The following exception was thrown during execution in test generation
        try {
            net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData4 = net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData.getFromDb("out/BigDB/35/Q-1/out/BigDB/97/Q0/name-fundamental-data-97Q0.data/BigDB/-fundamental-data-35Q-1.NONE", 1, (int) (short) 0, filetypeEnum3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test05403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05403");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        java.lang.String str2 = companyFileData1.getZip();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData3 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData3);
        java.lang.String str5 = companyFileData4.getIndustry();
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData10 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList8);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData11 = net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData.readFromDb((java.util.List<java.lang.String>) strList8);
        java.util.List<java.lang.String> strList12 = companyFileData4.set((java.util.List<java.lang.String>) strList8);
        java.util.List<java.lang.String> strList13 = companyFileData1.set((java.util.List<java.lang.String>) strList8);
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData.readFromDb(strList13);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData15 = net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData.readFromDb(strList13);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData16 = net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData.readFromDb(strList13);
        java.lang.String str17 = cashFileData16.toDbOutput();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(incSheetFileData10);
        org.junit.Assert.assertNotNull(cashFileData11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(sharesFileData14);
        org.junit.Assert.assertNotNull(cashFileData15);
        org.junit.Assert.assertNotNull(cashFileData16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test05404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05404");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray4 = balSheetFileData1.getLtInvestQtr();
        double[] doubleArray5 = balSheetFileData1.getLiabEquityQtr();
        double[] doubleArray6 = balSheetFileData1.getCurrLiabYr();
        java.lang.String str7 = balSheetFileData1.getSector();
        double[] doubleArray8 = balSheetFileData1.getOtherCurrLiabYr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(doubleArray8);
    }

    @Test
    public void test05405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05405");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        java.lang.String str31 = fieldData27.getSic();
        double[] doubleArray32 = fieldData27.getEpsContQtr();
        double[] doubleArray33 = fieldData27.getCogsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData34 = fieldData27.getEstimateData();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNotNull(estimateFileData34);
    }

    @Test
    public void test05406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05406");
        java.lang.String[] strArray2 = new java.lang.String[] { "out/BigDB/52/Q97/out/BigDB/10/Q100/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n-fundamental-data-10Q100.NONE-fundamental-data-52Q97.name", "ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n" };
        java.lang.String[] strArray8 = new java.lang.String[] { "out/BigDB/35/Q-1/out/BigDB/97/Q0/name-fundamental-data-97Q0.data/BigDB/-fundamental-data-35Q-1.NONE", "out/BigDB/100/Q10/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n-fundamental-data-100Q10.Cash File Data", "out/BigDB/35/Q-1/out/BigDB/97/Q0/name-fundamental-data-97Q0.data/BigDB/-fundamental-data-35Q-1.NONE", "ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : NONE\r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n", "ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : hi!\r\n  phone     : null\r\n  web       : null\r\n" };
        // The following exception was thrown during execution in test generation
        try {
            net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData9 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(strArray2, strArray8);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertNotNull(strArray8);
    }

    @Test
    public void test05407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05407");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        double[] doubleArray28 = incSheetFileData14.getIntExpNonOpYr();
        double[] doubleArray29 = incSheetFileData14.getEpsYr();
        double[] doubleArray30 = incSheetFileData14.getGrossIncQtr();
        double[] doubleArray31 = incSheetFileData14.getGrossOpIncQtr();
        double[] doubleArray32 = incSheetFileData14.getNetIncYr();
        double[] doubleArray33 = incSheetFileData14.getEpsDilQtr();
        double[] doubleArray34 = incSheetFileData14.getEpsDilContQtr();
        double[] doubleArray35 = incSheetFileData14.getEpsDilYr();
        double[] doubleArray36 = incSheetFileData14.getIncPrimaryEpsQtr();
        double[] doubleArray37 = incSheetFileData14.getUnusualIncYr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(doubleArray28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(doubleArray36);
        org.junit.Assert.assertNull(doubleArray37);
    }

    @Test
    public void test05408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05408");
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str1 = estimateFileData0.getName();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum2 = estimateFileData0.getExchange();
        java.lang.String str3 = estimateFileData0.getIndustry();
        java.lang.String str4 = estimateFileData0.getIndustry();
        java.lang.String str5 = estimateFileData0.getIndustry();
        net.ajaskey.common.DateTime dateTime6 = estimateFileData0.getLatestQtrEps();
        double double7 = estimateFileData0.getEpsQ0();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(exchEnum2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(dateTime6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    }

    @Test
    public void test05409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05409");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray4 = balSheetFileData1.getLtInvestQtr();
        double[] doubleArray5 = balSheetFileData1.getCurrLiabYr();
        double[] doubleArray6 = balSheetFileData1.getPrefStockQtr();
        double[] doubleArray7 = balSheetFileData1.getCashYr();
        double[] doubleArray8 = balSheetFileData1.getBvpsQtr();
        java.lang.String str9 = balSheetFileData1.getIndustry();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test05410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05410");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        double double31 = fieldData27.getEpsQ0();
        double[] doubleArray32 = fieldData27.getLtDebtQtr();
        double[] doubleArray33 = fieldData27.getLtDebtQtr();
        double double34 = fieldData27.getPrice52lo();
        double[] doubleArray35 = fieldData27.getOtherCurrLiabQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData36 = fieldData27.getShares();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData37 = fieldData27.getCashData();
        double[] doubleArray38 = fieldData27.getPreTaxIncQtr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNotNull(sharesFileData36);
        org.junit.Assert.assertNotNull(cashFileData37);
        org.junit.Assert.assertNull(doubleArray38);
    }

    @Test
    public void test05411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05411");
        net.ajaskey.market.tools.SIP.BigDB.dataio.FiletypeEnum filetypeEnum3 = null;
        // The following exception was thrown during execution in test generation
        try {
            net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData4 = net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData.getFromDb("out/BigDB/-1/Q1/out/BigDB/97/Q0/out/BigDB/10/Q100/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n-fundamental-data-10Q100.NONE-fundamental-data-97Q0.hi!-fundamental-data--1Q1.", (int) '4', (int) (byte) 100, filetypeEnum3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test05412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05412");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        java.lang.String str2 = companyFileData1.getIndustry();
        java.lang.String str3 = companyFileData1.getState();
        companyFileData1.setWeb("  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData6 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData7 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData6);
        java.lang.String str8 = companyFileData7.getIndustry();
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData13 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData.readFromDb((java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = companyFileData7.set((java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList16 = companyFileData1.set((java.util.List<java.lang.String>) strList11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData17 = net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData.readFromDb((java.util.List<java.lang.String>) strList11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData18 = net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData.readFromDb((java.util.List<java.lang.String>) strList11);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(incSheetFileData13);
        org.junit.Assert.assertNotNull(cashFileData14);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(companyFileData17);
        org.junit.Assert.assertNotNull(estimateFileData18);
    }

    @Test
    public void test05413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05413");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setInstShareholders("");
        java.lang.String str3 = sharesFileData0.getTicker();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum4 = sharesFileData0.getExchange();
        double double5 = sharesFileData0.getPrice();
        double double6 = sharesFileData0.getInsiderNetPercentOutstanding();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData7 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData(sharesFileData0);
        double double8 = sharesFileData0.getInsiderNetPercentOutstanding();
        int int9 = sharesFileData0.getInsiderSellShrs();
        sharesFileData0.setMktCap("name");
        double double12 = sharesFileData0.getInsiderOwnership();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(exchEnum4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    }

    @Test
    public void test05414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05414");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        double[] doubleArray31 = fieldData27.getNetIncYr();
        int int32 = fieldData27.getInsiderSellShrs();
        java.lang.String str33 = fieldData27.getSnpIndexStr();
        java.lang.String str34 = fieldData27.getIndustry();
        int int35 = fieldData27.getInsiderSellShrs();
        int int36 = fieldData27.getQuarter();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
    }

    @Test
    public void test05415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05415");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        fieldData27.setQuarter((int) (byte) 100);
        double[] doubleArray33 = fieldData27.getSalesYr();
        double double34 = fieldData27.getEpsQ0();
        double[] doubleArray35 = fieldData27.getAdjToIncQtr();
        java.lang.String str36 = fieldData27.getPhone();
        double[] doubleArray37 = fieldData27.getStDebtYr();
        double[] doubleArray38 = fieldData27.getCapExQtr();
        boolean boolean39 = fieldData27.isDrp();
        double[] doubleArray40 = fieldData27.getOtherIncYr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(doubleArray37);
        org.junit.Assert.assertNull(doubleArray38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(doubleArray40);
    }

    @Test
    public void test05416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05416");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str2 = estimateFileData1.getName();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData3 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        double double4 = sharesFileData3.getInsiderOwnership();
        sharesFileData3.setFromReport((int) '#', (int) (byte) 100);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData8 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData9 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData8);
        double[] doubleArray10 = incSheetFileData9.getGrossIncQtr();
        double[] doubleArray11 = incSheetFileData9.getAdjToIncYr();
        double[] doubleArray12 = incSheetFileData9.getUnusualIncYr();
        double[] doubleArray13 = incSheetFileData9.getIncTaxYr();
        double[] doubleArray14 = incSheetFileData9.getNetIncYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData15 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData15);
        double[] doubleArray17 = balSheetFileData16.getOtherLtLiabYr();
        double[] doubleArray18 = balSheetFileData16.getStDebtQtr();
        double[] doubleArray19 = balSheetFileData16.getLtInvestQtr();
        double[] doubleArray20 = balSheetFileData16.getOtherLtAssetsYr();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData25 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList23);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData26 = net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData.readFromDb((java.util.List<java.lang.String>) strList23);
        java.lang.String str27 = cashFileData26.getTicker();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData28 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData(cashFileData26);
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData31 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData0, estimateFileData1, sharesFileData3, incSheetFileData9, balSheetFileData16, cashFileData28, (int) (short) 0, (int) (short) 100);
        java.lang.String str32 = sharesFileData3.getTicker();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData33 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData(sharesFileData3);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNull(doubleArray10);
        org.junit.Assert.assertNull(doubleArray11);
        org.junit.Assert.assertNull(doubleArray12);
        org.junit.Assert.assertNull(doubleArray13);
        org.junit.Assert.assertNull(doubleArray14);
        org.junit.Assert.assertNull(doubleArray17);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(incSheetFileData25);
        org.junit.Assert.assertNotNull(cashFileData26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test05417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05417");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData4 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList2);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData5 = net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData.readFromDb((java.util.List<java.lang.String>) strList2);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData6 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList2);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData7 = net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData.readFromDb((java.util.List<java.lang.String>) strList2);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData8 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList2);
        double[] doubleArray9 = incSheetFileData8.getCogsYr();
        double[] doubleArray10 = incSheetFileData8.getGrossOpIncYr();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(incSheetFileData4);
        org.junit.Assert.assertNotNull(cashFileData5);
        org.junit.Assert.assertNotNull(incSheetFileData6);
        org.junit.Assert.assertNotNull(estimateFileData7);
        org.junit.Assert.assertNotNull(incSheetFileData8);
        org.junit.Assert.assertNull(doubleArray9);
        org.junit.Assert.assertNull(doubleArray10);
    }

    @Test
    public void test05418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05418");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum1 = sharesFileData0.getExchange();
        java.lang.String str2 = sharesFileData0.getIndustry();
        sharesFileData0.setInstOwnership("hi!");
        sharesFileData0.setVolume10d("ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : NONE\r\n  phone     : null\r\n  web       : data/BigDB/\r\n");
        org.junit.Assert.assertNull(exchEnum1);
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test05419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05419");
        java.lang.String[] strArray1 = new java.lang.String[] { "ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : hi!\r\n  phone     : null\r\n  web       : null\r\n" };
        java.lang.String[] strArray8 = new java.lang.String[] { "out/BigDB/6/Q35/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : NONE\r\n  phone     : null\r\n  web       : data/BigDB/\r\n-fundamental-data-6Q35.", "ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : out/BigDB/1/Q10/hi!-fundamental-data-1Q10.ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n\r\n  employees : 0\r\n  snp index : NONE\r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n", "  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    :      1.0000    -1.0000    -1.0000\r\n  shares yearly       : \r\n", "out/BigDB/1/Q52/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n-fundamental-data-1Q52.out/BigDB/-1/Q1/out/BigDB/97/Q0/name-fundamental-data-97Q0.data/BigDB/-fundamental-data--1Q1.out/BigDB/10/Q1/-fundamental-data-10Q1.out/BigDB/97/Q0/name-fundamental-data-97Q0.data/BigDB/", "ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : NONE\r\n  phone     : null\r\n  web       : data/BigDB/\r\n", "  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n" };
        // The following exception was thrown during execution in test generation
        try {
            net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData9 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(strArray1, strArray8);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNotNull(strArray8);
    }

    @Test
    public void test05420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05420");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        boolean boolean29 = fieldData27.isDrp();
        double double30 = fieldData27.getBeta();
        double[] doubleArray31 = fieldData27.getNetIncYr();
        net.ajaskey.common.DateTime dateTime32 = fieldData27.getCurrFiscalYear();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData33 = fieldData27.getShares();
        long long34 = fieldData27.getVolume10d();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(dateTime32);
        org.junit.Assert.assertNotNull(sharesFileData33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
    }

    @Test
    public void test05421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05421");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray4 = balSheetFileData1.getLtInvestQtr();
        double[] doubleArray5 = balSheetFileData1.getTotalAssetsYr();
        double[] doubleArray6 = balSheetFileData1.getNetFixedAssetsYr();
        double[] doubleArray7 = balSheetFileData1.getStDebtYr();
        java.lang.String str8 = balSheetFileData1.toString();
        java.lang.String str9 = balSheetFileData1.getTicker();
        java.lang.String str10 = balSheetFileData1.getTicker();
        double[] doubleArray11 = balSheetFileData1.getPrefStockYr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(doubleArray11);
    }

    @Test
    public void test05422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05422");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray4 = balSheetFileData1.getLtInvestQtr();
        double[] doubleArray5 = balSheetFileData1.getTotalAssetsYr();
        double[] doubleArray6 = balSheetFileData1.getNetFixedAssetsYr();
        double[] doubleArray7 = balSheetFileData1.getCurrAssetsQtr();
        double[] doubleArray8 = balSheetFileData1.getPrefStockYr();
        double[] doubleArray9 = balSheetFileData1.getInventoryQtr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertNull(doubleArray9);
    }

    @Test
    public void test05423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05423");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getStDebtQtr();
        double[] doubleArray30 = fieldData27.getEpsContQtr();
        double[] doubleArray31 = fieldData27.getPrefStockYr();
        double[] doubleArray32 = fieldData27.getSharesQ();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0]");
    }

    @Test
    public void test05424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05424");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray4 = balSheetFileData1.getLtInvestQtr();
        double[] doubleArray5 = balSheetFileData1.getTotalAssetsYr();
        double[] doubleArray6 = balSheetFileData1.getOtherCurrLiabYr();
        double[] doubleArray7 = balSheetFileData1.getLtDebtQtr();
        double[] doubleArray8 = balSheetFileData1.getStDebtYr();
        java.lang.String str9 = balSheetFileData1.toDbOutput();
        double[] doubleArray10 = balSheetFileData1.getCashQtr();
        double[] doubleArray11 = balSheetFileData1.getEquityYr();
        double[] doubleArray12 = balSheetFileData1.getOtherLtAssetsYr();
        double[] doubleArray13 = balSheetFileData1.getTotalLiabQtr();
        double[] doubleArray14 = balSheetFileData1.getEquityYr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(doubleArray10);
        org.junit.Assert.assertNull(doubleArray11);
        org.junit.Assert.assertNull(doubleArray12);
        org.junit.Assert.assertNull(doubleArray13);
        org.junit.Assert.assertNull(doubleArray14);
    }

    @Test
    public void test05425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05425");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getStDebtQtr();
        double[] doubleArray30 = fieldData27.getLtDebtYr();
        double[] doubleArray31 = fieldData27.getCurrAssetsQtr();
        double double32 = fieldData27.getEpsQ0();
        double[] doubleArray33 = fieldData27.getDividendYr();
        double[] doubleArray34 = fieldData27.getPrefStockQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.DowEnum dowEnum35 = fieldData27.getDowIndex();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(dowEnum35);
    }

    @Test
    public void test05426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05426");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getGoodwillYr();
        double[] doubleArray30 = fieldData27.getInventoryYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SnpEnum snpEnum31 = fieldData27.getSnpIndex();
        double[] doubleArray32 = fieldData27.getInventoryYr();
        double[] doubleArray33 = fieldData27.getOtherLtAssetsQtr();
        double[] doubleArray34 = fieldData27.getPrefStockYr();
        double[] doubleArray35 = fieldData27.getCashYr();
        double[] doubleArray36 = fieldData27.getEpsDilQtr();
        double[] doubleArray37 = fieldData27.getUnusualIncQtr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(snpEnum31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(doubleArray36);
        org.junit.Assert.assertNull(doubleArray37);
    }

    @Test
    public void test05427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05427");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        boolean boolean29 = fieldData27.isDrp();
        double[] doubleArray30 = fieldData27.getCashFromOpsQtr();
        double[] doubleArray31 = fieldData27.getIncAfterTaxQtr();
        double[] doubleArray32 = fieldData27.getIncPrimaryEpsYr();
        double[] doubleArray33 = fieldData27.getNetFixedAssetsQtr();
        double double34 = fieldData27.getEpsQ0();
        double double35 = fieldData27.getFloatshr();
        double double36 = fieldData27.getEpsQ1();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
    }

    @Test
    public void test05428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05428");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        double[] doubleArray31 = fieldData27.getInventoryQtr();
        double[] doubleArray32 = fieldData27.getBvpsQtr();
        double double33 = fieldData27.getEpsQ1();
        double[] doubleArray34 = fieldData27.getNetIncQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData35 = fieldData27.getShares();
        java.lang.String str36 = fieldData27.getSector();
        double double37 = fieldData27.getEpsY1();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNotNull(sharesFileData35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
    }

    @Test
    public void test05429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05429");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        java.lang.String str31 = fieldData27.getSic();
        double[] doubleArray32 = fieldData27.getAcctRxQtr();
        double[] doubleArray33 = fieldData27.getCogsQtr();
        double[] doubleArray34 = fieldData27.getIntExpYr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(doubleArray34);
    }

    @Test
    public void test05430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05430");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        boolean boolean29 = fieldData27.isDrp();
        double[] doubleArray30 = fieldData27.getCashFromOpsQtr();
        double[] doubleArray31 = fieldData27.getInventoryYr();
        double[] doubleArray32 = fieldData27.getOtherCurrLiabYr();
        double[] doubleArray33 = fieldData27.getStInvestYr();
        double[] doubleArray34 = fieldData27.getAdjToIncYr();
        double[] doubleArray35 = fieldData27.getNetFixedAssetsYr();
        int int36 = fieldData27.getInstBuyShrs();
        double[] doubleArray37 = fieldData27.getLiabEquityYr();
        double[] doubleArray38 = fieldData27.getEpsDilContQtr();
        double[] doubleArray39 = fieldData27.getCurrAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData40 = fieldData27.getIncSheetData();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(doubleArray37);
        org.junit.Assert.assertNull(doubleArray38);
        org.junit.Assert.assertNull(doubleArray39);
        org.junit.Assert.assertNotNull(incSheetFileData40);
    }

    @Test
    public void test05431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05431");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        double[] doubleArray28 = fieldData27.getIncTaxQtr();
        double[] doubleArray29 = fieldData27.getOtherLtLiabYr();
        double[] doubleArray30 = fieldData27.getCapExQtr();
        java.lang.String str31 = fieldData27.getState();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum32 = fieldData27.getExchange();
        double[] doubleArray33 = fieldData27.getLtDebtYr();
        double[] doubleArray34 = fieldData27.getCurrAssetsQtr();
        double[] doubleArray35 = fieldData27.getCurrAssetsYr();
        double[] doubleArray36 = fieldData27.getPrefStockQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData37 = fieldData27.getBalSheetData();
        java.lang.String str38 = balSheetFileData37.getName();
        double[] doubleArray39 = balSheetFileData37.getCashQtr();
        double[] doubleArray40 = balSheetFileData37.getInventoryQtr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(doubleArray28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(exchEnum32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(doubleArray36);
        org.junit.Assert.assertNotNull(balSheetFileData37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(doubleArray39);
        org.junit.Assert.assertNull(doubleArray40);
    }

    @Test
    public void test05432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05432");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "out/BigDB/", "NONE", "ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n", "NONE", "  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n", "Cash File Data" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData10 = net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData.readFromDb((java.util.List<java.lang.String>) strList8);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData11 = net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData.readFromDb((java.util.List<java.lang.String>) strList8);
        companyFileData11.setNumEmployees("Cash File Data");
        companyFileData11.setDrp("out/BigDB/97/Q0/name-fundamental-data-97Q0.data/BigDB/");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(cashFileData10);
        org.junit.Assert.assertNotNull(companyFileData11);
    }

    @Test
    public void test05433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05433");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData4 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList2);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData5 = net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData.readFromDb((java.util.List<java.lang.String>) strList2);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData6 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList2);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData7 = net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData.readFromDb((java.util.List<java.lang.String>) strList2);
        java.lang.String str8 = estimateFileData7.getTicker();
        net.ajaskey.common.DateTime dateTime9 = estimateFileData7.getCurrFiscalYear();
        java.lang.String str10 = estimateFileData7.getTicker();
        double double11 = estimateFileData7.getEpsY1();
        java.lang.String str12 = estimateFileData7.toDbOutput();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(incSheetFileData4);
        org.junit.Assert.assertNotNull(cashFileData5);
        org.junit.Assert.assertNotNull(incSheetFileData6);
        org.junit.Assert.assertNotNull(estimateFileData7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(dateTime9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test05434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05434");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        java.lang.String str31 = fieldData27.getSic();
        double[] doubleArray32 = fieldData27.getEpsContQtr();
        double[] doubleArray33 = fieldData27.getAdjToIncYr();
        double[] doubleArray34 = fieldData27.getStInvestYr();
        double[] doubleArray35 = fieldData27.getInventoryQtr();
        double[] doubleArray36 = fieldData27.getNetIncQtr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(doubleArray36);
    }

    @Test
    public void test05435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05435");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getGoodwillYr();
        double[] doubleArray30 = fieldData27.getInventoryYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SnpEnum snpEnum31 = fieldData27.getSnpIndex();
        double[] doubleArray32 = fieldData27.getTotalOpExpQtr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(snpEnum31);
        org.junit.Assert.assertNull(doubleArray32);
    }

    @Test
    public void test05436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05436");
        java.lang.String[] strArray6 = new java.lang.String[] { "ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : NONE\r\n  phone     : null\r\n  web       : data/BigDB/\r\n", "out/BigDB/10/Q0/hi!-fundamental-data-10Q0.out/BigDB/1/Q97/  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n-fundamental-data-1Q97.hi!", "data/BigDB/", "out/BigDB/10/Q10/out/BigDB/0/Q10/out/BigDB/97/Q0/name-fundamental-data-97Q0.data/BigDB/-fundamental-data-0Q10.out/BigDB/97/Q0/name-fundamental-data-97Q0.data/BigDB/-fundamental-data-10Q10.", "NONE", "out/BigDB/100/Q100/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : NONE\r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n-fundamental-data-100Q100.NONE" };
        java.lang.String[] strArray10 = new java.lang.String[] { "ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : \r\n  web       : null\r\n", "name", "out/BigDB/10/Q1/-fundamental-data-10Q1.out/BigDB/97/Q0/name-fundamental-data-97Q0.data/BigDB/" };
        // The following exception was thrown during execution in test generation
        try {
            net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData11 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(strArray6, strArray10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test05437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05437");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherCurrLiabQtr();
        double[] doubleArray3 = balSheetFileData1.getPrefStockYr();
        double[] doubleArray4 = balSheetFileData1.getStInvestYr();
        double[] doubleArray5 = balSheetFileData1.getGoodwillYr();
        double[] doubleArray6 = balSheetFileData1.getEquityYr();
        double[] doubleArray7 = balSheetFileData1.getAcctRxYr();
        double[] doubleArray8 = balSheetFileData1.getLiabEquityYr();
        java.lang.String str9 = balSheetFileData1.getExchange();
        double[] doubleArray10 = balSheetFileData1.getGoodwillQtr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(doubleArray10);
    }

    @Test
    public void test05438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05438");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        double double31 = fieldData27.getEpsQ0();
        double[] doubleArray32 = fieldData27.getLtDebtQtr();
        double[] doubleArray33 = fieldData27.getIncPrimaryEpsYr();
        boolean boolean34 = fieldData27.isAdr();
        double[] doubleArray35 = fieldData27.getSharesY();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData36 = fieldData27.getShares();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData37 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData37.setInstShareholders("");
        java.lang.String str40 = sharesFileData37.getTicker();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum41 = sharesFileData37.getExchange();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum42 = sharesFileData37.getExchange();
        int int43 = sharesFileData37.getInstSellShrs();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData44 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData(sharesFileData37);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData45 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData46 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData45);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData47 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str48 = estimateFileData47.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData49 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData49.setInsiderNetPercentOutstanding("");
        double[] doubleArray52 = sharesFileData49.getSharesQ();
        sharesFileData49.setInsiderBuys("");
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList57 = new java.util.ArrayList<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData59 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList57);
        double[] doubleArray60 = incSheetFileData59.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData61 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData62 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData61);
        double[] doubleArray63 = balSheetFileData62.getOtherLtLiabYr();
        double[] doubleArray64 = balSheetFileData62.getStDebtQtr();
        double[] doubleArray65 = balSheetFileData62.getInventoryYr();
        java.lang.String str66 = balSheetFileData62.toString();
        double[] doubleArray67 = balSheetFileData62.getNetFixedAssetsYr();
        double[] doubleArray68 = balSheetFileData62.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData69 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData72 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData46, estimateFileData47, sharesFileData49, incSheetFileData59, balSheetFileData62, cashFileData69, (int) (short) 100, (int) (byte) 100);
        java.lang.String str73 = fieldData72.getStreet();
        double[] doubleArray74 = fieldData72.getStDebtQtr();
        double[] doubleArray75 = fieldData72.getEpsContQtr();
        double[] doubleArray76 = fieldData72.getOtherLtAssetsYr();
        double[] doubleArray77 = fieldData72.getNetIncYr();
        double double78 = fieldData72.getBeta();
        java.lang.String str79 = fieldData72.getName();
        double[] doubleArray80 = fieldData72.getPreTaxIncQtr();
        double[] doubleArray81 = fieldData72.getSharesQ();
        sharesFileData37.setSharesY(doubleArray81);
        sharesFileData36.setSharesQ(doubleArray81);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0]");
        org.junit.Assert.assertNotNull(sharesFileData36);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(exchEnum41);
        org.junit.Assert.assertNull(exchEnum42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0]");
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(incSheetFileData59);
        org.junit.Assert.assertNull(doubleArray60);
        org.junit.Assert.assertNull(doubleArray63);
        org.junit.Assert.assertNull(doubleArray64);
        org.junit.Assert.assertNull(doubleArray65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNull(doubleArray67);
        org.junit.Assert.assertNull(doubleArray68);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNull(doubleArray74);
        org.junit.Assert.assertNull(doubleArray75);
        org.junit.Assert.assertNull(doubleArray76);
        org.junit.Assert.assertNull(doubleArray77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[0.0]");
    }

    @Test
    public void test05439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05439");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setFromReport((int) (short) 1, 0);
        sharesFileData0.setInsiderBuyShrs("hi!");
        sharesFileData0.setBeta("");
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum8 = sharesFileData0.getExchange();
        int int9 = sharesFileData0.getInstSellShrs();
        sharesFileData0.setPrice("name");
        org.junit.Assert.assertNull(exchEnum8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test05440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05440");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        java.lang.String str2 = companyFileData1.getIndustry();
        java.lang.String str3 = companyFileData1.getState();
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        double double5 = estimateFileData4.getEpsQ1();
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData6 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData(estimateFileData4);
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData7 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData8 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData9 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData8);
        double[] doubleArray10 = incSheetFileData9.getGrossIncQtr();
        double[] doubleArray11 = incSheetFileData9.getAdjToIncYr();
        double[] doubleArray12 = incSheetFileData9.getAdjToIncQtr();
        double[] doubleArray13 = incSheetFileData9.getEpsYr();
        double[] doubleArray14 = incSheetFileData9.getGrossOpIncYr();
        double[] doubleArray15 = incSheetFileData9.getIncTaxQtr();
        double[] doubleArray16 = incSheetFileData9.getOtherIncYr();
        double[] doubleArray17 = incSheetFileData9.getNetIncQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData18 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData19 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData18);
        double[] doubleArray20 = balSheetFileData19.getOtherLtLiabYr();
        double[] doubleArray21 = balSheetFileData19.getStDebtQtr();
        double[] doubleArray22 = balSheetFileData19.getInventoryYr();
        double[] doubleArray23 = balSheetFileData19.getEquityYr();
        double[] doubleArray24 = balSheetFileData19.getGoodwillQtr();
        double[] doubleArray25 = balSheetFileData19.getCashQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData26 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData26);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData28 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str29 = estimateFileData28.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData30 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData30.setInsiderNetPercentOutstanding("");
        double[] doubleArray33 = sharesFileData30.getSharesQ();
        sharesFileData30.setInsiderBuys("");
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData40 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList38);
        double[] doubleArray41 = incSheetFileData40.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData42 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData43 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData42);
        double[] doubleArray44 = balSheetFileData43.getOtherLtLiabYr();
        double[] doubleArray45 = balSheetFileData43.getStDebtQtr();
        double[] doubleArray46 = balSheetFileData43.getInventoryYr();
        java.lang.String str47 = balSheetFileData43.toString();
        double[] doubleArray48 = balSheetFileData43.getNetFixedAssetsYr();
        double[] doubleArray49 = balSheetFileData43.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData50 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData53 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData27, estimateFileData28, sharesFileData30, incSheetFileData40, balSheetFileData43, cashFileData50, (int) (short) 100, (int) (byte) 100);
        double[] doubleArray54 = fieldData53.getIncTaxQtr();
        double[] doubleArray55 = fieldData53.getOtherLtLiabYr();
        double[] doubleArray56 = fieldData53.getCapExQtr();
        java.lang.String str57 = fieldData53.getState();
        double[] doubleArray58 = fieldData53.getLtDebtQtr();
        java.lang.String str59 = fieldData53.getName();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData60 = fieldData53.getCashData();
        double[] doubleArray61 = cashFileData60.getCashFromFinQtr();
        double[] doubleArray62 = cashFileData60.getCashFromOpsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData65 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData6, sharesFileData7, incSheetFileData9, balSheetFileData19, cashFileData60, (int) (byte) 1, (int) ' ');
        double[] doubleArray66 = fieldData65.getCogsQtr();
        // The following exception was thrown during execution in test generation
        try {
            double double67 = fieldData65.getDollar3m();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNull(doubleArray10);
        org.junit.Assert.assertNull(doubleArray11);
        org.junit.Assert.assertNull(doubleArray12);
        org.junit.Assert.assertNull(doubleArray13);
        org.junit.Assert.assertNull(doubleArray14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray16);
        org.junit.Assert.assertNull(doubleArray17);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertNull(doubleArray21);
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(doubleArray24);
        org.junit.Assert.assertNull(doubleArray25);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0]");
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(incSheetFileData40);
        org.junit.Assert.assertNull(doubleArray41);
        org.junit.Assert.assertNull(doubleArray44);
        org.junit.Assert.assertNull(doubleArray45);
        org.junit.Assert.assertNull(doubleArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNull(doubleArray48);
        org.junit.Assert.assertNull(doubleArray49);
        org.junit.Assert.assertNull(doubleArray54);
        org.junit.Assert.assertNull(doubleArray55);
        org.junit.Assert.assertNull(doubleArray56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(doubleArray58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(cashFileData60);
        org.junit.Assert.assertNull(doubleArray61);
        org.junit.Assert.assertNull(doubleArray62);
        org.junit.Assert.assertNull(doubleArray66);
    }

    @Test
    public void test05441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05441");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray4 = balSheetFileData1.getInventoryYr();
        double[] doubleArray5 = balSheetFileData1.getCurrAssetsYr();
        double[] doubleArray6 = balSheetFileData1.getInventoryQtr();
        double[] doubleArray7 = balSheetFileData1.getBvpsYr();
        double[] doubleArray8 = balSheetFileData1.getTotalLiabYr();
        double[] doubleArray9 = balSheetFileData1.getTotalAssetsQtr();
        double[] doubleArray10 = balSheetFileData1.getLiabEquityQtr();
        double[] doubleArray11 = balSheetFileData1.getStInvestQtr();
        double[] doubleArray12 = balSheetFileData1.getStDebtQtr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertNull(doubleArray9);
        org.junit.Assert.assertNull(doubleArray10);
        org.junit.Assert.assertNull(doubleArray11);
        org.junit.Assert.assertNull(doubleArray12);
    }

    @Test
    public void test05442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05442");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        fieldData27.setQuarter((int) (byte) 100);
        double[] doubleArray33 = fieldData27.getSalesYr();
        double double34 = fieldData27.getEpsQ0();
        int int35 = fieldData27.getInstBuyShrs();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData36 = fieldData27.getBalSheetData();
        double[] doubleArray37 = fieldData27.getOtherLtAssetsYr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(balSheetFileData36);
        org.junit.Assert.assertNull(doubleArray37);
    }

    @Test
    public void test05443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05443");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setInstShareholders("");
        sharesFileData0.setVolume3m("");
        sharesFileData0.setDollar3m("");
        int int7 = sharesFileData0.getInsiderBuyShrs();
        sharesFileData0.setVolume10d("hi!");
        java.lang.String str10 = sharesFileData0.getName();
        sharesFileData0.setInsiderSellShrs("out/BigDB/");
        java.lang.String str13 = sharesFileData0.getSector();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum14 = sharesFileData0.getExchange();
        java.lang.String str15 = sharesFileData0.getIndustry();
        double double16 = sharesFileData0.getFloatshr();
        java.lang.String str17 = sharesFileData0.toDbOutput();
        double double18 = sharesFileData0.getPrice();
        sharesFileData0.setFloatshr("out/BigDB/0/Q35/  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    :      1.0000    -1.0000    -1.0000\r\n  shares yearly       : \r\n-fundamental-data-0Q35.out/BigDB/-1/Q1/out/BigDB/97/Q0/name-fundamental-data-97Q0.data/BigDB/-fundamental-data--1Q1.out/BigDB/10/Q1/-fundamental-data-10Q1.out/BigDB/97/Q0/name-fundamental-data-97Q0.data/BigDB/");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(exchEnum14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n" + "'", str17, "  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
    }

    @Test
    public void test05444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05444");
        java.util.List<net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData> fieldDataList2 = net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData.getQFromMemory(6, (int) (short) 10);
        org.junit.Assert.assertNotNull(fieldDataList2);
    }

    @Test
    public void test05445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05445");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getOtherLtAssetsQtr();
        double[] doubleArray30 = fieldData27.getTotalOpExpYr();
        double double31 = fieldData27.getEpsY0();
        double[] doubleArray32 = fieldData27.getSharesQ();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0]");
    }

    @Test
    public void test05446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05446");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double[] doubleArray30 = fieldData27.getStDebtYr();
        double[] doubleArray31 = fieldData27.getSharesQ();
        java.lang.String str32 = fieldData27.getSector();
        double[] doubleArray33 = fieldData27.getCashQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData34 = fieldData27.getCashData();
        double[] doubleArray35 = cashFileData34.getCashFromInvQtr();
        java.lang.String str36 = cashFileData34.getTicker();
        double[] doubleArray37 = cashFileData34.getCashFromInvQtr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0]");
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNotNull(cashFileData34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNull(doubleArray37);
    }

    @Test
    public void test05447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05447");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getGoodwillYr();
        double[] doubleArray30 = fieldData27.getInventoryYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData31 = fieldData27.getCashData();
        double[] doubleArray32 = fieldData27.getUnusualIncYr();
        double[] doubleArray33 = fieldData27.getOtherIncYr();
        double[] doubleArray34 = fieldData27.getStInvestQtr();
        double[] doubleArray35 = fieldData27.getAcctRxQtr();
        double double36 = fieldData27.getEpsY0();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNotNull(cashFileData31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
    }

    @Test
    public void test05448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05448");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        double[] doubleArray31 = fieldData27.getInventoryQtr();
        double[] doubleArray32 = fieldData27.getBvpsQtr();
        double[] doubleArray33 = fieldData27.getSharesQ();
        double[] doubleArray34 = fieldData27.getGoodwillYr();
        int int35 = fieldData27.getInsiderSellShrs();
        java.lang.String str36 = fieldData27.getPhone();
        double[] doubleArray37 = fieldData27.getUnusualIncQtr();
        double[] doubleArray38 = fieldData27.getIntExpQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData39 = fieldData27.getCompanyInfo();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0]");
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(doubleArray37);
        org.junit.Assert.assertNull(doubleArray38);
        org.junit.Assert.assertNotNull(companyFileData39);
    }

    @Test
    public void test05449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05449");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getStDebtQtr();
        double[] doubleArray30 = fieldData27.getLtDebtYr();
        double[] doubleArray31 = fieldData27.getCurrAssetsQtr();
        double double32 = fieldData27.getEpsQ0();
        double[] doubleArray33 = fieldData27.getDividendYr();
        double[] doubleArray34 = fieldData27.getPrefStockQtr();
        double[] doubleArray35 = fieldData27.getLtDebtQtr();
        java.lang.String str36 = fieldData27.getStreet();
        boolean boolean37 = fieldData27.isDrp();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test05450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05450");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        double double1 = sharesFileData0.getInsiderOwnership();
        sharesFileData0.setInstBuyShrs("hi!");
        double double4 = sharesFileData0.getDollar3m();
        java.lang.String str5 = sharesFileData0.getIndustry();
        int int6 = sharesFileData0.getInsiderBuys();
        double double7 = sharesFileData0.getPrice52hi();
        double double8 = sharesFileData0.getPrice52lo();
        int int9 = sharesFileData0.getInsiderBuyShrs();
        sharesFileData0.setVolume10d("ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : NONE\r\n  phone     : null\r\n  web       : data/BigDB/\r\n");
        java.lang.String str12 = sharesFileData0.getIndustry();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test05451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05451");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getOtherLtAssetsQtr();
        double[] doubleArray30 = fieldData27.getTotalOpExpYr();
        double double31 = fieldData27.getEpsY0();
        double[] doubleArray32 = fieldData27.getIncPrimaryEpsQtr();
        double[] doubleArray33 = fieldData27.getLiabEquityYr();
        boolean boolean34 = fieldData27.isDrp();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData35 = fieldData27.getCashData();
        double double36 = fieldData27.getMktCap();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SnpEnum snpEnum37 = fieldData27.getSnpIndex();
        double[] doubleArray38 = fieldData27.getOtherCurrLiabYr();
        double[] doubleArray39 = fieldData27.getOtherCurrAssetsYr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(cashFileData35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNull(snpEnum37);
        org.junit.Assert.assertNull(doubleArray38);
        org.junit.Assert.assertNull(doubleArray39);
    }

    @Test
    public void test05452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05452");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        double[] doubleArray31 = fieldData27.getEpsDilYr();
        double[] doubleArray32 = fieldData27.getEquityYr();
        fieldData27.setQuarter((int) '4');
        java.lang.String str35 = fieldData27.getPhone();
        double double36 = fieldData27.getInsiderNetPercentOutstanding();
        double[] doubleArray37 = fieldData27.getPrefStockQtr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNull(doubleArray37);
    }

    @Test
    public void test05453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05453");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray4 = balSheetFileData1.getLtInvestQtr();
        double[] doubleArray5 = balSheetFileData1.getTotalAssetsYr();
        double[] doubleArray6 = balSheetFileData1.getNetFixedAssetsYr();
        double[] doubleArray7 = balSheetFileData1.getInventoryQtr();
        double[] doubleArray8 = balSheetFileData1.getNetFixedAssetsYr();
        java.lang.String str9 = balSheetFileData1.getIndustry();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test05454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05454");
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData((int) ' ', (int) (byte) 10);
        double[] doubleArray3 = fieldData2.getCashYr();
        org.junit.Assert.assertNull(doubleArray3);
    }

    @Test
    public void test05455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05455");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getStDebtQtr();
        double[] doubleArray30 = fieldData27.getEpsContQtr();
        double[] doubleArray31 = fieldData27.getEpsYr();
        java.lang.String str32 = fieldData27.getDowIndexStr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SnpEnum snpEnum33 = fieldData27.getSnpIndex();
        double[] doubleArray34 = fieldData27.getCurrLiabYr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNull(snpEnum33);
        org.junit.Assert.assertNull(doubleArray34);
    }

    @Test
    public void test05456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05456");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setInstShareholders("");
        sharesFileData0.setVolume3m("");
        sharesFileData0.setDollar3m("");
        sharesFileData0.setDollar3m("hi!");
        double double9 = sharesFileData0.getPrice();
        double double10 = sharesFileData0.getInstOwnership();
        double double11 = sharesFileData0.getPrice();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData12 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData13 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData12);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData14 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str15 = estimateFileData14.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData16 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData16.setInsiderNetPercentOutstanding("");
        double[] doubleArray19 = sharesFileData16.getSharesQ();
        sharesFileData16.setInsiderBuys("");
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData26 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList24);
        double[] doubleArray27 = incSheetFileData26.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData28 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData29 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData28);
        double[] doubleArray30 = balSheetFileData29.getOtherLtLiabYr();
        double[] doubleArray31 = balSheetFileData29.getStDebtQtr();
        double[] doubleArray32 = balSheetFileData29.getInventoryYr();
        java.lang.String str33 = balSheetFileData29.toString();
        double[] doubleArray34 = balSheetFileData29.getNetFixedAssetsYr();
        double[] doubleArray35 = balSheetFileData29.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData36 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData39 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData13, estimateFileData14, sharesFileData16, incSheetFileData26, balSheetFileData29, cashFileData36, (int) (short) 100, (int) (byte) 100);
        java.lang.String str40 = fieldData39.getStreet();
        double[] doubleArray41 = fieldData39.getTotalOpExpQtr();
        double double42 = fieldData39.getEpsY0();
        java.lang.String str43 = fieldData39.getSic();
        double[] doubleArray44 = fieldData39.getAcctRxQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData45 = fieldData39.getShares();
        double[] doubleArray46 = fieldData39.getSharesY();
        sharesFileData0.setSharesQ(doubleArray46);
        double double48 = sharesFileData0.getInstOwnership();
        sharesFileData0.setInsiderBuyShrs("");
        long long51 = sharesFileData0.getVolumeMonth3m();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(incSheetFileData26);
        org.junit.Assert.assertNull(doubleArray27);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(doubleArray41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(doubleArray44);
        org.junit.Assert.assertNotNull(sharesFileData45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
    }

    @Test
    public void test05457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05457");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        int int31 = fieldData27.getInsiderSells();
        double[] doubleArray32 = fieldData27.getGrossOpIncYr();
        double[] doubleArray33 = fieldData27.getPreTaxIncYr();
        double[] doubleArray34 = fieldData27.getEpsYr();
        double[] doubleArray35 = fieldData27.getCashYr();
        double[] doubleArray36 = fieldData27.getAcctRxQtr();
        double[] doubleArray37 = fieldData27.getNetFixedAssetsYr();
        double[] doubleArray38 = fieldData27.getEpsDilContQtr();
        java.lang.String str39 = fieldData27.getDowIndexStr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(doubleArray36);
        org.junit.Assert.assertNull(doubleArray37);
        org.junit.Assert.assertNull(doubleArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
    }

    @Test
    public void test05458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05458");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getGoodwillYr();
        double[] doubleArray30 = fieldData27.getInventoryYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData31 = fieldData27.getCashData();
        double[] doubleArray32 = fieldData27.getStDebtYr();
        boolean boolean33 = fieldData27.isAdr();
        double[] doubleArray34 = fieldData27.getEpsYr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNotNull(cashFileData31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(doubleArray34);
    }

    @Test
    public void test05459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05459");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "out/BigDB/", "NONE", "ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n", "NONE", "  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n", "Cash File Data" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData10 = net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData.readFromDb((java.util.List<java.lang.String>) strList8);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData11 = net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData.readFromDb((java.util.List<java.lang.String>) strList8);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData12 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList8);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData13 = net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData.readFromDb((java.util.List<java.lang.String>) strList8);
        java.lang.String str14 = estimateFileData13.getName();
        net.ajaskey.common.DateTime dateTime15 = estimateFileData13.getLatestQtrEps();
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData16 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData(estimateFileData13);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData18 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData19 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData18);
        companyFileData19.setNumEmployees("hi!");
        java.lang.String str22 = companyFileData19.getPhone();
        estimateFileData17.setNameFields(companyFileData19);
        java.lang.String str24 = companyFileData19.getSnpIndexStr();
        estimateFileData16.setNameFields(companyFileData19);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(cashFileData10);
        org.junit.Assert.assertNotNull(cashFileData11);
        org.junit.Assert.assertNotNull(incSheetFileData12);
        org.junit.Assert.assertNotNull(estimateFileData13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(dateTime15);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
    }

    @Test
    public void test05460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05460");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData4 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList2);
        double[] doubleArray5 = incSheetFileData4.getIncTaxYr();
        double[] doubleArray6 = incSheetFileData4.getGrossIncYr();
        java.lang.String str7 = incSheetFileData4.getTicker();
        double[] doubleArray8 = incSheetFileData4.getIntExpQtr();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(incSheetFileData4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(doubleArray8);
    }

    @Test
    public void test05461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05461");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData.readSipData("out/BigDB/100/Q100/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : NONE\r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : NONE\r\n  phone     : null\r\n  web       : null\r\n-fundamental-data-100Q100.data/BigDB/");
    }

    @Test
    public void test05462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05462");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double[] doubleArray30 = fieldData27.getStDebtYr();
        double[] doubleArray31 = fieldData27.getSharesQ();
        double[] doubleArray32 = fieldData27.getOtherCurrLiabYr();
        double[] doubleArray33 = fieldData27.getLtInvestYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SnpEnum snpEnum34 = fieldData27.getSnpIndex();
        double[] doubleArray35 = fieldData27.getTotalOpExpYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum36 = fieldData27.getExchange();
        int int37 = fieldData27.getQuarter();
        net.ajaskey.common.DateTime dateTime38 = fieldData27.getCurrFiscalYear();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0]");
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(snpEnum34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(exchEnum36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        org.junit.Assert.assertNull(dateTime38);
    }

    @Test
    public void test05463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05463");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray4 = balSheetFileData1.getLtInvestQtr();
        double[] doubleArray5 = balSheetFileData1.getTotalAssetsYr();
        double[] doubleArray6 = balSheetFileData1.getNetFixedAssetsYr();
        double[] doubleArray7 = balSheetFileData1.getLtInvestQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData8 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData9 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData8);
        companyFileData9.setNumEmployees("hi!");
        java.lang.String str12 = companyFileData9.getState();
        balSheetFileData1.setNameFields(companyFileData9);
        java.lang.String str14 = companyFileData9.getTicker();
        java.lang.String str15 = companyFileData9.getZip();
        companyFileData9.setName("name");
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test05464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05464");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        double double31 = fieldData27.getEpsQ0();
        double[] doubleArray32 = fieldData27.getLtDebtQtr();
        double double33 = fieldData27.getFloatshr();
        double[] doubleArray34 = fieldData27.getStInvestQtr();
        double[] doubleArray35 = fieldData27.getUnusualIncQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData36 = fieldData27.getCompanyInfo();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNotNull(companyFileData36);
    }

    @Test
    public void test05465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05465");
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum1 = net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData.convertExchange("ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : ticker      : \r\n  name      : hi!\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : NONE\r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : hi!\r\n  phone     : data/BigDB/\r\n  web       : null\r\n\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n");
        org.junit.Assert.assertTrue("'" + exchEnum1 + "' != '" + net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum.NONE + "'", exchEnum1.equals(net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum.NONE));
    }

    @Test
    public void test05466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05466");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        double double31 = fieldData27.getEpsQ0();
        double[] doubleArray32 = fieldData27.getLtDebtQtr();
        double[] doubleArray33 = fieldData27.getIncPrimaryEpsYr();
        double[] doubleArray34 = fieldData27.getIncAfterTaxYr();
        double[] doubleArray35 = fieldData27.getGrossOpIncQtr();
        double[] doubleArray36 = fieldData27.getGrossOpIncYr();
        double[] doubleArray37 = fieldData27.getPreTaxIncQtr();
        java.lang.String str38 = fieldData27.getSic();
        double[] doubleArray39 = fieldData27.getEquityYr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(doubleArray36);
        org.junit.Assert.assertNull(doubleArray37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(doubleArray39);
    }

    @Test
    public void test05467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05467");
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData1 = net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData.find("out/BigDB/-1/Q1/out/BigDB/97/Q0/out/BigDB/10/Q100/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n-fundamental-data-10Q100.NONE-fundamental-data-97Q0.hi!-fundamental-data--1Q1.");
        org.junit.Assert.assertNull(estimateFileData1);
    }

    @Test
    public void test05468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05468");
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData0);
        double[] doubleArray2 = incSheetFileData1.getGrossIncQtr();
        double[] doubleArray3 = incSheetFileData1.getAdjToIncYr();
        double[] doubleArray4 = incSheetFileData1.getEpsYr();
        double[] doubleArray5 = incSheetFileData1.getAdjToIncYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData6 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData7 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData6);
        java.lang.String str8 = companyFileData7.getIndustry();
        java.lang.String str9 = companyFileData7.getState();
        companyFileData7.setPhone("  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        companyFileData7.setDrp("ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n");
        incSheetFileData1.setNameFields(companyFileData7);
        java.lang.String str15 = companyFileData7.getWeb();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test05469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05469");
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData0);
        double[] doubleArray2 = incSheetFileData1.getGrossIncQtr();
        double[] doubleArray3 = incSheetFileData1.getRdQtr();
        double[] doubleArray4 = incSheetFileData1.getEpsQtr();
        java.lang.String str5 = incSheetFileData1.getSector();
        java.lang.String str6 = incSheetFileData1.toString();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }

    @Test
    public void test05470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05470");
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData1 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.find("out/BigDB/35/Q-1/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : \r\n  web       : null\r\n-fundamental-data-35Q-1.ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : hi!\r\n  phone     : null\r\n  web       : null\r\n");
        org.junit.Assert.assertNull(incSheetFileData1);
    }

    @Test
    public void test05471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05471");
        java.util.List<net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData> fieldDataList2 = net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData.getQFromMemory((int) (short) 10, (int) (byte) -1);
        org.junit.Assert.assertNotNull(fieldDataList2);
    }

    @Test
    public void test05472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05472");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray4 = balSheetFileData1.getLtInvestQtr();
        double[] doubleArray5 = balSheetFileData1.getCurrLiabQtr();
        double[] doubleArray6 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray7 = balSheetFileData1.getOtherCurrAssetsQtr();
        java.lang.String str8 = balSheetFileData1.getIndustry();
        double[] doubleArray9 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray10 = balSheetFileData1.getCurrLiabQtr();
        double[] doubleArray11 = balSheetFileData1.getPrefStockYr();
        double[] doubleArray12 = balSheetFileData1.getNetFixedAssetsQtr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(doubleArray9);
        org.junit.Assert.assertNull(doubleArray10);
        org.junit.Assert.assertNull(doubleArray11);
        org.junit.Assert.assertNull(doubleArray12);
    }

    @Test
    public void test05473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05473");
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str1 = estimateFileData0.getName();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum2 = estimateFileData0.getExchange();
        net.ajaskey.common.DateTime dateTime3 = estimateFileData0.getCurrFiscalYear();
        double double4 = estimateFileData0.getEpsY0();
        double double5 = estimateFileData0.getEpsQ1();
        java.lang.String str6 = estimateFileData0.getIndustry();
        java.lang.String str7 = estimateFileData0.toDbOutput();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(exchEnum2);
        org.junit.Assert.assertNull(dateTime3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test05474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05474");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        int int31 = fieldData27.getInsiderSells();
        java.lang.String str32 = fieldData27.getSector();
        double[] doubleArray33 = fieldData27.getGoodwillYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SnpEnum snpEnum34 = fieldData27.getSnpIndex();
        java.lang.String str35 = fieldData27.getSector();
        double[] doubleArray36 = fieldData27.getIntExpNonOpYr();
        double[] doubleArray37 = fieldData27.getIntExpQtr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(snpEnum34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(doubleArray36);
        org.junit.Assert.assertNull(doubleArray37);
    }

    @Test
    public void test05475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05475");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray4 = balSheetFileData1.getLtInvestQtr();
        double[] doubleArray5 = balSheetFileData1.getTotalAssetsYr();
        double[] doubleArray6 = balSheetFileData1.getNetFixedAssetsYr();
        double[] doubleArray7 = balSheetFileData1.getLtInvestQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData8 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData9 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData8);
        companyFileData9.setNumEmployees("hi!");
        java.lang.String str12 = companyFileData9.getState();
        balSheetFileData1.setNameFields(companyFileData9);
        companyFileData9.setAdr("hi!");
        java.lang.String str16 = companyFileData9.getDowIndexStr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData9);
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test05476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05476");
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData0);
        java.lang.String str2 = incSheetFileData1.toDbOutput();
        double[] doubleArray3 = incSheetFileData1.getPreTaxIncQtr();
        double[] doubleArray4 = incSheetFileData1.getSalesQtr();
        double[] doubleArray5 = incSheetFileData1.getAdjToIncQtr();
        double[] doubleArray6 = incSheetFileData1.getIncPrimaryEpsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData7 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
    }

    @Test
    public void test05477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05477");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getStDebtQtr();
        double[] doubleArray30 = fieldData27.getEpsContQtr();
        double[] doubleArray31 = fieldData27.getOtherLtAssetsYr();
        double[] doubleArray32 = fieldData27.getNetIncYr();
        double[] doubleArray33 = fieldData27.getInventoryYr();
        double[] doubleArray34 = fieldData27.getDividendYr();
        double[] doubleArray35 = fieldData27.getPreTaxIncQtr();
        double[] doubleArray36 = fieldData27.getBvpsQtr();
        net.ajaskey.common.DateTime dateTime37 = fieldData27.getLatestQtrEps();
        int int38 = fieldData27.getInsiderBuyShrs();
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData39 = fieldData27.getIncSheetData();
        long long40 = fieldData27.getVolumeMonth3m();
        double[] doubleArray41 = fieldData27.getIncAfterTaxYr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(doubleArray36);
        org.junit.Assert.assertNull(dateTime37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(incSheetFileData39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertNull(doubleArray41);
    }

    @Test
    public void test05478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05478");
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData0);
        double[] doubleArray2 = incSheetFileData1.getGrossIncQtr();
        double[] doubleArray3 = incSheetFileData1.getAdjToIncYr();
        double[] doubleArray4 = incSheetFileData1.getIncPrimaryEpsQtr();
        double[] doubleArray5 = incSheetFileData1.getRdQtr();
        double[] doubleArray6 = incSheetFileData1.getIncPrimaryEpsYr();
        double[] doubleArray7 = incSheetFileData1.getDividendQtr();
        double[] doubleArray8 = incSheetFileData1.getEpsQtr();
        double[] doubleArray9 = incSheetFileData1.getDepreciationYr();
        double[] doubleArray10 = incSheetFileData1.getDividendQtr();
        double[] doubleArray11 = incSheetFileData1.getNonrecurringItemsQtr();
        double[] doubleArray12 = incSheetFileData1.getDepreciationQtr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertNull(doubleArray9);
        org.junit.Assert.assertNull(doubleArray10);
        org.junit.Assert.assertNull(doubleArray11);
        org.junit.Assert.assertNull(doubleArray12);
    }

    @Test
    public void test05479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05479");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray4 = balSheetFileData1.getInventoryYr();
        java.lang.String str5 = balSheetFileData1.toString();
        double[] doubleArray6 = balSheetFileData1.getTotalAssetsQtr();
        double[] doubleArray7 = balSheetFileData1.getStDebtQtr();
        java.lang.String str8 = balSheetFileData1.getName();
        double[] doubleArray9 = balSheetFileData1.getStInvestYr();
        double[] doubleArray10 = balSheetFileData1.getBvpsQtr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(doubleArray9);
        org.junit.Assert.assertNull(doubleArray10);
    }

    @Test
    public void test05480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05480");
        net.ajaskey.market.tools.SIP.BigDB.dataio.FiletypeEnum filetypeEnum2 = null;
        java.util.List<net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData> fieldDataList3 = net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData.getQFromDb(100, (int) (byte) 10, filetypeEnum2);
        org.junit.Assert.assertNull(fieldDataList3);
    }

    @Test
    public void test05481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05481");
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(10, (int) (byte) 10);
        double[] doubleArray3 = fieldData2.getRdQtr();
        double[] doubleArray4 = fieldData2.getIntExpNonOpQtr();
        double[] doubleArray5 = fieldData2.getCurrLiabQtr();
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
    }

    @Test
    public void test05482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05482");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData4 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList2);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData5 = net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData.readFromDb((java.util.List<java.lang.String>) strList2);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData6 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList2);
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData7 = net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData.readFromDb((java.util.List<java.lang.String>) strList2);
        java.lang.String str8 = sharesFileData7.getTicker();
        int int9 = sharesFileData7.getInsiderBuyShrs();
        double double10 = sharesFileData7.getPrice52hi();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData11 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData11.setInstShareholders("");
        sharesFileData11.setVolume3m("");
        sharesFileData11.setDollar3m("");
        sharesFileData11.setDollar3m("hi!");
        double double20 = sharesFileData11.getPrice();
        java.lang.String str21 = sharesFileData11.toDbOutput();
        sharesFileData11.setMktCap("  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        java.lang.String str24 = sharesFileData11.getSector();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData25 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData25.setInstShareholders("");
        java.lang.String str28 = sharesFileData25.getTicker();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum29 = sharesFileData25.getExchange();
        java.lang.String str30 = sharesFileData25.toDbOutput();
        java.lang.String str31 = sharesFileData25.getName();
        long long32 = sharesFileData25.getVolume10d();
        double[] doubleArray33 = sharesFileData25.getSharesY();
        sharesFileData11.setSharesY(doubleArray33);
        sharesFileData7.setSharesY(doubleArray33);
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(incSheetFileData4);
        org.junit.Assert.assertNotNull(cashFileData5);
        org.junit.Assert.assertNotNull(incSheetFileData6);
        org.junit.Assert.assertNotNull(sharesFileData7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n" + "'", str21, "  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(exchEnum29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n" + "'", str30, "  price               : 0.000000\r\n  price 52w high      : 0.000000\r\n  price 52w low       : 0.000000\r\n  float               : 0.000000\r\n  market cap          : 0.000000\r\n  volume 10d avg      : 0\r\n  volume 3m avg       : 0\r\n  dollars 3m avg      : 0.000000\r\n  beta                : 0.000000\r\n  insider ownership   : 0.000000\r\n  insider buys        : 0\r\n  insider sells       : 0\r\n  insider buy shares  : 0\r\n  insider sell shares : 0\r\n  insider net shares  : 0\r\n  inst buy shares     : 0\r\n  inst sell shares    : 0\r\n  inst shareholders   : 0\r\n  inst ownership      : 0.000000\r\n  shares quarterly    : \r\n  shares yearly       : \r\n");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0]");
    }

    @Test
    public void test05483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05483");
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData0);
        double[] doubleArray2 = incSheetFileData1.getGrossIncQtr();
        double[] doubleArray3 = incSheetFileData1.getAdjToIncYr();
        double[] doubleArray4 = incSheetFileData1.getIntExpNonOpQtr();
        double[] doubleArray5 = incSheetFileData1.getTotalOpExpYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum6 = incSheetFileData1.getExchange();
        double[] doubleArray7 = incSheetFileData1.getUnusualIncQtr();
        double[] doubleArray8 = incSheetFileData1.getEpsDilYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData9 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData1);
        double[] doubleArray10 = incSheetFileData1.getEpsDilContYr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(exchEnum6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertNull(doubleArray10);
    }

    @Test
    public void test05484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05484");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        double[] doubleArray31 = fieldData27.getEpsDilYr();
        double[] doubleArray32 = fieldData27.getEquityYr();
        fieldData27.setQuarter((int) '4');
        java.lang.String str35 = fieldData27.getPhone();
        java.lang.String str36 = fieldData27.getWeb();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str36);
    }

    @Test
    public void test05485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05485");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData4 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList2);
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData5 = net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData.readFromDb((java.util.List<java.lang.String>) strList2);
        double[] doubleArray6 = cashFileData5.getCashFromInvQtr();
        double[] doubleArray7 = cashFileData5.getCashFromInvQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData8 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData(cashFileData5);
        double[] doubleArray9 = cashFileData5.getCashFromFinQtr();
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(incSheetFileData4);
        org.junit.Assert.assertNotNull(cashFileData5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray9);
    }

    @Test
    public void test05486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05486");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray4 = balSheetFileData1.getLtInvestQtr();
        double[] doubleArray5 = balSheetFileData1.getTotalAssetsYr();
        double[] doubleArray6 = balSheetFileData1.getOtherCurrLiabYr();
        double[] doubleArray7 = balSheetFileData1.getLtDebtQtr();
        double[] doubleArray8 = balSheetFileData1.getStDebtYr();
        java.lang.String str9 = balSheetFileData1.toDbOutput();
        double[] doubleArray10 = balSheetFileData1.getBvpsYr();
        double[] doubleArray11 = balSheetFileData1.getLiabEquityQtr();
        double[] doubleArray12 = balSheetFileData1.getCurrLiabQtr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(doubleArray10);
        org.junit.Assert.assertNull(doubleArray11);
        org.junit.Assert.assertNull(doubleArray12);
    }

    @Test
    public void test05487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05487");
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData((int) ' ', (int) (byte) 10);
        double[] doubleArray3 = fieldData2.getAdjToIncYr();
        org.junit.Assert.assertNull(doubleArray3);
    }

    @Test
    public void test05488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05488");
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData0);
        double[] doubleArray2 = balSheetFileData1.getOtherLtLiabYr();
        double[] doubleArray3 = balSheetFileData1.getStDebtQtr();
        double[] doubleArray4 = balSheetFileData1.getNetFixedAssetsYr();
        double[] doubleArray5 = balSheetFileData1.getLiabEquityYr();
        double[] doubleArray6 = balSheetFileData1.getOtherCurrLiabQtr();
        java.lang.String str7 = balSheetFileData1.getSector();
        java.lang.String str8 = balSheetFileData1.getExchange();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test05489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05489");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setInstShareholders("");
        java.lang.String str3 = sharesFileData0.getTicker();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum4 = sharesFileData0.getExchange();
        double double5 = sharesFileData0.getPrice();
        double double6 = sharesFileData0.getInsiderNetPercentOutstanding();
        double double7 = sharesFileData0.getInsiderNetPercentOutstanding();
        sharesFileData0.setInsiderBuyShrs("data/BigDB/");
        double double10 = sharesFileData0.getDollar3m();
        long long11 = sharesFileData0.getVolume10d();
        int int12 = sharesFileData0.getInsiderSells();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(exchEnum4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test05490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05490");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        java.lang.String str2 = companyFileData1.getIndustry();
        java.lang.String str3 = companyFileData1.getName();
        java.lang.String str4 = companyFileData1.getWeb();
        java.lang.String str5 = companyFileData1.getSic();
        java.lang.String str6 = companyFileData1.getPhone();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test05491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05491");
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData0);
        double[] doubleArray2 = incSheetFileData1.getGrossIncQtr();
        double[] doubleArray3 = incSheetFileData1.getEpsDilContYr();
        double[] doubleArray4 = incSheetFileData1.getEpsYr();
        double[] doubleArray5 = incSheetFileData1.getSalesQtr();
        double[] doubleArray6 = incSheetFileData1.getIntExpNonOpQtr();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
    }

    @Test
    public void test05492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05492");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getOtherLtAssetsQtr();
        double[] doubleArray30 = fieldData27.getTotalOpExpYr();
        double[] doubleArray31 = fieldData27.getEquityYr();
        double[] doubleArray32 = fieldData27.getIntExpQtr();
        fieldData27.setYear((int) (short) 10);
        double[] doubleArray35 = fieldData27.getIncAfterTaxYr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray35);
    }

    @Test
    public void test05493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05493");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getOtherLtAssetsQtr();
        double[] doubleArray30 = fieldData27.getTotalOpExpYr();
        double double31 = fieldData27.getEpsY0();
        double[] doubleArray32 = fieldData27.getRdQtr();
        double[] doubleArray33 = fieldData27.getPrefStockYr();
        fieldData27.setYear((int) (byte) 100);
        int int36 = fieldData27.getInstSellShrs();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
    }

    @Test
    public void test05494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05494");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        double[] doubleArray31 = fieldData27.getInventoryQtr();
        java.lang.String str32 = fieldData27.getCity();
        double[] doubleArray33 = fieldData27.getPrefStockQtr();
        double double34 = fieldData27.getEpsY0();
        double[] doubleArray35 = fieldData27.getIncPrimaryEpsYr();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNull(doubleArray35);
    }

    @Test
    public void test05495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05495");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double[] doubleArray30 = fieldData27.getDepreciationYr();
        java.lang.String str31 = fieldData27.getSector();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData32 = fieldData27.getCompanyInfo();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum33 = companyFileData32.getExchange();
        companyFileData32.setNumEmployees("out/BigDB/100/Q10/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n-fundamental-data-100Q10.Cash File Data");
        companyFileData32.setWeb("ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : out/BigDB/1/Q10/hi!-fundamental-data-1Q10.ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n\r\n  employees : 0\r\n  snp index : NONE\r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(companyFileData32);
        org.junit.Assert.assertNull(exchEnum33);
    }

    @Test
    public void test05496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05496");
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData0 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData0.setInstShareholders("");
        sharesFileData0.setVolume3m("");
        sharesFileData0.setDollar3m("");
        sharesFileData0.setDollar3m("hi!");
        double double9 = sharesFileData0.getPrice();
        sharesFileData0.setFloatshr("Cash File Data");
        double[] doubleArray12 = sharesFileData0.getSharesY();
        long long13 = sharesFileData0.getVolume10d();
        java.lang.String str14 = sharesFileData0.getSector();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0]");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test05497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05497");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getTotalOpExpQtr();
        double double30 = fieldData27.getEpsY0();
        double[] doubleArray31 = fieldData27.getInventoryQtr();
        double[] doubleArray32 = fieldData27.getLtInvestYr();
        double[] doubleArray33 = fieldData27.getPrefStockQtr();
        double[] doubleArray34 = fieldData27.getRdQtr();
        double[] doubleArray35 = fieldData27.getRdYr();
        double[] doubleArray36 = fieldData27.getNonrecurringItemsQtr();
        int int37 = fieldData27.getInsiderBuyShrs();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertNull(doubleArray33);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNull(doubleArray35);
        org.junit.Assert.assertNull(doubleArray36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
    }

    @Test
    public void test05498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05498");
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData companyFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CompanyFileData(companyFileData0);
        net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData2 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData();
        java.lang.String str3 = estimateFileData2.toDbOutput();
        net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData sharesFileData4 = new net.ajaskey.market.tools.SIP.BigDB.dataio.SharesFileData();
        sharesFileData4.setInsiderNetPercentOutstanding("");
        double[] doubleArray7 = sharesFileData4.getSharesQ();
        sharesFileData4.setInsiderBuys("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData14 = net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData.readFromDb((java.util.List<java.lang.String>) strList12);
        double[] doubleArray15 = incSheetFileData14.getIncTaxYr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData16 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData balSheetFileData17 = new net.ajaskey.market.tools.SIP.BigDB.dataio.BalSheetFileData(balSheetFileData16);
        double[] doubleArray18 = balSheetFileData17.getOtherLtLiabYr();
        double[] doubleArray19 = balSheetFileData17.getStDebtQtr();
        double[] doubleArray20 = balSheetFileData17.getInventoryYr();
        java.lang.String str21 = balSheetFileData17.toString();
        double[] doubleArray22 = balSheetFileData17.getNetFixedAssetsYr();
        double[] doubleArray23 = balSheetFileData17.getNetFixedAssetsQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData cashFileData24 = new net.ajaskey.market.tools.SIP.BigDB.dataio.CashFileData();
        net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData fieldData27 = new net.ajaskey.market.tools.SIP.BigDB.dataio.FieldData(companyFileData1, estimateFileData2, sharesFileData4, incSheetFileData14, balSheetFileData17, cashFileData24, (int) (short) 100, (int) (byte) 100);
        java.lang.String str28 = fieldData27.getStreet();
        double[] doubleArray29 = fieldData27.getOtherLtAssetsQtr();
        double[] doubleArray30 = fieldData27.getTotalOpExpYr();
        double[] doubleArray31 = fieldData27.getEquityYr();
        double[] doubleArray32 = fieldData27.getGoodwillQtr();
        double double33 = fieldData27.getEpsY0();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(incSheetFileData14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNull(doubleArray30);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNull(doubleArray32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
    }

    @Test
    public void test05499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05499");
        java.lang.String[] strArray6 = new java.lang.String[] { "out/BigDB/35/Q-1/out/BigDB/97/Q0/name-fundamental-data-97Q0.data/BigDB/-fundamental-data-35Q-1.NONE", "hi!", "ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : NONE\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : NONE\r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : NONE\r\n  phone     : null\r\n  web       : null\r\n", "out/BigDB/10/Q100/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n-fundamental-data-10Q100.NONE", "out/BigDB/52/Q97/out/BigDB/10/Q100/ticker      : \r\n  name      : null\r\n  exchange  : null\r\n  sector    : null\r\n  industry  : null\r\n  sic       : null\r\n  employees : 0\r\n  snp index : \r\n  dow index : \r\n  adr       : false\r\n  drp       : false\r\n  street    : null\r\n  city      : null\r\n  state     : null\r\n  country   : null\r\n  zip       : null\r\n  phone     : null\r\n  web       : null\r\n-fundamental-data-10Q100.NONE-fundamental-data-52Q97.name", "Cash File Data" };
        // The following exception was thrown during execution in test generation
        try {
            net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData estimateFileData7 = new net.ajaskey.market.tools.SIP.BigDB.dataio.EstimateFileData(strArray6);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray6);
    }

    @Test
    public void test05500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "DataIoTests10.test05500");
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData0 = null;
        net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData incSheetFileData1 = new net.ajaskey.market.tools.SIP.BigDB.dataio.IncSheetFileData(incSheetFileData0);
        double[] doubleArray2 = incSheetFileData1.getGrossIncQtr();
        double[] doubleArray3 = incSheetFileData1.getRdQtr();
        net.ajaskey.market.tools.SIP.BigDB.dataio.ExchEnum exchEnum4 = incSheetFileData1.getExchange();
        double[] doubleArray5 = incSheetFileData1.getEpsYr();
        double[] doubleArray6 = incSheetFileData1.getEpsDilContQtr();
        double[] doubleArray7 = incSheetFileData1.getIncAfterTaxYr();
        double[] doubleArray8 = incSheetFileData1.getEpsYr();
        java.lang.String str9 = incSheetFileData1.toString();
        org.junit.Assert.assertNull(doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertNull(exchEnum4);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }
}
